#===============================================================================
#
# Ultrasound services- static services- ultrasound stream manager 
#
# GENERAL DESCRIPTION
#    Ultrasound services- static services- ultrasound stream manager build script
#
# Copyright (c) 2013,2015 Qualcomm Technologies, Inc.
# All rights reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#-------------------------------------------------------------------------------
#
#  $Header: $
#  $DateTime: $
#  $Author:  $
#  $Change:  $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 01-01-2013 NR     Initial version
# 04-03-2013 NR     Update stub library creation
# 05-03-2015 HS     Move ultrasound outside of avs
#===============================================================================
Import('env')

core_public_apis = [
   'DEBUGTOOLS',
   'KERNEL',   
   'SERVICES',
   'CORE'
   ]

env.PublishPrivateApi('ULTRASOUND',[
   '../inc',
   '../src',   
   '../tst',
   '${ULTRASOUND_ROOT}/services/dynamic_svcs/ultrasound_enc_svc/inc',
   '${ULTRASOUND_ROOT}/services/dynamic_svcs/ultrasound_dec_svc/inc',
   '${ULTRASOUND_ROOT}/services/dynamic_svcs/ultrasound_proc_svc/inc',
   '${ULTRASOUND_ROOT}/algorithms/common/inc',
   '${INC_ROOT}/avs/api/audio/inc',
   '${INC_ROOT}/avs/aud/algorithms/utils/audio_cmn_lib/inc',
   '${INC_ROOT}/avs/elite/module_interfaces/shared_lib_api/inc/audio_cmn_lib',
   '${INC_ROOT}/avs/api/audio/inc',
   '${INC_ROOT}/avs/elite/qurt_elite/inc',
   '${INC_ROOT}/avs/elite/utils/inc',
   '${INC_ROOT}/avs/elite/module_interfaces/shared_lib_api/inc/qurt_elite',
   '${INC_ROOT}/avs/elite/module_interfaces/shared_lib_api/inc/capi',
   '${INC_ROOT}/avs/afe/services/static/inc',
   '${INC_ROOT}/avs/api/afe/inc',
   '${INC_ROOT}/avs/afe/drivers/afe/vfr/common/inc',
   '${INC_ROOT}/avs/afe/drivers/afe/codec/inc'
   ])

env.RequirePublicApi(core_public_apis, area='core')
env.RequirePublicApi('AVS', area='avs')
env.RequirePublicApi('QDSP6', area='qdsp6')
env.RequirePublicApi('APR', area='apr')
env.RequirePublicApi('ULTRASOUND', area='ultrasound')
env.RequirePrivateApi('ULTRASOUND')

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = ".."
LIBNAME = 'ultrasound_stream_mgr'

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

# Generate regular source file list
if 'USES_USND_SVC_TEST' in env:
	usnd_reg_sources = env.GlobSourceFiles(['src/*.cpp', 'src/*.c', 'tst/*.cpp', 'tst/*.c'], SRCPATH,posix=True)
else:
	usnd_reg_sources = env.GlobSourceFiles(['src/*.cpp', 'src/*.c'], SRCPATH,posix=True)


# Generate stub source file list
usnd_stub_sources = env.GlobSourceFiles(['stub_src/*.cpp', 'stub_src/*.c'], SRCPATH,posix=True)
#usnd_stub_sources = []

# Generate proprietary source file list
usnd_prop_sources = []

if not env.has_key('USES_ULTRASOUND_STREAM_MGR_STUB'):
    env.AddBinaryLibrary(['ULTRASOUND_ADSP'], '${BUILDPATH}/'+LIBNAME,
         [usnd_reg_sources, usnd_prop_sources])
else:
    env.AddBinaryLibrary(['ULTRASOUND_ADSP'], '${BUILDPATH}/'+LIBNAME+'_stub',
         [usnd_stub_sources])

# Pack Rules: CLEAN_LIST to contain the files to be removed from the packages. Should not contain 'build' folder
CLEAN_LIST=[]
CLEAN_LIST.extend(env.FindFiles(['*'], '${ULTRASOUND_ROOT}/services/static_svcs/stream_mgr/src'))
CLEAN_LIST.extend(env.FindFiles(['*'], '${ULTRASOUND_ROOT}/services/static_svcs/stream_mgr/stub_src'))
CLEAN_LIST.extend(env.FindFiles(['*'], '${ULTRASOUND_ROOT}/services/static_svcs/stream_mgr/tst'))
env.CleanPack(['CORE_QDSP6_SW', 'AVS_ADSP', 'CLEANPACK_TARGET', 'ULTRASOUND_ADSP'], CLEAN_LIST)
