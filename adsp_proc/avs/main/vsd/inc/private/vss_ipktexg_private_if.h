#ifndef __VSS_IPKTEXG_PRIVATE_IF_H__
#define __VSS_IPKTEXG_PRIVATE_IF_H__

/*
   Copyright (c) 2014 Qualcomm Technologies, Inc.
   All rights reserved.
   Confidential and Proprietary - Qualcomm Technologies, Inc.

   $Header: //components/rel/avs.adsp/2.8/vsd/inc/private/vss_ipktexg_private_if.h#2 $
   $Author: pwbldsvc $
*/

#include "apr_comdef.h"
#include "vss_ipktexg_public_if.h"

/****************************************************************************
 * PACKET EXCHANGE APIS                                                     *
 ****************************************************************************/

/**
  Gets the vocoder packet exchange mode currently configured on the stream.
 
  @par Payload
  None.

  @return
  #VSS_IPKTEXG_RSP_GET_MODE -- In case of success.
  #APRV2_IBASIC_RSP_RESULT -- In case of failure.

  @dependencies
  None.
*/
#define VSS_IPKTEXG_CMD_GET_MODE ( 0x00013062 )


/**
  Response to the #VSS_IPKTEXG_CMD_GET_MODE command.

  @par Payload
  #vss_ipktexg_rsp_get_mode_t

  @return
  None.

  @dependencies
  None.
*/
#define VSS_IPKTEXG_RSP_GET_MODE ( 0x00013063 )

/** @brief Type definition for #vss_ipktexg_rsp_get_mode_t.
*/
typedef struct vss_ipktexg_rsp_get_mode_t vss_ipktexg_rsp_get_mode_t;

#include "apr_pack_begin.h"

/** @brief Payload structure for the #VSS_IPKTEXG_RSP_GET_MODE command
    response.
*/
struct vss_ipktexg_rsp_get_mode_t
{
  uint32_t mode;
    /**< Vocoder packet exchange mode. Supported values:
         #VSS_IPKTEXG_MODE_IN_BAND \n
         #VSS_IPKTEXG_MODE_OUT_OF_BAND \n
         #VSS_IPKTEXG_MODE_MAILBOX */
}
#include "apr_pack_end.h"
;


/**
  Clears the mailbox packet exchange time reference set by the stream client.
  This command is a no-op if the stream is not configured for mailbox packet
  exchange.

  @par Payload
  None.

  @return
  #APRV2_IBASIC_RSP_RESULT

  @dependencies
  None.
*/
#define VSS_IPKTEXG_CMD_MAILBOX_CLEAR_TIME_REFERENCE ( 0x00013064 )


/**
  Event generated by the stream to the MVM session to which it is connected,
  notifying the MVM session that the mailbox packet exchange timing has been
  changed such that MVM must program the new voice timing parameters for
  mailbox vocoder packet exchange.

  Specifically, this event is generated under any of the following
  circumstances:
 
    - upon the stream receiving a #VSS_IPKTEXG_CMD_MAILBOX_START command
      with the client's vocoder packet exchange time reference.
 
    - during the stream IDLE to RUN transition, if there is no vocoder packet
      exchange time reference provided by the client. This may happen for
      example if the vocporc is disabled during the middle of the call and then
      got re-enabled.

  @par Payload
  None.

  @return
  None.

  @dependencies
  None.
*/
#define VSS_IPKTEXG_EVT_MAILBOX_TIMING_RECONFIG ( 0x00013065 )


/**
  Gets the vocoder packet exchange time reference from the stream.
 
  @par Payload
  None.

  @return
  #VSS_IPKTEXG_RSP_MAILBOX_GET_TIME_REFERENCE -- In case of success.
  #APRV2_IBASIC_RSP_RESULT -- In case of failure.

  @dependencies
  None.
*/
#define VSS_IPKTEXG_CMD_MAILBOX_GET_TIME_REFERENCE ( 0x00013066 )


/**
  Response to the #VSS_IPKTEXG_CMD_MAILBOX_GET_TIME_REFERENCE command.

  @par Payload
  #vss_ipktexg_rsp_mailbox_get_time_reference_t

  @return
  None.

  @dependencies
  None.
*/
#define VSS_IPKTEXG_RSP_MAILBOX_GET_TIME_REFERENCE ( 0x00013067 )

/** @brief Type definition for #vss_ipktexg_rsp_mailbox_get_time_reference_t.
*/
typedef struct vss_ipktexg_rsp_mailbox_get_time_reference_t vss_ipktexg_rsp_mailbox_get_time_reference_t;

#include "apr_pack_begin.h"

/** @brief Payload structure for the
    #VSS_IPKTEXG_RSP_MAILBOX_GET_TIME_REFERENCE command response.
*/
struct vss_ipktexg_rsp_mailbox_get_time_reference_t
{
  uint64_t tx_timstamp_us;
    /**< The mailbox client's encoder packet exchange time reference in
         microseconds. The time reference will be used to align the encoder's
         timeline to the client's timeline at the beginning of the mailbox
         vocoder packet exchange operation. The first encoder packet will be
         ready for delivery at an integer multiple of a single encoder packet
         duration away from the tx_timstamp_us. The clock source to be used for
         interpreting the timestamp is product requirement specific. */
  uint64_t rx_timstamp_us;
    /**< The mailbox client's decoder packet exchange time reference in
         microseconds. The time reference will be used to align the decoder's
         timeline to the client's timeline at the beginning of the mailbox
         vocoder packet exchange operation. The decoding of the first decoder
         packet will start at an integer multiple of a single decoder packet
         duration away from the rx_timstamp_us. The clock source to be used for
         interpreting the timestamp is product requirement specific. */
  uint16_t enc_offset_margin_us;
    /**< Time in microseconds ahead of the client's mailbox Tx timeline for
         producing an encoder packet. The safety margin is to ensure that there
         is sufficient time for the stream to process an encoder packet such
         that the client's encoding request is completed on time. */
  uint16_t dec_req_offset_margin_us;
    /**< Time in microseconds behind of the client's mailbox Rx timeline for
         picking up a decoder packet. The safety margin is to ensure that the
         stream picks up a decoder packet at some time after the client
         provides a packet, to avoid read and write race condition due to
         timing jitters. */
  uint16_t dec_offset_margin_us;
    /**< Time in microseconds between when VSM request for a decoder packet to
         when VSM must start decoding a packet. The safety margin is to ensure
         that there is sufficient time for the stream to process a decoder
         packet and deliver the packet to VSM. */
}
#include "apr_pack_end.h"
;


/**
  Drops all the expired decoding requests.
 
  @par Payload
  None.

  @return
  #APRV2_IBASIC_RSP_RESULT

  @dependencies
  None.
*/
#define VSS_IPKTEXG_CMD_MAILBOX_PROCESS_RX_EXPIRY ( 0x000130CC )


/**
  Disables the dropping of expired decoding requests.
 
  @par Payload
  None.

  @return
  #APRV2_IBASIC_RSP_RESULT

  @dependencies
  None.
*/
#define VSS_IPKTEXG_CMD_MAILBOX_DISABLE_RX_EXPIRY_PROCESSING ( 0x000130CD )

#endif /* __VSS_IPKTEXG_PRIVATE_IF_H__ */

