#===============================================================================
#
# Mem mapper interface
#
# GENERAL DESCRIPTION
#    Build script
#
# Copyright (c) 2017 by QUALCOMM Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/avs.adsp/2.8/elite/module_interfaces/capi_v2_libraries/capi_v2_library_mem_mapper/build/capi_v2_library_mem_mapper.scons#1 $
#  $DateTime: 2017/04/03 04:02:32 $
#  $Author: pwbldsvc $
#  $Change: 12890466 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 12/31/14   dg      Initial Version
#===============================================================================
Import('env')

core_public_apis = [
   'DEBUGTOOLS',
   'SERVICES',
   'KERNEL',
   ]

env.RequirePublicApi(core_public_apis, area='core')

restricted_apis = [
    'SHARED_LIBRARY_INC_PATHS',
    'MODULE_INTERFACES_UTILS',
    ]   

env.RequireRestrictedApi(restricted_apis)

env.PublishPrivateApi('CAPI_V2_LIBRARY_GET_MEM_MAPPER',[
   '${AVS_ROOT}/elite/module_interfaces/capi_v2_libraries/capi_v2_library_mem_mapper/inc',
   '${AVS_ROOT}/elite/module_interfaces/capi_v2_libraries/capi_v2_library_mem_mapper/src'
   ])   

env.RequirePrivateApi('CAPI_V2_LIBRARY_GET_MEM_MAPPER')
   
env.RequirePublicApi([
  'ADSP_AMDB',
])

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = ".."
LIBNAME = 'capi_v2_library_get_module'

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

# Generate regular source file list
reg_sources = env.GlobSourceFiles(['/src/*.cpp', '/src/*.c', '/src/*.S'], SRCPATH,posix=True)

# Generate stub source file list
stub_sources = env.GlobSourceFiles(['/stub_src/*.cpp', '/stub_src/*.c', '/stub_src/*.S'], SRCPATH,posix=True)

# Genate proprietary source file list
prop_sources = []

#import pdb; pdb.set_trace()
if 'USES_AVS_LIBRARY_BUILDER' in env:
   env.AddAvsLibrary(['AVS_ADSP','AVS_ADSP_USER'], '${BUILDPATH}/'+LIBNAME,
      [reg_sources, stub_sources, prop_sources])
