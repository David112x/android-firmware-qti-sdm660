#===============================================================================
#
# AVS AU
#
# GENERAL DESCRIPTION
#    Build script
#
# Copyright (c) 2016 Qualcomm Technologies, Inc.  All Rights Reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#
#-------------------------------------------------------------------------------
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who         what, where, why
# --------   -------     ---------------------------------------------------------
#
#===============================================================================
Import('env')

core_public_apis = [
   'DEBUGTOOLS',
   'SERVICES',
   'KERNEL',
   ]

env.RequirePublicApi(core_public_apis, area='core')
env.RequireRestrictedApi(['AVS','MODULE_INTERFACES_API', 'CAPI_V2_CMN_LIB'])
env.RequireProtectedApi('AVS')

env.PublishPrivateApi('AVS',[
   '../inc',  
   ])

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = '..'
LIBNAME = 'capi_v2_compressed_latency'
LIBNAME_STUB = LIBNAME+'_stub'
#import pdb; pdb.set_trace()

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

# Generate regular source file list
avs_reg_sources = env.GlobSourceFiles(['/src/*.cpp', '/src/*.c', '/src/*.S'], SRCPATH,posix=True)

# Generate stub source file list
avs_stub_sources = env.GlobSourceFiles(['/stub_src/*.cpp', '/stub_src/*.c', '/stub_src/*.S'], SRCPATH,posix=True)

# Genate proprietary source file list
avs_prop_sources = []

env.RequireRestrictedApi(['SHARED_LIBRARY_INC_PATHS'])

#import pdb; pdb.set_trace()
if 'USES_AVS_LIBRARY_BUILDER' in env:
   env.AddAvsLibrary(['AVS_ADSP','AVS_ADSP_USER'], '${BUILDPATH}/'+LIBNAME,
      [avs_reg_sources, avs_stub_sources, avs_prop_sources])

