#===============================================================================
#
# AVS AU
#
# GENERAL DESCRIPTION
#    Build script
#
# Copyright (c) 2015 Qualcomm Technologies, Inc.  All Rights Reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/avs.adsp/2.8/voice/algos/sample_slip/capi_v2_sample_slip/build/sample_slip_capi_v2.scons#3 $
#  $DateTime: 2018/01/08 16:39:17 $
#  $Author: pwbldsvc $
#  $Change: 15190831 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
#
#===============================================================================
Import('env')


env.Append(CFLAGS = '-DVOICE_OBFUSCATE_NAMES ')
env.Append(CPPFLAGS = '-DVOICE_OBFUSCATE_NAMES ')
env.Append(ASMFLAGS = '-DVOICE_OBFUSCATE_NAMES ')

core_public_apis = [
   'DEBUGTOOLS',
   'KERNEL',
   'SERVICES',
   ]
if env.get('MDSPMODE') == True:
   core_public_apis.append('POWER') #Needed when avs is compiled on mdsp
   
env.RequirePublicApi(core_public_apis, area='core')
env.RequireRestrictedApi(['AVS', 'SHARED_LIBRARY_INC_PATHS'])
env.RequireProtectedApi('AVS')

env.PublishPrivateApi('AVS',[
   '../inc',
   '../protected',
   ])

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = '..'
LIBNAME = 'sample_slip_capiv2'
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

# Generate regular source file list
avs_reg_sources = []


# Generate stub source file list
avs_stub_sources = env.GlobSourceFiles(['/stub_src/*.cpp', '/stub_src/*.c', '/stub_src/*.S'], SRCPATH,posix=True)

# Genate proprietary source file list
avs_prop_sources = env.GlobSourceFiles(['/src/*.cpp', '/src/*.c', '/src/*.S'], SRCPATH,posix=True)



#import pdb; pdb.set_trace()
if 'USES_AVS_LIBRARY_BUILDER' in env:
   env.AddAvsLibrary(['AVS_ADSP','AVS_ADSP_USER'], '${BUILDPATH}/'+LIBNAME,
      [avs_reg_sources, avs_stub_sources, avs_prop_sources])


