#===============================================================================
#
# GENERAL DESCRIPTION
#    Build script
#
# Copyright (c) 2017 QUALCOMM Technologies, Inc.  All Rights Reserved.
# QUALCOMM Technologies, Inc Proprietary.  Export of this technology or
# software is regulated by the U.S. Government, Diversion contrary to U.S.
# law prohibited.
#
#===============================================================================
Import('env')

#env.Append(CFLAGS = '-O0')

CBSP_API = [
   'BOOT',
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'MPROC',
   'POWER',
   'SERVICES',
   'SYSTEMDRIVERS',
   'KERNEL',   
]

env.RequirePublicApi(CBSP_API,area='core')
env.RequireRestrictedApi('AVS')
env.RequireProtectedApi('AVS')
env.PublishPrivateApi('HW_AF',[
   '${AVS_ROOT}/afe/drivers/hw/adaptive_filter/inc',
   ])

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------

SRCPATH = ".."
LIBNAME = 'hw_af'

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

# Generate regular source file list
avs_reg_sources = env.GlobSourceFiles(['/src/*.cpp', '/src/*.c'], SRCPATH,posix=True)
if '-DAFE_DAL_TEST' in env.get('CFLAGS'):
   # Unit test
   avs_reg_sources = env.GlobSourceFiles(['/src/*.cpp', '/src/*.c', '/tst/*.cpp', '/tst/*.c'], SRCPATH,posix=True)

# Generate stub source file list
avs_stub_sources = env.GlobSourceFiles(['/stub_src/*.cpp', '/stub_src/*.c'], SRCPATH,posix=True)

# Genate proprietary source file list
avs_prop_sources = []

#import pdb; pdb.set_trace()
if 'USES_AVS_LIBRARY_BUILDER' in env:
   env.AddAvsLibrary(['AVS_ADSP','AVS_ADSP_USER'], '${BUILDPATH}/'+LIBNAME,[avs_reg_sources, avs_stub_sources, avs_prop_sources],PACK_SRC=True)

