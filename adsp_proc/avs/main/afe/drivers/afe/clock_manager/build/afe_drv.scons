#===============================================================================
#
# AVS AU
#
# GENERAL DESCRIPTION
#    Build script
#
# Copyright (c) 2009-2018 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/avs.adsp/2.8/afe/drivers/afe/clock_manager/build/afe_drv.scons#6 $
#  $DateTime: 2018/01/18 08:41:23 $
#  $Author: pwbldsvc $
#  $Change: 15265515 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
#
#===============================================================================
Import('env')

if 'USES_ENABLE_FUNCTION_SECTIONS' in env:
   env.Append(CFLAGS = '-ffunction-sections')


CBSP_API = [
   'BOOT',
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'MPROC',
   'POWER',
   'SERVICES',
   'SYSTEMDRIVERS',
   'BUSES',

   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API,area='core')
env.RequireRestrictedApi('AVS')
env.RequireProtectedApi('AVS')

env.PublishPrivateApi('AVS',[
   '${AVS_ROOT}/afe/drivers/afe/clock_manager/inc',
   
   ])

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = ".."

LIBNAME = 'clock_manager'

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

BUILD_TARGET = env.get('BUILD_ASIC')

# Generate regular source file list
if BUILD_TARGET in ["855","1000"]:
   avs_reg_sources = env.GlobSourceFiles(['/src/afe_lpass_core_clk.cpp','/src/AudioIfClkDriver.cpp','/src/clock_debug.cpp','/src/clock_manager.cpp','/src/hal_clock_v2.cpp','/stub_src/afe_dal_proxy/afe_dal_proxy_stub.cpp'], SRCPATH,posix=True)
elif BUILD_TARGET in ["670"]:
   avs_reg_sources = env.GlobSourceFiles(['/src/afe_lpass_core_clk.cpp','/src/AudioIfClkDriver.cpp','/src/clock_debug.cpp','/src/clock_manager.cpp','/src/hal_clock_v3.cpp','/src/afe_dal_proxy/afe_dal_proxy.cpp'], SRCPATH,posix=True)
else:
   avs_reg_sources = env.GlobSourceFiles(['/src/afe_lpass_core_clk.cpp','/src/AudioIfClkDriver.cpp','/src/clock_debug.cpp','/src/clock_manager.cpp','/src/hal_clock_v1.cpp','/stub_src/afe_dal_proxy/afe_dal_proxy_stub.cpp'], SRCPATH,posix=True)

# Generate stub source file list
avs_stub_sources = env.GlobSourceFiles(['/stub_src/*.cpp', '/stub_src/*.c'], SRCPATH,posix=True)

# Genate proprietary source file list
avs_prop_sources = []

#import pdb; pdb.set_trace()
if 'USES_AVS_LIBRARY_BUILDER' in env:
   env.AddAvsLibrary(['AVS_ADSP','AVS_ADSP_USER'], '${BUILDPATH}/'+LIBNAME,
      [avs_reg_sources, avs_stub_sources, avs_prop_sources], PACK_SRC=True)
