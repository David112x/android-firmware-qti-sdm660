#===============================================================================
#
# AVS AU
#
# GENERAL DESCRIPTION
#    Build script
#
#  Copyright (c) 2009-2016 QUALCOMM Technologies, Inc. (QTI).  All Rights Reserved.
#  QUALCOMM Technologies, Inc. (QTI) Proprietary.  Export of this technology or software is regulated
#  by the U.S. Government, Diversion contrary to U.S. law prohibited.
#
#-------------------------------------------------------------------------------
#
#  $Header: $
#  $DateTime: $
#  $Author:  $
#  $Change:  $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
#
#===============================================================================
Import('env')

if 'USES_ENABLE_FUNCTION_SECTIONS' in env:
   env.Append(CFLAGS = '-ffunction-sections')


CBSP_API = [
   'BOOT',
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'MPROC',
   'POWER',
   'SERVICES',
   'SYSTEMDRIVERS',
   'BUSES',

   # needs to be last also contains wrong comdef.h
   'KERNEL',   
]

env.RequirePublicApi(CBSP_API,area='core')
env.RequireRestrictedApi(['AVS','SHARED_LIBRARY_INC_PATHS'])
env.RequireProtectedApi('AVS')

env.PublishPrivateApi('AVS',[
   '${AVS_ROOT}/afe/drivers/afe/slimbus/inc',
    
   ])

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = ".."

LIBNAME = 'AFESlimbusDriver'

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

BUILD_TARGET = env.get('BUILD_ASIC')

# Generate regular source file list
if BUILD_TARGET in ["8998", "660", "845", "670", "855"]:
	avs_reg_sources = env.GlobSourceFiles(['/src/*.cpp', '/src/sb_multi_ep/*.cpp', '/src/*.c', '/src/*.S'], SRCPATH,posix=True)
else:
	avs_reg_sources = env.GlobSourceFiles(['/src/*.cpp', '/stub_src/sb_multi_ep/*.cpp', '/src/*.c', '/src/*.S'], SRCPATH,posix=True)

# Generate stub source file list
avs_stub_sources = env.GlobSourceFiles(['/stub_src/*.cpp', '/stub_src/*.c', '/stub_src/*.S'], SRCPATH,posix=True)

# Genate proprietary source file list
avs_prop_sources = []

#import pdb; pdb.set_trace()
if 'USES_AVS_LIBRARY_BUILDER' in env:
   env.AddAvsLibrary(['AVS_ADSP','AVS_ADSP_USER'], '${BUILDPATH}/'+LIBNAME,
      [avs_reg_sources, avs_stub_sources, avs_prop_sources], PACK_SRC=True)
