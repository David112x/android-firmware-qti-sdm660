#===============================================================================
#
# AVS AU
#
# GENERAL DESCRIPTION
#    Build script
#
# Copyright (c) 2009-2009 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/avs.adsp/2.8/listen/services/dynamic_svcs/listen_proc_svc/build/listen_proc_svc.scons#2 $
#  $DateTime: 2016/08/02 07:18:44 $
#  $Author: pwbldsvc $
#  $Change: 11056301 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
#
#===============================================================================
Import('env')

core_public_apis = [
   'DEBUGTOOLS',
   'SERVICES',
   'KERNEL',
   ]
   
if env.get('MDSPMODE') == True:
   core_public_apis.append('POWER') #Needed when avs is compiled on mdsp
   
env.RequirePublicApi(core_public_apis, area='core')
env.RequireRestrictedApi(['AVS','SHARED_LIBRARY_INC_PATHS','MODULE_INTERFACES_UTILS','AFE_UTILS_TOPO'])
env.RequireProtectedApi('AVS')

env.PublishPrivateApi('AVS',[
   '../inc',
   '${AVS_ROOT}/listen/lsm_devcfg/devcfg/inc',   
   '${AVS_ROOT}/listen/lsm_devcfg/target/inc',
   '${AVS_ROOT}/aud/services/static_svcs/audio_stream_mgr/inc',
   '${AVS_ROOT}/aud/services/static_svcs/audio_dev_mgr/inc',
   '${AVS_ROOT}/aud/services/static_svcs/matrix_mixer_svc/core/lib/inc',
   '${AVS_ROOT}/elite/module_interfaces/shared_lib_api/inc/audio_cmn_lib',       
   ])

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = '..'
LIBNAME = 'listen_proc_svc'
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

# Generate regular source file list
avs_reg_sources = env.GlobSourceFiles(['/src/*.cpp', '/src/*.c', '/src/*.S'], SRCPATH,posix=True)

# Generate stub source file list
avs_stub_sources = env.GlobSourceFiles(['/stub_src/*.cpp', '/stub_src/*.c', '/stub_src/*.S'], SRCPATH,posix=True)

# Genate proprietary source file list
avs_prop_sources = []

# Enabling additional debug option for SIM 
if 'SIM_DEFINED' in env.subst('$CCFLAGS'):
    env.Append(CPPDEFINES=['LSM_DEBUG'])    

env.Replace(HEXAGONCC_OPT = "-Os")  

#import pdb; pdb.set_trace()
if 'USES_AVS_LIBRARY_BUILDER' in env:
   env.AddAvsLibrary(['AVS_ADSP','AVS_ADSP_USER'], '${BUILDPATH}/'+LIBNAME,
      [avs_reg_sources, avs_stub_sources, avs_prop_sources], PACK_SRC=True)
