#===============================================================================
#
# Build script for the sensors Device Driver Framework (DDF).
#
# Copyright (c) 2009-2015 by Qualcomm Technologies, Inc.  All Rights Reserved
# Qualcomm Technologies Proprietary and Confidential
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/ssc.slpi/2.2/ddf/build/ddf.scons#1 $
#  $DateTime: 2017/04/17 22:20:39 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
#  when        who  what, where, why
#  ----------  ---  ---------------------------------------------------------
#  2015-01-21  BD   Moving F3 constant strings from uImage to bigImage
#  2014-12-10  MW   Fix HD22 section
#  2014-07-25  ps   Support for 8996 images
#  2014-05-29  pn   Restructured to fix libraries with overlapping objects
#  2014-05-15  pn   Restructured
#  2014-05-09  sc   Added folder for legacy support
#  2014-04-19  sc   Removed target-specific folders
#  2014-04-18  DC   Added cleanpack rules for HD11 package
#  2014-04-04  MW   Added SENSORS_DD_DEV_FLAG for HD22
#  2013-06-25  ps   update require method for Public APIs
#  2012-12-02  ag   Add multi PD support
#  2012-05-10  vh   Added path for I2C driver
#  2012-03-07  sd   Added path for DRI feature
#  2011-07-19  agk  Moved sns_ddf_comm.c to respective MSM folders.
#  2011-04-19  yk   Added sns_ddf_signal.c to list of sources.
#  2010-12-22  pg   Update for accessing UCOS header files from DALSYS. 
#  2010-11-22  pg   Added MPROC external API to resolve QMI include 
#                   dependency in log api header file.
#  2010-08-25  yk   Initial release.
#===============================================================================
Import('env')
import os
from glob import glob
from os.path import join, basename
env = env.Clone()


#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/Sensors/ddf/src"
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)


#-------------------------------------------------------------------------------
# External depends within module
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# External depends outside module
#-------------------------------------------------------------------------------
CBSP_API = [
    'BUSES',
    'DAL',
    'SYSTEMDRIVERS',
    'SERVICES',
    'MPROC',
    # needs to be last also contains wrong comdef.h
    'KERNEL',
]

env.RequirePublicApi(CBSP_API, area='core')


##-------------------------------------------------------------------------------
# Internal depends within Sensors
#-------------------------------------------------------------------------------
SENSORS_API = [
   'SENSORS',
   'SNS_MEMMGR',
   'SNS_DDF',
   'SNS_COMMON',
   'SNS_DEBUG_DSPS',
   'SNS_MATHTOOLS',
   'SNS_PROFILING',
   #'SNS_PLAYBACK',
]

env.RequireProtectedApi(SENSORS_API)


#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------
DDF_SRC = ['${BUILDPATH}/' + basename(fname) 
                for fname in glob(join(env.subst(SRCPATH), '*.c'))]
				
if 'USES_ISLAND' in env:
   DDF_U_IMG_SRC = ['${BUILDPATH}/' + 'sns_ddf_uimg_comm_bus_i2c.c', '${BUILDPATH}/' + 'sns_ddf_uimg_comm_bus_spi.c']
   [DDF_SRC.remove(f) for f in DDF_U_IMG_SRC if f in DDF_SRC]				
				

if 'SENSORS_DD_DEV_FLAG' in env:				
   DDF_LIB = env.AddBinaryLibrary(
        ['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], 
        '${BUILDPATH}/ddf', DDF_SRC)

   if 'USES_ISLAND' in env:	 
      DDF_U_IMG_LIB = env.AddBinaryLibrary(
        ['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], 
        '${BUILDPATH}/ddf_uimg', DDF_U_IMG_SRC)
else:
   DDF_LIB = env.AddLibrary(
        ['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], 
        '${BUILDPATH}/ddf', DDF_SRC)

   if 'USES_ISLAND' in env:	 
      DDF_U_IMG_LIB = env.AddLibrary(
        ['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], 
        '${BUILDPATH}/ddf_uimg', DDF_U_IMG_SRC)
	 

     
if 'SENSORS_DD_DEV_FLAG' in env:
   # Sources that should not be shared
   DDF_CLEAN_SOURCES = env.FindFiles(['*.*'], '${BUILD_ROOT}/Sensors/ddf/src')
   
    # Clean sources
   env.CleanPack(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], DDF_CLEAN_SOURCES)



#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
if 'USES_ISLAND' in env:
   DDF_SECTIONS = ['.text.DDF', '.data.DDF', '.bss.DDF']
   env.AddIslandLibrary(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], DDF_LIB, DDF_SECTIONS)
   env.AddIslandLibrary(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], DDF_U_IMG_LIB)


