#===============================================================================
#
# CMC Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2013 - 2015 Qualcomm Technologies, Inc.  All Rights Reserved.
# Qualcomm Technologies Proprietary and Confidential.
#-------------------------------------------------------------------------------

Import('env')
from glob import glob
from os.path import join, basename
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/Sensors/common/usam/algo/cmc/src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# External depends within module
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# External depends outside module
#-------------------------------------------------------------------------------
CBSP_API = [
   'KERNEL'
]

env.RequirePublicApi(CBSP_API, area='core')
#-------------------------------------------------------------------------------
# Internal depends within module
#-------------------------------------------------------------------------------
env.Append(CPPPATH = [
   "${BUILD_ROOT}/Sensors/api",
   "${BUILD_ROOT}/Sensors/common/inc",
   "${BUILD_ROOT}/Sensors/common/util/mathtools/inc",
   "${BUILD_ROOT}/Sensors/common/usam/framework/inc",
   "${BUILD_ROOT}/Sensors/common/usam/util/inc",
   "${BUILD_ROOT}/Sensors/common/usam/algo/cmc/inc",
   "${BUILD_ROOT}/Sensors/common/util/queue/inc",
   "${BUILD_ROOT}/Sensors/common/smr/inc",
   "${BUILD_ROOT}/Sensors/common/util/memmgr/inc",
])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------
CMC_SOURCES = [
      '${BUILDPATH}/cmc.c',
      '${BUILDPATH}/cmc_msg.c',
   ]

CMC_U_SOURCES  = ['${BUILDPATH}/' + basename(fname)
          for fname in glob(join(env.subst(SRCPATH), '*.*'))]
[CMC_U_SOURCES.remove(f) for f in CMC_SOURCES if f in CMC_U_SOURCES]

algo_cmc_lib = env.AddBinaryLibrary(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'],
                                    '${BUILDPATH}/sam_algo_cmc', CMC_SOURCES)
algo_cmc_u_lib = env.AddBinaryLibrary(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'],
                                    '${BUILDPATH}/sam_algo_u_cmc', CMC_U_SOURCES)


# Sources and headers that should not be shared
CMC_CLEAN_SOURCES = env.FindFiles(['*.*'], '${BUILD_ROOT}/Sensors/common/usam/algo/cmc/src')
CMC_CLEAN_SOURCES += env.FindFiles(['*.h'], '${BUILD_ROOT}/Sensors/common/usam/algo/cmc/inc')

# Clean sources
env.CleanPack(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], CMC_CLEAN_SOURCES)

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
if 'SNS_ISLAND_INCLUDE_ALGO_CMC' in env['CPPDEFINES']:
   cmc_sections = ['.text.CMC', '.data.CMC', '.rodata.CMC']
   env.AddIslandLibrary(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], algo_cmc_lib, cmc_sections)
   env.AddIslandLibrary(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], algo_cmc_u_lib )

