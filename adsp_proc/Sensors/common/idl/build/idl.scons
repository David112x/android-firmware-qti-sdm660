#===============================================================================
#
# IDL Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2009-2014 by Qualcomm Technologies, Inc.  All Rights Reserved
# Qualcomm Technologies Proprietary and Confidential
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/ssc.slpi/2.2/common/idl/build/idl.scons#1 $
#  $DateTime: 2017/04/17 22:20:39 $
#  $Author: pwbldsvc $
#  $Change: 13043989 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 12/10/2014  MW     Removed SNS_BLAST
# 05/16/2014  ag     Add IDL library to AVS image 
# 02/28/2014  MW     Added SENSORS_DD_DEV_FLAG for HD22
# 02/13/2014  tc     Added support for SMGR Restricted API
# 12/14/2013  pk     Added SAM Algorithm Attributes Query support
# 10/14/2013  ps     added support for oem_1 algo
# 06/25/2013  ps     update require method for Public APIs
# 06/05/2013  pd     Added Significant Motion Detection service support
# 06/05/2013  tc     Added support for Game Rotation Vector
# 03/18/2013 gju     Remove debug internal service; add file service.
# 01/12/2013  asj    Added modem scenario service support
# 12/02/2012  ag     Add multi PD support
# 02/07/2012  jh     Added support for gestures and updated time service
# 11/22/2011  jh     Added support for orientation
# 11/18/2011  sc     Added time service.
# 11/08/2011  sc     Added support for sensor threshold service
# 08/18/2011 jtl     Added internal debug service.
# 04/27/2011  jh     Added support for SAM gravity, quaternion and SMGR internal
#                    APIs
# 04/21/2011  sj     Added support Sensor Power Manager service
# 04/14/2011  dc     Updates for Blast OS.
# 12/22/2010  ad     Add IDL generated .c files for FNS and BTE algos 
# 12/22/2010  pg     Update for accessing UCOS header files from DALSYS. 
# 11/08/2010  ad     Adding IDL generated .c files for DSPS DIAG service
# 10/08/2010  jh     Adding IDL generated .c files for SAM
# 09/24/2010  sj     Added sns_debug_interface for compilation
#===============================================================================
Import('env')
import os
from glob import glob
from os.path import join, basename
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/Sensors/common/idl/src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# External depends outside module
#-------------------------------------------------------------------------------
CBSP_API = [
   'DAL',
   'MPROC',
   'KERNEL'
]

env.RequirePublicApi(CBSP_API, area='core')

#-------------------------------------------------------------------------------
# Internal depends within module
#-------------------------------------------------------------------------------
env.RequirePublicApi('SENSOR1')

if env.has_key('SNS_BLAST'):
  env.Append(CPPPATH = [
     "${BUILD_ROOT}/Sensors/common/inc",
     "${BUILD_ROOT}/Sensors/api",
  ])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------
IDL_DSPS_SOURCES  = ['${BUILDPATH}/' + basename(fname)
                     for fname in glob(join(env.subst(SRCPATH), '*.c'))]

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
if 'SENSORS_DD_DEV_FLAG' in env:
   # Sources that should not be shared
   IDL_CLEAN_SOURCES = env.FindFiles(['*.c'], '${BUILD_ROOT}/Sensors/common/idl/src')
   IDL_CLEAN_SOURCES += env.FindFiles(['*.h'], '${BUILD_ROOT}/Sensors/common/idl/inc')
   IDL_CLEAN_SOURCES += env.FindFiles(['*.idl'], '${BUILD_ROOT}/Sensors/common/idl/idl')
	
   # Add as binary library
   idl_dsps_lib = env.AddBinaryLibrary(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW','AVS_ADSP'],
     "${BUILDPATH}/IDL_DSPS", IDL_DSPS_SOURCES)
		
   # Clean sources
   env.CleanPack(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW','AVS_ADSP'], 
     IDL_CLEAN_SOURCES)

else:
   idl_dsps_lib = env.AddLibrary(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW','AVS_ADSP'],
     "${BUILDPATH}/IDL_DSPS", IDL_DSPS_SOURCES)
