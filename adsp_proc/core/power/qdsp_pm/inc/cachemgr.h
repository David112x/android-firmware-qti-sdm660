/*
* Copyright (c) 2015 Qualcomm Technologies, Inc.
* All Rights Reserved.
* Qualcomm Technologies, Inc. Confidential and Proprietary.
*/

// Cache partition manager

#ifndef _CACHEMGR_H_
#define _CACHEMGR_H_

#include "adsppm.h"

#define CLIENTCLASS_CHECK_MPPS_VOTE (MMPM_AUDIO_CLIENT_CLASS | MMPM_COMPUTE_CLIENT_CLASS)

// Enumeration for observable events generated by the Client Manager
typedef enum
{
    CPM_CACHE_CONFIGURATION_CHANGE = 0,
} AdsppmCachePartitionManagerEventId;

typedef void (*AdsppmCacheEventHandler)
    (AdsppmCachePartitionManagerEventId event, void* param);

// Initialize cache partition manager module
Adsppm_Status CPM_Init(void);

// Enable or disable cache line locking.  baseAddr and size parameters
// specify the memory region used for locking.
// Start address of 0 or a size of 0 is interpreted as disablement of line
// locking that was applied previously, if any.
// oldParam - the current line locking parameters for the client
// newParam - the requested new line locking parameters
Adsppm_Status CPM_SetLineLocking(
    const MmpmL2CacheLineLockParameterType* oldParam,
    const MmpmL2CacheLineLockParameterType* newParam);

// Register as an observer for an event
Adsppm_Status CPM_RegisterEvent(AdsppmCachePartitionManagerEventId event,
    AdsppmCacheEventHandler handler, void* param);

// Unregister as an observer for a previously registered event
Adsppm_Status CPM_UnregisterEvent(AdsppmCachePartitionManagerEventId event,
    AdsppmCacheEventHandler handler);

//Get current cache partition sie
Adsppm_Status CPM_GetCachePartitionSize(uint32 *);


#endif /* _CACHEMGR_H_ */

