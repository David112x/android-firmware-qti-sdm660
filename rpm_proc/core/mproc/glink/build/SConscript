#===============================================================================
#
# MPROC Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2009-2014 by QUALCOMM Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/rpm.bf/1.8/core/mproc/glink/build/SConscript#5 $
#  $DateTime: 2018/08/10 07:09:32 $
#  $Author: pwbldsvc $
#  $Change: 16855347 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 06/10/15   bc      Define macro for secure processor integration
#===============================================================================
Import('env')
import os
env = env.Clone()
#default vipertooth support using Starlord target specific files   
if env['MSM_ID'] in ['405']:
   env['MSM_ID'] = '660'


supported_targets = ['8996', '8998', '8997', '660', '630', 'nicobar']
if env['MSM_ID'] not in supported_targets:
    env.PrintWarning('Bailing from GLINK scripts; no support for build targets other than %s' % supported_targets)
    Return()

#-------------------------------------------------------------------------------
# Decide glink build root 
#-------------------------------------------------------------------------------
if env.IsTargetEnable('MISSIONROM_IMAGE'):
  GLINK_BUILD_ROOT = "${BUILD_ROOT}/missionrom/core/mproc/glink"
else:
  GLINK_BUILD_ROOT = "${BUILD_ROOT}/core/mproc/glink"

Export('GLINK_BUILD_ROOT')

#-------------------------------------------------------------------------------
# Convert warnings to errors 
#-------------------------------------------------------------------------------
if env.has_key('CORE_RPM'):
    if 'LLVM' in os.environ['ARMTOOLS'] :
      env.Append(CFLAGS = "-W  -Wno-unused-parameter -Wno-sign-compare -Wno-incompatible-pointer-types")
    else:
      env.Append(CFLAGS = "-W")
elif not os.environ.get('COMPILER','gcc').startswith('llvm'):
        env.Append(CFLAGS = "-Werror ")

#-------------------------------------------------------------------------------
# Publish Protected APIs
#-------------------------------------------------------------------------------
env.PublishProtectedApi('MPROC_GLINK', [
   "${INC_ROOT}/core/mproc/glink/core/inc",
])

# Images that will have full glink features
FULL_GLINK_FEAUTRE_IMAGES = ['CBSP_APPS_IMAGE', 'APPS_IMAGE', 'CORE_QDSP6_SW',
                             'CORE_MPSS_ROOT', 'CORE_ADSP_ROOT', 'CORE_SLPI_ROOT',
                             'CORE_ADSP_SLPI_ROOT', 'CORE_CDSP_ROOT']

if env.IsTargetEnable(FULL_GLINK_FEAUTRE_IMAGES):
  env.Append(CPPDEFINES=['FEATURE_TRACER_PACKET',
                         'GLINK_OS_DEFINED_LOGGING' , 
                         'GLINK_CHANNEL_STATS_ENABLED'])

#-------------------------------------------------------------------------------
# Load sub scripts
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()
env.LoadImageUnits()
