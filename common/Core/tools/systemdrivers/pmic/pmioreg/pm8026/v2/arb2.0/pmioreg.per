entry &access &sid &cmd_addr &read_addr &write_addr
tree "BB_CLK1"
  tree "BB_CLK1"
    tree "BB_CLK1_REVISION1"
      sgroup "BB_CLK1_REVISION1 (at 0x5100)"
        set &access:&cmd_addr %l (0x8051000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BB_CLK1_REVISION2"
      sgroup "BB_CLK1_REVISION2 (at 0x5101)"
        set &access:&cmd_addr %l (0x8051010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BB_CLK1_REVISION3"
      sgroup "BB_CLK1_REVISION3 (at 0x5102)"
        set &access:&cmd_addr %l (0x8051020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "BB_CLK1_REVISION4"
      sgroup "BB_CLK1_REVISION4 (at 0x5103)"
        set &access:&cmd_addr %l (0x8051030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "BB_CLK1_PERPH_TYPE"
      sgroup "BB_CLK1_PERPH_TYPE (at 0x5104)"
        set &access:&cmd_addr %l (0x8051040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BB_CLK1_PERPH_SUBTYPE"
      sgroup "BB_CLK1_PERPH_SUBTYPE (at 0x5105)"
        set &access:&cmd_addr %l (0x8051050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BB_CLK1_STATUS1"
      sgroup "BB_CLK1_STATUS1 (at 0x5108)"
        set &access:&cmd_addr %l (0x8051080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_OK                                   = " "0 (BBCLK_OFF),1 (BBCLK_ON)"
    tree.end
    tree "BB_CLK1_DRV_CTL1"
      sgroup "BB_CLK1_DRV_CTL1 (at 0x5144)"
        set &access:&cmd_addr %l (0x8051440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUT_DRV                                  = " "0 (ONE_X),1 (TWO_X),2 (THREE_X),3 (FOUR_X)"
    tree.end
    tree "BB_CLK1_EN_CTL"
      sgroup "BB_CLK1_EN_CTL (at 0x5146)"
        set &access:&cmd_addr %l (0x8051460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_EN                                   = " "0 (BBCLK_NOT_FORCE),1 (BBCLK_FORCE_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PC_POLARITY                              = " "0 (POS_PINCONTROL_POLARITY),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_PC_EN                             = " "0 (NOT_FOLLOW_PIN),1 (FOLLOW_PIN)"
    tree.end
    tree "BB_CLK1_PD_CTL"
      sgroup "BB_CLK1_PD_CTL (at 0x5148)"
        set &access:&cmd_addr %l (0x8051480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PULLDN_DIS),1 (PULLDN_EN)"
    tree.end
    tree "BB_CLK1_SEC_ACCESS"
      sgroup "BB_CLK1_SEC_ACCESS (at 0x51d0)"
        set &access:&cmd_addr %l (0x8051d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BB_CLK1_PERPH_RESET_CTL1"
      sgroup "BB_CLK1_PERPH_RESET_CTL1 (at 0x51d8)"
        set &access:&cmd_addr %l (0x8051d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (BBCLK_NOT_FORCE),1 (BBCLK_FORCE_EN)"
    tree.end
    tree "BB_CLK1_PERPH_RESET_CTL2"
      sgroup "BB_CLK1_PERPH_RESET_CTL2 (at 0x51d9)"
        set &access:&cmd_addr %l (0x8051d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "BB_CLK1_PERPH_RESET_CTL3"
      sgroup "BB_CLK1_PERPH_RESET_CTL3 (at 0x51da)"
        set &access:&cmd_addr %l (0x8051da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "BB_CLK1_PERPH_RESET_CTL4"
      sgroup "BB_CLK1_PERPH_RESET_CTL4 (at 0x51db)"
        set &access:&cmd_addr %l (0x8051db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NO_RESET),1 (RESET_MODULE)"
    tree.end
  tree.end
tree.end
tree "BB_CLK2"
  tree "BB_CLK2"
    tree "BB_CLK2_REVISION1"
      sgroup "BB_CLK2_REVISION1 (at 0x5200)"
        set &access:&cmd_addr %l (0x8052000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BB_CLK2_REVISION2"
      sgroup "BB_CLK2_REVISION2 (at 0x5201)"
        set &access:&cmd_addr %l (0x8052010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BB_CLK2_REVISION3"
      sgroup "BB_CLK2_REVISION3 (at 0x5202)"
        set &access:&cmd_addr %l (0x8052020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "BB_CLK2_REVISION4"
      sgroup "BB_CLK2_REVISION4 (at 0x5203)"
        set &access:&cmd_addr %l (0x8052030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "BB_CLK2_PERPH_TYPE"
      sgroup "BB_CLK2_PERPH_TYPE (at 0x5204)"
        set &access:&cmd_addr %l (0x8052040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BB_CLK2_PERPH_SUBTYPE"
      sgroup "BB_CLK2_PERPH_SUBTYPE (at 0x5205)"
        set &access:&cmd_addr %l (0x8052050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BB_CLK2_STATUS1"
      sgroup "BB_CLK2_STATUS1 (at 0x5208)"
        set &access:&cmd_addr %l (0x8052080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_OK                                   = " "0 (BBCLK_OFF),1 (BBCLK_ON)"
    tree.end
    tree "BB_CLK2_DRV_CTL1"
      sgroup "BB_CLK2_DRV_CTL1 (at 0x5244)"
        set &access:&cmd_addr %l (0x8052440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUT_DRV                                  = " "0 (ONE_X),1 (TWO_X),2 (THREE_X),3 (FOUR_X)"
    tree.end
    tree "BB_CLK2_EN_CTL"
      sgroup "BB_CLK2_EN_CTL (at 0x5246)"
        set &access:&cmd_addr %l (0x8052460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_EN                                   = " "0 (BBCLK_NOT_FORCE),1 (BBCLK_FORCE_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PC_POLARITY                              = " "0 (POS_PINCONTROL_POLARITY),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_PC_EN                             = " "0 (NOT_FOLLOW_PIN),1 (FOLLOW_PIN)"
    tree.end
    tree "BB_CLK2_PD_CTL"
      sgroup "BB_CLK2_PD_CTL (at 0x5248)"
        set &access:&cmd_addr %l (0x8052480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PULLDN_DIS),1 (PULLDN_EN)"
    tree.end
    tree "BB_CLK2_SEC_ACCESS"
      sgroup "BB_CLK2_SEC_ACCESS (at 0x52d0)"
        set &access:&cmd_addr %l (0x8052d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BB_CLK2_PERPH_RESET_CTL1"
      sgroup "BB_CLK2_PERPH_RESET_CTL1 (at 0x52d8)"
        set &access:&cmd_addr %l (0x8052d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (BBCLK_NOT_FORCE),1 (BBCLK_FORCE_EN)"
    tree.end
    tree "BB_CLK2_PERPH_RESET_CTL2"
      sgroup "BB_CLK2_PERPH_RESET_CTL2 (at 0x52d9)"
        set &access:&cmd_addr %l (0x8052d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "BB_CLK2_PERPH_RESET_CTL3"
      sgroup "BB_CLK2_PERPH_RESET_CTL3 (at 0x52da)"
        set &access:&cmd_addr %l (0x8052da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "BB_CLK2_PERPH_RESET_CTL4"
      sgroup "BB_CLK2_PERPH_RESET_CTL4 (at 0x52db)"
        set &access:&cmd_addr %l (0x8052db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NO_RESET),1 (RESET_MODULE)"
    tree.end
  tree.end
tree.end
tree "BCLK_GEN_MAIN"
  tree "BCLK_GEN_MAIN"
    tree "BCLK_GEN_MAIN_REVISION1"
      sgroup "BCLK_GEN_MAIN_REVISION1 (at 0x11000)"
        set &access:&cmd_addr %l (0x8010000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BCLK_GEN_MAIN_REVISION2"
      sgroup "BCLK_GEN_MAIN_REVISION2 (at 0x11001)"
        set &access:&cmd_addr %l (0x8010010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BCLK_GEN_MAIN_REVISION3"
      sgroup "BCLK_GEN_MAIN_REVISION3 (at 0x11002)"
        set &access:&cmd_addr %l (0x8010020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "BCLK_GEN_MAIN_REVISION4"
      sgroup "BCLK_GEN_MAIN_REVISION4 (at 0x11003)"
        set &access:&cmd_addr %l (0x8010030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_TYPE"
      sgroup "BCLK_GEN_MAIN_PERPH_TYPE (at 0x11004)"
        set &access:&cmd_addr %l (0x8010040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_SUBTYPE"
      sgroup "BCLK_GEN_MAIN_PERPH_SUBTYPE (at 0x11005)"
        set &access:&cmd_addr %l (0x8010050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BCLK_GEN_MAIN_STATUS"
      sgroup "BCLK_GEN_MAIN_STATUS (at 0x11008)"
        set &access:&cmd_addr %l (0x8010080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DLL_LOCK_FLG                             = " "0 (STATUS_DLL_NOT_LOCKED),1 (STATUS_DLL_LOCKED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_RT_STS"
      sgroup "BCLK_GEN_MAIN_INT_RT_STS (at 0x11010)"
        set &access:&cmd_addr %l (0x8010100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_RT_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_SET_TYPE"
      sgroup "BCLK_GEN_MAIN_INT_SET_TYPE (at 0x11011)"
        set &access:&cmd_addr %l (0x8010110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_TYPE                            = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_POLARITY_HIGH"
      sgroup "BCLK_GEN_MAIN_INT_POLARITY_HIGH (at 0x11012)"
        set &access:&cmd_addr %l (0x8010120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_HIGH                            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_POLARITY_LOW"
      sgroup "BCLK_GEN_MAIN_INT_POLARITY_LOW (at 0x11013)"
        set &access:&cmd_addr %l (0x8010130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_LOW                             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_LATCHED_CLR"
      sgroup "BCLK_GEN_MAIN_INT_LATCHED_CLR (at 0x11014)"
        set &access:&cmd_addr %l (0x8010140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_LATCHED_CLR                     = " "0, 1"
    tree.end
    tree "BCLK_GEN_MAIN_INT_EN_SET"
      sgroup "BCLK_GEN_MAIN_INT_EN_SET (at 0x11015)"
        set &access:&cmd_addr %l (0x8010150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_EN_CLR"
      sgroup "BCLK_GEN_MAIN_INT_EN_CLR (at 0x11016)"
        set &access:&cmd_addr %l (0x8010160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_LATCHED_STS"
      sgroup "BCLK_GEN_MAIN_INT_LATCHED_STS (at 0x11018)"
        set &access:&cmd_addr %l (0x8010180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_PENDING_STS"
      sgroup "BCLK_GEN_MAIN_INT_PENDING_STS (at 0x11019)"
        set &access:&cmd_addr %l (0x8010190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_PENDING_STS                     = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_MID_SEL"
      sgroup "BCLK_GEN_MAIN_INT_MID_SEL (at 0x1101a)"
        set &access:&cmd_addr %l (0x80101a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x101a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_PRIORITY"
      sgroup "BCLK_GEN_MAIN_INT_PRIORITY (at 0x1101b)"
        set &access:&cmd_addr %l (0x80101b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x101b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "BCLK_GEN_MAIN_BCLK_GEN_ENABLE"
      sgroup "BCLK_GEN_MAIN_BCLK_GEN_ENABLE (at 0x11046)"
        set &access:&cmd_addr %l (0x8010460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_BCLK_GEN                              = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_REQ                           = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_DLL_CFG"
      sgroup "BCLK_GEN_MAIN_DLL_CFG (at 0x11050)"
        set &access:&cmd_addr %l (0x8010500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   DLL_LOCK_CFG                             = " "0 (DLL_LOCK_CHECK_DISABLED_0),1 (DLL_LOCK_CHECK_DISABLED_1),2 (WAIT_FOR_DLL_LOCK),3 (WAIT_FOR_10_US)"
    tree.end
    tree "BCLK_GEN_MAIN_QM_MODE"
      sgroup "BCLK_GEN_MAIN_QM_MODE (at 0x11051)"
        set &access:&cmd_addr %l (0x8010510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   QM_EN                                    = " "0 (QUIET_MODE_DISABLED),1 (QUIET_MODE_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_SEC_ACCESS"
      sgroup "BCLK_GEN_MAIN_SEC_ACCESS (at 0x110d0)"
        set &access:&cmd_addr %l (0x8010d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_RESET_CTL2"
      sgroup "BCLK_GEN_MAIN_PERPH_RESET_CTL2 (at 0x110d9)"
        set &access:&cmd_addr %l (0x8010d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_RESET_CTL3"
      sgroup "BCLK_GEN_MAIN_PERPH_RESET_CTL3 (at 0x110da)"
        set &access:&cmd_addr %l (0x8010da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_RESET_CTL4"
      sgroup "BCLK_GEN_MAIN_PERPH_RESET_CTL4 (at 0x110db)"
        set &access:&cmd_addr %l (0x8010db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_TEST1"
      sgroup "BCLK_GEN_MAIN_INT_TEST1 (at 0x110e0)"
        set &access:&cmd_addr %l (0x8010e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "BCLK_GEN_MAIN_INT_TEST_VAL"
      sgroup "BCLK_GEN_MAIN_INT_TEST_VAL (at 0x110e1)"
        set &access:&cmd_addr %l (0x8010e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_TEST_VAL                        = " "0, 1"
    tree.end
    tree "BCLK_GEN_MAIN_TEST1"
      sgroup "BCLK_GEN_MAIN_TEST1 (at 0x110e2)"
        set &access:&cmd_addr %l (0x8010e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST1_SEL                               = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST2_SEL                               = "
    tree.end
    tree "BCLK_GEN_MAIN_TEST2"
      sgroup "BCLK_GEN_MAIN_TEST2 (at 0x110e3)"
        set &access:&cmd_addr %l (0x8010e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST3_SEL                               = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST4_SEL                               = "
    tree.end
    tree "BCLK_GEN_MAIN_TEST3"
      sgroup "BCLK_GEN_MAIN_TEST3 (at 0x110e4)"
        set &access:&cmd_addr %l (0x8010e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_TRISTATE),1 (ATEST_1S_2T_3T),2 (ATEST_1T_2S_3T),3 (ATEST_1S_2S_3T),4 (ATEST_1T_2T_3S),5 (ATEST_1S_2T_3S),6 (ATEST_1T_2S_3S),7 (ATEST_1S_2S_3S)"
    tree.end
    tree "BCLK_GEN_MAIN_TEST4"
      sgroup "BCLK_GEN_MAIN_TEST4 (at 0x110e5)"
        set &access:&cmd_addr %l (0x8010e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TEST_CLK_EN                              = " "0 (USE_MAIN_CLK),1 (USE_ALT_CLK)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   TEST_CLK_SEL                             = " "0 (ALT_CLK_DTEST1),1 (ALT_CLK_DTEST2),2 (ALT_CLK_DTEST3),3 (ALT_CLK_DTEST4)"
    tree.end
  tree.end
tree.end
tree "BMS1"
  tree "BMS1"
    tree "BMS1_REVISION1"
      sgroup "BMS1_REVISION1 (at 0x4000)"
        set &access:&cmd_addr %l (0x8040000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BMS1_REVISION2"
      sgroup "BMS1_REVISION2 (at 0x4001)"
        set &access:&cmd_addr %l (0x8040010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BMS1_PERPH_TYPE"
      sgroup "BMS1_PERPH_TYPE (at 0x4004)"
        set &access:&cmd_addr %l (0x8040040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BMS1_PERPH_SUBTYPE"
      sgroup "BMS1_PERPH_SUBTYPE (at 0x4005)"
        set &access:&cmd_addr %l (0x8040050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BMS1_STATUS1"
      sgroup "BMS1_STATUS1 (at 0x4008)"
        set &access:&cmd_addr %l (0x8040080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BMS_OK                                   = " "0 (BMS_PON_OCV_NOT_DONE),1 (BMS_PON_OCV_DONE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   OCV_FSM_STATE                            = " "0 (IDLE),1 (SETTLED),2 (LOAD),3 (COMPARE),4 (reserved),5 (OCV_FOR_R_LOAD),6 (OCV_FOR_R_COMPARE),7 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VSENSE_FSM_STATE                         = " "0 (S4),1 (S1),2 (S2),3 (S3),4 (reserved),5 (reserved),6 (S6),7 (S7)"
    tree.end
    tree "BMS1_INT_RT_STS"
      sgroup "BMS1_INT_RT_STS (at 0x4010)"
        set &access:&cmd_addr %l (0x8040100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_RT_STS                  = " "0 (VSENSE_FOR_R_INT_RT_STATUS_LOW),1 (VSENSE_FOR_R_INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_RT_STS                    = " "0 (VSENSE_AVG_INT_RT_STATUS_LOW),1 (VSENSE_AVG_INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_RT_STS                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_RT_STS                       = " "0 (OCV_THR_INT_RT_STATUS_LOW),1 (OCV_THR_INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_RT_STS                  = " "0 (CHARGE_BEGIN_INT_RT_STATUS_LOW),1 (CHARGE_BEGIN_INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_RT_STS                      = " "0 (GOOD_OCV_INT_RT_STATUS_LOW),1 (GOOD_OCV_INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_RT_STS                     = " "0 (OCV_FOR_R_INT_RT_STATUS_LOW),1 (OCV_FOR_R_INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_RT_STS                        = " "0 (CC_THR_INT_RT_STATUS_LOW),1 (CC_THR_INT_RT_STATUS_HIGH)"
    tree.end
    tree "BMS1_INT_SET_TYPE"
      sgroup "BMS1_INT_SET_TYPE (at 0x4011)"
        set &access:&cmd_addr %l (0x8040110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_TYPE                    = " "0 (VSENSE_FOR_R_LEVEL),1 (VSENSE_FOR_R_EDGE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_TYPE                      = " "0 (VSENSE_AVG_LEVEL),1 (VSENSE_AVG_EDGE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_TYPE                       = " "0 (SW_CC_THR_LEVEL),1 (SW_CC_THR_EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_TYPE                         = " "0 (OCV_THR_LEVEL),1 (OCV_THR_EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_TYPE                    = " "0 (CHARGE_BEGIN_LEVEL),1 (CHARGE_BEGIN_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_TYPE                        = " "0 (GOOD_OCV_LEVEL),1 (GOOD_OCV_EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_TYPE                       = " "0 (OCV_FOR_R_LEVEL),1 (OCV_FOR_R_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_TYPE                          = " "0 (CC_THR_LEVEL),1 (CC_THR_EDGE)"
    tree.end
    tree "BMS1_INT_POLARITY_HIGH"
      sgroup "BMS1_INT_POLARITY_HIGH (at 0x4012)"
        set &access:&cmd_addr %l (0x8040120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_HIGH                    = " "0 (VSENSE_FOR_R_HIGH_TRIGGER_DISABLED),1 (VSENSE_FOR_R_HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_HIGH                      = " "0 (VSENSE_AVG_HIGH_TRIGGER_DISABLED),1 (VSENSE_AVG_HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_HIGH                       = " "0 (SW_CC_THR_HIGH_TRIGGER_DISABLED),1 (SW_CC_THR_HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_HIGH                         = " "0 (OCV_THR_HIGH_TRIGGER_DISABLED),1 (OCV_THR_HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_HIGH                    = " "0 (CHARGE_BEGIN_HIGH_TRIGGER_DISABLED),1 (CHARGE_BEGIN_HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_HIGH                        = " "0 (GOOD_OCV_HIGH_TRIGGER_DISABLED),1 (GOOD_OCV_HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_HIGH                       = " "0 (OCV_FOR_R_HIGH_TRIGGER_DISABLED),1 (OCV_FOR_R_HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_HIGH                          = " "0 (CC_THR_HIGH_TRIGGER_DISABLED),1 (CC_THR_HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "BMS1_INT_POLARITY_LOW"
      sgroup "BMS1_INT_POLARITY_LOW (at 0x4013)"
        set &access:&cmd_addr %l (0x8040130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_LOW                     = " "0 (VSENSE_FOR_R_LOW_TRIGGER_DISABLED),1 (VSENSE_FOR_R_LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_LOW                       = " "0 (VSENSE_AVG_LOW_TRIGGER_DISABLED),1 (VSENSE_AVG_LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_LOW                        = " "0 (SW_CC_THR_LOW_TRIGGER_DISABLED),1 (SW_CC_THR_LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_LOW                          = " "0 (OCV_THR_LOW_TRIGGER_DISABLED),1 (OCV_THR_LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_LOW                     = " "0 (CHARGE_BEGIN_LOW_TRIGGER_DISABLED),1 (CHARGE_BEGIN_LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_LOW                         = " "0 (GOOD_OCV_LOW_TRIGGER_DISABLED),1 (GOOD_OCV_LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_LOW                        = " "0 (OCV_FOR_R_LOW_TRIGGER_DISABLED),1 (OCV_FOR_R_LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_LOW                           = " "0 (CC_THR_LOW_TRIGGER_DISABLED),1 (CC_THR_LOW_TRIGGER_ENABLED)"
    tree.end
    tree "BMS1_INT_LATCHED_CLR"
      sgroup "BMS1_INT_LATCHED_CLR (at 0x4014)"
        set &access:&cmd_addr %l (0x8040140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_CLR                     = " "0 (VSENSE_FOR_R_LATCHED),1 (VSENSE_FOR_R_LATCH_CLEAR)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_CLR                       = " "0 (VSENSE_AVG_LATCHED),1 (VSENSE_AVG_LATCH_CLEAR)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_CLR                        = " "0 (SW_CC_THR_LATCHED),1 (SW_CC_THR_LATCH_CLEAR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_CLR                          = " "0 (OCV_THR_LATCHED),1 (OCV_THR_LATCH_CLEAR)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_CLR                     = " "0 (CHARGE_BEGIN_LATCHED),1 (CHARGE_BEGIN_LATCH_CLEAR)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_CLR                         = " "0 (GOOD_OCV_LATCHED),1 (GOOD_OCV_LATCH_CLEAR)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_CLR                        = " "0 (OCV_FOR_R_LATCHED),1 (OCV_FOR_R_LATCH_CLEAR)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_CLR                           = " "0 (CC_THR_LATCHED),1 (CC_THR_LATCH_CLEAR)"
    tree.end
    tree "BMS1_INT_EN_SET"
      sgroup "BMS1_INT_EN_SET (at 0x4015)"
        set &access:&cmd_addr %l (0x8040150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_EN_SET                  = " "0 (VSENSE_FOR_R_INT_DISABLED),1 (VSENSE_FOR_R_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_EN_SET                    = " "0 (VSENSE_AVG_INT_DISABLED),1 (VSENSE_AVG_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_EN_SET                     = " "0 (SW_CC_THR_INT_DISABLED),1 (SW_CC_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_EN_SET                       = " "0 (OCV_THR_INT_DISABLED),1 (OCV_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_EN_SET                  = " "0 (CHARGE_BEGIN_INT_DISABLED),1 (CHARGE_BEGIN_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_EN_SET                      = " "0 (GOOD_OCV_INT_DISABLED),1 (GOOD_OCV_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_EN_SET                     = " "0 (OCV_FOR_R_INT_DISABLED),1 (OCV_FOR_R_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_EN_SET                        = " "0 (CC_THR_INT_DISABLED),1 (CC_THR_INT_ENABLED)"
    tree.end
    tree "BMS1_INT_EN_CLR"
      sgroup "BMS1_INT_EN_CLR (at 0x4016)"
        set &access:&cmd_addr %l (0x8040160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_EN_CLR                  = " "0 (VSENSE_FOR_R_INT_DISABLED),1 (VSENSE_FOR_R_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_EN_CLR                    = " "0 (VSENSE_AVG_INT_DISABLED),1 (VSENSE_AVG_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_EN_CLR                     = " "0 (SW_CC_THR_INT_DISABLED),1 (SW_CC_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_EN_CLR                       = " "0 (OCV_THR_INT_DISABLED),1 (OCV_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_EN_CLR                  = " "0 (CHARGE_BEGIN_INT_DISABLED),1 (CHARGE_BEGIN_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_EN_CLR                      = " "0 (GOOD_OCV_INT_DISABLED),1 (GOOD_OCV_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_EN_CLR                     = " "0 (OCV_FOR_R_INT_DISABLED),1 (OCV_FOR_R_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_EN_CLR                        = " "0 (CC_THR_INT_DISABLED),1 (CC_THR_INT_ENABLED)"
    tree.end
    tree "BMS1_INT_LATCHED_STS"
      sgroup "BMS1_INT_LATCHED_STS (at 0x4018)"
        set &access:&cmd_addr %l (0x8040180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_LATCHED_STS             = " "0 (VSENSE_FOR_R_NO_INT_LATCHED),1 (VSENSE_FOR_R_INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_LATCHED_STS               = " "0 (VSENSE_AVG_NO_INT_LATCHED),1 (VSENSE_AVG_INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_LATCHED_STS                = " "0 (SW_CC_THR_NO_INT_LATCHED),1 (SW_CC_THR_INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_LATCHED_STS                  = " "0 (OCV_THR_NO_INT_LATCHED),1 (OCV_THR_INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_LATCHED_STS             = " "0 (CHARGE_BEGIN_NO_INT_LATCHED),1 (CHARGE_BEGIN_INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_LATCHED_STS                 = " "0 (GOOD_OCV_NO_INT_LATCHED),1 (GOOD_OCV_INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_LATCHED_STS                = " "0 (OCV_FOR_R_NO_INT_LATCHED),1 (OCV_FOR_R_INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_LATCHED_STS                   = " "0 (CC_THR_NO_INT_LATCHED),1 (CC_THR_INTERRUPT_LATCHED)"
    tree.end
    tree "BMS1_INT_PENDING_STS"
      sgroup "BMS1_INT_PENDING_STS (at 0x4019)"
        set &access:&cmd_addr %l (0x8040190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_PENDING_STS             = " "0 (VSENSE_FOR_R_NO_INT_PENDING),1 (VSENSE_FOR_R_INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_PENDING_STS               = " "0 (VSENSE_AVG_NO_INT_PENDING),1 (VSENSE_AVG_INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_PENDING_STS                = " "0 (SW_CC_THR_NO_INT_PENDING),1 (SW_CC_THR_INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_PENDING_STS                  = " "0 (OCV_THR_NO_INT_PENDING),1 (OCV_THR_INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_PENDING_STS             = " "0 (CHARGE_BEGIN_NO_INT_PENDING),1 (CHARGE_BEGIN_INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_PENDING_STS                 = " "0 (GOOD_OCV_NO_INT_PENDING),1 (GOOD_OCV_INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_PENDING_STS                = " "0 (OCV_FOR_R_NO_INT_PENDING),1 (OCV_FOR_R_INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_PENDING_STS                   = " "0 (CC_THR_NO_INT_PENDING),1 (CC_THR_INTERRUPT_PENDING)"
    tree.end
    tree "BMS1_INT_MID_SEL"
      sgroup "BMS1_INT_MID_SEL (at 0x401a)"
        set &access:&cmd_addr %l (0x80401a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x401a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "BMS1_INT_PRIORITY"
      sgroup "BMS1_INT_PRIORITY (at 0x401b)"
        set &access:&cmd_addr %l (0x80401b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x401b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "BMS1_MODE_CTL"
      sgroup "BMS1_MODE_CTL (at 0x4040)"
        set &access:&cmd_addr %l (0x8040400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BMS_OVERRIDE_MODE_EN                     = " "0 (BMS_NORMAL_MODE),1 (BMS_OVERRIDE_MODE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_VCP_OVERRIDE                          = " "0 (VCP_OVERRIDE_DISABLED),1 (VCP_OVERRIDE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_VBAT                                  = " "0 (VBAT_IN_OVERRIDE_DISABLED),1 (VBAT_IN_OVERRIDE_ENABLED)"
    tree.end
    tree "BMS1_CC_DATA_CTL"
      sgroup "BMS1_CC_DATA_CTL (at 0x4042)"
        set &access:&cmd_addr %l (0x8040420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CC_MANUAL_RESET                          = " "0 (CC_RESET_BY_OCV),1 (CC_RESET_BY_WRITE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOLD_OREG_DATA                           = " "0 (HOLD_OREG_DATA_DISABLED),1 (HOLD_OREG_DATA_ENABLED)"
    tree.end
    tree "BMS1_CC_CLEAR_CTL"
      sgroup "BMS1_CC_CLEAR_CTL (at 0x4043)"
        set &access:&cmd_addr %l (0x8040430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLEAR_CC                                 = " "0 (CC_OPERATING),1 (CC_RESET)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CLEAR_SW_CC                              = " "0 (SW_CC_OPERATING),1 (SW_CC_RESET)"
    tree.end
    tree "BMS1_TOL_CTL"
      sgroup "BMS1_TOL_CTL (at 0x4044)"
        set &access:&cmd_addr %l (0x8040440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   OCV_TOL                                  = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   IBAT_TOL                                 = "
    tree.end
    tree "BMS1_EN_CTL1"
      sgroup "BMS1_EN_CTL1 (at 0x4046)"
        set &access:&cmd_addr %l (0x8040460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BMS_EN                                   = " "0 (BMS_DISABLED),1 (BMS_ENABLED)"
    tree.end
    tree "BMS1_OCV_USE_LOW_LIMIT_THR0"
      sgroup "BMS1_OCV_USE_LOW_LIMIT_THR0 (at 0x4048)"
        set &access:&cmd_addr %l (0x8040480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_USE_LOW_LIMIT_THR_7_0                = "
    tree.end
    tree "BMS1_OCV_USE_LOW_LIMIT_THR1"
      sgroup "BMS1_OCV_USE_LOW_LIMIT_THR1 (at 0x4049)"
        set &access:&cmd_addr %l (0x8040490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_USE_LOW_LIMIT_THR_15_8               = "
    tree.end
    tree "BMS1_OCV_USE_HIGH_LIMIT_THR0"
      sgroup "BMS1_OCV_USE_HIGH_LIMIT_THR0 (at 0x404a)"
        set &access:&cmd_addr %l (0x80404a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x404a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_USE_HIGH_LIMIT_THR_7_0               = "
    tree.end
    tree "BMS1_OCV_USE_HIGH_LIMIT_THR1"
      sgroup "BMS1_OCV_USE_HIGH_LIMIT_THR1 (at 0x404b)"
        set &access:&cmd_addr %l (0x80404b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x404b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_USE_HIGH_LIMIT_THR_15_8              = "
    tree.end
    tree "BMS1_OCV_USE_LIMIT_CTL"
      sgroup "BMS1_OCV_USE_LIMIT_CTL (at 0x404c)"
        set &access:&cmd_addr %l (0x80404c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x404c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OCV_USE_LIMIT_EN                         = " "0 (OCV_ALWAYS_USED),1 (OCV_ONLY_OUTSIDE_USE_LIMITS)"
    tree.end
    tree "BMS1_OCV_THR0"
      sgroup "BMS1_OCV_THR0 (at 0x4050)"
        set &access:&cmd_addr %l (0x8040500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_THR_7_0                              = "
    tree.end
    tree "BMS1_OCV_THR1"
      sgroup "BMS1_OCV_THR1 (at 0x4051)"
        set &access:&cmd_addr %l (0x8040510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_THR_15_8                             = "
    tree.end
    tree "BMS1_OCV_THR_CTL"
      sgroup "BMS1_OCV_THR_CTL (at 0x4053)"
        set &access:&cmd_addr %l (0x8040530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OCV_THR_EN                               = " "0 (OCV_THR_DISABLED),1 (OCV_THR_ENABLED)"
    tree.end
    tree "BMS1_S1_DELAY_CTL"
      sgroup "BMS1_S1_DELAY_CTL (at 0x405a)"
        set &access:&cmd_addr %l (0x80405a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x405a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SAMPLE_DELAY_LOW_LOAD                    = "
    tree.end
    tree "BMS1_S2_DELAY_CTL"
      sgroup "BMS1_S2_DELAY_CTL (at 0x405b)"
        set &access:&cmd_addr %l (0x80405b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x405b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SAMPLE_DELAY_HIGH_LOAD                   = "
    tree.end
    tree "BMS1_S6_DELAY_CTL"
      sgroup "BMS1_S6_DELAY_CTL (at 0x405c)"
        set &access:&cmd_addr %l (0x80405c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x405c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SAMPLE_DELAY_OVERRIDE                    = "
    tree.end
    tree "BMS1_S7_DELAY_CTL"
      sgroup "BMS1_S7_DELAY_CTL (at 0x405d)"
        set &access:&cmd_addr %l (0x80405d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x405d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SAMPLE_DELAY_PON_OCV                     = "
    tree.end
    tree "BMS1_S1_SAMP_AVG_CTL"
      sgroup "BMS1_S1_SAMP_AVG_CTL (at 0x4060)"
        set &access:&cmd_addr %l (0x8040600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SAMP_AVG_LOW_LOAD                        = " "0 (S1_SAMPLE_AVG_4),1 (S1_SAMPLE_AVG_8),2 (S1_SAMPLE_AVG_16),3 (S1_SAMPLE_AVG_32),4 (S1_SAMPLE_AVG_64),5 (S1_SAMPLE_AVG_128),6 (S1_SAMPLE_AVG_256),7 (S1_SAMPLE_AVG_512)"
    tree.end
    tree "BMS1_S2_SAMP_AVG_CTL"
      sgroup "BMS1_S2_SAMP_AVG_CTL (at 0x4061)"
        set &access:&cmd_addr %l (0x8040610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SAMP_AVG_HIGH_LOAD                       = " "0 (S2_SAMPLE_AVG_4),1 (S2_SAMPLE_AVG_8),2 (S2_SAMPLE_AVG_16),3 (S2_SAMPLE_AVG_32),4 (S2_SAMPLE_AVG_64),5 (S2_SAMPLE_AVG_128),6 (S2_SAMPLE_AVG_256),7 (S2_SAMPLE_AVG_512)"
    tree.end
    tree "BMS1_S3_SAMP_AVG_CTL"
      sgroup "BMS1_S3_SAMP_AVG_CTL (at 0x4062)"
        set &access:&cmd_addr %l (0x8040620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SAMP_AVG_MEAS_OCV                        = " "0 (S3_SAMPLE_AVG_4),1 (S3_SAMPLE_AVG_8),2 (S3_SAMPLE_AVG_16),3 (S3_SAMPLE_AVG_32),4 (S3_SAMPLE_AVG_64),5 (S3_SAMPLE_AVG_128),6 (S3_SAMPLE_AVG_256),7 (S3_SAMPLE_AVG_512)"
    tree.end
    tree "BMS1_S4_SAMP_AVG_CTL"
      sgroup "BMS1_S4_SAMP_AVG_CTL (at 0x4063)"
        set &access:&cmd_addr %l (0x8040630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SAMP_AVG_MEAS_RBAT                       = " "0 (S4_SAMPLE_AVG_4),1 (S4_SAMPLE_AVG_8),2 (S4_SAMPLE_AVG_16),3 (S4_SAMPLE_AVG_32),4 (S4_SAMPLE_AVG_64),5 (S4_SAMPLE_AVG_128),6 (S4_SAMPLE_AVG_256),7 (S4_SAMPLE_AVG_512)"
    tree.end
    tree "BMS1_S6_SAMP_AVG_CTL"
      sgroup "BMS1_S6_SAMP_AVG_CTL (at 0x4064)"
        set &access:&cmd_addr %l (0x8040640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SAMP_AVG_OVERRIDE                        = "
    tree.end
    tree "BMS1_S7_SAMP_AVG_CTL"
      sgroup "BMS1_S7_SAMP_AVG_CTL (at 0x4065)"
        set &access:&cmd_addr %l (0x8040650|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40650|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SAMP_AVG_PON_OCV                         = " "0 (S7_SAMPLE_AVG_4),1 (S7_SAMPLE_AVG_8),2 (S7_SAMPLE_AVG_16),3 (S7_SAMPLE_AVG_32),4 (S7_SAMPLE_AVG_64),5 (S7_SAMPLE_AVG_128),6 (S7_SAMPLE_AVG_256),7 (S7_SAMPLE_AVG_512)"
    tree.end
    tree "BMS1_S1_CNT_CTL"
      sgroup "BMS1_S1_CNT_CTL (at 0x406a)"
        set &access:&cmd_addr %l (0x80406a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x406a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   HIGH_CNT_THR_LOW_LOAD                    = " "0 (S1_HIGH_COUNT_1),1 (S1_HIGH_COUNT_2),2 (S1_HIGH_COUNT_4),3 (S1_HIGH_COUNT_8),4 (S1_HIGH_COUNT_16),5 (S1_HIGH_COUNT_32),6 (S1_HIGH_COUNT_128),7 (S1_HIGH_COUNT_256)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LOW_CNT_THR_LOW_LOAD                     = " "0 (S1_LOW_COUNT_1),1 (S1_LOW_COUNT_2),2 (S1_LOW_COUNT_4),3 (S1_LOW_COUNT_8),4 (S1_LOW_COUNT_16),5 (S1_LOW_COUNT_32),6 (S1_LOW_COUNT_128),7 (S1_LOW_COUNT_256)"
    tree.end
    tree "BMS1_S2_CNT_CTL1"
      sgroup "BMS1_S2_CNT_CTL1 (at 0x406c)"
        set &access:&cmd_addr %l (0x80406c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x406c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   HIGH_CNT_THR_HIGH_LOAD                   = " "0 (S2_HIGH_COUNT_1),1 (S2_HIGH_COUNT_2),2 (S2_HIGH_COUNT_4),3 (S2_HIGH_COUNT_8),4 (S2_HIGH_COUNT_16),5 (S2_HIGH_COUNT_32),6 (S2_HIGH_COUNT_128),7 (S2_HIGH_COUNT_256)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LOW_CNT_THR_HIGH_LOAD                    = " "0 (S2_LOW_COUNT_1),1 (S2_LOW_COUNT_2),2 (S2_LOW_COUNT_4),3 (S2_LOW_COUNT_8),4 (S2_LOW_COUNT_16),5 (S2_LOW_COUNT_32),6 (S2_LOW_COUNT_128),7 (S2_LOW_COUNT_256)"
    tree.end
    tree "BMS1_S2_CNT_CTL2"
      sgroup "BMS1_S2_CNT_CTL2 (at 0x406d)"
        set &access:&cmd_addr %l (0x80406d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x406d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   META_CNT_THR_HIGH_LOAD                   = " "0 (S2_META_HIGH_COUNT_1),1 (S2_META_HIGH_COUNT_2),2 (S2_META_HIGH_COUNT_4),3 (S2_META_HIGH_COUNT_8),4 (S2_META_HIGH_COUNT_16),5 (S2_META_HIGH_COUNT_32),6 (S2_META_HIGH_COUNT_128),7 (S2_META_HIGH_COUNT_256)"
    tree.end
    tree "BMS1_S3_CNT_CTL"
      sgroup "BMS1_S3_CNT_CTL (at 0x406f)"
        set &access:&cmd_addr %l (0x80406f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x406f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   META_CNT_THR_MEAS_OCV                    = " "0 (S3_META_COUNT_1),1 (S3_META_COUNT_2),2 (S3_META_COUNT_4),3 (S3_META_COUNT_8),4 (S3_META_COUNT_16),5 (S3_META_COUNT_32),6 (S3_META_COUNT_128),7 (S3_META_COUNT_256)"
    tree.end
    tree "BMS1_S4_CNT_CTL"
      sgroup "BMS1_S4_CNT_CTL (at 0x4071)"
        set &access:&cmd_addr %l (0x8040710|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40710|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   META_CNT_THR_MEAS_RBAT                   = " "0 (S4_META_COUNT_1),1 (S4_META_COUNT_2),2 (S4_META_COUNT_4),3 (S4_META_COUNT_8),4 (S4_META_COUNT_16),5 (S4_META_COUNT_32),6 (S4_META_COUNT_128),7 (S4_META_COUNT_256)"
    tree.end
    tree "BMS1_S1_VSENSE_THR_CTL"
      sgroup "BMS1_S1_VSENSE_THR_CTL (at 0x4073)"
        set &access:&cmd_addr %l (0x8040730|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40730|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_THR_LOW_LOAD                      = "
    tree.end
    tree "BMS1_S2_VSENSE_THR_CTL"
      sgroup "BMS1_S2_VSENSE_THR_CTL (at 0x4075)"
        set &access:&cmd_addr %l (0x8040750|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40750|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_THR_HIGH_LOAD                     = "
    tree.end
    tree "BMS1_S3_VSENSE_THR_CTL"
      sgroup "BMS1_S3_VSENSE_THR_CTL (at 0x4077)"
        set &access:&cmd_addr %l (0x8040770|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40770|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_THR_MEAS_OCV                      = "
    tree.end
    tree "BMS1_S4_VSENSE_THR_CTL"
      sgroup "BMS1_S4_VSENSE_THR_CTL (at 0x4079)"
        set &access:&cmd_addr %l (0x8040790|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40790|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_THR_MEAS_RBAT                     = "
    tree.end
    tree "BMS1_CC_THR0"
      sgroup "BMS1_CC_THR0 (at 0x407a)"
        set &access:&cmd_addr %l (0x80407a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x407a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CC_THR_7_0                               = "
    tree.end
    tree "BMS1_CC_THR1"
      sgroup "BMS1_CC_THR1 (at 0x407b)"
        set &access:&cmd_addr %l (0x80407b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x407b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CC_THR_15_8                              = "
    tree.end
    tree "BMS1_CC_THR2"
      sgroup "BMS1_CC_THR2 (at 0x407c)"
        set &access:&cmd_addr %l (0x80407c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x407c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CC_THR_23_16                             = "
    tree.end
    tree "BMS1_CC_THR3"
      sgroup "BMS1_CC_THR3 (at 0x407d)"
        set &access:&cmd_addr %l (0x80407d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x407d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CC_THR_31_24                             = "
    tree.end
    tree "BMS1_CC_THR4"
      sgroup "BMS1_CC_THR4 (at 0x407e)"
        set &access:&cmd_addr %l (0x80407e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x407e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CC_THR_35_32                             = "
    tree.end
    tree "BMS1_OCV_FOR_R_DATA0"
      sgroup "BMS1_OCV_FOR_R_DATA0 (at 0x4080)"
        set &access:&cmd_addr %l (0x8040800|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40800|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_FOR_R_7_0                            = "
    tree.end
    tree "BMS1_OCV_FOR_R_DATA1"
      sgroup "BMS1_OCV_FOR_R_DATA1 (at 0x4081)"
        set &access:&cmd_addr %l (0x8040810|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40810|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_FOR_R_15_8                           = "
    tree.end
    tree "BMS1_VSENSE_FOR_R_DATA0"
      sgroup "BMS1_VSENSE_FOR_R_DATA0 (at 0x4082)"
        set &access:&cmd_addr %l (0x8040820|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40820|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_FOR_R_7_0                         = "
    tree.end
    tree "BMS1_VSENSE_FOR_R_DATA1"
      sgroup "BMS1_VSENSE_FOR_R_DATA1 (at 0x4083)"
        set &access:&cmd_addr %l (0x8040830|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40830|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_FOR_R_15_8                        = "
    tree.end
    tree "BMS1_VBAT_FOR_R_DATA0"
      sgroup "BMS1_VBAT_FOR_R_DATA0 (at 0x4084)"
        set &access:&cmd_addr %l (0x8040840|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40840|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VBAT_FOR_R_7_0                           = "
    tree.end
    tree "BMS1_VBAT_FOR_R_DATA1"
      sgroup "BMS1_VBAT_FOR_R_DATA1 (at 0x4085)"
        set &access:&cmd_addr %l (0x8040850|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40850|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VBAT_FOR_R_15_8                          = "
    tree.end
    tree "BMS1_CC_DATA0"
      sgroup "BMS1_CC_DATA0 (at 0x408a)"
        set &access:&cmd_addr %l (0x80408a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x408a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CC_DATA_7_0                              = "
    tree.end
    tree "BMS1_CC_DATA1"
      sgroup "BMS1_CC_DATA1 (at 0x408b)"
        set &access:&cmd_addr %l (0x80408b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x408b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CC_DATA_15_8                             = "
    tree.end
    tree "BMS1_CC_DATA2"
      sgroup "BMS1_CC_DATA2 (at 0x408c)"
        set &access:&cmd_addr %l (0x80408c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x408c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CC_DATA_23_16                            = "
    tree.end
    tree "BMS1_CC_DATA3"
      sgroup "BMS1_CC_DATA3 (at 0x408d)"
        set &access:&cmd_addr %l (0x80408d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x408d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CC_DATA_31_24                            = "
    tree.end
    tree "BMS1_CC_DATA4"
      sgroup "BMS1_CC_DATA4 (at 0x408e)"
        set &access:&cmd_addr %l (0x80408e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x408e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CC_DATA_35_32                            = "
    tree.end
    tree "BMS1_OCV_FOR_SOC_DATA0"
      sgroup "BMS1_OCV_FOR_SOC_DATA0 (at 0x4090)"
        set &access:&cmd_addr %l (0x8040900|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40900|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_FOR_SOC_7_0                          = "
    tree.end
    tree "BMS1_OCV_FOR_SOC_DATA1"
      sgroup "BMS1_OCV_FOR_SOC_DATA1 (at 0x4091)"
        set &access:&cmd_addr %l (0x8040910|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40910|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OCV_FOR_SOC_15_8                         = "
    tree.end
    tree "BMS1_VSENSE_PON_DATA0"
      sgroup "BMS1_VSENSE_PON_DATA0 (at 0x4094)"
        set &access:&cmd_addr %l (0x8040940|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40940|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_PON_7_0                           = "
    tree.end
    tree "BMS1_VSENSE_PON_DATA1"
      sgroup "BMS1_VSENSE_PON_DATA1 (at 0x4095)"
        set &access:&cmd_addr %l (0x8040950|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40950|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_PON_15_8                          = "
    tree.end
    tree "BMS1_VSENSE_AVG_DATA0"
      sgroup "BMS1_VSENSE_AVG_DATA0 (at 0x4098)"
        set &access:&cmd_addr %l (0x8040980|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40980|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_AVG_7_0                           = "
    tree.end
    tree "BMS1_VSENSE_AVG_DATA1"
      sgroup "BMS1_VSENSE_AVG_DATA1 (at 0x4099)"
        set &access:&cmd_addr %l (0x8040990|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40990|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSENSE_AVG_15_8                          = "
    tree.end
    tree "BMS1_VBAT_AVG_DATA0"
      sgroup "BMS1_VBAT_AVG_DATA0 (at 0x409e)"
        set &access:&cmd_addr %l (0x80409e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x409e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VBAT_AVG_7_0                             = "
    tree.end
    tree "BMS1_VBAT_AVG_DATA1"
      sgroup "BMS1_VBAT_AVG_DATA1 (at 0x409f)"
        set &access:&cmd_addr %l (0x80409f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x409f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VBAT_AVG_15_8                            = "
    tree.end
    tree "BMS1_SW_CC_THR0"
      sgroup "BMS1_SW_CC_THR0 (at 0x40a0)"
        set &access:&cmd_addr %l (0x8040a00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40a00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_CC_THR_7_0                            = "
    tree.end
    tree "BMS1_SW_CC_THR1"
      sgroup "BMS1_SW_CC_THR1 (at 0x40a1)"
        set &access:&cmd_addr %l (0x8040a10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40a10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_CC_THR_15_8                           = "
    tree.end
    tree "BMS1_SW_CC_THR2"
      sgroup "BMS1_SW_CC_THR2 (at 0x40a2)"
        set &access:&cmd_addr %l (0x8040a20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40a20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_CC_THR_23_16                          = "
    tree.end
    tree "BMS1_SW_CC_THR3"
      sgroup "BMS1_SW_CC_THR3 (at 0x40a3)"
        set &access:&cmd_addr %l (0x8040a30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40a30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_CC_THR_31_24                          = "
    tree.end
    tree "BMS1_SW_CC_THR4"
      sgroup "BMS1_SW_CC_THR4 (at 0x40a4)"
        set &access:&cmd_addr %l (0x8040a40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40a40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SW_CC_THR_35_32                          = "
    tree.end
    tree "BMS1_SW_CC_DATA0"
      sgroup "BMS1_SW_CC_DATA0 (at 0x40a8)"
        set &access:&cmd_addr %l (0x8040a80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40a80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_CC_DATA_7_0                           = "
    tree.end
    tree "BMS1_SW_CC_DATA1"
      sgroup "BMS1_SW_CC_DATA1 (at 0x40a9)"
        set &access:&cmd_addr %l (0x8040a90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40a90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_CC_DATA_15_8                          = "
    tree.end
    tree "BMS1_SW_CC_DATA2"
      sgroup "BMS1_SW_CC_DATA2 (at 0x40aa)"
        set &access:&cmd_addr %l (0x8040aa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40aa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_CC_DATA_23_16                         = "
    tree.end
    tree "BMS1_SW_CC_DATA3"
      sgroup "BMS1_SW_CC_DATA3 (at 0x40ab)"
        set &access:&cmd_addr %l (0x8040ab0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40ab0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_CC_DATA_31_24                         = "
    tree.end
    tree "BMS1_SW_CC_DATA4"
      sgroup "BMS1_SW_CC_DATA4 (at 0x40ac)"
        set &access:&cmd_addr %l (0x8040ac0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40ac0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SW_CC_DATA_35_32                         = "
    tree.end
    tree "BMS1_BMS_DATA_REG_0"
      sgroup "BMS1_BMS_DATA_REG_0 (at 0x40b0)"
        set &access:&cmd_addr %l (0x8040b00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_0                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_1"
      sgroup "BMS1_BMS_DATA_REG_1 (at 0x40b1)"
        set &access:&cmd_addr %l (0x8040b10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_1                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_2"
      sgroup "BMS1_BMS_DATA_REG_2 (at 0x40b2)"
        set &access:&cmd_addr %l (0x8040b20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_2                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_3"
      sgroup "BMS1_BMS_DATA_REG_3 (at 0x40b3)"
        set &access:&cmd_addr %l (0x8040b30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_3                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_4"
      sgroup "BMS1_BMS_DATA_REG_4 (at 0x40b4)"
        set &access:&cmd_addr %l (0x8040b40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_4                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_5"
      sgroup "BMS1_BMS_DATA_REG_5 (at 0x40b5)"
        set &access:&cmd_addr %l (0x8040b50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_5                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_6"
      sgroup "BMS1_BMS_DATA_REG_6 (at 0x40b6)"
        set &access:&cmd_addr %l (0x8040b60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_6                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_7"
      sgroup "BMS1_BMS_DATA_REG_7 (at 0x40b7)"
        set &access:&cmd_addr %l (0x8040b70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_7                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_8"
      sgroup "BMS1_BMS_DATA_REG_8 (at 0x40b8)"
        set &access:&cmd_addr %l (0x8040b80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_8                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_9"
      sgroup "BMS1_BMS_DATA_REG_9 (at 0x40b9)"
        set &access:&cmd_addr %l (0x8040b90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40b90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_9                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_A"
      sgroup "BMS1_BMS_DATA_REG_A (at 0x40ba)"
        set &access:&cmd_addr %l (0x8040ba0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40ba0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_A                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_B"
      sgroup "BMS1_BMS_DATA_REG_B (at 0x40bb)"
        set &access:&cmd_addr %l (0x8040bb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40bb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_B                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_C"
      sgroup "BMS1_BMS_DATA_REG_C (at 0x40bc)"
        set &access:&cmd_addr %l (0x8040bc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40bc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_C                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_D"
      sgroup "BMS1_BMS_DATA_REG_D (at 0x40bd)"
        set &access:&cmd_addr %l (0x8040bd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40bd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_D                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_E"
      sgroup "BMS1_BMS_DATA_REG_E (at 0x40be)"
        set &access:&cmd_addr %l (0x8040be0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40be0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_E                           = "
    tree.end
    tree "BMS1_BMS_DATA_REG_F"
      sgroup "BMS1_BMS_DATA_REG_F (at 0x40bf)"
        set &access:&cmd_addr %l (0x8040bf0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40bf0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BMS_DATA_REG_F                           = "
    tree.end
    tree "BMS1_SEC_ACCESS"
      sgroup "BMS1_SEC_ACCESS (at 0x40d0)"
        set &access:&cmd_addr %l (0x8040d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BMS1_PERPH_RESET_CTL1"
      sgroup "BMS1_PERPH_RESET_CTL1 (at 0x40d8)"
        set &access:&cmd_addr %l (0x8040d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "BMS1_PERPH_RESET_CTL2"
      sgroup "BMS1_PERPH_RESET_CTL2 (at 0x40d9)"
        set &access:&cmd_addr %l (0x8040d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BMS1_PERPH_RESET_CTL3"
      sgroup "BMS1_PERPH_RESET_CTL3 (at 0x40da)"
        set &access:&cmd_addr %l (0x8040da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BMS1_PERPH_RESET_CTL4"
      sgroup "BMS1_PERPH_RESET_CTL4 (at 0x40db)"
        set &access:&cmd_addr %l (0x8040db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BMS1_INT_TEST1"
      sgroup "BMS1_INT_TEST1 (at 0x40e0)"
        set &access:&cmd_addr %l (0x8040e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "BMS1_INT_TEST_VAL"
      sgroup "BMS1_INT_TEST_VAL (at 0x40e1)"
        set &access:&cmd_addr %l (0x8040e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VSENSE_FOR_R_INT_TEST_VAL                = " "0 (VSENSE_FOR_R_INT_TEST_FALSE),1 (VSENSE_FOR_R_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VSENSE_AVG_INT_TEST_VAL                  = " "0 (VSENSE_AVG_INT_TEST_FALSE),1 (VSENSE_AVG_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SW_CC_THR_INT_TEST_VAL                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OCV_THR_INT_TEST_VAL                     = " "0 (OCV_THR_INT_TEST_FALSE),1 (OCV_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGE_BEGIN_INT_TEST_VAL                = " "0 (CHARGE_BEGIN_INT_TEST_FALSE),1 (CHARGE_BEGIN_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GOOD_OCV_INT_TEST_VAL                    = " "0 (GOOD_OCV_INT_TEST_FALSE),1 (GOOD_OCV_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCV_FOR_R_INT_TEST_VAL                   = " "0 (OCV_FOR_R_INT_TEST_FALSE),1 (OCV_FOR_R_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CC_THR_INT_TEST_VAL                      = " "0 (CC_THR_INT_TEST_FALSE),1 (CC_THR_INT_TEST_TRUE)"
    tree.end
    tree "BMS1_TEST1"
      sgroup "BMS1_TEST1 (at 0x40e2)"
        set &access:&cmd_addr %l (0x8040e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SEL_FSM                                  = " "0 (OCV_SETTLE_FSM),1 (ADC_REQ_FSM),2 (reserved),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST_SEL                                = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "BSI"
  tree "BSI"
    tree "BSI_REVISION1"
      sgroup "BSI_REVISION1 (at 0x1b00)"
        set &access:&cmd_addr %l (0x801b000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BSI_REVISION2"
      sgroup "BSI_REVISION2 (at 0x1b01)"
        set &access:&cmd_addr %l (0x801b010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BSI_PERPH_TYPE"
      sgroup "BSI_PERPH_TYPE (at 0x1b04)"
        set &access:&cmd_addr %l (0x801b040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BSI_PERPH_SUBTYPE"
      sgroup "BSI_PERPH_SUBTYPE (at 0x1b05)"
        set &access:&cmd_addr %l (0x801b050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BSI_BSI_STS"
      sgroup "BSI_BSI_STS (at 0x1b08)"
        set &access:&cmd_addr %l (0x801b080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BSI_ACTIVE                               = " "0 (BSI_NOT_ACTIVE),1 (BSI_ACTIVE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MIPI_BIF_ERR_FLAG                        = " "0 (OK),1 (ERROR)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MIPI_BIF_TX_BUSY                         = " "0 (TX_IDLE),1 (TX_BUSY)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_RX_BUSY                         = " "0 (RX_IDLE),1 (RX_BUSY)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_TX_GO_STATUS                    = " "0 (TX_GO_CLEAR),1 (TX_GO_SET)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_RX_FLOW_STATUS                  = " "0 (NO_RX_DATA),1 (RX_DATA_AVAIL)"
    tree.end
    tree "BSI_MIPI_BIF_FSM_STS"
      sgroup "BSI_MIPI_BIF_FSM_STS (at 0x1b09)"
        set &access:&cmd_addr %l (0x801b090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MIPI_BIF_TX_FSM                          = " "0 (TX_IDLE),1 (TX_DATA_STATE),2 (TX_STOP),3 (TX_BAT_IRQ),4 (TX_PUL),5 (TX_WAIT_CLR_ERR),6 (reserved),7 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   MIPI_BIF_RX_FSM                          = " "0 (RX_IDLE),1 (RX_BCF),2 (RX_NOT_BCF),3 (RX_DATA_STATE),4 (RX_STOP),5 (RX_BAT_IRQ),6 (RX_WAIT_CLR_ERR),7 (reserved)"
    tree.end
    tree "BSI_INT_RT_STS"
      sgroup "BSI_INT_RT_STS (at 0x1b10)"
        set &access:&cmd_addr %l (0x801b100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_RT_STS                   = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_RT_STS                   = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_RT_STS                  = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "BSI_INT_SET_TYPE"
      sgroup "BSI_INT_SET_TYPE (at 0x1b11)"
        set &access:&cmd_addr %l (0x801b110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_SET_TYPE                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_SET_TYPE                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_SET_TYPE                = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "BSI_INT_POLARITY_HIGH"
      sgroup "BSI_INT_POLARITY_HIGH (at 0x1b12)"
        set &access:&cmd_addr %l (0x801b120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_POLARITY_HIGH            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_POLARITY_HIGH            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_POLARITY_HIGH           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "BSI_INT_POLARITY_LOW"
      sgroup "BSI_INT_POLARITY_LOW (at 0x1b13)"
        set &access:&cmd_addr %l (0x801b130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_POLARITY_LOW             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_POLARITY_LOW             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_POLARITY_LOW            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "BSI_INT_LATCHED_CLR"
      sgroup "BSI_INT_LATCHED_CLR (at 0x1b14)"
        set &access:&cmd_addr %l (0x801b140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_LATCHED_CLR             = " "0, 1"
    tree.end
    tree "BSI_INT_EN_SET"
      sgroup "BSI_INT_EN_SET (at 0x1b15)"
        set &access:&cmd_addr %l (0x801b150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BSI_INT_EN_CLR"
      sgroup "BSI_INT_EN_CLR (at 0x1b16)"
        set &access:&cmd_addr %l (0x801b160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BSI_INT_LATCHED_STS"
      sgroup "BSI_INT_LATCHED_STS (at 0x1b18)"
        set &access:&cmd_addr %l (0x801b180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "BSI_INT_PENDING_STS"
      sgroup "BSI_INT_PENDING_STS (at 0x1b19)"
        set &access:&cmd_addr %l (0x801b190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "BSI_INT_MID_SEL"
      sgroup "BSI_INT_MID_SEL (at 0x1b1a)"
        set &access:&cmd_addr %l (0x801b1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "BSI_INT_PRIORITY"
      sgroup "BSI_INT_PRIORITY (at 0x1b1b)"
        set &access:&cmd_addr %l (0x801b1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "BSI_BSI_EN"
      sgroup "BSI_BSI_EN (at 0x1b46)"
        set &access:&cmd_addr %l (0x801b460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BSI_EN                                   = " "0 (BSI_DISABLED),1 (BSI_ENABLED)"
    tree.end
    tree "BSI_MIPI_BIF_ERR_CLEAR"
      sgroup "BSI_MIPI_BIF_ERR_CLEAR (at 0x1b4f)"
        set &access:&cmd_addr %l (0x801b4f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b4f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_CLEAR_ERR                       = " "0, 1"
    tree.end
    tree "BSI_MIPI_BIF_FSM_RESET"
      sgroup "BSI_MIPI_BIF_FSM_RESET (at 0x1b50)"
        set &access:&cmd_addr %l (0x801b500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_FSM_RESET                       = " "0, 1"
    tree.end
    tree "BSI_MIPI_BIF_FORCE_BCL_LOW"
      sgroup "BSI_MIPI_BIF_FORCE_BCL_LOW (at 0x1b51)"
        set &access:&cmd_addr %l (0x801b510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_FORCE_BCL_LOW                   = " "0 (BCL_RELEASED),1 (BCL_FORCED_LOW)"
    tree.end
    tree "BSI_MIPI_BIF_TAU_CFG"
      sgroup "BSI_MIPI_BIF_TAU_CFG (at 0x1b52)"
        set &access:&cmd_addr %l (0x801b520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MIPI_BIF_SAMPLE_RATE                     = " "0 (SAMPLE_RATE_4X),1 (SAMPLE_RATE_8X)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   MIPI_BIF_SEL_TAU                         = " "0 (TAU_150US),1 (TAU_122US),2 (TAU_62US),3 (TAU_32US),4 (TAU_16US),5 (TAU_8US),6 (TAU_4US),7 (TAU_2US)"
    tree.end
    tree "BSI_MIPI_BIF_MODE"
      sgroup "BSI_MIPI_BIF_MODE (at 0x1b53)"
        set &access:&cmd_addr %l (0x801b530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MIPI_BIF_TX_PULSE_MODE                   = " "0 (TX_DATA_MODE),1 (TX_PULSE_MODE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MIPI_BIF_RX_PULSE_MODE                   = " "0 (RX_DATA_MODE),1 (RX_PULSE_MODE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_PULSE_TYPE                   = " "0 (TX_PULSE_1_TAU),1 (TX_PULSE_240US)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_DATA_FORMAT                  = " "0 (RX_11BIT_MODE),1 (RX_17BIT_MODE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_TX_DATA_FORMAT                  = " "0 (TX_11BIT_MODE),1 (TX_17BIT_MODE)"
    tree.end
    tree "BSI_MIPI_BIF_EN"
      sgroup "BSI_MIPI_BIF_EN (at 0x1b54)"
        set &access:&cmd_addr %l (0x801b540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_TX_EN                           = " "0 (TX_DISABLED),1 (TX_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   MIPI_BIF_RX_EN                           = " "0 (RX_DISABLED),1 (RX_ENABLED)"
    tree.end
    tree "BSI_MIPI_BIF_CFG"
      sgroup "BSI_MIPI_BIF_CFG (at 0x1b55)"
        set &access:&cmd_addr %l (0x801b550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_PU_EN                           = " "0 (PULLUP_DISABLED),1 (PULLUP_ENABLED)"
    tree.end
    tree "BSI_MIPI_BIF_DATA_TX_0"
      sgroup "BSI_MIPI_BIF_DATA_TX_0 (at 0x1b5a)"
        set &access:&cmd_addr %l (0x801b5a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b5a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIPI_BIF_DATA_TX                         = "
    tree.end
    tree "BSI_MIPI_BIF_DATA_TX_1"
      sgroup "BSI_MIPI_BIF_DATA_TX_1 (at 0x1b5b)"
        set &access:&cmd_addr %l (0x801b5b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b5b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIPI_BIF_DATA_TX                         = "
    tree.end
    tree "BSI_MIPI_BIF_DATA_TX_2"
      sgroup "BSI_MIPI_BIF_DATA_TX_2 (at 0x1b5c)"
        set &access:&cmd_addr %l (0x801b5c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b5c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_DATA_TX                         = " "0, 1"
    tree.end
    tree "BSI_MIPI_BIF_TX_CTL"
      sgroup "BSI_MIPI_BIF_TX_CTL (at 0x1b5d)"
        set &access:&cmd_addr %l (0x801b5d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b5d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_TX_GO                           = " "0, 1"
    tree.end
    tree "BSI_MIPI_BIF_DATA_RX_0"
      sgroup "BSI_MIPI_BIF_DATA_RX_0 (at 0x1b60)"
        set &access:&cmd_addr %l (0x801b600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIPI_BIF_DATA_RX                         = "
    tree.end
    tree "BSI_MIPI_BIF_DATA_RX_1"
      sgroup "BSI_MIPI_BIF_DATA_RX_1 (at 0x1b61)"
        set &access:&cmd_addr %l (0x801b610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIPI_BIF_DATA_RX                         = "
    tree.end
    tree "BSI_MIPI_BIF_DATA_RX_2"
      sgroup "BSI_MIPI_BIF_DATA_RX_2 (at 0x1b62)"
        set &access:&cmd_addr %l (0x801b620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MIPI_BIF_DATA_LOOPBACK_TAG               = " "0 (NORMAL_DATA),1 (LOOPBACK_DATA)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_DATA_RX                         = " "0, 1"
    tree.end
    tree "BSI_MIPI_BIF_BCL_RAW"
      sgroup "BSI_MIPI_BIF_BCL_RAW (at 0x1b6d)"
        set &access:&cmd_addr %l (0x801b6d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b6d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_BCL_RAW                         = " "0 (BCL_STATE_LOW),1 (BCL_STATE_HIGH)"
    tree.end
    tree "BSI_MIPI_BIF_ERROR"
      sgroup "BSI_MIPI_BIF_ERROR (at 0x1b70)"
        set &access:&cmd_addr %l (0x801b700|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b700|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MIPI_BIF_ERROR_CODE                      = "
    tree.end
    tree "BSI_SEC_ACCESS"
      sgroup "BSI_SEC_ACCESS (at 0x1bd0)"
        set &access:&cmd_addr %l (0x801bd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BSI_PERPH_RESET_CTL2"
      sgroup "BSI_PERPH_RESET_CTL2 (at 0x1bd9)"
        set &access:&cmd_addr %l (0x801bd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "BSI_PERPH_RESET_CTL3"
      sgroup "BSI_PERPH_RESET_CTL3 (at 0x1bda)"
        set &access:&cmd_addr %l (0x801bda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "BSI_PERPH_RESET_CTL4"
      sgroup "BSI_PERPH_RESET_CTL4 (at 0x1bdb)"
        set &access:&cmd_addr %l (0x801bdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BSI_BSI_SPARE"
      sgroup "BSI_BSI_SPARE (at 0x1bdf)"
        set &access:&cmd_addr %l (0x801bdf0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bdf0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "BSI_INT_TEST1"
      sgroup "BSI_INT_TEST1 (at 0x1be0)"
        set &access:&cmd_addr %l (0x801be00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "BSI_INT_TEST_VAL"
      sgroup "BSI_INT_TEST_VAL (at 0x1be1)"
        set &access:&cmd_addr %l (0x801be10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_VAL                      = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_VAL                      = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "BSI_TEST1"
      sgroup "BSI_TEST1 (at 0x1be2)"
        set &access:&cmd_addr %l (0x801be20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DTEST4_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DTEST3_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DTEST2_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DTEST1_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "BSI_TEST2"
      sgroup "BSI_TEST2 (at 0x1be3)"
        set &access:&cmd_addr %l (0x801be30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   BSI_DTEST_SEL                            = "
    tree.end
  tree.end
tree.end
tree "BUA"
  tree "BUA"
    tree "BUA_REVISION1"
      sgroup "BUA_REVISION1 (at 0x1c00)"
        set &access:&cmd_addr %l (0x801c000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BUA_REVISION2"
      sgroup "BUA_REVISION2 (at 0x1c01)"
        set &access:&cmd_addr %l (0x801c010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BUA_PERPH_TYPE"
      sgroup "BUA_PERPH_TYPE (at 0x1c04)"
        set &access:&cmd_addr %l (0x801c040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BUA_PERPH_SUBTYPE"
      sgroup "BUA_PERPH_SUBTYPE (at 0x1c05)"
        set &access:&cmd_addr %l (0x801c050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BUA_STATUS1"
      sgroup "BUA_STATUS1 (at 0x1c08)"
        set &access:&cmd_addr %l (0x801c080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BUA_OK                                   = " "0 (BUA_DISABLED),1 (BUA_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_GONE_DETECTED                       = " "0 (BAT_PRESENT),1 (BATT_GONE)"
    tree.end
    tree "BUA_STATUS2"
      sgroup "BUA_STATUS2 (at 0x1c09)"
        set &access:&cmd_addr %l (0x801c090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC4_ALARM_DETECTED                     = " "0 (ALARM_NOT_DETECTED),1 (ALARM_DETECTED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC3_ALARM_DETECTED                     = " "0 (ALARM_NOT_DETECTED),1 (ALARM_DETECTED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC2_ALARM_DETECTED                     = " "0 (ALARM_NOT_DETECTED),1 (ALARM_DETECTED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   UICC1_ALARM_DETECTED                     = " "0 (ALARM_NOT_DETECTED),1 (ALARM_DETECTED)"
    tree.end
    tree "BUA_INT_RT_STS"
      sgroup "BUA_INT_RT_STS (at 0x1c10)"
        set &access:&cmd_addr %l (0x801c100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARM_STS                           = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "BUA_INT_SET_TYPE"
      sgroup "BUA_INT_SET_TYPE (at 0x1c11)"
        set &access:&cmd_addr %l (0x801c110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_TYPE                         = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_TYPE                         = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_TYPE                         = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_TYPE                         = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARM_TYPE                          = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "BUA_INT_POLARITY_HIGH"
      sgroup "BUA_INT_POLARITY_HIGH (at 0x1c12)"
        set &access:&cmd_addr %l (0x801c120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_HIGH                         = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_HIGH                         = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_HIGH                         = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_HIGH                         = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARM_HIGH                          = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "BUA_INT_POLARITY_LOW"
      sgroup "BUA_INT_POLARITY_LOW (at 0x1c13)"
        set &access:&cmd_addr %l (0x801c130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_LOW                          = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_LOW                          = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_LOW                          = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_LOW                          = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARM_LOW                           = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "BUA_INT_LATCHED_CLR"
      sgroup "BUA_INT_LATCHED_CLR (at 0x1c14)"
        set &access:&cmd_addr %l (0x801c140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARM_LATCHED_CLR                   = " "0, 1"
    tree.end
    tree "BUA_INT_EN_SET"
      sgroup "BUA_INT_EN_SET (at 0x1c15)"
        set &access:&cmd_addr %l (0x801c150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARM_EN_SET                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BUA_INT_EN_CLR"
      sgroup "BUA_INT_EN_CLR (at 0x1c16)"
        set &access:&cmd_addr %l (0x801c160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARM_EN_CLR                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BUA_INT_LATCHED_STS"
      sgroup "BUA_INT_LATCHED_STS (at 0x1c18)"
        set &access:&cmd_addr %l (0x801c180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARM_LATCHED_STS                   = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "BUA_INT_PENDING_STS"
      sgroup "BUA_INT_PENDING_STS (at 0x1c19)"
        set &access:&cmd_addr %l (0x801c190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARMPENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "BUA_INT_MID_SEL"
      sgroup "BUA_INT_MID_SEL (at 0x1c1a)"
        set &access:&cmd_addr %l (0x801c1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "BUA_INT_PRIORITY"
      sgroup "BUA_INT_PRIORITY (at 0x1c1b)"
        set &access:&cmd_addr %l (0x801c1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "BUA_BUA_CTL1"
      sgroup "BUA_BUA_CTL1 (at 0x1c40)"
        set &access:&cmd_addr %l (0x801c400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   BATT_RMV_DEB                             = " "0 (SCLK_0_TO_1),1 (SCLK_1_TO_2),2 (SCLK_2_TO_3),3 (SCLK_5_TO_6),4 (SCLK_8_TO_9),5 (SCLK_11_TO_12),6 (SCLK_15_TO_16),7 (SCLK_31_TO_32)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LDO_SHUTDOWN_DELAY                       = " "0 (SCLK2P5),1 (SCLK3P5),2 (SCLK4P5),3 (SCLK5P5),4 (SCLK6P5),5 (SCLK8P5),6 (SCLK9P5),7 (SCLK11P5)"
    tree.end
    tree "BUA_EN_CTL1"
      sgroup "BUA_EN_CTL1 (at 0x1c46)"
        set &access:&cmd_addr %l (0x801c460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BUA_EN                                   = " "0 (BUA_DISABLED),1 (BUA_ENABLED)"
    tree.end
    tree "BUA_SEC_ACCESS"
      sgroup "BUA_SEC_ACCESS (at 0x1cd0)"
        set &access:&cmd_addr %l (0x801cd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BUA_PERPH_RESET_CTL1"
      sgroup "BUA_PERPH_RESET_CTL1 (at 0x1cd8)"
        set &access:&cmd_addr %l (0x801cd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "BUA_PERPH_RESET_CTL2"
      sgroup "BUA_PERPH_RESET_CTL2 (at 0x1cd9)"
        set &access:&cmd_addr %l (0x801cd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "BUA_PERPH_RESET_CTL3"
      sgroup "BUA_PERPH_RESET_CTL3 (at 0x1cda)"
        set &access:&cmd_addr %l (0x801cda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "BUA_PERPH_RESET_CTL4"
      sgroup "BUA_PERPH_RESET_CTL4 (at 0x1cdb)"
        set &access:&cmd_addr %l (0x801cdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BUA_INT_TEST1"
      sgroup "BUA_INT_TEST1 (at 0x1ce0)"
        set &access:&cmd_addr %l (0x801ce00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ce00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "BUA_INT_TEST_VAL"
      sgroup "BUA_INT_TEST_VAL (at 0x1ce1)"
        set &access:&cmd_addr %l (0x801ce10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ce10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UICC4_ALARM_TEST_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   UICC3_ALARM_TEST_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   UICC2_ALARM_TEST_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   UICC1_ALARM_TEST_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_ALARM_TEST_VAL                      = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "BUA_TEST1"
      sgroup "BUA_TEST1 (at 0x1ce2)"
        set &access:&cmd_addr %l (0x801ce20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ce20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
  tree.end
tree.end
tree "BUS"
  tree "BUS"
    tree "BUS_REVISION1"
      sgroup "BUS_REVISION1 (at 0x400)"
        set &access:&cmd_addr %l (0x8004000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BUS_REVISION2"
      sgroup "BUS_REVISION2 (at 0x401)"
        set &access:&cmd_addr %l (0x8004010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BUS_PERPH_TYPE"
      sgroup "BUS_PERPH_TYPE (at 0x404)"
        set &access:&cmd_addr %l (0x8004040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BUS_PERPH_SUBTYPE"
      sgroup "BUS_PERPH_SUBTYPE (at 0x405)"
        set &access:&cmd_addr %l (0x8004050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BUS_STATUS1"
      sgroup "BUS_STATUS1 (at 0x408)"
        set &access:&cmd_addr %l (0x8004080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   INTBUS_ARB_GNT                           = "
    tree.end
    tree "BUS_TIMEOUT"
      sgroup "BUS_TIMEOUT (at 0x444)"
        set &access:&cmd_addr %l (0x8004440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   TIMEOUT_MANT                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TIMEOUT_EXP                              = "
    tree.end
    tree "BUS_SEC_ACCESS"
      sgroup "BUS_SEC_ACCESS (at 0x4d0)"
        set &access:&cmd_addr %l (0x8004d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BUS_PERPH_RESET_CTL2"
      sgroup "BUS_PERPH_RESET_CTL2 (at 0x4d9)"
        set &access:&cmd_addr %l (0x8004d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BUS_PERPH_RESET_CTL3"
      sgroup "BUS_PERPH_RESET_CTL3 (at 0x4da)"
        set &access:&cmd_addr %l (0x8004da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BUS_PERPH_RESET_CTL4"
      sgroup "BUS_PERPH_RESET_CTL4 (at 0x4db)"
        set &access:&cmd_addr %l (0x8004db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BUS_TEST1"
      sgroup "BUS_TEST1 (at 0x4e2)"
        set &access:&cmd_addr %l (0x8004e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST_EN                                 = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
  tree.end
tree.end
tree "CLK_DIST"
  tree "CLK_DIST"
    tree "CLK_DIST_REVISION1"
      sgroup "CLK_DIST_REVISION1 (at 0x5900)"
        set &access:&cmd_addr %l (0x8059000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "CLK_DIST_REVISION2"
      sgroup "CLK_DIST_REVISION2 (at 0x5901)"
        set &access:&cmd_addr %l (0x8059010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "CLK_DIST_REVISION3"
      sgroup "CLK_DIST_REVISION3 (at 0x5902)"
        set &access:&cmd_addr %l (0x8059020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "CLK_DIST_REVISION4"
      sgroup "CLK_DIST_REVISION4 (at 0x5903)"
        set &access:&cmd_addr %l (0x8059030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "CLK_DIST_PERPH_TYPE"
      sgroup "CLK_DIST_PERPH_TYPE (at 0x5904)"
        set &access:&cmd_addr %l (0x8059040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "CLK_DIST_PERPH_SUBTYPE"
      sgroup "CLK_DIST_PERPH_SUBTYPE (at 0x5905)"
        set &access:&cmd_addr %l (0x8059050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "CLK_DIST_STATUS1"
      sgroup "CLK_DIST_STATUS1 (at 0x5908)"
        set &access:&cmd_addr %l (0x8059080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RC19M_OK                                 = " "0 (RC_19M_OFF),1 (RC_19M_ON)"
    tree.end
    tree "CLK_DIST_INT_RT_STS"
      sgroup "CLK_DIST_INT_RT_STS (at 0x5910)"
        set &access:&cmd_addr %l (0x8059100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_RT_STS                   = " "0 (RC_19M_NOT_HALT),1 (RC_19M_HALT)"
    tree.end
    tree "CLK_DIST_INT_SET_TYPE"
      sgroup "CLK_DIST_INT_SET_TYPE (at 0x5911)"
        set &access:&cmd_addr %l (0x8059110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_TYPE                     = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "CLK_DIST_INT_POLARITY_HIGH"
      sgroup "CLK_DIST_INT_POLARITY_HIGH (at 0x5912)"
        set &access:&cmd_addr %l (0x8059120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_HIGH                     = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "CLK_DIST_INT_POLARITY_LOW"
      sgroup "CLK_DIST_INT_POLARITY_LOW (at 0x5913)"
        set &access:&cmd_addr %l (0x8059130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_LOW                      = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "CLK_DIST_INT_LATCHED_CLR"
      sgroup "CLK_DIST_INT_LATCHED_CLR (at 0x5914)"
        set &access:&cmd_addr %l (0x8059140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_LATCHED_CLR              = " "0, 1"
    tree.end
    tree "CLK_DIST_INT_EN_SET"
      sgroup "CLK_DIST_INT_EN_SET (at 0x5915)"
        set &access:&cmd_addr %l (0x8059150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "CLK_DIST_INT_EN_CLR"
      sgroup "CLK_DIST_INT_EN_CLR (at 0x5916)"
        set &access:&cmd_addr %l (0x8059160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "CLK_DIST_INT_LATCHED_STS"
      sgroup "CLK_DIST_INT_LATCHED_STS (at 0x5918)"
        set &access:&cmd_addr %l (0x8059180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "CLK_DIST_INT_PENDING_STS"
      sgroup "CLK_DIST_INT_PENDING_STS (at 0x5919)"
        set &access:&cmd_addr %l (0x8059190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "CLK_DIST_INT_MID_SEL"
      sgroup "CLK_DIST_INT_MID_SEL (at 0x591a)"
        set &access:&cmd_addr %l (0x80591a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x591a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "CLK_DIST_INT_PRIORITY"
      sgroup "CLK_DIST_INT_PRIORITY (at 0x591b)"
        set &access:&cmd_addr %l (0x80591b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x591b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "CLK_DIST_CLK_CTL1"
      sgroup "CLK_DIST_CLK_CTL1 (at 0x5940)"
        set &access:&cmd_addr %l (0x8059400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SMPS_CLK_SEL                             = " "0 (SMPS_CLK_XO_OUTBUFF_EN_DLY_AND_19M2_HALT_B),1 (SMPS_CLK_RC_19M),2 (SMPS_CLK_XO_19M),3 (SMPS_CLK_BASE_ON_HALT)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   GPCLK_19M2_SEL                           = " "0 (GP_CLK_XO_OUTBUFF_EN_DLY_AND_19M2_HALT_B),1 (GP_CLK_RC_19M),2 (GP_CLK_XO_19M),3 (GP_CLK_BASE_ON_HALT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   XORC19M2_CLK_SEL                         = " "0 (DIV_CLK_XO_OUTBUFF_EN_DLY_AND_19M2_HALT_B),1 (DIV_CLK_RC_19M),2 (DIV_CLK_XO_19M),3 (DIV_CLK_BASE_ON_HALT)"
    tree.end
    tree "CLK_DIST_CLK_CTL2"
      sgroup "CLK_DIST_CLK_CTL2 (at 0x5941)"
        set &access:&cmd_addr %l (0x8059410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_ALT_SC                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEL_ALT_SC                               = " "0 (ALT_SC_OFF),1 (ALT_SC_ON)"
    tree.end
    tree "CLK_DIST_CLK_CTL3"
      sgroup "CLK_DIST_CLK_CTL3 (at 0x5942)"
        set &access:&cmd_addr %l (0x8059420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEL_ALT_RTC                              = " "0 (ALT_RTC_OFF),1 (ALT_RTC_ON)"
    tree.end
    tree "CLK_DIST_CLK_CTL4"
      sgroup "CLK_DIST_CLK_CTL4 (at 0x5943)"
        set &access:&cmd_addr %l (0x8059430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CLK_32K_RC                               = " "0 (CLK19M_DIV),1 (CLK32K)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_CLK_SEL                            = " "0 (CALRC),1 (XO32K_EXT32K)"
    tree.end
    tree "CLK_DIST_HALT_CTL"
      sgroup "CLK_DIST_HALT_CTL (at 0x5945)"
        set &access:&cmd_addr %l (0x8059450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   XO19M2_HALT_DET_EN                       = " "0 (XO19M_HALT_DIS),1 (XO19M_HALT_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FORCE_XO19M2_OSC_HALT                    = " "0 (FORCE_HALT_DIS),1 (FORCE_HALT_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOLD_XO19M2_OSC_HALT                     = " "0 (DONT_HOLD_HALT_COND),1 (HOLD_HALT_COND)"
    tree.end
    tree "CLK_DIST_RC_CTL"
      sgroup "CLK_DIST_RC_CTL (at 0x5946)"
        set &access:&cmd_addr %l (0x8059460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FORCE_RC19M2_OSC_ON                      = " "0 (RC19M_NOT_FORCED),1 (RC19M_FORCED_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RC19M2_OSC_HW_CTL                        = " "0 (RC19M_NOT_FOLLOW_HW_DEMAND),1 (RC19M_FOLLOW_HW_DEMAND)"
    tree.end
    tree "CLK_DIST_PD_CTL"
      sgroup "CLK_DIST_PD_CTL (at 0x5948)"
        set &access:&cmd_addr %l (0x8059480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (HIZ_INPUT),1 (PULLDOWN_INPUT)"
    tree.end
    tree "CLK_DIST_PMIC_SLEEP_CTL"
      sgroup "CLK_DIST_PMIC_SLEEP_CTL (at 0x594a)"
        set &access:&cmd_addr %l (0x80594a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x594a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FORCE_AWAKE_EN                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN                             = " "0, 1"
    tree.end
    tree "CLK_DIST_SPARE1"
      sgroup "CLK_DIST_SPARE1 (at 0x5951)"
        set &access:&cmd_addr %l (0x8059510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "CLK_DIST_SPARE2"
      sgroup "CLK_DIST_SPARE2 (at 0x5952)"
        set &access:&cmd_addr %l (0x8059520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "CLK_DIST_SPARE3"
      sgroup "CLK_DIST_SPARE3 (at 0x5953)"
        set &access:&cmd_addr %l (0x8059530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "CLK_DIST_SEC_ACCESS"
      sgroup "CLK_DIST_SEC_ACCESS (at 0x59d0)"
        set &access:&cmd_addr %l (0x8059d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "CLK_DIST_PERPH_RESET_CTL2"
      sgroup "CLK_DIST_PERPH_RESET_CTL2 (at 0x59d9)"
        set &access:&cmd_addr %l (0x8059d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "CLK_DIST_PERPH_RESET_CTL3"
      sgroup "CLK_DIST_PERPH_RESET_CTL3 (at 0x59da)"
        set &access:&cmd_addr %l (0x8059da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "CLK_DIST_PERPH_RESET_CTL4"
      sgroup "CLK_DIST_PERPH_RESET_CTL4 (at 0x59db)"
        set &access:&cmd_addr %l (0x8059db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "CLK_DIST_INT_TEST1"
      sgroup "CLK_DIST_INT_TEST1 (at 0x59e0)"
        set &access:&cmd_addr %l (0x8059e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_DIS),1 (INT_TEST_EN)"
    tree.end
    tree "CLK_DIST_INT_TEST_VAL"
      sgroup "CLK_DIST_INT_TEST_VAL (at 0x59e1)"
        set &access:&cmd_addr %l (0x8059e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_TEST_VAL                 = " "0 (INT_TEST_OUT_0),1 (INT_TEST_OUT_1)"
    tree.end
    tree "CLK_DIST_TEST1"
      sgroup "CLK_DIST_TEST1 (at 0x59e2)"
        set &access:&cmd_addr %l (0x8059e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
    tree "CLK_DIST_TEST2"
      sgroup "CLK_DIST_TEST2 (at 0x59e4)"
        set &access:&cmd_addr %l (0x8059e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   TESTCLK_SEL                              = " "0 (HIZ),1 (CLK19M),2 (DTEST1),3 (DIV_CLK1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CLK_32KHZ_SEL                            = " "0 (NORMAL),1 (TEST_CLK_ON_32K)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CLK_1KHZ_SEL                             = " "0 (NORMAL),1 (TEST_CLK_ON_1K)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SMPS_CLK_SEL                             = " "0 (NORMAL),1 (DTEST1_ON_SMPL)"
    tree.end
    tree "CLK_DIST_TRIM_NUM"
      sgroup "CLK_DIST_TRIM_NUM (at 0x59f0)"
        set &access:&cmd_addr %l (0x8059f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "CLK_DIST_RC19M2_TRIM"
      sgroup "CLK_DIST_RC19M2_TRIM (at 0x59f1)"
        set &access:&cmd_addr %l (0x8059f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   BCK_RCI                                  = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BCK_RCC                                  = " "0, 1, 2, 3"
    tree.end
    tree "CLK_DIST_RCLF_TRIM"
      sgroup "CLK_DIST_RCLF_TRIM (at 0x59f2)"
        set &access:&cmd_addr %l (0x8059f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   RCLF_TRIM                                = "
    tree.end
  tree.end
tree.end
tree "COIN"
  tree "COIN"
    tree "COIN_REVISION1"
      sgroup "COIN_REVISION1 (at 0x2800)"
        set &access:&cmd_addr %l (0x8028000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "COIN_REVISION2"
      sgroup "COIN_REVISION2 (at 0x2801)"
        set &access:&cmd_addr %l (0x8028010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "COIN_REVISION3"
      sgroup "COIN_REVISION3 (at 0x2802)"
        set &access:&cmd_addr %l (0x8028020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "COIN_REVISION4"
      sgroup "COIN_REVISION4 (at 0x2803)"
        set &access:&cmd_addr %l (0x8028030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "COIN_PERPH_TYPE"
      sgroup "COIN_PERPH_TYPE (at 0x2804)"
        set &access:&cmd_addr %l (0x8028040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "COIN_PERPH_SUBTYPE"
      sgroup "COIN_PERPH_SUBTYPE (at 0x2805)"
        set &access:&cmd_addr %l (0x8028050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "COIN_STATUS1"
      sgroup "COIN_STATUS1 (at 0x2808)"
        set &access:&cmd_addr %l (0x8028080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   COINCELL_OK                              = " "0 (CC_DISABLED),1 (CC_ENABLED)"
    tree.end
    tree "COIN_COIN_CHG_RSET"
      sgroup "COIN_COIN_CHG_RSET (at 0x2844)"
        set &access:&cmd_addr %l (0x8028440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   COIN_CHG_RSET                            = " "0 (CC_RSET_2K1),1 (CC_RSET_1K7),2 (CC_RSET_1K2),3 (CC_RSET_0K8)"
    tree.end
    tree "COIN_COIN_CHG_VSET"
      sgroup "COIN_COIN_CHG_VSET (at 0x2845)"
        set &access:&cmd_addr %l (0x8028450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   COIN_CHG_VSET                            = " "0 (CC_VSET_2V5),1 (CC_VSET_3V2),2 (CC_VSET_3V1),3 (CC_VSET_3V0)"
    tree.end
    tree "COIN_EN_CTL"
      sgroup "COIN_EN_CTL (at 0x2846)"
        set &access:&cmd_addr %l (0x8028460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   COINCELL_EN                              = " "0 (CC_DISABLED),1 (CC_ENABLED)"
    tree.end
    tree "COIN_SEC_ACCESS"
      sgroup "COIN_SEC_ACCESS (at 0x28d0)"
        set &access:&cmd_addr %l (0x8028d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "COIN_PERPH_RESET_CTL2"
      sgroup "COIN_PERPH_RESET_CTL2 (at 0x28d9)"
        set &access:&cmd_addr %l (0x8028d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "COIN_PERPH_RESET_CTL3"
      sgroup "COIN_PERPH_RESET_CTL3 (at 0x28da)"
        set &access:&cmd_addr %l (0x8028da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
    tree.end
    tree "COIN_PERPH_RESET_CTL4"
      sgroup "COIN_PERPH_RESET_CTL4 (at 0x28db)"
        set &access:&cmd_addr %l (0x8028db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "COIN_TEST_CTRL"
      sgroup "COIN_TEST_CTRL (at 0x28e0)"
        set &access:&cmd_addr %l (0x8028e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEST_VCOIN                               = " "0 (CC_TEST_MODE_DISABLED),1 (CC_TEST_MODE_ENABLED)"
    tree.end
    tree "COIN_TRIM_NUM"
      sgroup "COIN_TRIM_NUM (at 0x28f0)"
        set &access:&cmd_addr %l (0x8028f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TRIM_NUM                                 = " "0, 1"
    tree.end
    tree "COIN_TRIM_OFFSET"
      sgroup "COIN_TRIM_OFFSET (at 0x28f1)"
        set &access:&cmd_addr %l (0x8028f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x28f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   COIN_CHG_RSET_TRIM                       = " "0 (reserved),1 (CC_RSET_MINUS_254),2 (CC_RESET_NOM),3 (CC_RSET_PLUS_227)"
    tree.end
  tree.end
tree.end
tree "DIFF_CLK1"
  tree "DIFF_CLK1"
    tree "DIFF_CLK1_REVISION1"
      sgroup "DIFF_CLK1_REVISION1 (at 0x5700)"
        set &access:&cmd_addr %l (0x8057000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "DIFF_CLK1_REVISION2"
      sgroup "DIFF_CLK1_REVISION2 (at 0x5701)"
        set &access:&cmd_addr %l (0x8057010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "DIFF_CLK1_REVISION3"
      sgroup "DIFF_CLK1_REVISION3 (at 0x5702)"
        set &access:&cmd_addr %l (0x8057020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "DIFF_CLK1_REVISION4"
      sgroup "DIFF_CLK1_REVISION4 (at 0x5703)"
        set &access:&cmd_addr %l (0x8057030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "DIFF_CLK1_PERPH_TYPE"
      sgroup "DIFF_CLK1_PERPH_TYPE (at 0x5704)"
        set &access:&cmd_addr %l (0x8057040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "DIFF_CLK1_PERPH_SUBTYPE"
      sgroup "DIFF_CLK1_PERPH_SUBTYPE (at 0x5705)"
        set &access:&cmd_addr %l (0x8057050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "DIFF_CLK1_STATUS1"
      sgroup "DIFF_CLK1_STATUS1 (at 0x5708)"
        set &access:&cmd_addr %l (0x8057080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_OK                                   = " "0 (CLOCK_ON),1 (CLOCK_OFF)"
    tree.end
    tree "DIFF_CLK1_AMP_CTL"
      sgroup "DIFF_CLK1_AMP_CTL (at 0x5742)"
        set &access:&cmd_addr %l (0x8057420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   AMP_CTL                                  = "
    tree.end
    tree "DIFF_CLK1_DRV_CTL1"
      sgroup "DIFF_CLK1_DRV_CTL1 (at 0x5744)"
        set &access:&cmd_addr %l (0x8057440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUT_DRV                                  = " "0 (ONE_X),1 (TWO_X),2 (THREE_X),3 (FOUR_X)"
    tree.end
    tree "DIFF_CLK1_EN_CTL"
      sgroup "DIFF_CLK1_EN_CTL (at 0x5746)"
        set &access:&cmd_addr %l (0x8057460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_EN                                   = " "0 (CLK_DIS),1 (CLK_EN)"
    tree.end
    tree "DIFF_CLK1_SEC_ACCESS"
      sgroup "DIFF_CLK1_SEC_ACCESS (at 0x57d0)"
        set &access:&cmd_addr %l (0x8057d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "DIFF_CLK1_PERPH_RESET_CTL1"
      sgroup "DIFF_CLK1_PERPH_RESET_CTL1 (at 0x57d8)"
        set &access:&cmd_addr %l (0x8057d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "DIFF_CLK1_PERPH_RESET_CTL2"
      sgroup "DIFF_CLK1_PERPH_RESET_CTL2 (at 0x57d9)"
        set &access:&cmd_addr %l (0x8057d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "DIFF_CLK1_PERPH_RESET_CTL3"
      sgroup "DIFF_CLK1_PERPH_RESET_CTL3 (at 0x57da)"
        set &access:&cmd_addr %l (0x8057da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "DIFF_CLK1_PERPH_RESET_CTL4"
      sgroup "DIFF_CLK1_PERPH_RESET_CTL4 (at 0x57db)"
        set &access:&cmd_addr %l (0x8057db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "DIFF_CLK1_TEST1"
      sgroup "DIFF_CLK1_TEST1 (at 0x57e2)"
        set &access:&cmd_addr %l (0x8057e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DIFF_OUT_DTEST2                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DIFF_OUT_TEST                            = " "0 (NORMAL),1 (DISABLED),2 (OUTPUT_LOW),3 (OUTPUT_HI)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DIFF_ATEST_EN                            = " "0 (NORMAL),1 (CONNECT_DIFF_REGULATOR_ATEST)"
    tree.end
  tree.end
tree.end
tree "DIV_CLK1"
  tree "DIV_CLK1"
    tree "DIV_CLK1_REVISION1"
      sgroup "DIV_CLK1_REVISION1 (at 0x5b00)"
        set &access:&cmd_addr %l (0x805b000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "DIV_CLK1_REVISION2"
      sgroup "DIV_CLK1_REVISION2 (at 0x5b01)"
        set &access:&cmd_addr %l (0x805b010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "DIV_CLK1_PERPH_TYPE"
      sgroup "DIV_CLK1_PERPH_TYPE (at 0x5b04)"
        set &access:&cmd_addr %l (0x805b040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "DIV_CLK1_PERPH_SUBTYPE"
      sgroup "DIV_CLK1_PERPH_SUBTYPE (at 0x5b05)"
        set &access:&cmd_addr %l (0x805b050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "DIV_CLK1_STATUS1"
      sgroup "DIV_CLK1_STATUS1 (at 0x5b08)"
        set &access:&cmd_addr %l (0x805b080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DIVCLK_OK                                = " "0 (DIVIDER_OFF),1 (DIVIDER_ON)"
    tree.end
    tree "DIV_CLK1_DIV_CTL1"
      sgroup "DIV_CLK1_DIV_CTL1 (at 0x5b43)"
        set &access:&cmd_addr %l (0x805b430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DIV_FACTOR                               = " "0 (XO_DIV1),1 (reserved),2 (XO_DIV2),3 (XO_DIV4),4 (XO_DIV8),5 (XO_DIV16),6 (XO_DIV32),7 (XO_DIV64)"
    tree.end
    tree "DIV_CLK1_EN_CTL"
      sgroup "DIV_CLK1_EN_CTL (at 0x5b46)"
        set &access:&cmd_addr %l (0x805b460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DIVCLK_EN                                = " "0 (DIVCLK_DIS),1 (DIVCLK_EN)"
    tree.end
    tree "DIV_CLK1_SEC_ACCESS"
      sgroup "DIV_CLK1_SEC_ACCESS (at 0x5bd0)"
        set &access:&cmd_addr %l (0x805bd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "DIV_CLK1_PERPH_RESET_CTL1"
      sgroup "DIV_CLK1_PERPH_RESET_CTL1 (at 0x5bd8)"
        set &access:&cmd_addr %l (0x805bd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0, 1"
    tree.end
    tree "DIV_CLK1_PERPH_RESET_CTL2"
      sgroup "DIV_CLK1_PERPH_RESET_CTL2 (at 0x5bd9)"
        set &access:&cmd_addr %l (0x805bd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "DIV_CLK1_PERPH_RESET_CTL3"
      sgroup "DIV_CLK1_PERPH_RESET_CTL3 (at 0x5bda)"
        set &access:&cmd_addr %l (0x805bda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "DIV_CLK1_PERPH_RESET_CTL4"
      sgroup "DIV_CLK1_PERPH_RESET_CTL4 (at 0x5bdb)"
        set &access:&cmd_addr %l (0x805bdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
  tree.end
tree.end
tree "DIV_CLK2"
  tree "DIV_CLK2"
    tree "DIV_CLK2_REVISION1"
      sgroup "DIV_CLK2_REVISION1 (at 0x5c00)"
        set &access:&cmd_addr %l (0x805c000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5c000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "DIV_CLK2_REVISION2"
      sgroup "DIV_CLK2_REVISION2 (at 0x5c01)"
        set &access:&cmd_addr %l (0x805c010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5c010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "DIV_CLK2_PERPH_TYPE"
      sgroup "DIV_CLK2_PERPH_TYPE (at 0x5c04)"
        set &access:&cmd_addr %l (0x805c040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5c040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "DIV_CLK2_PERPH_SUBTYPE"
      sgroup "DIV_CLK2_PERPH_SUBTYPE (at 0x5c05)"
        set &access:&cmd_addr %l (0x805c050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5c050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "DIV_CLK2_STATUS1"
      sgroup "DIV_CLK2_STATUS1 (at 0x5c08)"
        set &access:&cmd_addr %l (0x805c080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5c080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DIVCLK_OK                                = " "0 (DIVIDER_OFF),1 (DIVIDER_ON)"
    tree.end
    tree "DIV_CLK2_DIV_CTL1"
      sgroup "DIV_CLK2_DIV_CTL1 (at 0x5c43)"
        set &access:&cmd_addr %l (0x805c430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5c430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DIV_FACTOR                               = " "0 (XO_DIV1),1 (reserved),2 (XO_DIV2),3 (XO_DIV4),4 (XO_DIV8),5 (XO_DIV16),6 (XO_DIV32),7 (XO_DIV64)"
    tree.end
    tree "DIV_CLK2_EN_CTL"
      sgroup "DIV_CLK2_EN_CTL (at 0x5c46)"
        set &access:&cmd_addr %l (0x805c460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5c460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DIVCLK_EN                                = " "0 (DIVCLK_DIS),1 (DIVCLK_EN)"
    tree.end
    tree "DIV_CLK2_SEC_ACCESS"
      sgroup "DIV_CLK2_SEC_ACCESS (at 0x5cd0)"
        set &access:&cmd_addr %l (0x805cd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5cd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "DIV_CLK2_PERPH_RESET_CTL1"
      sgroup "DIV_CLK2_PERPH_RESET_CTL1 (at 0x5cd8)"
        set &access:&cmd_addr %l (0x805cd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5cd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0, 1"
    tree.end
    tree "DIV_CLK2_PERPH_RESET_CTL2"
      sgroup "DIV_CLK2_PERPH_RESET_CTL2 (at 0x5cd9)"
        set &access:&cmd_addr %l (0x805cd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5cd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "DIV_CLK2_PERPH_RESET_CTL3"
      sgroup "DIV_CLK2_PERPH_RESET_CTL3 (at 0x5cda)"
        set &access:&cmd_addr %l (0x805cda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5cda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "DIV_CLK2_PERPH_RESET_CTL4"
      sgroup "DIV_CLK2_PERPH_RESET_CTL4 (at 0x5cdb)"
        set &access:&cmd_addr %l (0x805cdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5cdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
  tree.end
tree.end
tree "DIV_CLK3"
  tree "DIV_CLK3"
    tree "DIV_CLK3_REVISION1"
      sgroup "DIV_CLK3_REVISION1 (at 0x5d00)"
        set &access:&cmd_addr %l (0x805d000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "DIV_CLK3_REVISION2"
      sgroup "DIV_CLK3_REVISION2 (at 0x5d01)"
        set &access:&cmd_addr %l (0x805d010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "DIV_CLK3_PERPH_TYPE"
      sgroup "DIV_CLK3_PERPH_TYPE (at 0x5d04)"
        set &access:&cmd_addr %l (0x805d040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "DIV_CLK3_PERPH_SUBTYPE"
      sgroup "DIV_CLK3_PERPH_SUBTYPE (at 0x5d05)"
        set &access:&cmd_addr %l (0x805d050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "DIV_CLK3_STATUS1"
      sgroup "DIV_CLK3_STATUS1 (at 0x5d08)"
        set &access:&cmd_addr %l (0x805d080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DIVCLK_OK                                = " "0 (DIVIDER_OFF),1 (DIVIDER_ON)"
    tree.end
    tree "DIV_CLK3_DIV_CTL1"
      sgroup "DIV_CLK3_DIV_CTL1 (at 0x5d43)"
        set &access:&cmd_addr %l (0x805d430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DIV_FACTOR                               = " "0 (XO_DIV1),1 (reserved),2 (XO_DIV2),3 (XO_DIV4),4 (XO_DIV8),5 (XO_DIV16),6 (XO_DIV32),7 (XO_DIV64)"
    tree.end
    tree "DIV_CLK3_EN_CTL"
      sgroup "DIV_CLK3_EN_CTL (at 0x5d46)"
        set &access:&cmd_addr %l (0x805d460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DIVCLK_EN                                = " "0 (DIVCLK_DIS),1 (DIVCLK_EN)"
    tree.end
    tree "DIV_CLK3_SEC_ACCESS"
      sgroup "DIV_CLK3_SEC_ACCESS (at 0x5dd0)"
        set &access:&cmd_addr %l (0x805dd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5dd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "DIV_CLK3_PERPH_RESET_CTL1"
      sgroup "DIV_CLK3_PERPH_RESET_CTL1 (at 0x5dd8)"
        set &access:&cmd_addr %l (0x805dd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5dd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0, 1"
    tree.end
    tree "DIV_CLK3_PERPH_RESET_CTL2"
      sgroup "DIV_CLK3_PERPH_RESET_CTL2 (at 0x5dd9)"
        set &access:&cmd_addr %l (0x805dd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5dd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "DIV_CLK3_PERPH_RESET_CTL3"
      sgroup "DIV_CLK3_PERPH_RESET_CTL3 (at 0x5dda)"
        set &access:&cmd_addr %l (0x805dda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5dda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "DIV_CLK3_PERPH_RESET_CTL4"
      sgroup "DIV_CLK3_PERPH_RESET_CTL4 (at 0x5ddb)"
        set &access:&cmd_addr %l (0x805ddb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ddb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
  tree.end
tree.end
tree "FLASH1"
  tree "FLASH1"
    tree "FLASH1_REVISION1"
      sgroup "FLASH1_REVISION1 (at 0x1d300)"
        set &access:&cmd_addr %l (0x80d3000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "FLASH1_REVISION2"
      sgroup "FLASH1_REVISION2 (at 0x1d301)"
        set &access:&cmd_addr %l (0x80d3010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "FLASH1_REVISION3"
      sgroup "FLASH1_REVISION3 (at 0x1d302)"
        set &access:&cmd_addr %l (0x80d3020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "FLASH1_REVISION4"
      sgroup "FLASH1_REVISION4 (at 0x1d303)"
        set &access:&cmd_addr %l (0x80d3030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "FLASH1_PERPH_TYPE"
      sgroup "FLASH1_PERPH_TYPE (at 0x1d304)"
        set &access:&cmd_addr %l (0x80d3040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "FLASH1_PERPH_SUBTYPE"
      sgroup "FLASH1_PERPH_SUBTYPE (at 0x1d305)"
        set &access:&cmd_addr %l (0x80d3050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "FLASH1_LED_FAULT_STATUS"
      sgroup "FLASH1_LED_FAULT_STATUS (at 0x1d308)"
        set &access:&cmd_addr %l (0x80d3080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_OK_FAULT                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   THERMAL_DERATE                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED2_OPEN_FAULT                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_OPEN_FAULT                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_SHORT_FAULT                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED1_SHORT_FAULT                         = " "0, 1"
    tree.end
    tree "FLASH1_LED1_IRAMP_STATUS"
      sgroup "FLASH1_LED1_IRAMP_STATUS (at 0x1d309)"
        set &access:&cmd_addr %l (0x80d3090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED1_RAMP_CURRENT                        = "
    tree.end
    tree "FLASH1_LED2_IRAMP_STATUS"
      sgroup "FLASH1_LED2_IRAMP_STATUS (at 0x1d30a)"
        set &access:&cmd_addr %l (0x80d30a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd30a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED2_RAMP_CURRENT                        = "
    tree.end
    tree "FLASH1_LED1_MASK_RAMP_STATUS"
      sgroup "FLASH1_LED1_MASK_RAMP_STATUS (at 0x1d30b)"
        set &access:&cmd_addr %l (0x80d30b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd30b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED1_MASK_CLIP_CURRENT                   = "
    tree.end
    tree "FLASH1_LED2_MASK_RAMP_STATUS"
      sgroup "FLASH1_LED2_MASK_RAMP_STATUS (at 0x1d30c)"
        set &access:&cmd_addr %l (0x80d30c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd30c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED2_MASK_CLIP_CURRENT                   = "
    tree.end
    tree "FLASH1_INT_RT_STS"
      sgroup "FLASH1_INT_RT_STS (at 0x1d310)"
        set &access:&cmd_addr %l (0x80d3100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_RT_STS                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_RT_STS                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_RT_STS                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_RT_STS                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_RT_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_RT_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_RT_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_RT_STS                  = " "0, 1"
    tree.end
    tree "FLASH1_INT_SET_TYPE"
      sgroup "FLASH1_INT_SET_TYPE (at 0x1d311)"
        set &access:&cmd_addr %l (0x80d3110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_TYPE                            = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_TYPE                             = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_TYPE                    = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_TYPE                    = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_TYPE                    = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_TYPE                    = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "FLASH1_INT_POLARITY_HIGH"
      sgroup "FLASH1_INT_POLARITY_HIGH (at 0x1d312)"
        set &access:&cmd_addr %l (0x80d3120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_HIGH                            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "FLASH1_INT_POLARITY_LOW"
      sgroup "FLASH1_INT_POLARITY_LOW (at 0x1d313)"
        set &access:&cmd_addr %l (0x80d3130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_LOW                             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "FLASH1_INT_LATCHED_CLR"
      sgroup "FLASH1_INT_LATCHED_CLR (at 0x1d314)"
        set &access:&cmd_addr %l (0x80d3140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_LATCHED_CLR                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_LATCHED_CLR                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_LATCHED_CLR             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_LATCHED_CLR             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_LATCHED_CLR             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_LATCHED_CLR             = " "0, 1"
    tree.end
    tree "FLASH1_INT_EN_SET"
      sgroup "FLASH1_INT_EN_SET (at 0x1d315)"
        set &access:&cmd_addr %l (0x80d3150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FLASH1_INT_EN_CLR"
      sgroup "FLASH1_INT_EN_CLR (at 0x1d316)"
        set &access:&cmd_addr %l (0x80d3160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FLASH1_INT_LATCHED_STS"
      sgroup "FLASH1_INT_LATCHED_STS (at 0x1d318)"
        set &access:&cmd_addr %l (0x80d3180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "FLASH1_INT_PENDING_STS"
      sgroup "FLASH1_INT_PENDING_STS (at 0x1d319)"
        set &access:&cmd_addr %l (0x80d3190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_PENDING_STS                     = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "FLASH1_INT_MID_SEL"
      sgroup "FLASH1_INT_MID_SEL (at 0x1d31a)"
        set &access:&cmd_addr %l (0x80d31a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd31a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "FLASH1_INT_PRIORITY"
      sgroup "FLASH1_INT_PRIORITY (at 0x1d31b)"
        set &access:&cmd_addr %l (0x80d31b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd31b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "FLASH1_FLASH_SAFETY_TIMER"
      sgroup "FLASH1_FLASH_SAFETY_TIMER (at 0x1d340)"
        set &access:&cmd_addr %l (0x80d3400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   FLASH_TIMER_DURATION                     = "
    tree.end
    tree "FLASH1_MAX_FLSH_CURRENT"
      sgroup "FLASH1_MAX_FLSH_CURRENT (at 0x1d341)"
        set &access:&cmd_addr %l (0x80d3410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MAX_LED_CURRENT                          = "
    tree.end
    tree "FLASH1_LED1_CURRENT_PRGM"
      sgroup "FLASH1_LED1_CURRENT_PRGM (at 0x1d342)"
        set &access:&cmd_addr %l (0x80d3420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED1_CURRENT_CONTROL                     = "
    tree.end
    tree "FLASH1_LED2_CURRENT_PRGM"
      sgroup "FLASH1_LED2_CURRENT_PRGM (at 0x1d343)"
        set &access:&cmd_addr %l (0x80d3430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED2_CURRENT_CONTROL                     = "
    tree.end
    tree "FLASH1_MASK_CLAMP_CURRENT"
      sgroup "FLASH1_MASK_CLAMP_CURRENT (at 0x1d344)"
        set &access:&cmd_addr %l (0x80d3440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MASK_CURRENT                             = "
    tree.end
    tree "FLASH1_ENABLE_CONTROL"
      sgroup "FLASH1_ENABLE_CONTROL (at 0x1d346)"
        set &access:&cmd_addr %l (0x80d3460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODULE_ENABLE                            = " "0 (MOD_DIS),1 (MOD_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LED1_DRVR_SEL                            = " "0 (TORCH_EN),1 (FLASH_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED2_DRVR_SEL                            = " "0 (TORCH_EN),1 (FLASH_EN)"
    tree.end
    tree "FLASH1_LED_STROBE_CONTROL"
      sgroup "FLASH1_LED_STROBE_CONTROL (at 0x1d347)"
        set &access:&cmd_addr %l (0x80d3470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LED1_OUTPUT                           = " "0 (LED1_DIS),1 (LED1_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_LED2_OUTPUT                           = " "0 (LED2_DIS),1 (LED2_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   HW_SW_STROBE_SEL                         = " "0 (STROBE_SW),1 (STROBE_HW)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HW_STROBE_TRIGGER                        = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HW_STROBE_POLARITY                       = " "0 (ACTIVE_LOW),1 (ACTIVE_HIGH)"
    tree.end
    tree "FLASH1_LED_TMR_CONTROL"
      sgroup "FLASH1_LED_TMR_CONTROL (at 0x1d348)"
        set &access:&cmd_addr %l (0x80d3480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TIMER1_SEL                               = " "0 (LED1_TIMER_FLASH),1 (LED1_TIMER_WTCHDG)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER2_SEL                               = " "0 (LED2_TIMER_FLASH),1 (LED2_TIMER_WTCHDG)"
    tree.end
    tree "FLASH1_WATCHDOG_TIMER"
      sgroup "FLASH1_WATCHDOG_TIMER (at 0x1d349)"
        set &access:&cmd_addr %l (0x80d3490|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3490|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   WATCHDOG_TIMER_DURATION                  = "
    tree.end
    tree "FLASH1_FLASH_HEADRM_PRGM"
      sgroup "FLASH1_FLASH_HEADRM_PRGM (at 0x1d34a)"
        set &access:&cmd_addr %l (0x80d34a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FLSH_DRVR_HEADROOM                       = " "0 (HEADRM_250MV),1 (HEADRM_300MV),2 (HEADRM_400MV),3 (HEADRM_500MV)"
    tree.end
    tree "FLASH1_STARTUP_DELAY"
      sgroup "FLASH1_STARTUP_DELAY (at 0x1d34b)"
        set &access:&cmd_addr %l (0x80d34b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   STARTUP_DELAY                            = " "0 (STRTUP_DLY_10US),1 (STRTUP_DLY_32US),2 (STRTUP_DLY_64US),3 (STRTUP_DLY_128US)"
    tree.end
    tree "FLASH1_MASK_ENABLE"
      sgroup "FLASH1_MASK_ENABLE (at 0x1d34c)"
        set &access:&cmd_addr %l (0x80d34c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_MASK3                                 = " "0 (MASK3_DIS),1 (MASK3_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_MASK2                                 = " "0 (MASK2_DIS),1 (MASK2_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_MASK1                                 = " "0 (VPH_DROOP_DIS),1 (VPH_DROOP_EN)"
    tree.end
    tree "FLASH1_LED1_FINE_CURRENT_PRGM"
      sgroup "FLASH1_LED1_FINE_CURRENT_PRGM (at 0x1d34d)"
        set &access:&cmd_addr %l (0x80d34d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED1_FINE_CURRENT_CONTROL                = "
    tree.end
    tree "FLASH1_LED2_FINE_CURRENT_PRGM"
      sgroup "FLASH1_LED2_FINE_CURRENT_PRGM (at 0x1d34e)"
        set &access:&cmd_addr %l (0x80d34e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED2_FINE_CURRENT_CONTROL                = "
    tree.end
    tree "FLASH1_VREG_OK_FORCE"
      sgroup "FLASH1_VREG_OK_FORCE (at 0x1d34f)"
        set &access:&cmd_addr %l (0x80d34f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FORCE_VREG_OK                         = " "0 (VREGOK),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FOLLOW_HW_VREG_OK                        = " "0 (VREGOK_SW),1 (VREGOK_HW)"
    tree.end
    tree "FLASH1_MASK_CONFIG"
      sgroup "FLASH1_MASK_CONFIG (at 0x1d350)"
        set &access:&cmd_addr %l (0x80d3500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MASK3_POLARITY                           = " "0 (MASK3_ACTIVE_LOW),1 (MASK3_ACTIVE_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MASK2_POLARITY                           = " "0 (MASK2_ACTIVE_LOW),1 (MASK2_ACTIVE_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MASK1_POLARITY                           = " "0 (MASK1_ACTIVE_LOW),1 (MASK1_ACTIVE_HIGH)"
    tree.end
    tree "FLASH1_FAULT_DETECT"
      sgroup "FLASH1_FAULT_DETECT (at 0x1d351)"
        set &access:&cmd_addr %l (0x80d3510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_SELF_CHECK                            = " "0 (SELF_CHECK_DIS),1 (SELF_CHECK_EN)"
    tree.end
    tree "FLASH1_THERMAL_DERATE"
      sgroup "FLASH1_THERMAL_DERATE (at 0x1d352)"
        set &access:&cmd_addr %l (0x80d3520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_THERMAL_DERATE                        = " "0 (THERM_DERATE_DIS),1 (THERM_DERATE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   DERATE_RATE                              = " "0 (RATE_2_PERCENT),1 (RATE_2P5_PERCENT),2 (RATE_4_PERCENT),3 (RATE_5_PERCENT),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DERATE_THRESHOLD                         = " "0 (THRESHOLD_80C),1 (THRESHOLD_90C),2 (THRESHOLD_100C),3 (THRESHOLD_110C),4 (THRESHOLD_120C),5 (THRESHOLD_130C),6 (reserved),7 (reserved)"
    tree.end
    tree "FLASH1_PWM_DIMMING"
      sgroup "FLASH1_PWM_DIMMING (at 0x1d353)"
        set &access:&cmd_addr %l (0x80d3530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PWM_DIMMING                           = " "0 (PWM_DIM_DIS),1 (PWM_DIM_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FULL_SCALE_CURRENT                   = " "0 (PWMDIMMING_12P5MA),1 (PWMDIMMING_25MA),2 (PWMDIMMING_37P5MA),3 (PWMDIMMING_50MA),4 (PWMDIMMING_62P5MA),5 (PWMDIMMING_75MA),6 (PWMDIMMING_87P5MA),7 (PWMDIMMING_100MA)"
    tree.end
    tree "FLASH1_LED_CURRENT_RAMP"
      sgroup "FLASH1_LED_CURRENT_RAMP (at 0x1d354)"
        set &access:&cmd_addr %l (0x80d3540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_RAMP                                  = " "0 (RAMP_DIS),1 (RAMP_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   RAMP_UP_STEP                             = " "0 (RAMP_UP_STEP_0P2US),1 (RAMP_UP_STEP_0P4US),2 (RAMP_UP_STEP_0P8US),3 (RAMP_UP_STEP_1P6US),4 (RAMP_UP_STEP_3P3US),5 (RAMP_UP_STEP_6P7US),6 (RAMP_UP_STEP_13P5US),7 (RAMP_UP_STEP_27US)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RAMP_DN_STEP                             = " "0 (RAMP_DN_STEP_0P2US),1 (RAMP_DN_STEP_0P4US),2 (RAMP_DN_STEP_0P8US),3 (RAMP_DN_STEP_1P6US),4 (RAMP_DN_STEP_3P3US),5 (RAMP_DN_STEP_6P7US),6 (RAMP_DN_STEP_13P5US),7 (RAMP_DN_STEP_27US)"
    tree.end
    tree "FLASH1_ALT_RAMP_DN"
      sgroup "FLASH1_ALT_RAMP_DN (at 0x1d355)"
        set &access:&cmd_addr %l (0x80d3550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ALTERNATE_RAMP_DN                        = " "0 (ALT_RMP_DWN_0P2US),1 (ALT_RMP_DWN_0P4US),2 (ALT_RMP_DWN_0P8US),3 (ALT_RMP_DWN_1P6US)"
    tree.end
    tree "FLASH1_WATCHDOG_PET"
      sgroup "FLASH1_WATCHDOG_PET (at 0x1d356)"
        set &access:&cmd_addr %l (0x80d3560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PET_WATCHDOG                             = " "0, 1"
    tree.end
    tree "FLASH1_STROBE_DEBOUNCE"
      sgroup "FLASH1_STROBE_DEBOUNCE (at 0x1d357)"
        set &access:&cmd_addr %l (0x80d3570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEBOUNCE_TIME_STROBE                     = " "0 (STROBE_DEBOUNCE_0US),1 (STROBE_DEBOUNCE_10US),2 (STROBE_DEBOUNCE_32US),3 (STROBE_DEBOUNCE_64US)"
    tree.end
    tree "FLASH1_MASK_DEBOUNCE"
      sgroup "FLASH1_MASK_DEBOUNCE (at 0x1d358)"
        set &access:&cmd_addr %l (0x80d3580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   DEBOUNCE_TIME_MASK1                      = " "0 (MASK1_DEBOUNCE_0US),1 (MASK1_DEBOUNCE_10US),2 (MASK1_DEBOUNCE_32US),3 (MASK1_DEBOUNCE_64US)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEBOUNCE_TIME_OTHER_MASKS                = " "0 (OTHER_MASK_DEBOUNCE_0US),1 (OTHER_MASK_DEBOUNCE_10US),2 (OTHER_MASK_DEBOUNCE_32US),3 (OTHER_MASK_DEBOUNCE_64US)"
    tree.end
    tree "FLASH1_FAULT_DEBOUNCE"
      sgroup "FLASH1_FAULT_DEBOUNCE (at 0x1d359)"
        set &access:&cmd_addr %l (0x80d3590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   DEBOUNCE_TIME_LED1_OPEN                  = " "0 (LED1_OPEN_DEBOUNCE_0US),1 (LED1_OPEN_DEBOUNCE_10US),2 (LED1_OPEN_DEBOUNCE_32US),3 (LED1_OPEN_DEBOUNCE_64US)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   DEBOUNCE_TIME_LED2_OPEN                  = " "0 (LED2_OPEN_DEBOUNCE_0US),1 (LED2_OPEN_DEBOUNCE_10US),2 (LED2_OPEN_DEBOUNCE_32US),3 (LED2_OPEN_DEBOUNCE_64US)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEBOUNCE_TIME_LED1_SHORT                 = " "0 (LED1_SHORT_DEBOUNCE_0US),1 (LED1_SHORT_DEBOUNCE_10US),2 (LED1_SHORT_DEBOUNCE_32US),3 (LED1_SHORT_DEBOUNCE_64US)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEBOUNCE_TIME_LED2_SHORT                 = " "0 (LED2_SHORT_DEBOUNCE_0US),1 (LED2_SHORT_DEBOUNCE_10US),2 (LED2_SHORT_DEBOUNCE_32US),3 (LED2_SHORT_DEBOUNCE_64US)"
    tree.end
    tree "FLASH1_VPH_PWR_DROOP"
      sgroup "FLASH1_VPH_PWR_DROOP (at 0x1d35a)"
        set &access:&cmd_addr %l (0x80d35a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd35a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_VPH_PWR_DROOP                         = " "0 (VPH_DROOP_DIS),1 (VPHDROOP_EN)"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   VPH_PWR_DROOP_THRESHOLD                  = " "0 (VDIP_THRES_2P5V),1 (VDIP_THRES_2P6V),2 (VDIP_THRES_2P7V),3 (VDIP_THRES_2P8V),4 (VDIP_THRES_2P9V),5 (VDIP_THRES_3V),6 (VDIP_THRES_3P1V),7 (VDIP_THRES_3P2V)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEBOUNCE_TIME_VPH_PWR_DROOP              = " "0 (VPH_DROOP_DEBOUNCE_0US),1 (VPH_DROOP_DEBOUNCE_10US),2 (VPH_DROOP_DEBOUNCE_32US),3 (VPH_DROOP_DEBOUNCE_64US)"
    tree.end
    tree "FLASH1_MASK_RAMP_CTRL"
      sgroup "FLASH1_MASK_RAMP_CTRL (at 0x1d35b)"
        set &access:&cmd_addr %l (0x80d35b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd35b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MASK_RAMP_CTRL                           = " "0 (MASK_RAMP_DIS),1 (MASK_RAMP_EN)"
    tree.end
    tree "FLASH1_LED1_HDRM_SNS_CTRL"
      sgroup "FLASH1_LED1_HDRM_SNS_CTRL (at 0x1d35c)"
        set &access:&cmd_addr %l (0x80d35c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd35c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED1_HDRM_SNS_EN                         = " "0 (LED1_HR_SNS_DIS),1 (LED1_HR_SNS_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_GAIN_CORRECTION                     = " "0 (LED1_GAIN_CORR_HW),1 (LED1_GAIN_CORR_SW)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LED1_HDRM_SNS_THRESHOLD                  = " "0 (LED1_HR_SNS_THRES_600MV),1 (LED1_HR_SNS_THRES_700MV),2 (LED1_HR_SNS_THRES_800MV),3 (LED1_HR_SNS_THRES_900MV)"
    tree.end
    tree "FLASH1_LED2_HDRM_SNS_CTRL"
      sgroup "FLASH1_LED2_HDRM_SNS_CTRL (at 0x1d35d)"
        set &access:&cmd_addr %l (0x80d35d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd35d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED2_HDRM_SNS_EN                         = " "0 (LED2_HR_SNS_DIS),1 (LED2_HR_SNS_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED2_GAIN_CORRECTION                     = " "0 (LED2_GAIN_CORR_HW),1 (LED2_GAIN_CORR_SW)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LED2_HDRM_SNS_THRESHOLD                  = " "0 (LED2_HR_SNS_THRES_600MV),1 (LED2_HR_SNS_THRES_700MV),2 (LED2_HR_SNS_THRES_800MV),3 (LED2_HR_SNS_THRES_900MV)"
    tree.end
    tree "FLASH1_SEC_ACCESS"
      sgroup "FLASH1_SEC_ACCESS (at 0x1d3d0)"
        set &access:&cmd_addr %l (0x80d3d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "FLASH1_PERPH_RESET_CTL2"
      sgroup "FLASH1_PERPH_RESET_CTL2 (at 0x1d3d9)"
        set &access:&cmd_addr %l (0x80d3d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (IGNORE),1 (FOLLOW)"
    tree.end
    tree "FLASH1_PERPH_RESET_CTL3"
      sgroup "FLASH1_PERPH_RESET_CTL3 (at 0x1d3da)"
        set &access:&cmd_addr %l (0x80d3da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (IGNORE),1 (FOLLOW)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (IGNORE),1 (FOLLOW)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (IGNORE),1 (FOLLOW)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (IGNORE),1 (FOLLOW)"
    tree.end
    tree "FLASH1_PERPH_RESET_CTL4"
      sgroup "FLASH1_PERPH_RESET_CTL4 (at 0x1d3db)"
        set &access:&cmd_addr %l (0x80d3db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NO_RESET),1 (LOCAL_SOFT_RESET)"
    tree.end
    tree "FLASH1_INT_TEST1"
      sgroup "FLASH1_INT_TEST1 (at 0x1d3e0)"
        set &access:&cmd_addr %l (0x80d3e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "FLASH1_INT_TEST_VAL"
      sgroup "FLASH1_INT_TEST_VAL (at 0x1d3e1)"
        set &access:&cmd_addr %l (0x80d3e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_TEST_VAL                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_TEST_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_TEST_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_TEST_VAL                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_TEST_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_TEST_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_TEST_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_TEST_VAL                = " "0, 1"
    tree.end
    tree "FLASH1_TEST1"
      sgroup "FLASH1_TEST1 (at 0x1d3e2)"
        set &access:&cmd_addr %l (0x80d3e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "FLASH1_TEST2"
      sgroup "FLASH1_TEST2 (at 0x1d3e3)"
        set &access:&cmd_addr %l (0x80d3e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   FLSH_ATEST_CTRL                          = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "FLASH1_TEST3"
      sgroup "FLASH1_TEST3 (at 0x1d3e4)"
        set &access:&cmd_addr %l (0x80d3e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_WDOG_TIMER                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_SFTY_TIMER                            = " "0, 1"
    tree.end
    tree "FLASH1_TEST4"
      sgroup "FLASH1_TEST4 (at 0x1d3e5)"
        set &access:&cmd_addr %l (0x80d3e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CLKRATE_TEST                             = " "0, 1"
    tree.end
    tree "FLASH1_TEST5"
      sgroup "FLASH1_TEST5 (at 0x1d3e6)"
        set &access:&cmd_addr %l (0x80d3e60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LED1_SEGMENT_CTRL                        = "
    tree.end
    tree "FLASH1_TEST6"
      sgroup "FLASH1_TEST6 (at 0x1d3e7)"
        set &access:&cmd_addr %l (0x80d3e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LED2_SEGMENT_CTRL                        = "
    tree.end
    tree "FLASH1_TRIM_NUM"
      sgroup "FLASH1_TRIM_NUM (at 0x1d3f0)"
        set &access:&cmd_addr %l (0x80d3f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "FLASH1_TRIM1"
      sgroup "FLASH1_TRIM1 (at 0x1d3f1)"
        set &access:&cmd_addr %l (0x80d3f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LED1_CURR_TRIM_VIN                       = "
    tree.end
    tree "FLASH1_TRIM2"
      sgroup "FLASH1_TRIM2 (at 0x1d3f2)"
        set &access:&cmd_addr %l (0x80d3f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LED1_CURR_TRIM_VREG                      = "
    tree.end
    tree "FLASH1_TRIM3"
      sgroup "FLASH1_TRIM3 (at 0x1d3f3)"
        set &access:&cmd_addr %l (0x80d3f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LED2_CURR_TRIM_VIN                       = "
    tree.end
    tree "FLASH1_TRIM4"
      sgroup "FLASH1_TRIM4 (at 0x1d3f4)"
        set &access:&cmd_addr %l (0x80d3f40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LED2_CURR_TRIM_VREG                      = "
    tree.end
  tree.end
tree.end
tree "GPIO1"
  tree "GPIO1"
    tree "GPIO1_REVISION1"
      sgroup "GPIO1_REVISION1 (at 0xc000)"
        set &access:&cmd_addr %l (0x80c0000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO1_REVISION2"
      sgroup "GPIO1_REVISION2 (at 0xc001)"
        set &access:&cmd_addr %l (0x80c0010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO1_REVISION3"
      sgroup "GPIO1_REVISION3 (at 0xc002)"
        set &access:&cmd_addr %l (0x80c0020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO1_REVISION4"
      sgroup "GPIO1_REVISION4 (at 0xc003)"
        set &access:&cmd_addr %l (0x80c0030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO1_PERPH_TYPE"
      sgroup "GPIO1_PERPH_TYPE (at 0xc004)"
        set &access:&cmd_addr %l (0x80c0040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO1_PERPH_SUBTYPE"
      sgroup "GPIO1_PERPH_SUBTYPE (at 0xc005)"
        set &access:&cmd_addr %l (0x80c0050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO1_STATUS1"
      sgroup "GPIO1_STATUS1 (at 0xc008)"
        set &access:&cmd_addr %l (0x80c0080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO1_INT_RT_STS"
      sgroup "GPIO1_INT_RT_STS (at 0xc010)"
        set &access:&cmd_addr %l (0x80c0100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO1_INT_SET_TYPE"
      sgroup "GPIO1_INT_SET_TYPE (at 0xc011)"
        set &access:&cmd_addr %l (0x80c0110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO1_INT_POLARITY_HIGH"
      sgroup "GPIO1_INT_POLARITY_HIGH (at 0xc012)"
        set &access:&cmd_addr %l (0x80c0120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO1_INT_POLARITY_LOW"
      sgroup "GPIO1_INT_POLARITY_LOW (at 0xc013)"
        set &access:&cmd_addr %l (0x80c0130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO1_INT_LATCHED_CLR"
      sgroup "GPIO1_INT_LATCHED_CLR (at 0xc014)"
        set &access:&cmd_addr %l (0x80c0140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO1_INT_EN_SET"
      sgroup "GPIO1_INT_EN_SET (at 0xc015)"
        set &access:&cmd_addr %l (0x80c0150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO1_INT_EN_CLR"
      sgroup "GPIO1_INT_EN_CLR (at 0xc016)"
        set &access:&cmd_addr %l (0x80c0160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO1_INT_LATCHED_STS"
      sgroup "GPIO1_INT_LATCHED_STS (at 0xc018)"
        set &access:&cmd_addr %l (0x80c0180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO1_INT_PENDING_STS"
      sgroup "GPIO1_INT_PENDING_STS (at 0xc019)"
        set &access:&cmd_addr %l (0x80c0190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO1_INT_MID_SEL"
      sgroup "GPIO1_INT_MID_SEL (at 0xc01a)"
        set &access:&cmd_addr %l (0x80c01a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc01a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO1_INT_PRIORITY"
      sgroup "GPIO1_INT_PRIORITY (at 0xc01b)"
        set &access:&cmd_addr %l (0x80c01b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc01b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO1_MODE_CTL"
      sgroup "GPIO1_MODE_CTL (at 0xc040)"
        set &access:&cmd_addr %l (0x80c0400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO1_DIG_VIN_CTL"
      sgroup "GPIO1_DIG_VIN_CTL (at 0xc041)"
        set &access:&cmd_addr %l (0x80c0410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO1_DIG_PULL_CTL"
      sgroup "GPIO1_DIG_PULL_CTL (at 0xc042)"
        set &access:&cmd_addr %l (0x80c0420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO1_DIG_IN_CTL"
      sgroup "GPIO1_DIG_IN_CTL (at 0xc043)"
        set &access:&cmd_addr %l (0x80c0430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO1_DIG_OUT_CTL"
      sgroup "GPIO1_DIG_OUT_CTL (at 0xc045)"
        set &access:&cmd_addr %l (0x80c0450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO1_EN_CTL"
      sgroup "GPIO1_EN_CTL (at 0xc046)"
        set &access:&cmd_addr %l (0x80c0460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO1_SEC_ACCESS"
      sgroup "GPIO1_SEC_ACCESS (at 0xc0d0)"
        set &access:&cmd_addr %l (0x80c0d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO1_PERPH_RESET_CTL1"
      sgroup "GPIO1_PERPH_RESET_CTL1 (at 0xc0d8)"
        set &access:&cmd_addr %l (0x80c0d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO1_PERPH_RESET_CTL2"
      sgroup "GPIO1_PERPH_RESET_CTL2 (at 0xc0d9)"
        set &access:&cmd_addr %l (0x80c0d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO1_PERPH_RESET_CTL3"
      sgroup "GPIO1_PERPH_RESET_CTL3 (at 0xc0da)"
        set &access:&cmd_addr %l (0x80c0da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO1_PERPH_RESET_CTL4"
      sgroup "GPIO1_PERPH_RESET_CTL4 (at 0xc0db)"
        set &access:&cmd_addr %l (0x80c0db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO2"
  tree "GPIO2"
    tree "GPIO2_REVISION1"
      sgroup "GPIO2_REVISION1 (at 0xc100)"
        set &access:&cmd_addr %l (0x80c1000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO2_REVISION2"
      sgroup "GPIO2_REVISION2 (at 0xc101)"
        set &access:&cmd_addr %l (0x80c1010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO2_REVISION3"
      sgroup "GPIO2_REVISION3 (at 0xc102)"
        set &access:&cmd_addr %l (0x80c1020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO2_REVISION4"
      sgroup "GPIO2_REVISION4 (at 0xc103)"
        set &access:&cmd_addr %l (0x80c1030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO2_PERPH_TYPE"
      sgroup "GPIO2_PERPH_TYPE (at 0xc104)"
        set &access:&cmd_addr %l (0x80c1040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO2_PERPH_SUBTYPE"
      sgroup "GPIO2_PERPH_SUBTYPE (at 0xc105)"
        set &access:&cmd_addr %l (0x80c1050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO2_STATUS1"
      sgroup "GPIO2_STATUS1 (at 0xc108)"
        set &access:&cmd_addr %l (0x80c1080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO2_INT_RT_STS"
      sgroup "GPIO2_INT_RT_STS (at 0xc110)"
        set &access:&cmd_addr %l (0x80c1100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO2_INT_SET_TYPE"
      sgroup "GPIO2_INT_SET_TYPE (at 0xc111)"
        set &access:&cmd_addr %l (0x80c1110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO2_INT_POLARITY_HIGH"
      sgroup "GPIO2_INT_POLARITY_HIGH (at 0xc112)"
        set &access:&cmd_addr %l (0x80c1120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO2_INT_POLARITY_LOW"
      sgroup "GPIO2_INT_POLARITY_LOW (at 0xc113)"
        set &access:&cmd_addr %l (0x80c1130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO2_INT_LATCHED_CLR"
      sgroup "GPIO2_INT_LATCHED_CLR (at 0xc114)"
        set &access:&cmd_addr %l (0x80c1140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO2_INT_EN_SET"
      sgroup "GPIO2_INT_EN_SET (at 0xc115)"
        set &access:&cmd_addr %l (0x80c1150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO2_INT_EN_CLR"
      sgroup "GPIO2_INT_EN_CLR (at 0xc116)"
        set &access:&cmd_addr %l (0x80c1160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO2_INT_LATCHED_STS"
      sgroup "GPIO2_INT_LATCHED_STS (at 0xc118)"
        set &access:&cmd_addr %l (0x80c1180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO2_INT_PENDING_STS"
      sgroup "GPIO2_INT_PENDING_STS (at 0xc119)"
        set &access:&cmd_addr %l (0x80c1190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO2_INT_MID_SEL"
      sgroup "GPIO2_INT_MID_SEL (at 0xc11a)"
        set &access:&cmd_addr %l (0x80c11a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc11a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO2_INT_PRIORITY"
      sgroup "GPIO2_INT_PRIORITY (at 0xc11b)"
        set &access:&cmd_addr %l (0x80c11b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc11b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO2_MODE_CTL"
      sgroup "GPIO2_MODE_CTL (at 0xc140)"
        set &access:&cmd_addr %l (0x80c1400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO2_DIG_VIN_CTL"
      sgroup "GPIO2_DIG_VIN_CTL (at 0xc141)"
        set &access:&cmd_addr %l (0x80c1410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO2_DIG_PULL_CTL"
      sgroup "GPIO2_DIG_PULL_CTL (at 0xc142)"
        set &access:&cmd_addr %l (0x80c1420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO2_DIG_IN_CTL"
      sgroup "GPIO2_DIG_IN_CTL (at 0xc143)"
        set &access:&cmd_addr %l (0x80c1430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO2_DIG_OUT_CTL"
      sgroup "GPIO2_DIG_OUT_CTL (at 0xc145)"
        set &access:&cmd_addr %l (0x80c1450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO2_EN_CTL"
      sgroup "GPIO2_EN_CTL (at 0xc146)"
        set &access:&cmd_addr %l (0x80c1460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO2_SEC_ACCESS"
      sgroup "GPIO2_SEC_ACCESS (at 0xc1d0)"
        set &access:&cmd_addr %l (0x80c1d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO2_PERPH_RESET_CTL1"
      sgroup "GPIO2_PERPH_RESET_CTL1 (at 0xc1d8)"
        set &access:&cmd_addr %l (0x80c1d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO2_PERPH_RESET_CTL2"
      sgroup "GPIO2_PERPH_RESET_CTL2 (at 0xc1d9)"
        set &access:&cmd_addr %l (0x80c1d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO2_PERPH_RESET_CTL3"
      sgroup "GPIO2_PERPH_RESET_CTL3 (at 0xc1da)"
        set &access:&cmd_addr %l (0x80c1da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO2_PERPH_RESET_CTL4"
      sgroup "GPIO2_PERPH_RESET_CTL4 (at 0xc1db)"
        set &access:&cmd_addr %l (0x80c1db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO3"
  tree "GPIO3"
    tree "GPIO3_REVISION1"
      sgroup "GPIO3_REVISION1 (at 0xc200)"
        set &access:&cmd_addr %l (0x80c2000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO3_REVISION2"
      sgroup "GPIO3_REVISION2 (at 0xc201)"
        set &access:&cmd_addr %l (0x80c2010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO3_REVISION3"
      sgroup "GPIO3_REVISION3 (at 0xc202)"
        set &access:&cmd_addr %l (0x80c2020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO3_REVISION4"
      sgroup "GPIO3_REVISION4 (at 0xc203)"
        set &access:&cmd_addr %l (0x80c2030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO3_PERPH_TYPE"
      sgroup "GPIO3_PERPH_TYPE (at 0xc204)"
        set &access:&cmd_addr %l (0x80c2040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO3_PERPH_SUBTYPE"
      sgroup "GPIO3_PERPH_SUBTYPE (at 0xc205)"
        set &access:&cmd_addr %l (0x80c2050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO3_STATUS1"
      sgroup "GPIO3_STATUS1 (at 0xc208)"
        set &access:&cmd_addr %l (0x80c2080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO3_INT_RT_STS"
      sgroup "GPIO3_INT_RT_STS (at 0xc210)"
        set &access:&cmd_addr %l (0x80c2100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO3_INT_SET_TYPE"
      sgroup "GPIO3_INT_SET_TYPE (at 0xc211)"
        set &access:&cmd_addr %l (0x80c2110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO3_INT_POLARITY_HIGH"
      sgroup "GPIO3_INT_POLARITY_HIGH (at 0xc212)"
        set &access:&cmd_addr %l (0x80c2120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO3_INT_POLARITY_LOW"
      sgroup "GPIO3_INT_POLARITY_LOW (at 0xc213)"
        set &access:&cmd_addr %l (0x80c2130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO3_INT_LATCHED_CLR"
      sgroup "GPIO3_INT_LATCHED_CLR (at 0xc214)"
        set &access:&cmd_addr %l (0x80c2140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO3_INT_EN_SET"
      sgroup "GPIO3_INT_EN_SET (at 0xc215)"
        set &access:&cmd_addr %l (0x80c2150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO3_INT_EN_CLR"
      sgroup "GPIO3_INT_EN_CLR (at 0xc216)"
        set &access:&cmd_addr %l (0x80c2160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO3_INT_LATCHED_STS"
      sgroup "GPIO3_INT_LATCHED_STS (at 0xc218)"
        set &access:&cmd_addr %l (0x80c2180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO3_INT_PENDING_STS"
      sgroup "GPIO3_INT_PENDING_STS (at 0xc219)"
        set &access:&cmd_addr %l (0x80c2190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO3_INT_MID_SEL"
      sgroup "GPIO3_INT_MID_SEL (at 0xc21a)"
        set &access:&cmd_addr %l (0x80c21a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc21a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO3_INT_PRIORITY"
      sgroup "GPIO3_INT_PRIORITY (at 0xc21b)"
        set &access:&cmd_addr %l (0x80c21b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc21b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO3_MODE_CTL"
      sgroup "GPIO3_MODE_CTL (at 0xc240)"
        set &access:&cmd_addr %l (0x80c2400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO3_DIG_VIN_CTL"
      sgroup "GPIO3_DIG_VIN_CTL (at 0xc241)"
        set &access:&cmd_addr %l (0x80c2410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO3_DIG_PULL_CTL"
      sgroup "GPIO3_DIG_PULL_CTL (at 0xc242)"
        set &access:&cmd_addr %l (0x80c2420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO3_DIG_IN_CTL"
      sgroup "GPIO3_DIG_IN_CTL (at 0xc243)"
        set &access:&cmd_addr %l (0x80c2430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO3_DIG_OUT_CTL"
      sgroup "GPIO3_DIG_OUT_CTL (at 0xc245)"
        set &access:&cmd_addr %l (0x80c2450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO3_EN_CTL"
      sgroup "GPIO3_EN_CTL (at 0xc246)"
        set &access:&cmd_addr %l (0x80c2460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO3_SEC_ACCESS"
      sgroup "GPIO3_SEC_ACCESS (at 0xc2d0)"
        set &access:&cmd_addr %l (0x80c2d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO3_PERPH_RESET_CTL1"
      sgroup "GPIO3_PERPH_RESET_CTL1 (at 0xc2d8)"
        set &access:&cmd_addr %l (0x80c2d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO3_PERPH_RESET_CTL2"
      sgroup "GPIO3_PERPH_RESET_CTL2 (at 0xc2d9)"
        set &access:&cmd_addr %l (0x80c2d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO3_PERPH_RESET_CTL3"
      sgroup "GPIO3_PERPH_RESET_CTL3 (at 0xc2da)"
        set &access:&cmd_addr %l (0x80c2da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO3_PERPH_RESET_CTL4"
      sgroup "GPIO3_PERPH_RESET_CTL4 (at 0xc2db)"
        set &access:&cmd_addr %l (0x80c2db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO4"
  tree "GPIO4"
    tree "GPIO4_REVISION1"
      sgroup "GPIO4_REVISION1 (at 0xc300)"
        set &access:&cmd_addr %l (0x80c3000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO4_REVISION2"
      sgroup "GPIO4_REVISION2 (at 0xc301)"
        set &access:&cmd_addr %l (0x80c3010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO4_REVISION3"
      sgroup "GPIO4_REVISION3 (at 0xc302)"
        set &access:&cmd_addr %l (0x80c3020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO4_REVISION4"
      sgroup "GPIO4_REVISION4 (at 0xc303)"
        set &access:&cmd_addr %l (0x80c3030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO4_PERPH_TYPE"
      sgroup "GPIO4_PERPH_TYPE (at 0xc304)"
        set &access:&cmd_addr %l (0x80c3040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO4_PERPH_SUBTYPE"
      sgroup "GPIO4_PERPH_SUBTYPE (at 0xc305)"
        set &access:&cmd_addr %l (0x80c3050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO4_STATUS1"
      sgroup "GPIO4_STATUS1 (at 0xc308)"
        set &access:&cmd_addr %l (0x80c3080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO4_INT_RT_STS"
      sgroup "GPIO4_INT_RT_STS (at 0xc310)"
        set &access:&cmd_addr %l (0x80c3100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO4_INT_SET_TYPE"
      sgroup "GPIO4_INT_SET_TYPE (at 0xc311)"
        set &access:&cmd_addr %l (0x80c3110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO4_INT_POLARITY_HIGH"
      sgroup "GPIO4_INT_POLARITY_HIGH (at 0xc312)"
        set &access:&cmd_addr %l (0x80c3120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO4_INT_POLARITY_LOW"
      sgroup "GPIO4_INT_POLARITY_LOW (at 0xc313)"
        set &access:&cmd_addr %l (0x80c3130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO4_INT_LATCHED_CLR"
      sgroup "GPIO4_INT_LATCHED_CLR (at 0xc314)"
        set &access:&cmd_addr %l (0x80c3140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO4_INT_EN_SET"
      sgroup "GPIO4_INT_EN_SET (at 0xc315)"
        set &access:&cmd_addr %l (0x80c3150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO4_INT_EN_CLR"
      sgroup "GPIO4_INT_EN_CLR (at 0xc316)"
        set &access:&cmd_addr %l (0x80c3160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO4_INT_LATCHED_STS"
      sgroup "GPIO4_INT_LATCHED_STS (at 0xc318)"
        set &access:&cmd_addr %l (0x80c3180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO4_INT_PENDING_STS"
      sgroup "GPIO4_INT_PENDING_STS (at 0xc319)"
        set &access:&cmd_addr %l (0x80c3190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO4_INT_MID_SEL"
      sgroup "GPIO4_INT_MID_SEL (at 0xc31a)"
        set &access:&cmd_addr %l (0x80c31a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc31a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO4_INT_PRIORITY"
      sgroup "GPIO4_INT_PRIORITY (at 0xc31b)"
        set &access:&cmd_addr %l (0x80c31b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc31b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO4_MODE_CTL"
      sgroup "GPIO4_MODE_CTL (at 0xc340)"
        set &access:&cmd_addr %l (0x80c3400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO4_DIG_VIN_CTL"
      sgroup "GPIO4_DIG_VIN_CTL (at 0xc341)"
        set &access:&cmd_addr %l (0x80c3410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO4_DIG_PULL_CTL"
      sgroup "GPIO4_DIG_PULL_CTL (at 0xc342)"
        set &access:&cmd_addr %l (0x80c3420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO4_DIG_IN_CTL"
      sgroup "GPIO4_DIG_IN_CTL (at 0xc343)"
        set &access:&cmd_addr %l (0x80c3430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO4_DIG_OUT_CTL"
      sgroup "GPIO4_DIG_OUT_CTL (at 0xc345)"
        set &access:&cmd_addr %l (0x80c3450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO4_EN_CTL"
      sgroup "GPIO4_EN_CTL (at 0xc346)"
        set &access:&cmd_addr %l (0x80c3460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO4_SEC_ACCESS"
      sgroup "GPIO4_SEC_ACCESS (at 0xc3d0)"
        set &access:&cmd_addr %l (0x80c3d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO4_PERPH_RESET_CTL1"
      sgroup "GPIO4_PERPH_RESET_CTL1 (at 0xc3d8)"
        set &access:&cmd_addr %l (0x80c3d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO4_PERPH_RESET_CTL2"
      sgroup "GPIO4_PERPH_RESET_CTL2 (at 0xc3d9)"
        set &access:&cmd_addr %l (0x80c3d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO4_PERPH_RESET_CTL3"
      sgroup "GPIO4_PERPH_RESET_CTL3 (at 0xc3da)"
        set &access:&cmd_addr %l (0x80c3da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO4_PERPH_RESET_CTL4"
      sgroup "GPIO4_PERPH_RESET_CTL4 (at 0xc3db)"
        set &access:&cmd_addr %l (0x80c3db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO5"
  tree "GPIO5"
    tree "GPIO5_REVISION1"
      sgroup "GPIO5_REVISION1 (at 0xc400)"
        set &access:&cmd_addr %l (0x80c4000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO5_REVISION2"
      sgroup "GPIO5_REVISION2 (at 0xc401)"
        set &access:&cmd_addr %l (0x80c4010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO5_REVISION3"
      sgroup "GPIO5_REVISION3 (at 0xc402)"
        set &access:&cmd_addr %l (0x80c4020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO5_REVISION4"
      sgroup "GPIO5_REVISION4 (at 0xc403)"
        set &access:&cmd_addr %l (0x80c4030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO5_PERPH_TYPE"
      sgroup "GPIO5_PERPH_TYPE (at 0xc404)"
        set &access:&cmd_addr %l (0x80c4040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO5_PERPH_SUBTYPE"
      sgroup "GPIO5_PERPH_SUBTYPE (at 0xc405)"
        set &access:&cmd_addr %l (0x80c4050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO5_STATUS1"
      sgroup "GPIO5_STATUS1 (at 0xc408)"
        set &access:&cmd_addr %l (0x80c4080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO5_INT_RT_STS"
      sgroup "GPIO5_INT_RT_STS (at 0xc410)"
        set &access:&cmd_addr %l (0x80c4100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO5_INT_SET_TYPE"
      sgroup "GPIO5_INT_SET_TYPE (at 0xc411)"
        set &access:&cmd_addr %l (0x80c4110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO5_INT_POLARITY_HIGH"
      sgroup "GPIO5_INT_POLARITY_HIGH (at 0xc412)"
        set &access:&cmd_addr %l (0x80c4120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO5_INT_POLARITY_LOW"
      sgroup "GPIO5_INT_POLARITY_LOW (at 0xc413)"
        set &access:&cmd_addr %l (0x80c4130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO5_INT_LATCHED_CLR"
      sgroup "GPIO5_INT_LATCHED_CLR (at 0xc414)"
        set &access:&cmd_addr %l (0x80c4140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO5_INT_EN_SET"
      sgroup "GPIO5_INT_EN_SET (at 0xc415)"
        set &access:&cmd_addr %l (0x80c4150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO5_INT_EN_CLR"
      sgroup "GPIO5_INT_EN_CLR (at 0xc416)"
        set &access:&cmd_addr %l (0x80c4160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO5_INT_LATCHED_STS"
      sgroup "GPIO5_INT_LATCHED_STS (at 0xc418)"
        set &access:&cmd_addr %l (0x80c4180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO5_INT_PENDING_STS"
      sgroup "GPIO5_INT_PENDING_STS (at 0xc419)"
        set &access:&cmd_addr %l (0x80c4190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO5_INT_MID_SEL"
      sgroup "GPIO5_INT_MID_SEL (at 0xc41a)"
        set &access:&cmd_addr %l (0x80c41a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc41a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO5_INT_PRIORITY"
      sgroup "GPIO5_INT_PRIORITY (at 0xc41b)"
        set &access:&cmd_addr %l (0x80c41b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc41b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO5_MODE_CTL"
      sgroup "GPIO5_MODE_CTL (at 0xc440)"
        set &access:&cmd_addr %l (0x80c4400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO5_DIG_VIN_CTL"
      sgroup "GPIO5_DIG_VIN_CTL (at 0xc441)"
        set &access:&cmd_addr %l (0x80c4410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO5_DIG_PULL_CTL"
      sgroup "GPIO5_DIG_PULL_CTL (at 0xc442)"
        set &access:&cmd_addr %l (0x80c4420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO5_DIG_IN_CTL"
      sgroup "GPIO5_DIG_IN_CTL (at 0xc443)"
        set &access:&cmd_addr %l (0x80c4430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO5_DIG_OUT_CTL"
      sgroup "GPIO5_DIG_OUT_CTL (at 0xc445)"
        set &access:&cmd_addr %l (0x80c4450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO5_EN_CTL"
      sgroup "GPIO5_EN_CTL (at 0xc446)"
        set &access:&cmd_addr %l (0x80c4460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO5_SEC_ACCESS"
      sgroup "GPIO5_SEC_ACCESS (at 0xc4d0)"
        set &access:&cmd_addr %l (0x80c4d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO5_PERPH_RESET_CTL1"
      sgroup "GPIO5_PERPH_RESET_CTL1 (at 0xc4d8)"
        set &access:&cmd_addr %l (0x80c4d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO5_PERPH_RESET_CTL2"
      sgroup "GPIO5_PERPH_RESET_CTL2 (at 0xc4d9)"
        set &access:&cmd_addr %l (0x80c4d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO5_PERPH_RESET_CTL3"
      sgroup "GPIO5_PERPH_RESET_CTL3 (at 0xc4da)"
        set &access:&cmd_addr %l (0x80c4da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO5_PERPH_RESET_CTL4"
      sgroup "GPIO5_PERPH_RESET_CTL4 (at 0xc4db)"
        set &access:&cmd_addr %l (0x80c4db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO6"
  tree "GPIO6"
    tree "GPIO6_REVISION1"
      sgroup "GPIO6_REVISION1 (at 0xc500)"
        set &access:&cmd_addr %l (0x80c5000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO6_REVISION2"
      sgroup "GPIO6_REVISION2 (at 0xc501)"
        set &access:&cmd_addr %l (0x80c5010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO6_REVISION3"
      sgroup "GPIO6_REVISION3 (at 0xc502)"
        set &access:&cmd_addr %l (0x80c5020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO6_REVISION4"
      sgroup "GPIO6_REVISION4 (at 0xc503)"
        set &access:&cmd_addr %l (0x80c5030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO6_PERPH_TYPE"
      sgroup "GPIO6_PERPH_TYPE (at 0xc504)"
        set &access:&cmd_addr %l (0x80c5040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO6_PERPH_SUBTYPE"
      sgroup "GPIO6_PERPH_SUBTYPE (at 0xc505)"
        set &access:&cmd_addr %l (0x80c5050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO6_STATUS1"
      sgroup "GPIO6_STATUS1 (at 0xc508)"
        set &access:&cmd_addr %l (0x80c5080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO6_INT_RT_STS"
      sgroup "GPIO6_INT_RT_STS (at 0xc510)"
        set &access:&cmd_addr %l (0x80c5100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO6_INT_SET_TYPE"
      sgroup "GPIO6_INT_SET_TYPE (at 0xc511)"
        set &access:&cmd_addr %l (0x80c5110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO6_INT_POLARITY_HIGH"
      sgroup "GPIO6_INT_POLARITY_HIGH (at 0xc512)"
        set &access:&cmd_addr %l (0x80c5120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO6_INT_POLARITY_LOW"
      sgroup "GPIO6_INT_POLARITY_LOW (at 0xc513)"
        set &access:&cmd_addr %l (0x80c5130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO6_INT_LATCHED_CLR"
      sgroup "GPIO6_INT_LATCHED_CLR (at 0xc514)"
        set &access:&cmd_addr %l (0x80c5140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO6_INT_EN_SET"
      sgroup "GPIO6_INT_EN_SET (at 0xc515)"
        set &access:&cmd_addr %l (0x80c5150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO6_INT_EN_CLR"
      sgroup "GPIO6_INT_EN_CLR (at 0xc516)"
        set &access:&cmd_addr %l (0x80c5160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO6_INT_LATCHED_STS"
      sgroup "GPIO6_INT_LATCHED_STS (at 0xc518)"
        set &access:&cmd_addr %l (0x80c5180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO6_INT_PENDING_STS"
      sgroup "GPIO6_INT_PENDING_STS (at 0xc519)"
        set &access:&cmd_addr %l (0x80c5190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO6_INT_MID_SEL"
      sgroup "GPIO6_INT_MID_SEL (at 0xc51a)"
        set &access:&cmd_addr %l (0x80c51a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc51a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO6_INT_PRIORITY"
      sgroup "GPIO6_INT_PRIORITY (at 0xc51b)"
        set &access:&cmd_addr %l (0x80c51b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc51b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO6_MODE_CTL"
      sgroup "GPIO6_MODE_CTL (at 0xc540)"
        set &access:&cmd_addr %l (0x80c5400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO6_DIG_VIN_CTL"
      sgroup "GPIO6_DIG_VIN_CTL (at 0xc541)"
        set &access:&cmd_addr %l (0x80c5410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO6_DIG_PULL_CTL"
      sgroup "GPIO6_DIG_PULL_CTL (at 0xc542)"
        set &access:&cmd_addr %l (0x80c5420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO6_DIG_IN_CTL"
      sgroup "GPIO6_DIG_IN_CTL (at 0xc543)"
        set &access:&cmd_addr %l (0x80c5430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO6_DIG_OUT_CTL"
      sgroup "GPIO6_DIG_OUT_CTL (at 0xc545)"
        set &access:&cmd_addr %l (0x80c5450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO6_EN_CTL"
      sgroup "GPIO6_EN_CTL (at 0xc546)"
        set &access:&cmd_addr %l (0x80c5460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO6_SEC_ACCESS"
      sgroup "GPIO6_SEC_ACCESS (at 0xc5d0)"
        set &access:&cmd_addr %l (0x80c5d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO6_PERPH_RESET_CTL1"
      sgroup "GPIO6_PERPH_RESET_CTL1 (at 0xc5d8)"
        set &access:&cmd_addr %l (0x80c5d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO6_PERPH_RESET_CTL2"
      sgroup "GPIO6_PERPH_RESET_CTL2 (at 0xc5d9)"
        set &access:&cmd_addr %l (0x80c5d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO6_PERPH_RESET_CTL3"
      sgroup "GPIO6_PERPH_RESET_CTL3 (at 0xc5da)"
        set &access:&cmd_addr %l (0x80c5da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO6_PERPH_RESET_CTL4"
      sgroup "GPIO6_PERPH_RESET_CTL4 (at 0xc5db)"
        set &access:&cmd_addr %l (0x80c5db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO7"
  tree "GPIO7"
    tree "GPIO7_REVISION1"
      sgroup "GPIO7_REVISION1 (at 0xc600)"
        set &access:&cmd_addr %l (0x80c6000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO7_REVISION2"
      sgroup "GPIO7_REVISION2 (at 0xc601)"
        set &access:&cmd_addr %l (0x80c6010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO7_REVISION3"
      sgroup "GPIO7_REVISION3 (at 0xc602)"
        set &access:&cmd_addr %l (0x80c6020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO7_REVISION4"
      sgroup "GPIO7_REVISION4 (at 0xc603)"
        set &access:&cmd_addr %l (0x80c6030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO7_PERPH_TYPE"
      sgroup "GPIO7_PERPH_TYPE (at 0xc604)"
        set &access:&cmd_addr %l (0x80c6040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO7_PERPH_SUBTYPE"
      sgroup "GPIO7_PERPH_SUBTYPE (at 0xc605)"
        set &access:&cmd_addr %l (0x80c6050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO7_STATUS1"
      sgroup "GPIO7_STATUS1 (at 0xc608)"
        set &access:&cmd_addr %l (0x80c6080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO7_INT_RT_STS"
      sgroup "GPIO7_INT_RT_STS (at 0xc610)"
        set &access:&cmd_addr %l (0x80c6100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO7_INT_SET_TYPE"
      sgroup "GPIO7_INT_SET_TYPE (at 0xc611)"
        set &access:&cmd_addr %l (0x80c6110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO7_INT_POLARITY_HIGH"
      sgroup "GPIO7_INT_POLARITY_HIGH (at 0xc612)"
        set &access:&cmd_addr %l (0x80c6120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO7_INT_POLARITY_LOW"
      sgroup "GPIO7_INT_POLARITY_LOW (at 0xc613)"
        set &access:&cmd_addr %l (0x80c6130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO7_INT_LATCHED_CLR"
      sgroup "GPIO7_INT_LATCHED_CLR (at 0xc614)"
        set &access:&cmd_addr %l (0x80c6140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO7_INT_EN_SET"
      sgroup "GPIO7_INT_EN_SET (at 0xc615)"
        set &access:&cmd_addr %l (0x80c6150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO7_INT_EN_CLR"
      sgroup "GPIO7_INT_EN_CLR (at 0xc616)"
        set &access:&cmd_addr %l (0x80c6160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO7_INT_LATCHED_STS"
      sgroup "GPIO7_INT_LATCHED_STS (at 0xc618)"
        set &access:&cmd_addr %l (0x80c6180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO7_INT_PENDING_STS"
      sgroup "GPIO7_INT_PENDING_STS (at 0xc619)"
        set &access:&cmd_addr %l (0x80c6190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO7_INT_MID_SEL"
      sgroup "GPIO7_INT_MID_SEL (at 0xc61a)"
        set &access:&cmd_addr %l (0x80c61a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc61a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO7_INT_PRIORITY"
      sgroup "GPIO7_INT_PRIORITY (at 0xc61b)"
        set &access:&cmd_addr %l (0x80c61b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc61b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO7_MODE_CTL"
      sgroup "GPIO7_MODE_CTL (at 0xc640)"
        set &access:&cmd_addr %l (0x80c6400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO7_DIG_VIN_CTL"
      sgroup "GPIO7_DIG_VIN_CTL (at 0xc641)"
        set &access:&cmd_addr %l (0x80c6410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO7_DIG_PULL_CTL"
      sgroup "GPIO7_DIG_PULL_CTL (at 0xc642)"
        set &access:&cmd_addr %l (0x80c6420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO7_DIG_IN_CTL"
      sgroup "GPIO7_DIG_IN_CTL (at 0xc643)"
        set &access:&cmd_addr %l (0x80c6430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO7_DIG_OUT_CTL"
      sgroup "GPIO7_DIG_OUT_CTL (at 0xc645)"
        set &access:&cmd_addr %l (0x80c6450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO7_EN_CTL"
      sgroup "GPIO7_EN_CTL (at 0xc646)"
        set &access:&cmd_addr %l (0x80c6460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO7_SEC_ACCESS"
      sgroup "GPIO7_SEC_ACCESS (at 0xc6d0)"
        set &access:&cmd_addr %l (0x80c6d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO7_PERPH_RESET_CTL1"
      sgroup "GPIO7_PERPH_RESET_CTL1 (at 0xc6d8)"
        set &access:&cmd_addr %l (0x80c6d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO7_PERPH_RESET_CTL2"
      sgroup "GPIO7_PERPH_RESET_CTL2 (at 0xc6d9)"
        set &access:&cmd_addr %l (0x80c6d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO7_PERPH_RESET_CTL3"
      sgroup "GPIO7_PERPH_RESET_CTL3 (at 0xc6da)"
        set &access:&cmd_addr %l (0x80c6da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO7_PERPH_RESET_CTL4"
      sgroup "GPIO7_PERPH_RESET_CTL4 (at 0xc6db)"
        set &access:&cmd_addr %l (0x80c6db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO8"
  tree "GPIO8"
    tree "GPIO8_REVISION1"
      sgroup "GPIO8_REVISION1 (at 0xc700)"
        set &access:&cmd_addr %l (0x80c7000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO8_REVISION2"
      sgroup "GPIO8_REVISION2 (at 0xc701)"
        set &access:&cmd_addr %l (0x80c7010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO8_REVISION3"
      sgroup "GPIO8_REVISION3 (at 0xc702)"
        set &access:&cmd_addr %l (0x80c7020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO8_REVISION4"
      sgroup "GPIO8_REVISION4 (at 0xc703)"
        set &access:&cmd_addr %l (0x80c7030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO8_PERPH_TYPE"
      sgroup "GPIO8_PERPH_TYPE (at 0xc704)"
        set &access:&cmd_addr %l (0x80c7040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO8_PERPH_SUBTYPE"
      sgroup "GPIO8_PERPH_SUBTYPE (at 0xc705)"
        set &access:&cmd_addr %l (0x80c7050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO8_STATUS1"
      sgroup "GPIO8_STATUS1 (at 0xc708)"
        set &access:&cmd_addr %l (0x80c7080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO8_INT_RT_STS"
      sgroup "GPIO8_INT_RT_STS (at 0xc710)"
        set &access:&cmd_addr %l (0x80c7100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO8_INT_SET_TYPE"
      sgroup "GPIO8_INT_SET_TYPE (at 0xc711)"
        set &access:&cmd_addr %l (0x80c7110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO8_INT_POLARITY_HIGH"
      sgroup "GPIO8_INT_POLARITY_HIGH (at 0xc712)"
        set &access:&cmd_addr %l (0x80c7120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO8_INT_POLARITY_LOW"
      sgroup "GPIO8_INT_POLARITY_LOW (at 0xc713)"
        set &access:&cmd_addr %l (0x80c7130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO8_INT_LATCHED_CLR"
      sgroup "GPIO8_INT_LATCHED_CLR (at 0xc714)"
        set &access:&cmd_addr %l (0x80c7140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO8_INT_EN_SET"
      sgroup "GPIO8_INT_EN_SET (at 0xc715)"
        set &access:&cmd_addr %l (0x80c7150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO8_INT_EN_CLR"
      sgroup "GPIO8_INT_EN_CLR (at 0xc716)"
        set &access:&cmd_addr %l (0x80c7160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO8_INT_LATCHED_STS"
      sgroup "GPIO8_INT_LATCHED_STS (at 0xc718)"
        set &access:&cmd_addr %l (0x80c7180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO8_INT_PENDING_STS"
      sgroup "GPIO8_INT_PENDING_STS (at 0xc719)"
        set &access:&cmd_addr %l (0x80c7190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO8_INT_MID_SEL"
      sgroup "GPIO8_INT_MID_SEL (at 0xc71a)"
        set &access:&cmd_addr %l (0x80c71a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc71a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO8_INT_PRIORITY"
      sgroup "GPIO8_INT_PRIORITY (at 0xc71b)"
        set &access:&cmd_addr %l (0x80c71b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc71b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO8_MODE_CTL"
      sgroup "GPIO8_MODE_CTL (at 0xc740)"
        set &access:&cmd_addr %l (0x80c7400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO8_DIG_VIN_CTL"
      sgroup "GPIO8_DIG_VIN_CTL (at 0xc741)"
        set &access:&cmd_addr %l (0x80c7410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO8_DIG_PULL_CTL"
      sgroup "GPIO8_DIG_PULL_CTL (at 0xc742)"
        set &access:&cmd_addr %l (0x80c7420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO8_DIG_IN_CTL"
      sgroup "GPIO8_DIG_IN_CTL (at 0xc743)"
        set &access:&cmd_addr %l (0x80c7430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO8_DIG_OUT_CTL"
      sgroup "GPIO8_DIG_OUT_CTL (at 0xc745)"
        set &access:&cmd_addr %l (0x80c7450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO8_EN_CTL"
      sgroup "GPIO8_EN_CTL (at 0xc746)"
        set &access:&cmd_addr %l (0x80c7460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO8_SEC_ACCESS"
      sgroup "GPIO8_SEC_ACCESS (at 0xc7d0)"
        set &access:&cmd_addr %l (0x80c7d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO8_PERPH_RESET_CTL1"
      sgroup "GPIO8_PERPH_RESET_CTL1 (at 0xc7d8)"
        set &access:&cmd_addr %l (0x80c7d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO8_PERPH_RESET_CTL2"
      sgroup "GPIO8_PERPH_RESET_CTL2 (at 0xc7d9)"
        set &access:&cmd_addr %l (0x80c7d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO8_PERPH_RESET_CTL3"
      sgroup "GPIO8_PERPH_RESET_CTL3 (at 0xc7da)"
        set &access:&cmd_addr %l (0x80c7da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO8_PERPH_RESET_CTL4"
      sgroup "GPIO8_PERPH_RESET_CTL4 (at 0xc7db)"
        set &access:&cmd_addr %l (0x80c7db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "IADC1_USR"
  tree "IADC1_USR"
    tree "IADC1_USR_REVISION1"
      sgroup "IADC1_USR_REVISION1 (at 0x3600)"
        set &access:&cmd_addr %l (0x8036000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "IADC1_USR_REVISION2"
      sgroup "IADC1_USR_REVISION2 (at 0x3601)"
        set &access:&cmd_addr %l (0x8036010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "IADC1_USR_REVISION3"
      sgroup "IADC1_USR_REVISION3 (at 0x3602)"
        set &access:&cmd_addr %l (0x8036020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "IADC1_USR_REVISION4"
      sgroup "IADC1_USR_REVISION4 (at 0x3603)"
        set &access:&cmd_addr %l (0x8036030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "IADC1_USR_PERPH_TYPE"
      sgroup "IADC1_USR_PERPH_TYPE (at 0x3604)"
        set &access:&cmd_addr %l (0x8036040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "IADC1_USR_PERPH_SUBTYPE"
      sgroup "IADC1_USR_PERPH_SUBTYPE (at 0x3605)"
        set &access:&cmd_addr %l (0x8036050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "IADC1_USR_STATUS1"
      sgroup "IADC1_USR_STATUS1 (at 0x3608)"
        set &access:&cmd_addr %l (0x8036080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MEAS_INTERVAL_EN_STS                     = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   REQ_STS                                  = " "0 (REQ_NOT_IN_PROGRESS),1 (REQ_IN_PROGRESS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC                                      = " "0 (CONV_NOT_COMPLETE),1 (CONV_COMPLETE)"
    tree.end
    tree "IADC1_USR_STATUS2"
      sgroup "IADC1_USR_STATUS2 (at 0x3609)"
        set &access:&cmd_addr %l (0x8036090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   CONV_SEQ_STATE                           = "
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_FLAG                      = " "0 (FIFO_EMPTY_WHEN_REQ_MADE),1 (FIFO_NOT_EMPTY_WHEN_REQ_MADE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CONV_SEQ_TIMEOUT_STS                     = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
    tree.end
    tree "IADC1_USR_INT_RT_STS"
      sgroup "IADC1_USR_INT_RT_STS (at 0x3610)"
        set &access:&cmd_addr %l (0x8036100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_RT_STS                       = " "0 (LOW_THR_INT_FALSE),1 (LOW_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_RT_STS                      = " "0 (HIGH_THR_INT_FALSE),1 (HIGH_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_RT_STS              = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_RT_STS                = " "0 (FIFO_NOT_EMPTY_INT_FALSE),1 (FIFO_EMPTY_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_RT_STS                           = " "0 (CONV_COMPLETE_INT_FALSE),1 (CONV_COMPLETE_INT_TRUE)"
    tree.end
    tree "IADC1_USR_INT_SET_TYPE"
      sgroup "IADC1_USR_INT_SET_TYPE (at 0x3611)"
        set &access:&cmd_addr %l (0x8036110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_SET_TYPE                     = " "0 (LOW_THR_INT_LEVEL),1 (LOW_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_SET_TYPE                    = " "0 (HIGH_THR_INT_LEVEL),1 (HIGH_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_SET_TYPE            = " "0 (CONV_SEQ_TIMEOUT_LEVEL),1 (CONV_SEQ_TIMEOUT_EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_SET_TYPE              = " "0 (FIFO_NOT_EMPTY_LEVEL),1 (FIFO_NOT_EMPTY_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_SET_INT_TYPE                         = " "0 (EOC_LEVEL),1 (EOC_EDGE)"
    tree.end
    tree "IADC1_USR_INT_POLARITY_HIGH"
      sgroup "IADC1_USR_INT_POLARITY_HIGH (at 0x3612)"
        set &access:&cmd_addr %l (0x8036120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_HIGH_DISABLED),1 (LOW_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_HIGH_DISABLED),1 (HIGH_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_HIGH                = " "0 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_HIGH                  = " "0 (FIFO_NOT_EMPTY_INT_POL_HIGH_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_HIGH                             = " "0 (EOC_INT_POL_HIGH_DISABLED),1 (EOC_INT_POL_HIGH_ENABLED)"
    tree.end
    tree "IADC1_USR_INT_POLARITY_LOW"
      sgroup "IADC1_USR_INT_POLARITY_LOW (at 0x3613)"
        set &access:&cmd_addr %l (0x8036130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LOW                          = " "0 (LOW_THR_INT_POL_LOW_DISABLED),1 (LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LOW                         = " "0 (HIGH_THR_INT_POL_LOW_DISABLED),1 (HIGH_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LOW                 = " "0 (CONV_SEQ_TIMEOUT_INT_POL_LOW_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LOW                   = " "0 (FIFO_NOT_EMPTY_INT_POL_LOW_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LOW                              = " "0 (EOC_INT_POL_LOW_DISABLED),1 (EOC_INT_POL_LOW_ENABLED)"
    tree.end
    tree "IADC1_USR_INT_LATCHED_CLR"
      sgroup "IADC1_USR_INT_LATCHED_CLR (at 0x3614)"
        set &access:&cmd_addr %l (0x8036140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_CLR         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "IADC1_USR_INT_EN_SET"
      sgroup "IADC1_USR_INT_EN_SET (at 0x3615)"
        set &access:&cmd_addr %l (0x8036150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_SET                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_SET                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_SET              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_SET                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_SET                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "IADC1_USR_INT_EN_CLR"
      sgroup "IADC1_USR_INT_EN_CLR (at 0x3616)"
        set &access:&cmd_addr %l (0x8036160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_CLR                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_CLR                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_CLR              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_CLR                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_CLR                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "IADC1_USR_INT_LATCHED_STS"
      sgroup "IADC1_USR_INT_LATCHED_STS (at 0x3618)"
        set &access:&cmd_addr %l (0x8036180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_STS                  = " "0 (LOW_THR_INT_LATCHED_FALSE),1 (LOW_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_STS                 = " "0 (HIGH_THR_INT_LATCHED_FALSE),1 (HIGH_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_LATCHED_FALSE),1 (CONV_SEQ_TIMEOUT_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_STS           = " "0 (FIFO_NOT_EMPTY_INT_LATCHED_FALSE),1 (FIFO_NOT_EMPTY_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_STS                      = " "0 (EOC_INT_LATCHED_FALSE),1 (EOC_INT_LATCHED_TRUE)"
    tree.end
    tree "IADC1_USR_INT_PENDING_STS"
      sgroup "IADC1_USR_INT_PENDING_STS (at 0x3619)"
        set &access:&cmd_addr %l (0x8036190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_PENDING_STS                  = " "0 (LOW_THR_INT_PENDING_FALSE),1 (LOW_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_PENDING_STS                 = " "0 (HIGH_THR_INT_PENDING_FALSE),1 (HIGH_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_PENDING_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_PENDING_FALSE),1 (CONV_SEQ_TIMEOUT_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_PENDING_STS           = " "0 (FIFO_NOT_EMPTY_INT_PENDING_FALSE),1 (FIFO_NOT_EMPTY_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_PENDING_STS                      = " "0 (EOC_INT_PENDING_FALSE),1 (EOC_INT_PENDING_TRUE)"
    tree.end
    tree "IADC1_USR_INT_MID_SEL"
      sgroup "IADC1_USR_INT_MID_SEL (at 0x361a)"
        set &access:&cmd_addr %l (0x80361a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x361a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "IADC1_USR_INT_PRIORITY"
      sgroup "IADC1_USR_INT_PRIORITY (at 0x361b)"
        set &access:&cmd_addr %l (0x80361b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x361b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "IADC1_USR_MODE_CTL"
      sgroup "IADC1_USR_MODE_CTL (at 0x3640)"
        set &access:&cmd_addr %l (0x8036400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   USE_BMS_DATA                             = " "0 (DO_CONVERSION),1 (USE_BMS_DATA)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VADC_SYNCH_EN                            = " "0 (SYNCHRONIZED_CONVERSION_FALSE),1 (SYNCHRONIZED_CONVERSION_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OFFSET_RMV_EN                            = " "0 (OFFSET_REMOVED_FALSE),1 (OFFSET_REMOVED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_TRIM_EN                              = " "0 (DAC_REF_TRIM_DISABLED),1 (DAC_REG_TRIM_ENABLED)"
    tree.end
    tree "IADC1_USR_EN_CTL1"
      sgroup "IADC1_USR_EN_CTL1 (at 0x3646)"
        set &access:&cmd_addr %l (0x8036460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_EN                                   = " "0 (ADC_DISABLED),1 (ADC_ENABLED)"
    tree.end
    tree "IADC1_USR_ADC_CH_SEL_CTL"
      sgroup "IADC1_USR_ADC_CH_SEL_CTL (at 0x3648)"
        set &access:&cmd_addr %l (0x8036480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ADC_CH_SEL                               = " "0 (INTRSNS),1 (EXTRSNS),2 (CSP2_CSN2),3 (GAIN),4 (INTRSNS_OFFSET),5 (EXTRSNS_OFFSET),6 (CSP2_CSN2_OFFSET),7 (GAIN2)"
    tree.end
    tree "IADC1_USR_ADC_INT_RSNS_CTL"
      sgroup "IADC1_USR_ADC_INT_RSNS_CTL (at 0x3649)"
        set &access:&cmd_addr %l (0x8036490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ADC_INOUT_SEL                            = " "0 (ZERO_OUTPUT),1 (SHORT_INPUT),2 (TRUE_INPUT_OUTPUT),3 (reserved)"
    tree.end
    tree "IADC1_USR_ADC_DIG_PARAM"
      sgroup "IADC1_USR_ADC_DIG_PARAM (at 0x3650)"
        set &access:&cmd_addr %l (0x8036500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEC_RATIO_SEL                            = " "0 (DECI_512),1 (DECI_1K),2 (DECI_2K),3 (DECI_4K)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CLK_SEL                                  = " "0 (CLK_SEL_2P4MHZ),1 (CLK_SEL_4P8MHZ),2 (CLK_SEL_9P6MHZ),3 (CLK_SEL_19P2MHZ)"
    tree.end
    tree "IADC1_USR_CONV_REQ"
      sgroup "IADC1_USR_CONV_REQ (at 0x3652)"
        set &access:&cmd_addr %l (0x8036520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REQ                                      = " "0, 1"
    tree.end
    tree "IADC1_USR_CONV_SEQ_CTL"
      sgroup "IADC1_USR_CONV_SEQ_CTL (at 0x3654)"
        set &access:&cmd_addr %l (0x8036540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CONV_SEQ_HOLDOFF                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CONV_SEQ_TIMEOUT                         = "
    tree.end
    tree "IADC1_USR_CONV_SEQ_TRIG_CTL"
      sgroup "IADC1_USR_CONV_SEQ_TRIG_CTL (at 0x3655)"
        set &access:&cmd_addr %l (0x8036550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CONV_SEQ_TRIG_COND                       = " "0 (FALLING_EDGE),1 (RISING_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CONV_SEQ_TRIG_SEL                        = " "0 (ADC_TRIG0),1 (ADC_TRIG1),2 (ADC_TRIG2),3 (ADC_TRIG3)"
    tree.end
    tree "IADC1_USR_MEAS_INTERVAL_CTL"
      sgroup "IADC1_USR_MEAS_INTERVAL_CTL (at 0x3657)"
        set &access:&cmd_addr %l (0x8036570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MEAS_INTERVAL_TIME                       = "
    tree.end
    tree "IADC1_USR_MEAS_INTERVAL_OP_CTL"
      sgroup "IADC1_USR_MEAS_INTERVAL_OP_CTL (at 0x3659)"
        set &access:&cmd_addr %l (0x8036590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MEAS_INTERVAL_OP                         = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
    tree.end
    tree "IADC1_USR_FAST_AVG_CTL"
      sgroup "IADC1_USR_FAST_AVG_CTL (at 0x365a)"
        set &access:&cmd_addr %l (0x80365a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x365a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FAST_AVG_SAMPLES                         = "
    tree.end
    tree "IADC1_USR_FAST_AVG_EN"
      sgroup "IADC1_USR_FAST_AVG_EN (at 0x365b)"
        set &access:&cmd_addr %l (0x80365b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x365b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FAST_AVG_EN                              = " "0 (FAST_AVG_DISABLED),1 (FAST_AVG_ENABLED)"
    tree.end
    tree "IADC1_USR_LOW_THR0"
      sgroup "IADC1_USR_LOW_THR0 (at 0x365c)"
        set &access:&cmd_addr %l (0x80365c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x365c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "IADC1_USR_LOW_THR1"
      sgroup "IADC1_USR_LOW_THR1 (at 0x365d)"
        set &access:&cmd_addr %l (0x80365d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x365d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "IADC1_USR_HIGH_THR0"
      sgroup "IADC1_USR_HIGH_THR0 (at 0x365e)"
        set &access:&cmd_addr %l (0x80365e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x365e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "IADC1_USR_HIGH_THR1"
      sgroup "IADC1_USR_HIGH_THR1 (at 0x365f)"
        set &access:&cmd_addr %l (0x80365f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x365f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "IADC1_USR_DATA0"
      sgroup "IADC1_USR_DATA0 (at 0x3660)"
        set &access:&cmd_addr %l (0x8036600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "IADC1_USR_DATA1"
      sgroup "IADC1_USR_DATA1 (at 0x3661)"
        set &access:&cmd_addr %l (0x8036610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "IADC1_USR_SEC_ACCESS"
      sgroup "IADC1_USR_SEC_ACCESS (at 0x36d0)"
        set &access:&cmd_addr %l (0x8036d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "IADC1_USR_PERPH_RESET_CTL1"
      sgroup "IADC1_USR_PERPH_RESET_CTL1 (at 0x36d8)"
        set &access:&cmd_addr %l (0x8036d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (MODULE_DIS_AFTER_WARM_SOFT_RESET),1 (MODULE_EN_AFTER_WARM_SOFT_RESET)"
    tree.end
    tree "IADC1_USR_PERPH_RESET_CTL2"
      sgroup "IADC1_USR_PERPH_RESET_CTL2 (at 0x36d9)"
        set &access:&cmd_addr %l (0x8036d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RESET_FALSE),1 (FOLLOW_GLOBAL_SOFT_RESET_TRUE)"
    tree.end
    tree "IADC1_USR_PERPH_RESET_CTL3"
      sgroup "IADC1_USR_PERPH_RESET_CTL3 (at 0x36da)"
        set &access:&cmd_addr %l (0x8036da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "IADC1_USR_PERPH_RESET_CTL4"
      sgroup "IADC1_USR_PERPH_RESET_CTL4 (at 0x36db)"
        set &access:&cmd_addr %l (0x8036db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "IADC1_USR_INT_TEST1"
      sgroup "IADC1_USR_INT_TEST1 (at 0x36e0)"
        set &access:&cmd_addr %l (0x8036e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_FALSE),1 (INT_TEST_MODE_TRUE)"
    tree.end
    tree "IADC1_USR_INT_TEST_VAL"
      sgroup "IADC1_USR_INT_TEST_VAL (at 0x36e1)"
        set &access:&cmd_addr %l (0x8036e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_TEST_VAL                     = " "0 (LOW_THR_INT_TEST_FALSE),1 (LOW_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_TEST_VAL                    = " "0 (HIGH_THR_INT_TEST_FALSE),1 (HIGH_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_TEST_VAL            = " "0 (CONV_SEQ_TIMEOUT_TEST_FALSE),1 (CONV_SEQ_TIMEOUT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_TEST_VAL              = " "0 (FIFO_NOT_EMPTY_TEST_FALSE),1 (FIFO_NOT_EMPTY_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_TEST_VAL                         = " "0 (EOC_TEST_FALSE),1 (EOC_TEST_TRUE)"
    tree.end
    tree "IADC1_USR_TEST1_ADC_ANA_PARAM"
      sgroup "IADC1_USR_TEST1_ADC_ANA_PARAM (at 0x36e2)"
        set &access:&cmd_addr %l (0x8036e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FILT_RESISTOR_EN                         = " "0 (FILT_RES_DISABLED),1 (FILT_RES_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x3--0x6 1 "  [ 6: 3]   IOTA1_CTL                                = "
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   IOTA2_CTL                                = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CCADC_EN                                 = " "0 (CCADC_MOD_DISABLED),1 (CCADC_MOD_ENABLED)"
    tree.end
    tree "IADC1_USR_TEST2_ADC_DIG_PARAM"
      sgroup "IADC1_USR_TEST2_ADC_DIG_PARAM (at 0x36e3)"
        set &access:&cmd_addr %l (0x8036e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DEM_EN                                   = " "0 (DEM_DISABLED),1 (DEM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SEL_SHIFT                                = " "0 (DECI_SEL),1 (FILTOUT_15_0),2 (FILTOUT_25_16),3 (DECI_SEL1)"
    tree.end
    tree "IADC1_USR_TEST3_ADC_RSV"
      sgroup "IADC1_USR_TEST3_ADC_RSV (at 0x36e4)"
        set &access:&cmd_addr %l (0x8036e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SINC_FILT_SEL                            = " "0 (SINC2_OUTPUT),1 (SINC1_OUTPUT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RESET_SINC_FILT                          = " "0 (RESET_DIG_FILT_FALSE),1 (RESET_DIG_FILT_TRUE)"
    tree.end
    tree "IADC1_USR_TEST4_ADC_ATEST"
      sgroup "IADC1_USR_TEST4_ADC_ATEST (at 0x36e5)"
        set &access:&cmd_addr %l (0x8036e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   IP_MODE                                  = " "0 (LOWPOWER_OTA_DISABLED),1 (LOW_POWER_OTA_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   VOCM_SEL                                 = " "0 (VOCM_0P675),1 (VOCM_0P650),2 (VOCM_0P625),3 (VOCM_0P600)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST_SEL                                = " "0 (ATEST1_DISABLED),1 (ATEST1_CCADC_DATA_OUT1),2 (ATEST1_CCADC_DATA_OUT2),3 (ATEST1_VICM_OTA_BUFF),4 (ATEST1_VICM_DAC),5 (ATEST1_VOCM),6 (ATEST1_VSSA1),7 (ATEST1_VSSA2)"
    tree.end
    tree "IADC1_USR_TEST5_DTEST"
      sgroup "IADC1_USR_TEST5_DTEST (at 0x36e6)"
        set &access:&cmd_addr %l (0x8036e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SEL_FSM                                  = " "0 (REQUEST_FSM),1 (VADC_CONVERSION_FSM),2 (SAMPLE_COUNT_LSB),3 (SAMPLE_COUNT_MSB)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
    tree "IADC1_USR_TEST6_CADC_LDO_VOUT"
      sgroup "IADC1_USR_TEST6_CADC_LDO_VOUT (at 0x36e7)"
        set &access:&cmd_addr %l (0x8036e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CADC_LDO_VSET                            = "
    tree.end
    tree "IADC1_USR_TEST6_CADC_LDO_CTL"
      sgroup "IADC1_USR_TEST6_CADC_LDO_CTL (at 0x36e8)"
        set &access:&cmd_addr %l (0x8036e80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36e80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CADC_LDO_EN                              = " "0 (DEDICATED_CADC_LDO_DISABLED),1 (DEDICATED_CADC_LDO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CADC_LDO_TRIM_CTL                        = " "0 (TRIM_DISABLED1),1 (TRIM_ENABLED),2 (TRIM_DISABLED2),3 (TRIM_READY_FOR_CALIBRATION)"
    tree.end
    tree "IADC1_USR_TRIM_NUM"
      sgroup "IADC1_USR_TRIM_NUM (at 0x36f0)"
        set &access:&cmd_addr %l (0x8036f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "IADC1_USR_TRIM1_LDO"
      sgroup "IADC1_USR_TRIM1_LDO (at 0x36f1)"
        set &access:&cmd_addr %l (0x8036f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CADC_LDO_TRIM                            = "
    tree.end
    tree "IADC1_USR_TRIM2_ADC_OFFSET1"
      sgroup "IADC1_USR_TRIM2_ADC_OFFSET1 (at 0x36f2)"
        set &access:&cmd_addr %l (0x8036f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_OFFSET1                             = "
    tree.end
    tree "IADC1_USR_TRIM3_ADC_OFFSET0"
      sgroup "IADC1_USR_TRIM3_ADC_OFFSET0 (at 0x36f3)"
        set &access:&cmd_addr %l (0x8036f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_OFFSET0                             = "
    tree.end
    tree "IADC1_USR_TRIM2_ADC_FULLSCALE1"
      sgroup "IADC1_USR_TRIM2_ADC_FULLSCALE1 (at 0x36f4)"
        set &access:&cmd_addr %l (0x8036f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_FULLSCALE1                          = "
    tree.end
    tree "IADC1_USR_TRIM3_ADC_FULLSCALE0"
      sgroup "IADC1_USR_TRIM3_ADC_FULLSCALE0 (at 0x36f5)"
        set &access:&cmd_addr %l (0x8036f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x36f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_FULSCALE0                           = "
    tree.end
  tree.end
tree.end
tree "IADC2_BMS"
  tree "IADC2_BMS"
    tree "IADC2_BMS_REVISION1"
      sgroup "IADC2_BMS_REVISION1 (at 0x3800)"
        set &access:&cmd_addr %l (0x8038000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "IADC2_BMS_REVISION2"
      sgroup "IADC2_BMS_REVISION2 (at 0x3801)"
        set &access:&cmd_addr %l (0x8038010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "IADC2_BMS_REVISION3"
      sgroup "IADC2_BMS_REVISION3 (at 0x3802)"
        set &access:&cmd_addr %l (0x8038020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "IADC2_BMS_REVISION4"
      sgroup "IADC2_BMS_REVISION4 (at 0x3803)"
        set &access:&cmd_addr %l (0x8038030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "IADC2_BMS_PERPH_TYPE"
      sgroup "IADC2_BMS_PERPH_TYPE (at 0x3804)"
        set &access:&cmd_addr %l (0x8038040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "IADC2_BMS_PERPH_SUBTYPE"
      sgroup "IADC2_BMS_PERPH_SUBTYPE (at 0x3805)"
        set &access:&cmd_addr %l (0x8038050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "IADC2_BMS_STATUS1"
      sgroup "IADC2_BMS_STATUS1 (at 0x3808)"
        set &access:&cmd_addr %l (0x8038080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MEAS_INTERVAL_EN_STS                     = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   REQ_STS                                  = " "0 (REQ_NOT_IN_PROGRESS),1 (REQ_IN_PROGRESS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC                                      = " "0 (CONV_NOT_COMPLETE),1 (CONV_COMPLETE)"
    tree.end
    tree "IADC2_BMS_STATUS2"
      sgroup "IADC2_BMS_STATUS2 (at 0x3809)"
        set &access:&cmd_addr %l (0x8038090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   CONV_SEQ_STATE                           = "
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_FLAG                      = " "0 (FIFO_EMPTY_WHEN_REQ_MADE),1 (FIFO_NOT_EMPTY_WHEN_REQ_MADE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CONV_SEQ_TIMEOUT_STS                     = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
    tree.end
    tree "IADC2_BMS_INT_RT_STS"
      sgroup "IADC2_BMS_INT_RT_STS (at 0x3810)"
        set &access:&cmd_addr %l (0x8038100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_RT_STS                       = " "0 (LOW_THR_INT_FALSE),1 (LOW_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_RT_STS                      = " "0 (HIGH_THR_INT_FALSE),1 (HIGH_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_RT_STS              = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_RT_STS                = " "0 (FIFO_NOT_EMPTY_INT_FALSE),1 (FIFO_EMPTY_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_RT_STS                           = " "0 (CONV_COMPLETE_INT_FALSE),1 (CONV_COMPLETE_INT_TRUE)"
    tree.end
    tree "IADC2_BMS_INT_SET_TYPE"
      sgroup "IADC2_BMS_INT_SET_TYPE (at 0x3811)"
        set &access:&cmd_addr %l (0x8038110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_SET_TYPE                     = " "0 (LOW_THR_INT_LEVEL),1 (LOW_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_SET_TYPE                    = " "0 (HIGH_THR_INT_LEVEL),1 (HIGH_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_SET_TYPE            = " "0 (CONV_SEQ_TIMEOUT_LEVEL),1 (CONV_SEQ_TIMEOUT_EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_SET_TYPE              = " "0 (FIFO_NOT_EMPTY_LEVEL),1 (FIFO_NOT_EMPTY_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_SET_INT_TYPE                         = " "0 (EOC_LEVEL),1 (EOC_EDGE)"
    tree.end
    tree "IADC2_BMS_INT_POLARITY_HIGH"
      sgroup "IADC2_BMS_INT_POLARITY_HIGH (at 0x3812)"
        set &access:&cmd_addr %l (0x8038120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_HIGH_DISABLED),1 (LOW_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_HIGH_DISABLED),1 (HIGH_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_HIGH                = " "0 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_HIGH                  = " "0 (FIFO_NOT_EMPTY_INT_POL_HIGH_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_HIGH                             = " "0 (EOC_INT_POL_HIGH_DISABLED),1 (EOC_INT_POL_HIGH_ENABLED)"
    tree.end
    tree "IADC2_BMS_INT_POLARITY_LOW"
      sgroup "IADC2_BMS_INT_POLARITY_LOW (at 0x3813)"
        set &access:&cmd_addr %l (0x8038130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LOW                          = " "0 (LOW_THR_INT_POL_LOW_DISABLED),1 (LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LOW                         = " "0 (HIGH_THR_INT_POL_LOW_DISABLED),1 (HIGH_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LOW                 = " "0 (CONV_SEQ_TIMEOUT_INT_POL_LOW_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LOW                   = " "0 (FIFO_NOT_EMPTY_INT_POL_LOW_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LOW                              = " "0 (EOC_INT_POL_LOW_DISABLED),1 (EOC_INT_POL_LOW_ENABLED)"
    tree.end
    tree "IADC2_BMS_INT_LATCHED_CLR"
      sgroup "IADC2_BMS_INT_LATCHED_CLR (at 0x3814)"
        set &access:&cmd_addr %l (0x8038140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_CLR         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "IADC2_BMS_INT_EN_SET"
      sgroup "IADC2_BMS_INT_EN_SET (at 0x3815)"
        set &access:&cmd_addr %l (0x8038150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_SET                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_SET                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_SET              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_SET                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_SET                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "IADC2_BMS_INT_EN_CLR"
      sgroup "IADC2_BMS_INT_EN_CLR (at 0x3816)"
        set &access:&cmd_addr %l (0x8038160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_CLR                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_CLR                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_CLR              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_CLR                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_CLR                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "IADC2_BMS_INT_LATCHED_STS"
      sgroup "IADC2_BMS_INT_LATCHED_STS (at 0x3818)"
        set &access:&cmd_addr %l (0x8038180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_STS                  = " "0 (LOW_THR_INT_LATCHED_FALSE),1 (LOW_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_STS                 = " "0 (HIGH_THR_INT_LATCHED_FALSE),1 (HIGH_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_LATCHED_FALSE),1 (CONV_SEQ_TIMEOUT_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_STS           = " "0 (FIFO_NOT_EMPTY_INT_LATCHED_FALSE),1 (FIFO_NOT_EMPTY_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_STS                      = " "0 (EOC_INT_LATCHED_FALSE),1 (EOC_INT_LATCHED_TRUE)"
    tree.end
    tree "IADC2_BMS_INT_PENDING_STS"
      sgroup "IADC2_BMS_INT_PENDING_STS (at 0x3819)"
        set &access:&cmd_addr %l (0x8038190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_PENDING_STS                  = " "0 (LOW_THR_INT_PENDING_FALSE),1 (LOW_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_PENDING_STS                 = " "0 (HIGH_THR_INT_PENDING_FALSE),1 (HIGH_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_PENDING_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_PENDING_FALSE),1 (CONV_SEQ_TIMEOUT_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_PENDING_STS           = " "0 (FIFO_NOT_EMPTY_INT_PENDING_FALSE),1 (FIFO_NOT_EMPTY_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_PENDING_STS                      = " "0 (EOC_INT_PENDING_FALSE),1 (EOC_INT_PENDING_TRUE)"
    tree.end
    tree "IADC2_BMS_INT_MID_SEL"
      sgroup "IADC2_BMS_INT_MID_SEL (at 0x381a)"
        set &access:&cmd_addr %l (0x80381a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x381a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "IADC2_BMS_INT_PRIORITY"
      sgroup "IADC2_BMS_INT_PRIORITY (at 0x381b)"
        set &access:&cmd_addr %l (0x80381b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x381b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "IADC2_BMS_MODE_CTL"
      sgroup "IADC2_BMS_MODE_CTL (at 0x3840)"
        set &access:&cmd_addr %l (0x8038400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   USE_BMS_DATA                             = " "0 (DO_CONVERSION),1 (USE_BMS_DATA)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VADC_SYNCH_EN                            = " "0 (SYNCHRONIZED_CONVERSION_FALSE),1 (SYNCHRONIZED_CONVERSION_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OFFSET_RMV_EN                            = " "0 (OFFSET_REMOVED_FALSE),1 (OFFSET_REMOVED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_TRIM_EN                              = " "0 (DAC_REF_TRIM_DISABLED),1 (DAC_REG_TRIM_ENABLED)"
    tree.end
    tree "IADC2_BMS_EN_CTL1"
      sgroup "IADC2_BMS_EN_CTL1 (at 0x3846)"
        set &access:&cmd_addr %l (0x8038460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_EN                                   = " "0 (ADC_DISABLED),1 (ADC_ENABLED)"
    tree.end
    tree "IADC2_BMS_ADC_CH_SEL_CTL"
      sgroup "IADC2_BMS_ADC_CH_SEL_CTL (at 0x3848)"
        set &access:&cmd_addr %l (0x8038480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ADC_CH_SEL                               = " "0 (INTRSNS),1 (EXTRSNS),2 (CSP2_CSN2),3 (GAIN),4 (INTRSNS_OFFSET),5 (EXTRSNS_OFFSET),6 (CSP2_CSN2_OFFSET),7 (GAIN2)"
    tree.end
    tree "IADC2_BMS_ADC_INT_RSNS_CTL"
      sgroup "IADC2_BMS_ADC_INT_RSNS_CTL (at 0x3849)"
        set &access:&cmd_addr %l (0x8038490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ADC_INOUT_SEL                            = " "0 (ZERO_OUTPUT),1 (SHORT_INPUT),2 (TRUE_INPUT_OUTPUT),3 (reserved)"
    tree.end
    tree "IADC2_BMS_ADC_DIG_PARAM"
      sgroup "IADC2_BMS_ADC_DIG_PARAM (at 0x3850)"
        set &access:&cmd_addr %l (0x8038500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEC_RATIO_SEL                            = " "0 (DECI_512),1 (DECI_1K),2 (DECI_2K),3 (DECI_4K)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CLK_SEL                                  = " "0 (CLK_SEL_2P4MHZ),1 (CLK_SEL_4P8MHZ),2 (CLK_SEL_9P6MHZ),3 (CLK_SEL_19P2MHZ)"
    tree.end
    tree "IADC2_BMS_CONV_REQ"
      sgroup "IADC2_BMS_CONV_REQ (at 0x3852)"
        set &access:&cmd_addr %l (0x8038520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REQ                                      = " "0, 1"
    tree.end
    tree "IADC2_BMS_CONV_SEQ_CTL"
      sgroup "IADC2_BMS_CONV_SEQ_CTL (at 0x3854)"
        set &access:&cmd_addr %l (0x8038540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CONV_SEQ_HOLDOFF                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CONV_SEQ_TIMEOUT                         = "
    tree.end
    tree "IADC2_BMS_CONV_SEQ_TRIG_CTL"
      sgroup "IADC2_BMS_CONV_SEQ_TRIG_CTL (at 0x3855)"
        set &access:&cmd_addr %l (0x8038550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CONV_SEQ_TRIG_COND                       = " "0 (FALLING_EDGE),1 (RISING_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CONV_SEQ_TRIG_SEL                        = " "0 (ADC_TRIG0),1 (ADC_TRIG1),2 (ADC_TRIG2),3 (ADC_TRIG3)"
    tree.end
    tree "IADC2_BMS_MEAS_INTERVAL_CTL"
      sgroup "IADC2_BMS_MEAS_INTERVAL_CTL (at 0x3857)"
        set &access:&cmd_addr %l (0x8038570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MEAS_INTERVAL_TIME                       = "
    tree.end
    tree "IADC2_BMS_MEAS_INTERVAL_OP_CTL"
      sgroup "IADC2_BMS_MEAS_INTERVAL_OP_CTL (at 0x3859)"
        set &access:&cmd_addr %l (0x8038590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MEAS_INTERVAL_OP                         = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
    tree.end
    tree "IADC2_BMS_FAST_AVG_CTL"
      sgroup "IADC2_BMS_FAST_AVG_CTL (at 0x385a)"
        set &access:&cmd_addr %l (0x80385a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x385a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FAST_AVG_SAMPLES                         = "
    tree.end
    tree "IADC2_BMS_FAST_AVG_EN"
      sgroup "IADC2_BMS_FAST_AVG_EN (at 0x385b)"
        set &access:&cmd_addr %l (0x80385b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x385b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FAST_AVG_EN                              = " "0 (FAST_AVG_DISABLED),1 (FAST_AVG_ENABLED)"
    tree.end
    tree "IADC2_BMS_LOW_THR0"
      sgroup "IADC2_BMS_LOW_THR0 (at 0x385c)"
        set &access:&cmd_addr %l (0x80385c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x385c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "IADC2_BMS_LOW_THR1"
      sgroup "IADC2_BMS_LOW_THR1 (at 0x385d)"
        set &access:&cmd_addr %l (0x80385d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x385d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "IADC2_BMS_HIGH_THR0"
      sgroup "IADC2_BMS_HIGH_THR0 (at 0x385e)"
        set &access:&cmd_addr %l (0x80385e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x385e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "IADC2_BMS_HIGH_THR1"
      sgroup "IADC2_BMS_HIGH_THR1 (at 0x385f)"
        set &access:&cmd_addr %l (0x80385f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x385f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "IADC2_BMS_DATA0"
      sgroup "IADC2_BMS_DATA0 (at 0x3860)"
        set &access:&cmd_addr %l (0x8038600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "IADC2_BMS_DATA1"
      sgroup "IADC2_BMS_DATA1 (at 0x3861)"
        set &access:&cmd_addr %l (0x8038610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "IADC2_BMS_SEC_ACCESS"
      sgroup "IADC2_BMS_SEC_ACCESS (at 0x38d0)"
        set &access:&cmd_addr %l (0x8038d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "IADC2_BMS_PERPH_RESET_CTL1"
      sgroup "IADC2_BMS_PERPH_RESET_CTL1 (at 0x38d8)"
        set &access:&cmd_addr %l (0x8038d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (MODULE_DIS_AFTER_WARM_SOFT_RESET),1 (MODULE_EN_AFTER_WARM_SOFT_RESET)"
    tree.end
    tree "IADC2_BMS_PERPH_RESET_CTL2"
      sgroup "IADC2_BMS_PERPH_RESET_CTL2 (at 0x38d9)"
        set &access:&cmd_addr %l (0x8038d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RESET_FALSE),1 (FOLLOW_GLOBAL_SOFT_RESET_TRUE)"
    tree.end
    tree "IADC2_BMS_PERPH_RESET_CTL3"
      sgroup "IADC2_BMS_PERPH_RESET_CTL3 (at 0x38da)"
        set &access:&cmd_addr %l (0x8038da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "IADC2_BMS_PERPH_RESET_CTL4"
      sgroup "IADC2_BMS_PERPH_RESET_CTL4 (at 0x38db)"
        set &access:&cmd_addr %l (0x8038db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "IADC2_BMS_INT_TEST1"
      sgroup "IADC2_BMS_INT_TEST1 (at 0x38e0)"
        set &access:&cmd_addr %l (0x8038e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_FALSE),1 (INT_TEST_MODE_TRUE)"
    tree.end
    tree "IADC2_BMS_INT_TEST_VAL"
      sgroup "IADC2_BMS_INT_TEST_VAL (at 0x38e1)"
        set &access:&cmd_addr %l (0x8038e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_TEST_VAL                     = " "0 (LOW_THR_INT_TEST_FALSE),1 (LOW_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_TEST_VAL                    = " "0 (HIGH_THR_INT_TEST_FALSE),1 (HIGH_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_TEST_VAL            = " "0 (CONV_SEQ_TIMEOUT_TEST_FALSE),1 (CONV_SEQ_TIMEOUT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_TEST_VAL              = " "0 (FIFO_NOT_EMPTY_TEST_FALSE),1 (FIFO_NOT_EMPTY_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_TEST_VAL                         = " "0 (EOC_TEST_FALSE),1 (EOC_TEST_TRUE)"
    tree.end
    tree "IADC2_BMS_TEST5_DTEST"
      sgroup "IADC2_BMS_TEST5_DTEST (at 0x38e6)"
        set &access:&cmd_addr %l (0x8038e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SEL_FSM                                  = " "0 (REQUEST_FSM),1 (VADC_CONVERSION_FSM),2 (SAMPLE_COUNT_LSB),3 (SAMPLE_COUNT_MSB)"
    tree.end
    tree "IADC2_BMS_TRIM2_ADC_OFFSET1"
      sgroup "IADC2_BMS_TRIM2_ADC_OFFSET1 (at 0x38f2)"
        set &access:&cmd_addr %l (0x8038f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_OFFSET1                             = "
    tree.end
    tree "IADC2_BMS_TRIM3_ADC_OFFSET0"
      sgroup "IADC2_BMS_TRIM3_ADC_OFFSET0 (at 0x38f3)"
        set &access:&cmd_addr %l (0x8038f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_OFFSET0                             = "
    tree.end
    tree "IADC2_BMS_TRIM2_ADC_FULLSCALE1"
      sgroup "IADC2_BMS_TRIM2_ADC_FULLSCALE1 (at 0x38f4)"
        set &access:&cmd_addr %l (0x8038f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_FULLSCALE1                          = "
    tree.end
    tree "IADC2_BMS_TRIM3_ADC_FULLSCALE0"
      sgroup "IADC2_BMS_TRIM3_ADC_FULLSCALE0 (at 0x38f5)"
        set &access:&cmd_addr %l (0x8038f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x38f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_FULSCALE0                           = "
    tree.end
  tree.end
tree.end
tree "IADC2_MDM"
  tree "IADC2_MDM"
    tree "IADC2_MDM_REVISION1"
      sgroup "IADC2_MDM_REVISION1 (at 0x3700)"
        set &access:&cmd_addr %l (0x8037000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "IADC2_MDM_REVISION2"
      sgroup "IADC2_MDM_REVISION2 (at 0x3701)"
        set &access:&cmd_addr %l (0x8037010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "IADC2_MDM_REVISION3"
      sgroup "IADC2_MDM_REVISION3 (at 0x3702)"
        set &access:&cmd_addr %l (0x8037020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "IADC2_MDM_REVISION4"
      sgroup "IADC2_MDM_REVISION4 (at 0x3703)"
        set &access:&cmd_addr %l (0x8037030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "IADC2_MDM_PERPH_TYPE"
      sgroup "IADC2_MDM_PERPH_TYPE (at 0x3704)"
        set &access:&cmd_addr %l (0x8037040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "IADC2_MDM_PERPH_SUBTYPE"
      sgroup "IADC2_MDM_PERPH_SUBTYPE (at 0x3705)"
        set &access:&cmd_addr %l (0x8037050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "IADC2_MDM_STATUS1"
      sgroup "IADC2_MDM_STATUS1 (at 0x3708)"
        set &access:&cmd_addr %l (0x8037080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MEAS_INTERVAL_EN_STS                     = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   REQ_STS                                  = " "0 (REQ_NOT_IN_PROGRESS),1 (REQ_IN_PROGRESS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC                                      = " "0 (CONV_NOT_COMPLETE),1 (CONV_COMPLETE)"
    tree.end
    tree "IADC2_MDM_STATUS2"
      sgroup "IADC2_MDM_STATUS2 (at 0x3709)"
        set &access:&cmd_addr %l (0x8037090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   CONV_SEQ_STATE                           = "
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_FLAG                      = " "0 (FIFO_EMPTY_WHEN_REQ_MADE),1 (FIFO_NOT_EMPTY_WHEN_REQ_MADE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CONV_SEQ_TIMEOUT_STS                     = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
    tree.end
    tree "IADC2_MDM_INT_RT_STS"
      sgroup "IADC2_MDM_INT_RT_STS (at 0x3710)"
        set &access:&cmd_addr %l (0x8037100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_RT_STS                       = " "0 (LOW_THR_INT_FALSE),1 (LOW_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_RT_STS                      = " "0 (HIGH_THR_INT_FALSE),1 (HIGH_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_RT_STS              = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_RT_STS                = " "0 (FIFO_NOT_EMPTY_INT_FALSE),1 (FIFO_EMPTY_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_RT_STS                           = " "0 (CONV_COMPLETE_INT_FALSE),1 (CONV_COMPLETE_INT_TRUE)"
    tree.end
    tree "IADC2_MDM_INT_SET_TYPE"
      sgroup "IADC2_MDM_INT_SET_TYPE (at 0x3711)"
        set &access:&cmd_addr %l (0x8037110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_SET_TYPE                     = " "0 (LOW_THR_INT_LEVEL),1 (LOW_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_SET_TYPE                    = " "0 (HIGH_THR_INT_LEVEL),1 (HIGH_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_SET_TYPE            = " "0 (CONV_SEQ_TIMEOUT_LEVEL),1 (CONV_SEQ_TIMEOUT_EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_SET_TYPE              = " "0 (FIFO_NOT_EMPTY_LEVEL),1 (FIFO_NOT_EMPTY_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_SET_INT_TYPE                         = " "0 (EOC_LEVEL),1 (EOC_EDGE)"
    tree.end
    tree "IADC2_MDM_INT_POLARITY_HIGH"
      sgroup "IADC2_MDM_INT_POLARITY_HIGH (at 0x3712)"
        set &access:&cmd_addr %l (0x8037120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_HIGH_DISABLED),1 (LOW_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_HIGH_DISABLED),1 (HIGH_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_HIGH                = " "0 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_HIGH                  = " "0 (FIFO_NOT_EMPTY_INT_POL_HIGH_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_HIGH                             = " "0 (EOC_INT_POL_HIGH_DISABLED),1 (EOC_INT_POL_HIGH_ENABLED)"
    tree.end
    tree "IADC2_MDM_INT_POLARITY_LOW"
      sgroup "IADC2_MDM_INT_POLARITY_LOW (at 0x3713)"
        set &access:&cmd_addr %l (0x8037130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LOW                          = " "0 (LOW_THR_INT_POL_LOW_DISABLED),1 (LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LOW                         = " "0 (HIGH_THR_INT_POL_LOW_DISABLED),1 (HIGH_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LOW                 = " "0 (CONV_SEQ_TIMEOUT_INT_POL_LOW_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LOW                   = " "0 (FIFO_NOT_EMPTY_INT_POL_LOW_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LOW                              = " "0 (EOC_INT_POL_LOW_DISABLED),1 (EOC_INT_POL_LOW_ENABLED)"
    tree.end
    tree "IADC2_MDM_INT_LATCHED_CLR"
      sgroup "IADC2_MDM_INT_LATCHED_CLR (at 0x3714)"
        set &access:&cmd_addr %l (0x8037140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_CLR         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "IADC2_MDM_INT_EN_SET"
      sgroup "IADC2_MDM_INT_EN_SET (at 0x3715)"
        set &access:&cmd_addr %l (0x8037150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_SET                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_SET                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_SET              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_SET                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_SET                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "IADC2_MDM_INT_EN_CLR"
      sgroup "IADC2_MDM_INT_EN_CLR (at 0x3716)"
        set &access:&cmd_addr %l (0x8037160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_CLR                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_CLR                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_CLR              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_CLR                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_CLR                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "IADC2_MDM_INT_LATCHED_STS"
      sgroup "IADC2_MDM_INT_LATCHED_STS (at 0x3718)"
        set &access:&cmd_addr %l (0x8037180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_STS                  = " "0 (LOW_THR_INT_LATCHED_FALSE),1 (LOW_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_STS                 = " "0 (HIGH_THR_INT_LATCHED_FALSE),1 (HIGH_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_LATCHED_FALSE),1 (CONV_SEQ_TIMEOUT_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_STS           = " "0 (FIFO_NOT_EMPTY_INT_LATCHED_FALSE),1 (FIFO_NOT_EMPTY_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_STS                      = " "0 (EOC_INT_LATCHED_FALSE),1 (EOC_INT_LATCHED_TRUE)"
    tree.end
    tree "IADC2_MDM_INT_PENDING_STS"
      sgroup "IADC2_MDM_INT_PENDING_STS (at 0x3719)"
        set &access:&cmd_addr %l (0x8037190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_PENDING_STS                  = " "0 (LOW_THR_INT_PENDING_FALSE),1 (LOW_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_PENDING_STS                 = " "0 (HIGH_THR_INT_PENDING_FALSE),1 (HIGH_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_PENDING_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_PENDING_FALSE),1 (CONV_SEQ_TIMEOUT_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_PENDING_STS           = " "0 (FIFO_NOT_EMPTY_INT_PENDING_FALSE),1 (FIFO_NOT_EMPTY_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_PENDING_STS                      = " "0 (EOC_INT_PENDING_FALSE),1 (EOC_INT_PENDING_TRUE)"
    tree.end
    tree "IADC2_MDM_INT_MID_SEL"
      sgroup "IADC2_MDM_INT_MID_SEL (at 0x371a)"
        set &access:&cmd_addr %l (0x80371a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x371a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "IADC2_MDM_INT_PRIORITY"
      sgroup "IADC2_MDM_INT_PRIORITY (at 0x371b)"
        set &access:&cmd_addr %l (0x80371b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x371b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "IADC2_MDM_MODE_CTL"
      sgroup "IADC2_MDM_MODE_CTL (at 0x3740)"
        set &access:&cmd_addr %l (0x8037400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   USE_BMS_DATA                             = " "0 (DO_CONVERSION),1 (USE_BMS_DATA)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VADC_SYNCH_EN                            = " "0 (SYNCHRONIZED_CONVERSION_FALSE),1 (SYNCHRONIZED_CONVERSION_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OFFSET_RMV_EN                            = " "0 (OFFSET_REMOVED_FALSE),1 (OFFSET_REMOVED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_TRIM_EN                              = " "0 (DAC_REF_TRIM_DISABLED),1 (DAC_REG_TRIM_ENABLED)"
    tree.end
    tree "IADC2_MDM_EN_CTL1"
      sgroup "IADC2_MDM_EN_CTL1 (at 0x3746)"
        set &access:&cmd_addr %l (0x8037460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_EN                                   = " "0 (ADC_DISABLED),1 (ADC_ENABLED)"
    tree.end
    tree "IADC2_MDM_ADC_CH_SEL_CTL"
      sgroup "IADC2_MDM_ADC_CH_SEL_CTL (at 0x3748)"
        set &access:&cmd_addr %l (0x8037480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ADC_CH_SEL                               = " "0 (INTRSNS),1 (EXTRSNS),2 (CSP2_CSN2),3 (GAIN),4 (INTRSNS_OFFSET),5 (EXTRSNS_OFFSET),6 (CSP2_CSN2_OFFSET),7 (GAIN2)"
    tree.end
    tree "IADC2_MDM_ADC_INT_RSNS_CTL"
      sgroup "IADC2_MDM_ADC_INT_RSNS_CTL (at 0x3749)"
        set &access:&cmd_addr %l (0x8037490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ADC_INOUT_SEL                            = " "0 (ZERO_OUTPUT),1 (SHORT_INPUT),2 (TRUE_INPUT_OUTPUT),3 (reserved)"
    tree.end
    tree "IADC2_MDM_ADC_DIG_PARAM"
      sgroup "IADC2_MDM_ADC_DIG_PARAM (at 0x3750)"
        set &access:&cmd_addr %l (0x8037500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEC_RATIO_SEL                            = " "0 (DECI_512),1 (DECI_1K),2 (DECI_2K),3 (DECI_4K)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CLK_SEL                                  = " "0 (CLK_SEL_2P4MHZ),1 (CLK_SEL_4P8MHZ),2 (CLK_SEL_9P6MHZ),3 (CLK_SEL_19P2MHZ)"
    tree.end
    tree "IADC2_MDM_CONV_REQ"
      sgroup "IADC2_MDM_CONV_REQ (at 0x3752)"
        set &access:&cmd_addr %l (0x8037520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REQ                                      = " "0, 1"
    tree.end
    tree "IADC2_MDM_CONV_SEQ_CTL"
      sgroup "IADC2_MDM_CONV_SEQ_CTL (at 0x3754)"
        set &access:&cmd_addr %l (0x8037540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CONV_SEQ_HOLDOFF                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CONV_SEQ_TIMEOUT                         = "
    tree.end
    tree "IADC2_MDM_CONV_SEQ_TRIG_CTL"
      sgroup "IADC2_MDM_CONV_SEQ_TRIG_CTL (at 0x3755)"
        set &access:&cmd_addr %l (0x8037550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CONV_SEQ_TRIG_COND                       = " "0 (FALLING_EDGE),1 (RISING_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CONV_SEQ_TRIG_SEL                        = " "0 (ADC_TRIG0),1 (ADC_TRIG1),2 (ADC_TRIG2),3 (ADC_TRIG3)"
    tree.end
    tree "IADC2_MDM_MEAS_INTERVAL_CTL"
      sgroup "IADC2_MDM_MEAS_INTERVAL_CTL (at 0x3757)"
        set &access:&cmd_addr %l (0x8037570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MEAS_INTERVAL_TIME                       = "
    tree.end
    tree "IADC2_MDM_MEAS_INTERVAL_OP_CTL"
      sgroup "IADC2_MDM_MEAS_INTERVAL_OP_CTL (at 0x3759)"
        set &access:&cmd_addr %l (0x8037590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MEAS_INTERVAL_OP                         = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
    tree.end
    tree "IADC2_MDM_FAST_AVG_CTL"
      sgroup "IADC2_MDM_FAST_AVG_CTL (at 0x375a)"
        set &access:&cmd_addr %l (0x80375a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x375a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FAST_AVG_SAMPLES                         = "
    tree.end
    tree "IADC2_MDM_FAST_AVG_EN"
      sgroup "IADC2_MDM_FAST_AVG_EN (at 0x375b)"
        set &access:&cmd_addr %l (0x80375b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x375b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FAST_AVG_EN                              = " "0 (FAST_AVG_DISABLED),1 (FAST_AVG_ENABLED)"
    tree.end
    tree "IADC2_MDM_LOW_THR0"
      sgroup "IADC2_MDM_LOW_THR0 (at 0x375c)"
        set &access:&cmd_addr %l (0x80375c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x375c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "IADC2_MDM_LOW_THR1"
      sgroup "IADC2_MDM_LOW_THR1 (at 0x375d)"
        set &access:&cmd_addr %l (0x80375d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x375d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "IADC2_MDM_HIGH_THR0"
      sgroup "IADC2_MDM_HIGH_THR0 (at 0x375e)"
        set &access:&cmd_addr %l (0x80375e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x375e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "IADC2_MDM_HIGH_THR1"
      sgroup "IADC2_MDM_HIGH_THR1 (at 0x375f)"
        set &access:&cmd_addr %l (0x80375f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x375f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "IADC2_MDM_DATA0"
      sgroup "IADC2_MDM_DATA0 (at 0x3760)"
        set &access:&cmd_addr %l (0x8037600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "IADC2_MDM_DATA1"
      sgroup "IADC2_MDM_DATA1 (at 0x3761)"
        set &access:&cmd_addr %l (0x8037610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "IADC2_MDM_SEC_ACCESS"
      sgroup "IADC2_MDM_SEC_ACCESS (at 0x37d0)"
        set &access:&cmd_addr %l (0x8037d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "IADC2_MDM_PERPH_RESET_CTL1"
      sgroup "IADC2_MDM_PERPH_RESET_CTL1 (at 0x37d8)"
        set &access:&cmd_addr %l (0x8037d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (MODULE_DIS_AFTER_WARM_SOFT_RESET),1 (MODULE_EN_AFTER_WARM_SOFT_RESET)"
    tree.end
    tree "IADC2_MDM_PERPH_RESET_CTL2"
      sgroup "IADC2_MDM_PERPH_RESET_CTL2 (at 0x37d9)"
        set &access:&cmd_addr %l (0x8037d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RESET_FALSE),1 (FOLLOW_GLOBAL_SOFT_RESET_TRUE)"
    tree.end
    tree "IADC2_MDM_PERPH_RESET_CTL3"
      sgroup "IADC2_MDM_PERPH_RESET_CTL3 (at 0x37da)"
        set &access:&cmd_addr %l (0x8037da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "IADC2_MDM_PERPH_RESET_CTL4"
      sgroup "IADC2_MDM_PERPH_RESET_CTL4 (at 0x37db)"
        set &access:&cmd_addr %l (0x8037db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "IADC2_MDM_INT_TEST1"
      sgroup "IADC2_MDM_INT_TEST1 (at 0x37e0)"
        set &access:&cmd_addr %l (0x8037e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_FALSE),1 (INT_TEST_MODE_TRUE)"
    tree.end
    tree "IADC2_MDM_INT_TEST_VAL"
      sgroup "IADC2_MDM_INT_TEST_VAL (at 0x37e1)"
        set &access:&cmd_addr %l (0x8037e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_TEST_VAL                     = " "0 (LOW_THR_INT_TEST_FALSE),1 (LOW_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_TEST_VAL                    = " "0 (HIGH_THR_INT_TEST_FALSE),1 (HIGH_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_TEST_VAL            = " "0 (CONV_SEQ_TIMEOUT_TEST_FALSE),1 (CONV_SEQ_TIMEOUT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_TEST_VAL              = " "0 (FIFO_NOT_EMPTY_TEST_FALSE),1 (FIFO_NOT_EMPTY_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_TEST_VAL                         = " "0 (EOC_TEST_FALSE),1 (EOC_TEST_TRUE)"
    tree.end
    tree "IADC2_MDM_TEST5_DTEST"
      sgroup "IADC2_MDM_TEST5_DTEST (at 0x37e6)"
        set &access:&cmd_addr %l (0x8037e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SEL_FSM                                  = " "0 (REQUEST_FSM),1 (VADC_CONVERSION_FSM),2 (SAMPLE_COUNT_LSB),3 (SAMPLE_COUNT_MSB)"
    tree.end
    tree "IADC2_MDM_TRIM2_ADC_OFFSET1"
      sgroup "IADC2_MDM_TRIM2_ADC_OFFSET1 (at 0x37f2)"
        set &access:&cmd_addr %l (0x8037f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_OFFSET1                             = "
    tree.end
    tree "IADC2_MDM_TRIM3_ADC_OFFSET0"
      sgroup "IADC2_MDM_TRIM3_ADC_OFFSET0 (at 0x37f3)"
        set &access:&cmd_addr %l (0x8037f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_OFFSET0                             = "
    tree.end
    tree "IADC2_MDM_TRIM2_ADC_FULLSCALE1"
      sgroup "IADC2_MDM_TRIM2_ADC_FULLSCALE1 (at 0x37f4)"
        set &access:&cmd_addr %l (0x8037f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_FULLSCALE1                          = "
    tree.end
    tree "IADC2_MDM_TRIM3_ADC_FULLSCALE0"
      sgroup "IADC2_MDM_TRIM3_ADC_FULLSCALE0 (at 0x37f5)"
        set &access:&cmd_addr %l (0x8037f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x37f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CADC_FULSCALE0                           = "
    tree.end
  tree.end
tree.end
tree "INT"
  tree "INT"
    tree "INT_REVISION1"
      sgroup "INT_REVISION1 (at 0x500)"
        set &access:&cmd_addr %l (0x8005000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "INT_REVISION2"
      sgroup "INT_REVISION2 (at 0x501)"
        set &access:&cmd_addr %l (0x8005010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "INT_PERPH_TYPE"
      sgroup "INT_PERPH_TYPE (at 0x504)"
        set &access:&cmd_addr %l (0x8005040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "INT_PERPH_SUBTYPE"
      sgroup "INT_PERPH_SUBTYPE (at 0x505)"
        set &access:&cmd_addr %l (0x8005050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "INT_STATUS1"
      sgroup "INT_STATUS1 (at 0x508)"
        set &access:&cmd_addr %l (0x8005080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CLK_REQ                                  = " "0 (NO_CLOCK_REQ),1 (CLOCK_REQUESTED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEND_REQ                                 = " "0 (NO_SEND_REQ),1 (SEND_REQUESTED)"
    tree.end
    tree "INT_STATUS2"
      sgroup "INT_STATUS2 (at 0x509)"
        set &access:&cmd_addr %l (0x8005090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LAST_WINNER                              = "
    tree.end
    tree "INT_INT_RESEND_ALL"
      sgroup "INT_INT_RESEND_ALL (at 0x540)"
        set &access:&cmd_addr %l (0x8005400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_RESEND_ALL                           = " "0 (reserved),1 (RESEND_ALL)"
    tree.end
    tree "INT_EN_CTL1"
      sgroup "INT_EN_CTL1 (at 0x546)"
        set &access:&cmd_addr %l (0x8005460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INTR_EN                                  = " "0 (PERIPHERAL_DISABLED),1 (PERIPHERAL_ENABLED)"
    tree.end
    tree "INT_SEC_ACCESS"
      sgroup "INT_SEC_ACCESS (at 0x5d0)"
        set &access:&cmd_addr %l (0x8005d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "INT_PERPH_RESET_CTL1"
      sgroup "INT_PERPH_RESET_CTL1 (at 0x5d8)"
        set &access:&cmd_addr %l (0x8005d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "INT_PERPH_RESET_CTL2"
      sgroup "INT_PERPH_RESET_CTL2 (at 0x5d9)"
        set &access:&cmd_addr %l (0x8005d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "INT_PERPH_RESET_CTL3"
      sgroup "INT_PERPH_RESET_CTL3 (at 0x5da)"
        set &access:&cmd_addr %l (0x8005da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "INT_PERPH_RESET_CTL4"
      sgroup "INT_PERPH_RESET_CTL4 (at 0x5db)"
        set &access:&cmd_addr %l (0x8005db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "INT_TEST1"
      sgroup "INT_TEST1 (at 0x5e0)"
        set &access:&cmd_addr %l (0x8005e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST_EN                                 = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
  tree.end
tree.end
tree "LDO1"
  tree "LDO1"
    tree "LDO1_REVISION1"
      sgroup "LDO1_REVISION1 (at 0x14000)"
        set &access:&cmd_addr %l (0x8040000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO1_REVISION2"
      sgroup "LDO1_REVISION2 (at 0x14001)"
        set &access:&cmd_addr %l (0x8040010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO1_REVISION3"
      sgroup "LDO1_REVISION3 (at 0x14002)"
        set &access:&cmd_addr %l (0x8040020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO1_REVISION4"
      sgroup "LDO1_REVISION4 (at 0x14003)"
        set &access:&cmd_addr %l (0x8040030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO1_PERPH_TYPE"
      sgroup "LDO1_PERPH_TYPE (at 0x14004)"
        set &access:&cmd_addr %l (0x8040040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO1_PERPH_SUBTYPE"
      sgroup "LDO1_PERPH_SUBTYPE (at 0x14005)"
        set &access:&cmd_addr %l (0x8040050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO1_STATUS1"
      sgroup "LDO1_STATUS1 (at 0x14008)"
        set &access:&cmd_addr %l (0x8040080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE                             = " "0 (STEPPER_NOT_DONE),1 (STEPPER_DONE)"
    tree.end
    tree "LDO1_STATUS2"
      sgroup "LDO1_STATUS2 (at 0x14009)"
        set &access:&cmd_addr %l (0x8040090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO1_STATUS3"
      sgroup "LDO1_STATUS3 (at 0x1400a)"
        set &access:&cmd_addr %l (0x80400a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x400a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO1_INT_RT_STS"
      sgroup "LDO1_INT_RT_STS (at 0x14010)"
        set &access:&cmd_addr %l (0x8040100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO1_INT_SET_TYPE"
      sgroup "LDO1_INT_SET_TYPE (at 0x14011)"
        set &access:&cmd_addr %l (0x8040110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO1_INT_POLARITY_HIGH"
      sgroup "LDO1_INT_POLARITY_HIGH (at 0x14012)"
        set &access:&cmd_addr %l (0x8040120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO1_INT_POLARITY_LOW"
      sgroup "LDO1_INT_POLARITY_LOW (at 0x14013)"
        set &access:&cmd_addr %l (0x8040130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO1_INT_LATCHED_CLR"
      sgroup "LDO1_INT_LATCHED_CLR (at 0x14014)"
        set &access:&cmd_addr %l (0x8040140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO1_INT_EN_SET"
      sgroup "LDO1_INT_EN_SET (at 0x14015)"
        set &access:&cmd_addr %l (0x8040150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO1_INT_EN_CLR"
      sgroup "LDO1_INT_EN_CLR (at 0x14016)"
        set &access:&cmd_addr %l (0x8040160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO1_INT_LATCHED_STS"
      sgroup "LDO1_INT_LATCHED_STS (at 0x14018)"
        set &access:&cmd_addr %l (0x8040180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO1_INT_PENDING_STS"
      sgroup "LDO1_INT_PENDING_STS (at 0x14019)"
        set &access:&cmd_addr %l (0x8040190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO1_INT_MID_SEL"
      sgroup "LDO1_INT_MID_SEL (at 0x1401a)"
        set &access:&cmd_addr %l (0x80401a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x401a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO1_INT_PRIORITY"
      sgroup "LDO1_INT_PRIORITY (at 0x1401b)"
        set &access:&cmd_addr %l (0x80401b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x401b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO1_VOLTAGE_CTL1"
      sgroup "LDO1_VOLTAGE_CTL1 (at 0x14040)"
        set &access:&cmd_addr %l (0x8040400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO1_VOLTAGE_CTL2"
      sgroup "LDO1_VOLTAGE_CTL2 (at 0x14041)"
        set &access:&cmd_addr %l (0x8040410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO1_MODE_CTL2"
      sgroup "LDO1_MODE_CTL2 (at 0x14045)"
        set &access:&cmd_addr %l (0x8040450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO1_EN_CTL"
      sgroup "LDO1_EN_CTL (at 0x14046)"
        set &access:&cmd_addr %l (0x8040460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO1_PD_CTL"
      sgroup "LDO1_PD_CTL (at 0x14048)"
        set &access:&cmd_addr %l (0x8040480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO1_CURRENT_LIM_CTL"
      sgroup "LDO1_CURRENT_LIM_CTL (at 0x1404a)"
        set &access:&cmd_addr %l (0x80404a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x404a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO1_SOFT_START_CTL"
      sgroup "LDO1_SOFT_START_CTL (at 0x1404c)"
        set &access:&cmd_addr %l (0x80404c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x404c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO1_CONFIG_CTL"
      sgroup "LDO1_CONFIG_CTL (at 0x14052)"
        set &access:&cmd_addr %l (0x8040520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO1_VS_CTL"
      sgroup "LDO1_VS_CTL (at 0x14061)"
        set &access:&cmd_addr %l (0x8040610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VS_EN                                    = " "0 (STEPPER_DIABLED),1 (STEPPER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VS_DELAY                                 = " "0 (DELAY_1_20),1 (DELAY_1_40),2 (DELAY_1_80),3 (DELAY_1_160),4 (DELAY_1_320),5 (DELAY_1_640),6 (DELAY_1_1280),7 (DELAY_1_2560)"
    tree.end
    tree "LDO1_LL_VOLTAGE_CTL1"
      sgroup "LDO1_LL_VOLTAGE_CTL1 (at 0x14068)"
        set &access:&cmd_addr %l (0x8040680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO1_LL_VOLTAGE_CTL2"
      sgroup "LDO1_LL_VOLTAGE_CTL2 (at 0x14069)"
        set &access:&cmd_addr %l (0x8040690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO1_UL_VOLTAGE_CTL1"
      sgroup "LDO1_UL_VOLTAGE_CTL1 (at 0x1406a)"
        set &access:&cmd_addr %l (0x80406a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x406a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO1_UL_VOLTAGE_CTL2"
      sgroup "LDO1_UL_VOLTAGE_CTL2 (at 0x1406b)"
        set &access:&cmd_addr %l (0x80406b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x406b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO1_SEC_ACCESS"
      sgroup "LDO1_SEC_ACCESS (at 0x140d0)"
        set &access:&cmd_addr %l (0x8040d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO1_PERPH_RESET_CTL1"
      sgroup "LDO1_PERPH_RESET_CTL1 (at 0x140d8)"
        set &access:&cmd_addr %l (0x8040d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO1_PERPH_RESET_CTL2"
      sgroup "LDO1_PERPH_RESET_CTL2 (at 0x140d9)"
        set &access:&cmd_addr %l (0x8040d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO1_PERPH_RESET_CTL3"
      sgroup "LDO1_PERPH_RESET_CTL3 (at 0x140da)"
        set &access:&cmd_addr %l (0x8040da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO1_PERPH_RESET_CTL4"
      sgroup "LDO1_PERPH_RESET_CTL4 (at 0x140db)"
        set &access:&cmd_addr %l (0x8040db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO1_INT_TEST1"
      sgroup "LDO1_INT_TEST1 (at 0x140e0)"
        set &access:&cmd_addr %l (0x8040e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO1_INT_TEST_VAL"
      sgroup "LDO1_INT_TEST_VAL (at 0x140e1)"
        set &access:&cmd_addr %l (0x8040e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO1_TEST1"
      sgroup "LDO1_TEST1 (at 0x140e2)"
        set &access:&cmd_addr %l (0x8040e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO1_TEST2"
      sgroup "LDO1_TEST2 (at 0x140e3)"
        set &access:&cmd_addr %l (0x8040e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO1_TRIM_NUM"
      sgroup "LDO1_TRIM_NUM (at 0x140f0)"
        set &access:&cmd_addr %l (0x8040f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO1_TRIM_CTRL"
      sgroup "LDO1_TRIM_CTRL (at 0x140f1)"
        set &access:&cmd_addr %l (0x8040f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO10"
  tree "LDO10"
    tree "LDO10_REVISION1"
      sgroup "LDO10_REVISION1 (at 0x14900)"
        set &access:&cmd_addr %l (0x8049000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO10_REVISION2"
      sgroup "LDO10_REVISION2 (at 0x14901)"
        set &access:&cmd_addr %l (0x8049010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO10_REVISION3"
      sgroup "LDO10_REVISION3 (at 0x14902)"
        set &access:&cmd_addr %l (0x8049020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO10_REVISION4"
      sgroup "LDO10_REVISION4 (at 0x14903)"
        set &access:&cmd_addr %l (0x8049030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO10_PERPH_TYPE"
      sgroup "LDO10_PERPH_TYPE (at 0x14904)"
        set &access:&cmd_addr %l (0x8049040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO10_PERPH_SUBTYPE"
      sgroup "LDO10_PERPH_SUBTYPE (at 0x14905)"
        set &access:&cmd_addr %l (0x8049050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO10_STATUS1"
      sgroup "LDO10_STATUS1 (at 0x14908)"
        set &access:&cmd_addr %l (0x8049080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO10_STATUS2"
      sgroup "LDO10_STATUS2 (at 0x14909)"
        set &access:&cmd_addr %l (0x8049090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO10_STATUS3"
      sgroup "LDO10_STATUS3 (at 0x1490a)"
        set &access:&cmd_addr %l (0x80490a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x490a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO10_INT_RT_STS"
      sgroup "LDO10_INT_RT_STS (at 0x14910)"
        set &access:&cmd_addr %l (0x8049100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO10_INT_SET_TYPE"
      sgroup "LDO10_INT_SET_TYPE (at 0x14911)"
        set &access:&cmd_addr %l (0x8049110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO10_INT_POLARITY_HIGH"
      sgroup "LDO10_INT_POLARITY_HIGH (at 0x14912)"
        set &access:&cmd_addr %l (0x8049120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO10_INT_POLARITY_LOW"
      sgroup "LDO10_INT_POLARITY_LOW (at 0x14913)"
        set &access:&cmd_addr %l (0x8049130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO10_INT_LATCHED_CLR"
      sgroup "LDO10_INT_LATCHED_CLR (at 0x14914)"
        set &access:&cmd_addr %l (0x8049140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO10_INT_EN_SET"
      sgroup "LDO10_INT_EN_SET (at 0x14915)"
        set &access:&cmd_addr %l (0x8049150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO10_INT_EN_CLR"
      sgroup "LDO10_INT_EN_CLR (at 0x14916)"
        set &access:&cmd_addr %l (0x8049160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO10_INT_LATCHED_STS"
      sgroup "LDO10_INT_LATCHED_STS (at 0x14918)"
        set &access:&cmd_addr %l (0x8049180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO10_INT_PENDING_STS"
      sgroup "LDO10_INT_PENDING_STS (at 0x14919)"
        set &access:&cmd_addr %l (0x8049190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO10_INT_MID_SEL"
      sgroup "LDO10_INT_MID_SEL (at 0x1491a)"
        set &access:&cmd_addr %l (0x80491a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x491a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO10_INT_PRIORITY"
      sgroup "LDO10_INT_PRIORITY (at 0x1491b)"
        set &access:&cmd_addr %l (0x80491b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x491b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO10_VOLTAGE_CTL1"
      sgroup "LDO10_VOLTAGE_CTL1 (at 0x14940)"
        set &access:&cmd_addr %l (0x8049400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO10_VOLTAGE_CTL2"
      sgroup "LDO10_VOLTAGE_CTL2 (at 0x14941)"
        set &access:&cmd_addr %l (0x8049410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO10_MODE_CTL2"
      sgroup "LDO10_MODE_CTL2 (at 0x14945)"
        set &access:&cmd_addr %l (0x8049450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO10_EN_CTL"
      sgroup "LDO10_EN_CTL (at 0x14946)"
        set &access:&cmd_addr %l (0x8049460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO10_PD_CTL"
      sgroup "LDO10_PD_CTL (at 0x14948)"
        set &access:&cmd_addr %l (0x8049480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO10_CURRENT_LIM_CTL"
      sgroup "LDO10_CURRENT_LIM_CTL (at 0x1494a)"
        set &access:&cmd_addr %l (0x80494a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x494a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO10_SOFT_START_CTL"
      sgroup "LDO10_SOFT_START_CTL (at 0x1494c)"
        set &access:&cmd_addr %l (0x80494c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x494c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO10_CONFIG_CTL"
      sgroup "LDO10_CONFIG_CTL (at 0x14952)"
        set &access:&cmd_addr %l (0x8049520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO10_LL_VOLTAGE_CTL1"
      sgroup "LDO10_LL_VOLTAGE_CTL1 (at 0x14968)"
        set &access:&cmd_addr %l (0x8049680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO10_LL_VOLTAGE_CTL2"
      sgroup "LDO10_LL_VOLTAGE_CTL2 (at 0x14969)"
        set &access:&cmd_addr %l (0x8049690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO10_UL_VOLTAGE_CTL1"
      sgroup "LDO10_UL_VOLTAGE_CTL1 (at 0x1496a)"
        set &access:&cmd_addr %l (0x80496a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x496a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO10_UL_VOLTAGE_CTL2"
      sgroup "LDO10_UL_VOLTAGE_CTL2 (at 0x1496b)"
        set &access:&cmd_addr %l (0x80496b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x496b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO10_SEC_ACCESS"
      sgroup "LDO10_SEC_ACCESS (at 0x149d0)"
        set &access:&cmd_addr %l (0x8049d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO10_PERPH_RESET_CTL1"
      sgroup "LDO10_PERPH_RESET_CTL1 (at 0x149d8)"
        set &access:&cmd_addr %l (0x8049d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO10_PERPH_RESET_CTL2"
      sgroup "LDO10_PERPH_RESET_CTL2 (at 0x149d9)"
        set &access:&cmd_addr %l (0x8049d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO10_PERPH_RESET_CTL3"
      sgroup "LDO10_PERPH_RESET_CTL3 (at 0x149da)"
        set &access:&cmd_addr %l (0x8049da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO10_PERPH_RESET_CTL4"
      sgroup "LDO10_PERPH_RESET_CTL4 (at 0x149db)"
        set &access:&cmd_addr %l (0x8049db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO10_INT_TEST1"
      sgroup "LDO10_INT_TEST1 (at 0x149e0)"
        set &access:&cmd_addr %l (0x8049e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO10_INT_TEST_VAL"
      sgroup "LDO10_INT_TEST_VAL (at 0x149e1)"
        set &access:&cmd_addr %l (0x8049e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO10_TEST1"
      sgroup "LDO10_TEST1 (at 0x149e2)"
        set &access:&cmd_addr %l (0x8049e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO10_TEST2"
      sgroup "LDO10_TEST2 (at 0x149e3)"
        set &access:&cmd_addr %l (0x8049e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO10_TRIM_NUM"
      sgroup "LDO10_TRIM_NUM (at 0x149f0)"
        set &access:&cmd_addr %l (0x8049f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO10_TRIM_CTRL"
      sgroup "LDO10_TRIM_CTRL (at 0x149f1)"
        set &access:&cmd_addr %l (0x8049f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x49f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO11"
  tree "LDO11"
    tree "LDO11_REVISION1"
      sgroup "LDO11_REVISION1 (at 0x14a00)"
        set &access:&cmd_addr %l (0x804a000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO11_REVISION2"
      sgroup "LDO11_REVISION2 (at 0x14a01)"
        set &access:&cmd_addr %l (0x804a010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO11_REVISION3"
      sgroup "LDO11_REVISION3 (at 0x14a02)"
        set &access:&cmd_addr %l (0x804a020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO11_REVISION4"
      sgroup "LDO11_REVISION4 (at 0x14a03)"
        set &access:&cmd_addr %l (0x804a030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO11_PERPH_TYPE"
      sgroup "LDO11_PERPH_TYPE (at 0x14a04)"
        set &access:&cmd_addr %l (0x804a040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO11_PERPH_SUBTYPE"
      sgroup "LDO11_PERPH_SUBTYPE (at 0x14a05)"
        set &access:&cmd_addr %l (0x804a050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO11_STATUS1"
      sgroup "LDO11_STATUS1 (at 0x14a08)"
        set &access:&cmd_addr %l (0x804a080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
    tree.end
    tree "LDO11_VOLTAGE_CTL1"
      sgroup "LDO11_VOLTAGE_CTL1 (at 0x14a40)"
        set &access:&cmd_addr %l (0x804a400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RANGE                                    = " "0 (RANGE_0),1 (RANGE_1)"
    tree.end
    tree "LDO11_VOLTAGE_CTL2"
      sgroup "LDO11_VOLTAGE_CTL2 (at 0x14a41)"
        set &access:&cmd_addr %l (0x804a410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VSET                                     = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO11_MODE_CTL2"
      sgroup "LDO11_MODE_CTL2 (at 0x14a45)"
        set &access:&cmd_addr %l (0x804a450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
    tree.end
    tree "LDO11_EN_CTL"
      sgroup "LDO11_EN_CTL (at 0x14a46)"
        set &access:&cmd_addr %l (0x804a460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4a460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (LDO_NOT_FORCE_ENABLED),1 (LDO_FORCE_ENABLED)"
    tree.end
    tree "LDO11_SEC_ACCESS"
      sgroup "LDO11_SEC_ACCESS (at 0x14ad0)"
        set &access:&cmd_addr %l (0x804ad00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ad00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO11_PERPH_RESET_CTL1"
      sgroup "LDO11_PERPH_RESET_CTL1 (at 0x14ad8)"
        set &access:&cmd_addr %l (0x804ad80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ad80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO11_PERPH_RESET_CTL2"
      sgroup "LDO11_PERPH_RESET_CTL2 (at 0x14ad9)"
        set &access:&cmd_addr %l (0x804ad90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ad90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO11_PERPH_RESET_CTL3"
      sgroup "LDO11_PERPH_RESET_CTL3 (at 0x14ada)"
        set &access:&cmd_addr %l (0x804ada0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ada0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO11_PERPH_RESET_CTL4"
      sgroup "LDO11_PERPH_RESET_CTL4 (at 0x14adb)"
        set &access:&cmd_addr %l (0x804adb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4adb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO11_TEST1"
      sgroup "LDO11_TEST1 (at 0x14ae2)"
        set &access:&cmd_addr %l (0x804ae20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ae20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ATEST1                                   = " "0 (ATEST1_HIGHZ),1 (ATEST1_VREG_OUT)"
    tree.end
  tree.end
tree.end
tree "LDO12"
  tree "LDO12"
    tree "LDO12_REVISION1"
      sgroup "LDO12_REVISION1 (at 0x14b00)"
        set &access:&cmd_addr %l (0x804b000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO12_REVISION2"
      sgroup "LDO12_REVISION2 (at 0x14b01)"
        set &access:&cmd_addr %l (0x804b010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO12_REVISION3"
      sgroup "LDO12_REVISION3 (at 0x14b02)"
        set &access:&cmd_addr %l (0x804b020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO12_REVISION4"
      sgroup "LDO12_REVISION4 (at 0x14b03)"
        set &access:&cmd_addr %l (0x804b030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO12_PERPH_TYPE"
      sgroup "LDO12_PERPH_TYPE (at 0x14b04)"
        set &access:&cmd_addr %l (0x804b040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO12_PERPH_SUBTYPE"
      sgroup "LDO12_PERPH_SUBTYPE (at 0x14b05)"
        set &access:&cmd_addr %l (0x804b050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO12_STATUS1"
      sgroup "LDO12_STATUS1 (at 0x14b08)"
        set &access:&cmd_addr %l (0x804b080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO12_STATUS2"
      sgroup "LDO12_STATUS2 (at 0x14b09)"
        set &access:&cmd_addr %l (0x804b090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO12_STATUS3"
      sgroup "LDO12_STATUS3 (at 0x14b0a)"
        set &access:&cmd_addr %l (0x804b0a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b0a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO12_INT_RT_STS"
      sgroup "LDO12_INT_RT_STS (at 0x14b10)"
        set &access:&cmd_addr %l (0x804b100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO12_INT_SET_TYPE"
      sgroup "LDO12_INT_SET_TYPE (at 0x14b11)"
        set &access:&cmd_addr %l (0x804b110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO12_INT_POLARITY_HIGH"
      sgroup "LDO12_INT_POLARITY_HIGH (at 0x14b12)"
        set &access:&cmd_addr %l (0x804b120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO12_INT_POLARITY_LOW"
      sgroup "LDO12_INT_POLARITY_LOW (at 0x14b13)"
        set &access:&cmd_addr %l (0x804b130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO12_INT_LATCHED_CLR"
      sgroup "LDO12_INT_LATCHED_CLR (at 0x14b14)"
        set &access:&cmd_addr %l (0x804b140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO12_INT_EN_SET"
      sgroup "LDO12_INT_EN_SET (at 0x14b15)"
        set &access:&cmd_addr %l (0x804b150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO12_INT_EN_CLR"
      sgroup "LDO12_INT_EN_CLR (at 0x14b16)"
        set &access:&cmd_addr %l (0x804b160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO12_INT_LATCHED_STS"
      sgroup "LDO12_INT_LATCHED_STS (at 0x14b18)"
        set &access:&cmd_addr %l (0x804b180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO12_INT_PENDING_STS"
      sgroup "LDO12_INT_PENDING_STS (at 0x14b19)"
        set &access:&cmd_addr %l (0x804b190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO12_INT_MID_SEL"
      sgroup "LDO12_INT_MID_SEL (at 0x14b1a)"
        set &access:&cmd_addr %l (0x804b1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO12_INT_PRIORITY"
      sgroup "LDO12_INT_PRIORITY (at 0x14b1b)"
        set &access:&cmd_addr %l (0x804b1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO12_VOLTAGE_CTL1"
      sgroup "LDO12_VOLTAGE_CTL1 (at 0x14b40)"
        set &access:&cmd_addr %l (0x804b400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO12_VOLTAGE_CTL2"
      sgroup "LDO12_VOLTAGE_CTL2 (at 0x14b41)"
        set &access:&cmd_addr %l (0x804b410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO12_MODE_CTL2"
      sgroup "LDO12_MODE_CTL2 (at 0x14b45)"
        set &access:&cmd_addr %l (0x804b450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO12_EN_CTL"
      sgroup "LDO12_EN_CTL (at 0x14b46)"
        set &access:&cmd_addr %l (0x804b460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO12_PD_CTL"
      sgroup "LDO12_PD_CTL (at 0x14b48)"
        set &access:&cmd_addr %l (0x804b480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO12_CURRENT_LIM_CTL"
      sgroup "LDO12_CURRENT_LIM_CTL (at 0x14b4a)"
        set &access:&cmd_addr %l (0x804b4a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b4a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO12_SOFT_START_CTL"
      sgroup "LDO12_SOFT_START_CTL (at 0x14b4c)"
        set &access:&cmd_addr %l (0x804b4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO12_CONFIG_CTL"
      sgroup "LDO12_CONFIG_CTL (at 0x14b52)"
        set &access:&cmd_addr %l (0x804b520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO12_LL_VOLTAGE_CTL1"
      sgroup "LDO12_LL_VOLTAGE_CTL1 (at 0x14b68)"
        set &access:&cmd_addr %l (0x804b680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO12_LL_VOLTAGE_CTL2"
      sgroup "LDO12_LL_VOLTAGE_CTL2 (at 0x14b69)"
        set &access:&cmd_addr %l (0x804b690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO12_UL_VOLTAGE_CTL1"
      sgroup "LDO12_UL_VOLTAGE_CTL1 (at 0x14b6a)"
        set &access:&cmd_addr %l (0x804b6a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b6a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO12_UL_VOLTAGE_CTL2"
      sgroup "LDO12_UL_VOLTAGE_CTL2 (at 0x14b6b)"
        set &access:&cmd_addr %l (0x804b6b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4b6b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO12_SEC_ACCESS"
      sgroup "LDO12_SEC_ACCESS (at 0x14bd0)"
        set &access:&cmd_addr %l (0x804bd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4bd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO12_PERPH_RESET_CTL1"
      sgroup "LDO12_PERPH_RESET_CTL1 (at 0x14bd8)"
        set &access:&cmd_addr %l (0x804bd80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4bd80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO12_PERPH_RESET_CTL2"
      sgroup "LDO12_PERPH_RESET_CTL2 (at 0x14bd9)"
        set &access:&cmd_addr %l (0x804bd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4bd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO12_PERPH_RESET_CTL3"
      sgroup "LDO12_PERPH_RESET_CTL3 (at 0x14bda)"
        set &access:&cmd_addr %l (0x804bda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4bda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO12_PERPH_RESET_CTL4"
      sgroup "LDO12_PERPH_RESET_CTL4 (at 0x14bdb)"
        set &access:&cmd_addr %l (0x804bdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4bdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO12_INT_TEST1"
      sgroup "LDO12_INT_TEST1 (at 0x14be0)"
        set &access:&cmd_addr %l (0x804be00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4be00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO12_INT_TEST_VAL"
      sgroup "LDO12_INT_TEST_VAL (at 0x14be1)"
        set &access:&cmd_addr %l (0x804be10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4be10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO12_TEST1"
      sgroup "LDO12_TEST1 (at 0x14be2)"
        set &access:&cmd_addr %l (0x804be20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4be20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO12_TEST2"
      sgroup "LDO12_TEST2 (at 0x14be3)"
        set &access:&cmd_addr %l (0x804be30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4be30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO12_TRIM_NUM"
      sgroup "LDO12_TRIM_NUM (at 0x14bf0)"
        set &access:&cmd_addr %l (0x804bf00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4bf00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO12_TRIM_CTRL"
      sgroup "LDO12_TRIM_CTRL (at 0x14bf1)"
        set &access:&cmd_addr %l (0x804bf10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4bf10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO13"
  tree "LDO13"
    tree "LDO13_REVISION1"
      sgroup "LDO13_REVISION1 (at 0x14c00)"
        set &access:&cmd_addr %l (0x804c000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO13_REVISION2"
      sgroup "LDO13_REVISION2 (at 0x14c01)"
        set &access:&cmd_addr %l (0x804c010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO13_REVISION3"
      sgroup "LDO13_REVISION3 (at 0x14c02)"
        set &access:&cmd_addr %l (0x804c020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO13_REVISION4"
      sgroup "LDO13_REVISION4 (at 0x14c03)"
        set &access:&cmd_addr %l (0x804c030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO13_PERPH_TYPE"
      sgroup "LDO13_PERPH_TYPE (at 0x14c04)"
        set &access:&cmd_addr %l (0x804c040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO13_PERPH_SUBTYPE"
      sgroup "LDO13_PERPH_SUBTYPE (at 0x14c05)"
        set &access:&cmd_addr %l (0x804c050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO13_STATUS1"
      sgroup "LDO13_STATUS1 (at 0x14c08)"
        set &access:&cmd_addr %l (0x804c080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
    tree.end
    tree "LDO13_VOLTAGE_CTL1"
      sgroup "LDO13_VOLTAGE_CTL1 (at 0x14c40)"
        set &access:&cmd_addr %l (0x804c400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RANGE                                    = " "0 (RANGE_0),1 (RANGE_1)"
    tree.end
    tree "LDO13_VOLTAGE_CTL2"
      sgroup "LDO13_VOLTAGE_CTL2 (at 0x14c41)"
        set &access:&cmd_addr %l (0x804c410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VSET                                     = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO13_MODE_CTL2"
      sgroup "LDO13_MODE_CTL2 (at 0x14c45)"
        set &access:&cmd_addr %l (0x804c450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
    tree.end
    tree "LDO13_EN_CTL"
      sgroup "LDO13_EN_CTL (at 0x14c46)"
        set &access:&cmd_addr %l (0x804c460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4c460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (LDO_NOT_FORCE_ENABLED),1 (LDO_FORCE_ENABLED)"
    tree.end
    tree "LDO13_SEC_ACCESS"
      sgroup "LDO13_SEC_ACCESS (at 0x14cd0)"
        set &access:&cmd_addr %l (0x804cd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4cd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO13_PERPH_RESET_CTL1"
      sgroup "LDO13_PERPH_RESET_CTL1 (at 0x14cd8)"
        set &access:&cmd_addr %l (0x804cd80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4cd80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO13_PERPH_RESET_CTL2"
      sgroup "LDO13_PERPH_RESET_CTL2 (at 0x14cd9)"
        set &access:&cmd_addr %l (0x804cd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4cd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO13_PERPH_RESET_CTL3"
      sgroup "LDO13_PERPH_RESET_CTL3 (at 0x14cda)"
        set &access:&cmd_addr %l (0x804cda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4cda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO13_PERPH_RESET_CTL4"
      sgroup "LDO13_PERPH_RESET_CTL4 (at 0x14cdb)"
        set &access:&cmd_addr %l (0x804cdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4cdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO13_TEST1"
      sgroup "LDO13_TEST1 (at 0x14ce2)"
        set &access:&cmd_addr %l (0x804ce20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ce20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ATEST1                                   = " "0 (ATEST1_HIGHZ),1 (ATEST1_VREG_OUT)"
    tree.end
  tree.end
tree.end
tree "LDO14"
  tree "LDO14"
    tree "LDO14_REVISION1"
      sgroup "LDO14_REVISION1 (at 0x14d00)"
        set &access:&cmd_addr %l (0x804d000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO14_REVISION2"
      sgroup "LDO14_REVISION2 (at 0x14d01)"
        set &access:&cmd_addr %l (0x804d010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO14_REVISION3"
      sgroup "LDO14_REVISION3 (at 0x14d02)"
        set &access:&cmd_addr %l (0x804d020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO14_REVISION4"
      sgroup "LDO14_REVISION4 (at 0x14d03)"
        set &access:&cmd_addr %l (0x804d030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO14_PERPH_TYPE"
      sgroup "LDO14_PERPH_TYPE (at 0x14d04)"
        set &access:&cmd_addr %l (0x804d040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO14_PERPH_SUBTYPE"
      sgroup "LDO14_PERPH_SUBTYPE (at 0x14d05)"
        set &access:&cmd_addr %l (0x804d050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO14_STATUS1"
      sgroup "LDO14_STATUS1 (at 0x14d08)"
        set &access:&cmd_addr %l (0x804d080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO14_STATUS2"
      sgroup "LDO14_STATUS2 (at 0x14d09)"
        set &access:&cmd_addr %l (0x804d090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO14_STATUS3"
      sgroup "LDO14_STATUS3 (at 0x14d0a)"
        set &access:&cmd_addr %l (0x804d0a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d0a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO14_INT_RT_STS"
      sgroup "LDO14_INT_RT_STS (at 0x14d10)"
        set &access:&cmd_addr %l (0x804d100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO14_INT_SET_TYPE"
      sgroup "LDO14_INT_SET_TYPE (at 0x14d11)"
        set &access:&cmd_addr %l (0x804d110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO14_INT_POLARITY_HIGH"
      sgroup "LDO14_INT_POLARITY_HIGH (at 0x14d12)"
        set &access:&cmd_addr %l (0x804d120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO14_INT_POLARITY_LOW"
      sgroup "LDO14_INT_POLARITY_LOW (at 0x14d13)"
        set &access:&cmd_addr %l (0x804d130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO14_INT_LATCHED_CLR"
      sgroup "LDO14_INT_LATCHED_CLR (at 0x14d14)"
        set &access:&cmd_addr %l (0x804d140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO14_INT_EN_SET"
      sgroup "LDO14_INT_EN_SET (at 0x14d15)"
        set &access:&cmd_addr %l (0x804d150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO14_INT_EN_CLR"
      sgroup "LDO14_INT_EN_CLR (at 0x14d16)"
        set &access:&cmd_addr %l (0x804d160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO14_INT_LATCHED_STS"
      sgroup "LDO14_INT_LATCHED_STS (at 0x14d18)"
        set &access:&cmd_addr %l (0x804d180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO14_INT_PENDING_STS"
      sgroup "LDO14_INT_PENDING_STS (at 0x14d19)"
        set &access:&cmd_addr %l (0x804d190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO14_INT_MID_SEL"
      sgroup "LDO14_INT_MID_SEL (at 0x14d1a)"
        set &access:&cmd_addr %l (0x804d1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO14_INT_PRIORITY"
      sgroup "LDO14_INT_PRIORITY (at 0x14d1b)"
        set &access:&cmd_addr %l (0x804d1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO14_VOLTAGE_CTL1"
      sgroup "LDO14_VOLTAGE_CTL1 (at 0x14d40)"
        set &access:&cmd_addr %l (0x804d400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO14_VOLTAGE_CTL2"
      sgroup "LDO14_VOLTAGE_CTL2 (at 0x14d41)"
        set &access:&cmd_addr %l (0x804d410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO14_MODE_CTL2"
      sgroup "LDO14_MODE_CTL2 (at 0x14d45)"
        set &access:&cmd_addr %l (0x804d450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO14_EN_CTL"
      sgroup "LDO14_EN_CTL (at 0x14d46)"
        set &access:&cmd_addr %l (0x804d460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO14_PD_CTL"
      sgroup "LDO14_PD_CTL (at 0x14d48)"
        set &access:&cmd_addr %l (0x804d480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO14_CURRENT_LIM_CTL"
      sgroup "LDO14_CURRENT_LIM_CTL (at 0x14d4a)"
        set &access:&cmd_addr %l (0x804d4a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d4a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO14_SOFT_START_CTL"
      sgroup "LDO14_SOFT_START_CTL (at 0x14d4c)"
        set &access:&cmd_addr %l (0x804d4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO14_CONFIG_CTL"
      sgroup "LDO14_CONFIG_CTL (at 0x14d52)"
        set &access:&cmd_addr %l (0x804d520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO14_LL_VOLTAGE_CTL1"
      sgroup "LDO14_LL_VOLTAGE_CTL1 (at 0x14d68)"
        set &access:&cmd_addr %l (0x804d680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO14_LL_VOLTAGE_CTL2"
      sgroup "LDO14_LL_VOLTAGE_CTL2 (at 0x14d69)"
        set &access:&cmd_addr %l (0x804d690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO14_UL_VOLTAGE_CTL1"
      sgroup "LDO14_UL_VOLTAGE_CTL1 (at 0x14d6a)"
        set &access:&cmd_addr %l (0x804d6a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d6a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO14_UL_VOLTAGE_CTL2"
      sgroup "LDO14_UL_VOLTAGE_CTL2 (at 0x14d6b)"
        set &access:&cmd_addr %l (0x804d6b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d6b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO14_SEC_ACCESS"
      sgroup "LDO14_SEC_ACCESS (at 0x14dd0)"
        set &access:&cmd_addr %l (0x804dd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4dd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO14_PERPH_RESET_CTL1"
      sgroup "LDO14_PERPH_RESET_CTL1 (at 0x14dd8)"
        set &access:&cmd_addr %l (0x804dd80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4dd80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO14_PERPH_RESET_CTL2"
      sgroup "LDO14_PERPH_RESET_CTL2 (at 0x14dd9)"
        set &access:&cmd_addr %l (0x804dd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4dd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO14_PERPH_RESET_CTL3"
      sgroup "LDO14_PERPH_RESET_CTL3 (at 0x14dda)"
        set &access:&cmd_addr %l (0x804dda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4dda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO14_PERPH_RESET_CTL4"
      sgroup "LDO14_PERPH_RESET_CTL4 (at 0x14ddb)"
        set &access:&cmd_addr %l (0x804ddb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ddb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO14_INT_TEST1"
      sgroup "LDO14_INT_TEST1 (at 0x14de0)"
        set &access:&cmd_addr %l (0x804de00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4de00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO14_INT_TEST_VAL"
      sgroup "LDO14_INT_TEST_VAL (at 0x14de1)"
        set &access:&cmd_addr %l (0x804de10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4de10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO14_TEST1"
      sgroup "LDO14_TEST1 (at 0x14de2)"
        set &access:&cmd_addr %l (0x804de20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4de20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO14_TEST2"
      sgroup "LDO14_TEST2 (at 0x14de3)"
        set &access:&cmd_addr %l (0x804de30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4de30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO14_TRIM_NUM"
      sgroup "LDO14_TRIM_NUM (at 0x14df0)"
        set &access:&cmd_addr %l (0x804df00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4df00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO14_TRIM_CTRL"
      sgroup "LDO14_TRIM_CTRL (at 0x14df1)"
        set &access:&cmd_addr %l (0x804df10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4df10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO15"
  tree "LDO15"
    tree "LDO15_REVISION1"
      sgroup "LDO15_REVISION1 (at 0x14e00)"
        set &access:&cmd_addr %l (0x804e000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO15_REVISION2"
      sgroup "LDO15_REVISION2 (at 0x14e01)"
        set &access:&cmd_addr %l (0x804e010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO15_REVISION3"
      sgroup "LDO15_REVISION3 (at 0x14e02)"
        set &access:&cmd_addr %l (0x804e020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO15_REVISION4"
      sgroup "LDO15_REVISION4 (at 0x14e03)"
        set &access:&cmd_addr %l (0x804e030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO15_PERPH_TYPE"
      sgroup "LDO15_PERPH_TYPE (at 0x14e04)"
        set &access:&cmd_addr %l (0x804e040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO15_PERPH_SUBTYPE"
      sgroup "LDO15_PERPH_SUBTYPE (at 0x14e05)"
        set &access:&cmd_addr %l (0x804e050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO15_STATUS1"
      sgroup "LDO15_STATUS1 (at 0x14e08)"
        set &access:&cmd_addr %l (0x804e080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO15_STATUS2"
      sgroup "LDO15_STATUS2 (at 0x14e09)"
        set &access:&cmd_addr %l (0x804e090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO15_STATUS3"
      sgroup "LDO15_STATUS3 (at 0x14e0a)"
        set &access:&cmd_addr %l (0x804e0a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e0a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO15_INT_RT_STS"
      sgroup "LDO15_INT_RT_STS (at 0x14e10)"
        set &access:&cmd_addr %l (0x804e100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO15_INT_SET_TYPE"
      sgroup "LDO15_INT_SET_TYPE (at 0x14e11)"
        set &access:&cmd_addr %l (0x804e110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO15_INT_POLARITY_HIGH"
      sgroup "LDO15_INT_POLARITY_HIGH (at 0x14e12)"
        set &access:&cmd_addr %l (0x804e120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO15_INT_POLARITY_LOW"
      sgroup "LDO15_INT_POLARITY_LOW (at 0x14e13)"
        set &access:&cmd_addr %l (0x804e130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO15_INT_LATCHED_CLR"
      sgroup "LDO15_INT_LATCHED_CLR (at 0x14e14)"
        set &access:&cmd_addr %l (0x804e140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO15_INT_EN_SET"
      sgroup "LDO15_INT_EN_SET (at 0x14e15)"
        set &access:&cmd_addr %l (0x804e150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO15_INT_EN_CLR"
      sgroup "LDO15_INT_EN_CLR (at 0x14e16)"
        set &access:&cmd_addr %l (0x804e160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO15_INT_LATCHED_STS"
      sgroup "LDO15_INT_LATCHED_STS (at 0x14e18)"
        set &access:&cmd_addr %l (0x804e180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO15_INT_PENDING_STS"
      sgroup "LDO15_INT_PENDING_STS (at 0x14e19)"
        set &access:&cmd_addr %l (0x804e190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO15_INT_MID_SEL"
      sgroup "LDO15_INT_MID_SEL (at 0x14e1a)"
        set &access:&cmd_addr %l (0x804e1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO15_INT_PRIORITY"
      sgroup "LDO15_INT_PRIORITY (at 0x14e1b)"
        set &access:&cmd_addr %l (0x804e1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO15_VOLTAGE_CTL1"
      sgroup "LDO15_VOLTAGE_CTL1 (at 0x14e40)"
        set &access:&cmd_addr %l (0x804e400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO15_VOLTAGE_CTL2"
      sgroup "LDO15_VOLTAGE_CTL2 (at 0x14e41)"
        set &access:&cmd_addr %l (0x804e410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO15_MODE_CTL2"
      sgroup "LDO15_MODE_CTL2 (at 0x14e45)"
        set &access:&cmd_addr %l (0x804e450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO15_EN_CTL"
      sgroup "LDO15_EN_CTL (at 0x14e46)"
        set &access:&cmd_addr %l (0x804e460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO15_PD_CTL"
      sgroup "LDO15_PD_CTL (at 0x14e48)"
        set &access:&cmd_addr %l (0x804e480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO15_CURRENT_LIM_CTL"
      sgroup "LDO15_CURRENT_LIM_CTL (at 0x14e4a)"
        set &access:&cmd_addr %l (0x804e4a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e4a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO15_SOFT_START_CTL"
      sgroup "LDO15_SOFT_START_CTL (at 0x14e4c)"
        set &access:&cmd_addr %l (0x804e4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO15_CONFIG_CTL"
      sgroup "LDO15_CONFIG_CTL (at 0x14e52)"
        set &access:&cmd_addr %l (0x804e520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO15_LL_VOLTAGE_CTL1"
      sgroup "LDO15_LL_VOLTAGE_CTL1 (at 0x14e68)"
        set &access:&cmd_addr %l (0x804e680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO15_LL_VOLTAGE_CTL2"
      sgroup "LDO15_LL_VOLTAGE_CTL2 (at 0x14e69)"
        set &access:&cmd_addr %l (0x804e690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO15_UL_VOLTAGE_CTL1"
      sgroup "LDO15_UL_VOLTAGE_CTL1 (at 0x14e6a)"
        set &access:&cmd_addr %l (0x804e6a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e6a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO15_UL_VOLTAGE_CTL2"
      sgroup "LDO15_UL_VOLTAGE_CTL2 (at 0x14e6b)"
        set &access:&cmd_addr %l (0x804e6b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e6b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO15_SEC_ACCESS"
      sgroup "LDO15_SEC_ACCESS (at 0x14ed0)"
        set &access:&cmd_addr %l (0x804ed00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ed00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO15_PERPH_RESET_CTL1"
      sgroup "LDO15_PERPH_RESET_CTL1 (at 0x14ed8)"
        set &access:&cmd_addr %l (0x804ed80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ed80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO15_PERPH_RESET_CTL2"
      sgroup "LDO15_PERPH_RESET_CTL2 (at 0x14ed9)"
        set &access:&cmd_addr %l (0x804ed90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ed90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO15_PERPH_RESET_CTL3"
      sgroup "LDO15_PERPH_RESET_CTL3 (at 0x14eda)"
        set &access:&cmd_addr %l (0x804eda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4eda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO15_PERPH_RESET_CTL4"
      sgroup "LDO15_PERPH_RESET_CTL4 (at 0x14edb)"
        set &access:&cmd_addr %l (0x804edb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4edb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO15_INT_TEST1"
      sgroup "LDO15_INT_TEST1 (at 0x14ee0)"
        set &access:&cmd_addr %l (0x804ee00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ee00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO15_INT_TEST_VAL"
      sgroup "LDO15_INT_TEST_VAL (at 0x14ee1)"
        set &access:&cmd_addr %l (0x804ee10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ee10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO15_TEST1"
      sgroup "LDO15_TEST1 (at 0x14ee2)"
        set &access:&cmd_addr %l (0x804ee20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ee20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO15_TEST2"
      sgroup "LDO15_TEST2 (at 0x14ee3)"
        set &access:&cmd_addr %l (0x804ee30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ee30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO15_TRIM_NUM"
      sgroup "LDO15_TRIM_NUM (at 0x14ef0)"
        set &access:&cmd_addr %l (0x804ef00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ef00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO15_TRIM_CTRL"
      sgroup "LDO15_TRIM_CTRL (at 0x14ef1)"
        set &access:&cmd_addr %l (0x804ef10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ef10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO16"
  tree "LDO16"
    tree "LDO16_REVISION1"
      sgroup "LDO16_REVISION1 (at 0x14f00)"
        set &access:&cmd_addr %l (0x804f000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO16_REVISION2"
      sgroup "LDO16_REVISION2 (at 0x14f01)"
        set &access:&cmd_addr %l (0x804f010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO16_REVISION3"
      sgroup "LDO16_REVISION3 (at 0x14f02)"
        set &access:&cmd_addr %l (0x804f020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO16_REVISION4"
      sgroup "LDO16_REVISION4 (at 0x14f03)"
        set &access:&cmd_addr %l (0x804f030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO16_PERPH_TYPE"
      sgroup "LDO16_PERPH_TYPE (at 0x14f04)"
        set &access:&cmd_addr %l (0x804f040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO16_PERPH_SUBTYPE"
      sgroup "LDO16_PERPH_SUBTYPE (at 0x14f05)"
        set &access:&cmd_addr %l (0x804f050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO16_STATUS1"
      sgroup "LDO16_STATUS1 (at 0x14f08)"
        set &access:&cmd_addr %l (0x804f080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO16_STATUS2"
      sgroup "LDO16_STATUS2 (at 0x14f09)"
        set &access:&cmd_addr %l (0x804f090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO16_STATUS3"
      sgroup "LDO16_STATUS3 (at 0x14f0a)"
        set &access:&cmd_addr %l (0x804f0a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f0a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO16_INT_RT_STS"
      sgroup "LDO16_INT_RT_STS (at 0x14f10)"
        set &access:&cmd_addr %l (0x804f100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO16_INT_SET_TYPE"
      sgroup "LDO16_INT_SET_TYPE (at 0x14f11)"
        set &access:&cmd_addr %l (0x804f110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO16_INT_POLARITY_HIGH"
      sgroup "LDO16_INT_POLARITY_HIGH (at 0x14f12)"
        set &access:&cmd_addr %l (0x804f120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO16_INT_POLARITY_LOW"
      sgroup "LDO16_INT_POLARITY_LOW (at 0x14f13)"
        set &access:&cmd_addr %l (0x804f130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO16_INT_LATCHED_CLR"
      sgroup "LDO16_INT_LATCHED_CLR (at 0x14f14)"
        set &access:&cmd_addr %l (0x804f140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO16_INT_EN_SET"
      sgroup "LDO16_INT_EN_SET (at 0x14f15)"
        set &access:&cmd_addr %l (0x804f150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO16_INT_EN_CLR"
      sgroup "LDO16_INT_EN_CLR (at 0x14f16)"
        set &access:&cmd_addr %l (0x804f160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO16_INT_LATCHED_STS"
      sgroup "LDO16_INT_LATCHED_STS (at 0x14f18)"
        set &access:&cmd_addr %l (0x804f180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO16_INT_PENDING_STS"
      sgroup "LDO16_INT_PENDING_STS (at 0x14f19)"
        set &access:&cmd_addr %l (0x804f190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO16_INT_MID_SEL"
      sgroup "LDO16_INT_MID_SEL (at 0x14f1a)"
        set &access:&cmd_addr %l (0x804f1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO16_INT_PRIORITY"
      sgroup "LDO16_INT_PRIORITY (at 0x14f1b)"
        set &access:&cmd_addr %l (0x804f1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO16_VOLTAGE_CTL1"
      sgroup "LDO16_VOLTAGE_CTL1 (at 0x14f40)"
        set &access:&cmd_addr %l (0x804f400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO16_VOLTAGE_CTL2"
      sgroup "LDO16_VOLTAGE_CTL2 (at 0x14f41)"
        set &access:&cmd_addr %l (0x804f410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO16_MODE_CTL2"
      sgroup "LDO16_MODE_CTL2 (at 0x14f45)"
        set &access:&cmd_addr %l (0x804f450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO16_EN_CTL"
      sgroup "LDO16_EN_CTL (at 0x14f46)"
        set &access:&cmd_addr %l (0x804f460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO16_PD_CTL"
      sgroup "LDO16_PD_CTL (at 0x14f48)"
        set &access:&cmd_addr %l (0x804f480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO16_CURRENT_LIM_CTL"
      sgroup "LDO16_CURRENT_LIM_CTL (at 0x14f4a)"
        set &access:&cmd_addr %l (0x804f4a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f4a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO16_SOFT_START_CTL"
      sgroup "LDO16_SOFT_START_CTL (at 0x14f4c)"
        set &access:&cmd_addr %l (0x804f4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO16_CONFIG_CTL"
      sgroup "LDO16_CONFIG_CTL (at 0x14f52)"
        set &access:&cmd_addr %l (0x804f520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO16_LL_VOLTAGE_CTL1"
      sgroup "LDO16_LL_VOLTAGE_CTL1 (at 0x14f68)"
        set &access:&cmd_addr %l (0x804f680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO16_LL_VOLTAGE_CTL2"
      sgroup "LDO16_LL_VOLTAGE_CTL2 (at 0x14f69)"
        set &access:&cmd_addr %l (0x804f690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO16_UL_VOLTAGE_CTL1"
      sgroup "LDO16_UL_VOLTAGE_CTL1 (at 0x14f6a)"
        set &access:&cmd_addr %l (0x804f6a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f6a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO16_UL_VOLTAGE_CTL2"
      sgroup "LDO16_UL_VOLTAGE_CTL2 (at 0x14f6b)"
        set &access:&cmd_addr %l (0x804f6b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4f6b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO16_SEC_ACCESS"
      sgroup "LDO16_SEC_ACCESS (at 0x14fd0)"
        set &access:&cmd_addr %l (0x804fd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4fd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO16_PERPH_RESET_CTL1"
      sgroup "LDO16_PERPH_RESET_CTL1 (at 0x14fd8)"
        set &access:&cmd_addr %l (0x804fd80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4fd80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO16_PERPH_RESET_CTL2"
      sgroup "LDO16_PERPH_RESET_CTL2 (at 0x14fd9)"
        set &access:&cmd_addr %l (0x804fd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4fd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO16_PERPH_RESET_CTL3"
      sgroup "LDO16_PERPH_RESET_CTL3 (at 0x14fda)"
        set &access:&cmd_addr %l (0x804fda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4fda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO16_PERPH_RESET_CTL4"
      sgroup "LDO16_PERPH_RESET_CTL4 (at 0x14fdb)"
        set &access:&cmd_addr %l (0x804fdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4fdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO16_INT_TEST1"
      sgroup "LDO16_INT_TEST1 (at 0x14fe0)"
        set &access:&cmd_addr %l (0x804fe00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4fe00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO16_INT_TEST_VAL"
      sgroup "LDO16_INT_TEST_VAL (at 0x14fe1)"
        set &access:&cmd_addr %l (0x804fe10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4fe10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO16_TEST1"
      sgroup "LDO16_TEST1 (at 0x14fe2)"
        set &access:&cmd_addr %l (0x804fe20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4fe20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO16_TEST2"
      sgroup "LDO16_TEST2 (at 0x14fe3)"
        set &access:&cmd_addr %l (0x804fe30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4fe30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO16_TRIM_NUM"
      sgroup "LDO16_TRIM_NUM (at 0x14ff0)"
        set &access:&cmd_addr %l (0x804ff00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ff00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO16_TRIM_CTRL"
      sgroup "LDO16_TRIM_CTRL (at 0x14ff1)"
        set &access:&cmd_addr %l (0x804ff10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4ff10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO17"
  tree "LDO17"
    tree "LDO17_REVISION1"
      sgroup "LDO17_REVISION1 (at 0x15000)"
        set &access:&cmd_addr %l (0x8050000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO17_REVISION2"
      sgroup "LDO17_REVISION2 (at 0x15001)"
        set &access:&cmd_addr %l (0x8050010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO17_REVISION3"
      sgroup "LDO17_REVISION3 (at 0x15002)"
        set &access:&cmd_addr %l (0x8050020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO17_REVISION4"
      sgroup "LDO17_REVISION4 (at 0x15003)"
        set &access:&cmd_addr %l (0x8050030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO17_PERPH_TYPE"
      sgroup "LDO17_PERPH_TYPE (at 0x15004)"
        set &access:&cmd_addr %l (0x8050040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO17_PERPH_SUBTYPE"
      sgroup "LDO17_PERPH_SUBTYPE (at 0x15005)"
        set &access:&cmd_addr %l (0x8050050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO17_STATUS1"
      sgroup "LDO17_STATUS1 (at 0x15008)"
        set &access:&cmd_addr %l (0x8050080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO17_STATUS2"
      sgroup "LDO17_STATUS2 (at 0x15009)"
        set &access:&cmd_addr %l (0x8050090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO17_STATUS3"
      sgroup "LDO17_STATUS3 (at 0x1500a)"
        set &access:&cmd_addr %l (0x80500a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x500a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO17_INT_RT_STS"
      sgroup "LDO17_INT_RT_STS (at 0x15010)"
        set &access:&cmd_addr %l (0x8050100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO17_INT_SET_TYPE"
      sgroup "LDO17_INT_SET_TYPE (at 0x15011)"
        set &access:&cmd_addr %l (0x8050110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO17_INT_POLARITY_HIGH"
      sgroup "LDO17_INT_POLARITY_HIGH (at 0x15012)"
        set &access:&cmd_addr %l (0x8050120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO17_INT_POLARITY_LOW"
      sgroup "LDO17_INT_POLARITY_LOW (at 0x15013)"
        set &access:&cmd_addr %l (0x8050130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO17_INT_LATCHED_CLR"
      sgroup "LDO17_INT_LATCHED_CLR (at 0x15014)"
        set &access:&cmd_addr %l (0x8050140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO17_INT_EN_SET"
      sgroup "LDO17_INT_EN_SET (at 0x15015)"
        set &access:&cmd_addr %l (0x8050150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO17_INT_EN_CLR"
      sgroup "LDO17_INT_EN_CLR (at 0x15016)"
        set &access:&cmd_addr %l (0x8050160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO17_INT_LATCHED_STS"
      sgroup "LDO17_INT_LATCHED_STS (at 0x15018)"
        set &access:&cmd_addr %l (0x8050180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO17_INT_PENDING_STS"
      sgroup "LDO17_INT_PENDING_STS (at 0x15019)"
        set &access:&cmd_addr %l (0x8050190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO17_INT_MID_SEL"
      sgroup "LDO17_INT_MID_SEL (at 0x1501a)"
        set &access:&cmd_addr %l (0x80501a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x501a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO17_INT_PRIORITY"
      sgroup "LDO17_INT_PRIORITY (at 0x1501b)"
        set &access:&cmd_addr %l (0x80501b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x501b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO17_VOLTAGE_CTL1"
      sgroup "LDO17_VOLTAGE_CTL1 (at 0x15040)"
        set &access:&cmd_addr %l (0x8050400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO17_VOLTAGE_CTL2"
      sgroup "LDO17_VOLTAGE_CTL2 (at 0x15041)"
        set &access:&cmd_addr %l (0x8050410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO17_MODE_CTL2"
      sgroup "LDO17_MODE_CTL2 (at 0x15045)"
        set &access:&cmd_addr %l (0x8050450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO17_EN_CTL"
      sgroup "LDO17_EN_CTL (at 0x15046)"
        set &access:&cmd_addr %l (0x8050460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO17_PD_CTL"
      sgroup "LDO17_PD_CTL (at 0x15048)"
        set &access:&cmd_addr %l (0x8050480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO17_CURRENT_LIM_CTL"
      sgroup "LDO17_CURRENT_LIM_CTL (at 0x1504a)"
        set &access:&cmd_addr %l (0x80504a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x504a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO17_SOFT_START_CTL"
      sgroup "LDO17_SOFT_START_CTL (at 0x1504c)"
        set &access:&cmd_addr %l (0x80504c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x504c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO17_CONFIG_CTL"
      sgroup "LDO17_CONFIG_CTL (at 0x15052)"
        set &access:&cmd_addr %l (0x8050520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO17_LL_VOLTAGE_CTL1"
      sgroup "LDO17_LL_VOLTAGE_CTL1 (at 0x15068)"
        set &access:&cmd_addr %l (0x8050680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO17_LL_VOLTAGE_CTL2"
      sgroup "LDO17_LL_VOLTAGE_CTL2 (at 0x15069)"
        set &access:&cmd_addr %l (0x8050690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO17_UL_VOLTAGE_CTL1"
      sgroup "LDO17_UL_VOLTAGE_CTL1 (at 0x1506a)"
        set &access:&cmd_addr %l (0x80506a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x506a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO17_UL_VOLTAGE_CTL2"
      sgroup "LDO17_UL_VOLTAGE_CTL2 (at 0x1506b)"
        set &access:&cmd_addr %l (0x80506b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x506b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO17_SEC_ACCESS"
      sgroup "LDO17_SEC_ACCESS (at 0x150d0)"
        set &access:&cmd_addr %l (0x8050d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO17_PERPH_RESET_CTL1"
      sgroup "LDO17_PERPH_RESET_CTL1 (at 0x150d8)"
        set &access:&cmd_addr %l (0x8050d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO17_PERPH_RESET_CTL2"
      sgroup "LDO17_PERPH_RESET_CTL2 (at 0x150d9)"
        set &access:&cmd_addr %l (0x8050d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO17_PERPH_RESET_CTL3"
      sgroup "LDO17_PERPH_RESET_CTL3 (at 0x150da)"
        set &access:&cmd_addr %l (0x8050da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO17_PERPH_RESET_CTL4"
      sgroup "LDO17_PERPH_RESET_CTL4 (at 0x150db)"
        set &access:&cmd_addr %l (0x8050db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO17_INT_TEST1"
      sgroup "LDO17_INT_TEST1 (at 0x150e0)"
        set &access:&cmd_addr %l (0x8050e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO17_INT_TEST_VAL"
      sgroup "LDO17_INT_TEST_VAL (at 0x150e1)"
        set &access:&cmd_addr %l (0x8050e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO17_TEST1"
      sgroup "LDO17_TEST1 (at 0x150e2)"
        set &access:&cmd_addr %l (0x8050e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO17_TEST2"
      sgroup "LDO17_TEST2 (at 0x150e3)"
        set &access:&cmd_addr %l (0x8050e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO17_TRIM_NUM"
      sgroup "LDO17_TRIM_NUM (at 0x150f0)"
        set &access:&cmd_addr %l (0x8050f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO17_TRIM_CTRL"
      sgroup "LDO17_TRIM_CTRL (at 0x150f1)"
        set &access:&cmd_addr %l (0x8050f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO18"
  tree "LDO18"
    tree "LDO18_REVISION1"
      sgroup "LDO18_REVISION1 (at 0x15100)"
        set &access:&cmd_addr %l (0x8051000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO18_REVISION2"
      sgroup "LDO18_REVISION2 (at 0x15101)"
        set &access:&cmd_addr %l (0x8051010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO18_REVISION3"
      sgroup "LDO18_REVISION3 (at 0x15102)"
        set &access:&cmd_addr %l (0x8051020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO18_REVISION4"
      sgroup "LDO18_REVISION4 (at 0x15103)"
        set &access:&cmd_addr %l (0x8051030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO18_PERPH_TYPE"
      sgroup "LDO18_PERPH_TYPE (at 0x15104)"
        set &access:&cmd_addr %l (0x8051040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO18_PERPH_SUBTYPE"
      sgroup "LDO18_PERPH_SUBTYPE (at 0x15105)"
        set &access:&cmd_addr %l (0x8051050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO18_STATUS1"
      sgroup "LDO18_STATUS1 (at 0x15108)"
        set &access:&cmd_addr %l (0x8051080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO18_STATUS2"
      sgroup "LDO18_STATUS2 (at 0x15109)"
        set &access:&cmd_addr %l (0x8051090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO18_STATUS3"
      sgroup "LDO18_STATUS3 (at 0x1510a)"
        set &access:&cmd_addr %l (0x80510a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x510a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO18_INT_RT_STS"
      sgroup "LDO18_INT_RT_STS (at 0x15110)"
        set &access:&cmd_addr %l (0x8051100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO18_INT_SET_TYPE"
      sgroup "LDO18_INT_SET_TYPE (at 0x15111)"
        set &access:&cmd_addr %l (0x8051110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO18_INT_POLARITY_HIGH"
      sgroup "LDO18_INT_POLARITY_HIGH (at 0x15112)"
        set &access:&cmd_addr %l (0x8051120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO18_INT_POLARITY_LOW"
      sgroup "LDO18_INT_POLARITY_LOW (at 0x15113)"
        set &access:&cmd_addr %l (0x8051130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO18_INT_LATCHED_CLR"
      sgroup "LDO18_INT_LATCHED_CLR (at 0x15114)"
        set &access:&cmd_addr %l (0x8051140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO18_INT_EN_SET"
      sgroup "LDO18_INT_EN_SET (at 0x15115)"
        set &access:&cmd_addr %l (0x8051150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO18_INT_EN_CLR"
      sgroup "LDO18_INT_EN_CLR (at 0x15116)"
        set &access:&cmd_addr %l (0x8051160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO18_INT_LATCHED_STS"
      sgroup "LDO18_INT_LATCHED_STS (at 0x15118)"
        set &access:&cmd_addr %l (0x8051180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO18_INT_PENDING_STS"
      sgroup "LDO18_INT_PENDING_STS (at 0x15119)"
        set &access:&cmd_addr %l (0x8051190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO18_INT_MID_SEL"
      sgroup "LDO18_INT_MID_SEL (at 0x1511a)"
        set &access:&cmd_addr %l (0x80511a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x511a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO18_INT_PRIORITY"
      sgroup "LDO18_INT_PRIORITY (at 0x1511b)"
        set &access:&cmd_addr %l (0x80511b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x511b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO18_VOLTAGE_CTL1"
      sgroup "LDO18_VOLTAGE_CTL1 (at 0x15140)"
        set &access:&cmd_addr %l (0x8051400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO18_VOLTAGE_CTL2"
      sgroup "LDO18_VOLTAGE_CTL2 (at 0x15141)"
        set &access:&cmd_addr %l (0x8051410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO18_MODE_CTL2"
      sgroup "LDO18_MODE_CTL2 (at 0x15145)"
        set &access:&cmd_addr %l (0x8051450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO18_EN_CTL"
      sgroup "LDO18_EN_CTL (at 0x15146)"
        set &access:&cmd_addr %l (0x8051460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO18_PD_CTL"
      sgroup "LDO18_PD_CTL (at 0x15148)"
        set &access:&cmd_addr %l (0x8051480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO18_CURRENT_LIM_CTL"
      sgroup "LDO18_CURRENT_LIM_CTL (at 0x1514a)"
        set &access:&cmd_addr %l (0x80514a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x514a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO18_SOFT_START_CTL"
      sgroup "LDO18_SOFT_START_CTL (at 0x1514c)"
        set &access:&cmd_addr %l (0x80514c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x514c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO18_CONFIG_CTL"
      sgroup "LDO18_CONFIG_CTL (at 0x15152)"
        set &access:&cmd_addr %l (0x8051520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO18_LL_VOLTAGE_CTL1"
      sgroup "LDO18_LL_VOLTAGE_CTL1 (at 0x15168)"
        set &access:&cmd_addr %l (0x8051680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO18_LL_VOLTAGE_CTL2"
      sgroup "LDO18_LL_VOLTAGE_CTL2 (at 0x15169)"
        set &access:&cmd_addr %l (0x8051690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO18_UL_VOLTAGE_CTL1"
      sgroup "LDO18_UL_VOLTAGE_CTL1 (at 0x1516a)"
        set &access:&cmd_addr %l (0x80516a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x516a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO18_UL_VOLTAGE_CTL2"
      sgroup "LDO18_UL_VOLTAGE_CTL2 (at 0x1516b)"
        set &access:&cmd_addr %l (0x80516b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x516b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO18_SEC_ACCESS"
      sgroup "LDO18_SEC_ACCESS (at 0x151d0)"
        set &access:&cmd_addr %l (0x8051d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO18_PERPH_RESET_CTL1"
      sgroup "LDO18_PERPH_RESET_CTL1 (at 0x151d8)"
        set &access:&cmd_addr %l (0x8051d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO18_PERPH_RESET_CTL2"
      sgroup "LDO18_PERPH_RESET_CTL2 (at 0x151d9)"
        set &access:&cmd_addr %l (0x8051d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO18_PERPH_RESET_CTL3"
      sgroup "LDO18_PERPH_RESET_CTL3 (at 0x151da)"
        set &access:&cmd_addr %l (0x8051da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO18_PERPH_RESET_CTL4"
      sgroup "LDO18_PERPH_RESET_CTL4 (at 0x151db)"
        set &access:&cmd_addr %l (0x8051db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO18_INT_TEST1"
      sgroup "LDO18_INT_TEST1 (at 0x151e0)"
        set &access:&cmd_addr %l (0x8051e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO18_INT_TEST_VAL"
      sgroup "LDO18_INT_TEST_VAL (at 0x151e1)"
        set &access:&cmd_addr %l (0x8051e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO18_TEST1"
      sgroup "LDO18_TEST1 (at 0x151e2)"
        set &access:&cmd_addr %l (0x8051e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO18_TEST2"
      sgroup "LDO18_TEST2 (at 0x151e3)"
        set &access:&cmd_addr %l (0x8051e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO18_TRIM_NUM"
      sgroup "LDO18_TRIM_NUM (at 0x151f0)"
        set &access:&cmd_addr %l (0x8051f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO18_TRIM_CTRL"
      sgroup "LDO18_TRIM_CTRL (at 0x151f1)"
        set &access:&cmd_addr %l (0x8051f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x51f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO19"
  tree "LDO19"
    tree "LDO19_REVISION1"
      sgroup "LDO19_REVISION1 (at 0x15200)"
        set &access:&cmd_addr %l (0x8052000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO19_REVISION2"
      sgroup "LDO19_REVISION2 (at 0x15201)"
        set &access:&cmd_addr %l (0x8052010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO19_REVISION3"
      sgroup "LDO19_REVISION3 (at 0x15202)"
        set &access:&cmd_addr %l (0x8052020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO19_REVISION4"
      sgroup "LDO19_REVISION4 (at 0x15203)"
        set &access:&cmd_addr %l (0x8052030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO19_PERPH_TYPE"
      sgroup "LDO19_PERPH_TYPE (at 0x15204)"
        set &access:&cmd_addr %l (0x8052040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO19_PERPH_SUBTYPE"
      sgroup "LDO19_PERPH_SUBTYPE (at 0x15205)"
        set &access:&cmd_addr %l (0x8052050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO19_STATUS1"
      sgroup "LDO19_STATUS1 (at 0x15208)"
        set &access:&cmd_addr %l (0x8052080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO19_STATUS2"
      sgroup "LDO19_STATUS2 (at 0x15209)"
        set &access:&cmd_addr %l (0x8052090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO19_STATUS3"
      sgroup "LDO19_STATUS3 (at 0x1520a)"
        set &access:&cmd_addr %l (0x80520a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x520a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO19_INT_RT_STS"
      sgroup "LDO19_INT_RT_STS (at 0x15210)"
        set &access:&cmd_addr %l (0x8052100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO19_INT_SET_TYPE"
      sgroup "LDO19_INT_SET_TYPE (at 0x15211)"
        set &access:&cmd_addr %l (0x8052110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO19_INT_POLARITY_HIGH"
      sgroup "LDO19_INT_POLARITY_HIGH (at 0x15212)"
        set &access:&cmd_addr %l (0x8052120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO19_INT_POLARITY_LOW"
      sgroup "LDO19_INT_POLARITY_LOW (at 0x15213)"
        set &access:&cmd_addr %l (0x8052130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO19_INT_LATCHED_CLR"
      sgroup "LDO19_INT_LATCHED_CLR (at 0x15214)"
        set &access:&cmd_addr %l (0x8052140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO19_INT_EN_SET"
      sgroup "LDO19_INT_EN_SET (at 0x15215)"
        set &access:&cmd_addr %l (0x8052150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO19_INT_EN_CLR"
      sgroup "LDO19_INT_EN_CLR (at 0x15216)"
        set &access:&cmd_addr %l (0x8052160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO19_INT_LATCHED_STS"
      sgroup "LDO19_INT_LATCHED_STS (at 0x15218)"
        set &access:&cmd_addr %l (0x8052180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO19_INT_PENDING_STS"
      sgroup "LDO19_INT_PENDING_STS (at 0x15219)"
        set &access:&cmd_addr %l (0x8052190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO19_INT_MID_SEL"
      sgroup "LDO19_INT_MID_SEL (at 0x1521a)"
        set &access:&cmd_addr %l (0x80521a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x521a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO19_INT_PRIORITY"
      sgroup "LDO19_INT_PRIORITY (at 0x1521b)"
        set &access:&cmd_addr %l (0x80521b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x521b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO19_VOLTAGE_CTL1"
      sgroup "LDO19_VOLTAGE_CTL1 (at 0x15240)"
        set &access:&cmd_addr %l (0x8052400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO19_VOLTAGE_CTL2"
      sgroup "LDO19_VOLTAGE_CTL2 (at 0x15241)"
        set &access:&cmd_addr %l (0x8052410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO19_MODE_CTL2"
      sgroup "LDO19_MODE_CTL2 (at 0x15245)"
        set &access:&cmd_addr %l (0x8052450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO19_EN_CTL"
      sgroup "LDO19_EN_CTL (at 0x15246)"
        set &access:&cmd_addr %l (0x8052460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO19_PD_CTL"
      sgroup "LDO19_PD_CTL (at 0x15248)"
        set &access:&cmd_addr %l (0x8052480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO19_CURRENT_LIM_CTL"
      sgroup "LDO19_CURRENT_LIM_CTL (at 0x1524a)"
        set &access:&cmd_addr %l (0x80524a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x524a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO19_SOFT_START_CTL"
      sgroup "LDO19_SOFT_START_CTL (at 0x1524c)"
        set &access:&cmd_addr %l (0x80524c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x524c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO19_CONFIG_CTL"
      sgroup "LDO19_CONFIG_CTL (at 0x15252)"
        set &access:&cmd_addr %l (0x8052520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO19_LL_VOLTAGE_CTL1"
      sgroup "LDO19_LL_VOLTAGE_CTL1 (at 0x15268)"
        set &access:&cmd_addr %l (0x8052680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO19_LL_VOLTAGE_CTL2"
      sgroup "LDO19_LL_VOLTAGE_CTL2 (at 0x15269)"
        set &access:&cmd_addr %l (0x8052690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO19_UL_VOLTAGE_CTL1"
      sgroup "LDO19_UL_VOLTAGE_CTL1 (at 0x1526a)"
        set &access:&cmd_addr %l (0x80526a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x526a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO19_UL_VOLTAGE_CTL2"
      sgroup "LDO19_UL_VOLTAGE_CTL2 (at 0x1526b)"
        set &access:&cmd_addr %l (0x80526b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x526b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO19_SEC_ACCESS"
      sgroup "LDO19_SEC_ACCESS (at 0x152d0)"
        set &access:&cmd_addr %l (0x8052d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO19_PERPH_RESET_CTL1"
      sgroup "LDO19_PERPH_RESET_CTL1 (at 0x152d8)"
        set &access:&cmd_addr %l (0x8052d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO19_PERPH_RESET_CTL2"
      sgroup "LDO19_PERPH_RESET_CTL2 (at 0x152d9)"
        set &access:&cmd_addr %l (0x8052d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO19_PERPH_RESET_CTL3"
      sgroup "LDO19_PERPH_RESET_CTL3 (at 0x152da)"
        set &access:&cmd_addr %l (0x8052da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO19_PERPH_RESET_CTL4"
      sgroup "LDO19_PERPH_RESET_CTL4 (at 0x152db)"
        set &access:&cmd_addr %l (0x8052db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO19_INT_TEST1"
      sgroup "LDO19_INT_TEST1 (at 0x152e0)"
        set &access:&cmd_addr %l (0x8052e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO19_INT_TEST_VAL"
      sgroup "LDO19_INT_TEST_VAL (at 0x152e1)"
        set &access:&cmd_addr %l (0x8052e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO19_TEST1"
      sgroup "LDO19_TEST1 (at 0x152e2)"
        set &access:&cmd_addr %l (0x8052e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO19_TEST2"
      sgroup "LDO19_TEST2 (at 0x152e3)"
        set &access:&cmd_addr %l (0x8052e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO19_TRIM_NUM"
      sgroup "LDO19_TRIM_NUM (at 0x152f0)"
        set &access:&cmd_addr %l (0x8052f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO19_TRIM_CTRL"
      sgroup "LDO19_TRIM_CTRL (at 0x152f1)"
        set &access:&cmd_addr %l (0x8052f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x52f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO2"
  tree "LDO2"
    tree "LDO2_REVISION1"
      sgroup "LDO2_REVISION1 (at 0x14100)"
        set &access:&cmd_addr %l (0x8041000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO2_REVISION2"
      sgroup "LDO2_REVISION2 (at 0x14101)"
        set &access:&cmd_addr %l (0x8041010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO2_REVISION3"
      sgroup "LDO2_REVISION3 (at 0x14102)"
        set &access:&cmd_addr %l (0x8041020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO2_REVISION4"
      sgroup "LDO2_REVISION4 (at 0x14103)"
        set &access:&cmd_addr %l (0x8041030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO2_PERPH_TYPE"
      sgroup "LDO2_PERPH_TYPE (at 0x14104)"
        set &access:&cmd_addr %l (0x8041040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO2_PERPH_SUBTYPE"
      sgroup "LDO2_PERPH_SUBTYPE (at 0x14105)"
        set &access:&cmd_addr %l (0x8041050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO2_STATUS1"
      sgroup "LDO2_STATUS1 (at 0x14108)"
        set &access:&cmd_addr %l (0x8041080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE                             = " "0 (STEPPER_NOT_DONE),1 (STEPPER_DONE)"
    tree.end
    tree "LDO2_STATUS2"
      sgroup "LDO2_STATUS2 (at 0x14109)"
        set &access:&cmd_addr %l (0x8041090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO2_STATUS3"
      sgroup "LDO2_STATUS3 (at 0x1410a)"
        set &access:&cmd_addr %l (0x80410a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x410a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO2_INT_RT_STS"
      sgroup "LDO2_INT_RT_STS (at 0x14110)"
        set &access:&cmd_addr %l (0x8041100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO2_INT_SET_TYPE"
      sgroup "LDO2_INT_SET_TYPE (at 0x14111)"
        set &access:&cmd_addr %l (0x8041110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO2_INT_POLARITY_HIGH"
      sgroup "LDO2_INT_POLARITY_HIGH (at 0x14112)"
        set &access:&cmd_addr %l (0x8041120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO2_INT_POLARITY_LOW"
      sgroup "LDO2_INT_POLARITY_LOW (at 0x14113)"
        set &access:&cmd_addr %l (0x8041130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO2_INT_LATCHED_CLR"
      sgroup "LDO2_INT_LATCHED_CLR (at 0x14114)"
        set &access:&cmd_addr %l (0x8041140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO2_INT_EN_SET"
      sgroup "LDO2_INT_EN_SET (at 0x14115)"
        set &access:&cmd_addr %l (0x8041150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO2_INT_EN_CLR"
      sgroup "LDO2_INT_EN_CLR (at 0x14116)"
        set &access:&cmd_addr %l (0x8041160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO2_INT_LATCHED_STS"
      sgroup "LDO2_INT_LATCHED_STS (at 0x14118)"
        set &access:&cmd_addr %l (0x8041180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO2_INT_PENDING_STS"
      sgroup "LDO2_INT_PENDING_STS (at 0x14119)"
        set &access:&cmd_addr %l (0x8041190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO2_INT_MID_SEL"
      sgroup "LDO2_INT_MID_SEL (at 0x1411a)"
        set &access:&cmd_addr %l (0x80411a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x411a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO2_INT_PRIORITY"
      sgroup "LDO2_INT_PRIORITY (at 0x1411b)"
        set &access:&cmd_addr %l (0x80411b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x411b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO2_VOLTAGE_CTL1"
      sgroup "LDO2_VOLTAGE_CTL1 (at 0x14140)"
        set &access:&cmd_addr %l (0x8041400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO2_VOLTAGE_CTL2"
      sgroup "LDO2_VOLTAGE_CTL2 (at 0x14141)"
        set &access:&cmd_addr %l (0x8041410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO2_MODE_CTL2"
      sgroup "LDO2_MODE_CTL2 (at 0x14145)"
        set &access:&cmd_addr %l (0x8041450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO2_EN_CTL"
      sgroup "LDO2_EN_CTL (at 0x14146)"
        set &access:&cmd_addr %l (0x8041460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO2_PD_CTL"
      sgroup "LDO2_PD_CTL (at 0x14148)"
        set &access:&cmd_addr %l (0x8041480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO2_CURRENT_LIM_CTL"
      sgroup "LDO2_CURRENT_LIM_CTL (at 0x1414a)"
        set &access:&cmd_addr %l (0x80414a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x414a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO2_SOFT_START_CTL"
      sgroup "LDO2_SOFT_START_CTL (at 0x1414c)"
        set &access:&cmd_addr %l (0x80414c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x414c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO2_CONFIG_CTL"
      sgroup "LDO2_CONFIG_CTL (at 0x14152)"
        set &access:&cmd_addr %l (0x8041520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO2_VS_CTL"
      sgroup "LDO2_VS_CTL (at 0x14161)"
        set &access:&cmd_addr %l (0x8041610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VS_EN                                    = " "0 (STEPPER_DIABLED),1 (STEPPER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VS_DELAY                                 = " "0 (DELAY_1_20),1 (DELAY_1_40),2 (DELAY_1_80),3 (DELAY_1_160),4 (DELAY_1_320),5 (DELAY_1_640),6 (DELAY_1_1280),7 (DELAY_1_2560)"
    tree.end
    tree "LDO2_LL_VOLTAGE_CTL1"
      sgroup "LDO2_LL_VOLTAGE_CTL1 (at 0x14168)"
        set &access:&cmd_addr %l (0x8041680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO2_LL_VOLTAGE_CTL2"
      sgroup "LDO2_LL_VOLTAGE_CTL2 (at 0x14169)"
        set &access:&cmd_addr %l (0x8041690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO2_UL_VOLTAGE_CTL1"
      sgroup "LDO2_UL_VOLTAGE_CTL1 (at 0x1416a)"
        set &access:&cmd_addr %l (0x80416a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x416a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO2_UL_VOLTAGE_CTL2"
      sgroup "LDO2_UL_VOLTAGE_CTL2 (at 0x1416b)"
        set &access:&cmd_addr %l (0x80416b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x416b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO2_SEC_ACCESS"
      sgroup "LDO2_SEC_ACCESS (at 0x141d0)"
        set &access:&cmd_addr %l (0x8041d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO2_PERPH_RESET_CTL1"
      sgroup "LDO2_PERPH_RESET_CTL1 (at 0x141d8)"
        set &access:&cmd_addr %l (0x8041d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO2_PERPH_RESET_CTL2"
      sgroup "LDO2_PERPH_RESET_CTL2 (at 0x141d9)"
        set &access:&cmd_addr %l (0x8041d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO2_PERPH_RESET_CTL3"
      sgroup "LDO2_PERPH_RESET_CTL3 (at 0x141da)"
        set &access:&cmd_addr %l (0x8041da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO2_PERPH_RESET_CTL4"
      sgroup "LDO2_PERPH_RESET_CTL4 (at 0x141db)"
        set &access:&cmd_addr %l (0x8041db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO2_INT_TEST1"
      sgroup "LDO2_INT_TEST1 (at 0x141e0)"
        set &access:&cmd_addr %l (0x8041e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO2_INT_TEST_VAL"
      sgroup "LDO2_INT_TEST_VAL (at 0x141e1)"
        set &access:&cmd_addr %l (0x8041e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO2_TEST1"
      sgroup "LDO2_TEST1 (at 0x141e2)"
        set &access:&cmd_addr %l (0x8041e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO2_TEST2"
      sgroup "LDO2_TEST2 (at 0x141e3)"
        set &access:&cmd_addr %l (0x8041e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO2_TRIM_NUM"
      sgroup "LDO2_TRIM_NUM (at 0x141f0)"
        set &access:&cmd_addr %l (0x8041f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO2_TRIM_CTRL"
      sgroup "LDO2_TRIM_CTRL (at 0x141f1)"
        set &access:&cmd_addr %l (0x8041f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO20"
  tree "LDO20"
    tree "LDO20_REVISION1"
      sgroup "LDO20_REVISION1 (at 0x15300)"
        set &access:&cmd_addr %l (0x8053000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO20_REVISION2"
      sgroup "LDO20_REVISION2 (at 0x15301)"
        set &access:&cmd_addr %l (0x8053010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO20_REVISION3"
      sgroup "LDO20_REVISION3 (at 0x15302)"
        set &access:&cmd_addr %l (0x8053020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO20_REVISION4"
      sgroup "LDO20_REVISION4 (at 0x15303)"
        set &access:&cmd_addr %l (0x8053030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO20_PERPH_TYPE"
      sgroup "LDO20_PERPH_TYPE (at 0x15304)"
        set &access:&cmd_addr %l (0x8053040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO20_PERPH_SUBTYPE"
      sgroup "LDO20_PERPH_SUBTYPE (at 0x15305)"
        set &access:&cmd_addr %l (0x8053050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO20_STATUS1"
      sgroup "LDO20_STATUS1 (at 0x15308)"
        set &access:&cmd_addr %l (0x8053080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO20_STATUS2"
      sgroup "LDO20_STATUS2 (at 0x15309)"
        set &access:&cmd_addr %l (0x8053090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO20_STATUS3"
      sgroup "LDO20_STATUS3 (at 0x1530a)"
        set &access:&cmd_addr %l (0x80530a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x530a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO20_INT_RT_STS"
      sgroup "LDO20_INT_RT_STS (at 0x15310)"
        set &access:&cmd_addr %l (0x8053100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO20_INT_SET_TYPE"
      sgroup "LDO20_INT_SET_TYPE (at 0x15311)"
        set &access:&cmd_addr %l (0x8053110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO20_INT_POLARITY_HIGH"
      sgroup "LDO20_INT_POLARITY_HIGH (at 0x15312)"
        set &access:&cmd_addr %l (0x8053120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO20_INT_POLARITY_LOW"
      sgroup "LDO20_INT_POLARITY_LOW (at 0x15313)"
        set &access:&cmd_addr %l (0x8053130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO20_INT_LATCHED_CLR"
      sgroup "LDO20_INT_LATCHED_CLR (at 0x15314)"
        set &access:&cmd_addr %l (0x8053140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO20_INT_EN_SET"
      sgroup "LDO20_INT_EN_SET (at 0x15315)"
        set &access:&cmd_addr %l (0x8053150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO20_INT_EN_CLR"
      sgroup "LDO20_INT_EN_CLR (at 0x15316)"
        set &access:&cmd_addr %l (0x8053160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO20_INT_LATCHED_STS"
      sgroup "LDO20_INT_LATCHED_STS (at 0x15318)"
        set &access:&cmd_addr %l (0x8053180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO20_INT_PENDING_STS"
      sgroup "LDO20_INT_PENDING_STS (at 0x15319)"
        set &access:&cmd_addr %l (0x8053190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO20_INT_MID_SEL"
      sgroup "LDO20_INT_MID_SEL (at 0x1531a)"
        set &access:&cmd_addr %l (0x80531a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x531a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO20_INT_PRIORITY"
      sgroup "LDO20_INT_PRIORITY (at 0x1531b)"
        set &access:&cmd_addr %l (0x80531b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x531b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO20_VOLTAGE_CTL1"
      sgroup "LDO20_VOLTAGE_CTL1 (at 0x15340)"
        set &access:&cmd_addr %l (0x8053400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO20_VOLTAGE_CTL2"
      sgroup "LDO20_VOLTAGE_CTL2 (at 0x15341)"
        set &access:&cmd_addr %l (0x8053410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO20_MODE_CTL2"
      sgroup "LDO20_MODE_CTL2 (at 0x15345)"
        set &access:&cmd_addr %l (0x8053450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO20_EN_CTL"
      sgroup "LDO20_EN_CTL (at 0x15346)"
        set &access:&cmd_addr %l (0x8053460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO20_PD_CTL"
      sgroup "LDO20_PD_CTL (at 0x15348)"
        set &access:&cmd_addr %l (0x8053480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO20_CURRENT_LIM_CTL"
      sgroup "LDO20_CURRENT_LIM_CTL (at 0x1534a)"
        set &access:&cmd_addr %l (0x80534a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x534a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO20_SOFT_START_CTL"
      sgroup "LDO20_SOFT_START_CTL (at 0x1534c)"
        set &access:&cmd_addr %l (0x80534c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x534c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO20_CONFIG_CTL"
      sgroup "LDO20_CONFIG_CTL (at 0x15352)"
        set &access:&cmd_addr %l (0x8053520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO20_LL_VOLTAGE_CTL1"
      sgroup "LDO20_LL_VOLTAGE_CTL1 (at 0x15368)"
        set &access:&cmd_addr %l (0x8053680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO20_LL_VOLTAGE_CTL2"
      sgroup "LDO20_LL_VOLTAGE_CTL2 (at 0x15369)"
        set &access:&cmd_addr %l (0x8053690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO20_UL_VOLTAGE_CTL1"
      sgroup "LDO20_UL_VOLTAGE_CTL1 (at 0x1536a)"
        set &access:&cmd_addr %l (0x80536a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x536a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO20_UL_VOLTAGE_CTL2"
      sgroup "LDO20_UL_VOLTAGE_CTL2 (at 0x1536b)"
        set &access:&cmd_addr %l (0x80536b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x536b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO20_SEC_ACCESS"
      sgroup "LDO20_SEC_ACCESS (at 0x153d0)"
        set &access:&cmd_addr %l (0x8053d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO20_PERPH_RESET_CTL1"
      sgroup "LDO20_PERPH_RESET_CTL1 (at 0x153d8)"
        set &access:&cmd_addr %l (0x8053d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO20_PERPH_RESET_CTL2"
      sgroup "LDO20_PERPH_RESET_CTL2 (at 0x153d9)"
        set &access:&cmd_addr %l (0x8053d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO20_PERPH_RESET_CTL3"
      sgroup "LDO20_PERPH_RESET_CTL3 (at 0x153da)"
        set &access:&cmd_addr %l (0x8053da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO20_PERPH_RESET_CTL4"
      sgroup "LDO20_PERPH_RESET_CTL4 (at 0x153db)"
        set &access:&cmd_addr %l (0x8053db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO20_INT_TEST1"
      sgroup "LDO20_INT_TEST1 (at 0x153e0)"
        set &access:&cmd_addr %l (0x8053e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO20_INT_TEST_VAL"
      sgroup "LDO20_INT_TEST_VAL (at 0x153e1)"
        set &access:&cmd_addr %l (0x8053e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO20_TEST1"
      sgroup "LDO20_TEST1 (at 0x153e2)"
        set &access:&cmd_addr %l (0x8053e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO20_TEST2"
      sgroup "LDO20_TEST2 (at 0x153e3)"
        set &access:&cmd_addr %l (0x8053e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO20_TRIM_NUM"
      sgroup "LDO20_TRIM_NUM (at 0x153f0)"
        set &access:&cmd_addr %l (0x8053f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO20_TRIM_CTRL"
      sgroup "LDO20_TRIM_CTRL (at 0x153f1)"
        set &access:&cmd_addr %l (0x8053f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x53f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO21"
  tree "LDO21"
    tree "LDO21_REVISION1"
      sgroup "LDO21_REVISION1 (at 0x15400)"
        set &access:&cmd_addr %l (0x8054000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO21_REVISION2"
      sgroup "LDO21_REVISION2 (at 0x15401)"
        set &access:&cmd_addr %l (0x8054010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO21_REVISION3"
      sgroup "LDO21_REVISION3 (at 0x15402)"
        set &access:&cmd_addr %l (0x8054020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO21_REVISION4"
      sgroup "LDO21_REVISION4 (at 0x15403)"
        set &access:&cmd_addr %l (0x8054030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO21_PERPH_TYPE"
      sgroup "LDO21_PERPH_TYPE (at 0x15404)"
        set &access:&cmd_addr %l (0x8054040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO21_PERPH_SUBTYPE"
      sgroup "LDO21_PERPH_SUBTYPE (at 0x15405)"
        set &access:&cmd_addr %l (0x8054050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO21_STATUS1"
      sgroup "LDO21_STATUS1 (at 0x15408)"
        set &access:&cmd_addr %l (0x8054080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO21_STATUS2"
      sgroup "LDO21_STATUS2 (at 0x15409)"
        set &access:&cmd_addr %l (0x8054090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO21_STATUS3"
      sgroup "LDO21_STATUS3 (at 0x1540a)"
        set &access:&cmd_addr %l (0x80540a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x540a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO21_INT_RT_STS"
      sgroup "LDO21_INT_RT_STS (at 0x15410)"
        set &access:&cmd_addr %l (0x8054100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO21_INT_SET_TYPE"
      sgroup "LDO21_INT_SET_TYPE (at 0x15411)"
        set &access:&cmd_addr %l (0x8054110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO21_INT_POLARITY_HIGH"
      sgroup "LDO21_INT_POLARITY_HIGH (at 0x15412)"
        set &access:&cmd_addr %l (0x8054120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO21_INT_POLARITY_LOW"
      sgroup "LDO21_INT_POLARITY_LOW (at 0x15413)"
        set &access:&cmd_addr %l (0x8054130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO21_INT_LATCHED_CLR"
      sgroup "LDO21_INT_LATCHED_CLR (at 0x15414)"
        set &access:&cmd_addr %l (0x8054140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO21_INT_EN_SET"
      sgroup "LDO21_INT_EN_SET (at 0x15415)"
        set &access:&cmd_addr %l (0x8054150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO21_INT_EN_CLR"
      sgroup "LDO21_INT_EN_CLR (at 0x15416)"
        set &access:&cmd_addr %l (0x8054160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO21_INT_LATCHED_STS"
      sgroup "LDO21_INT_LATCHED_STS (at 0x15418)"
        set &access:&cmd_addr %l (0x8054180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO21_INT_PENDING_STS"
      sgroup "LDO21_INT_PENDING_STS (at 0x15419)"
        set &access:&cmd_addr %l (0x8054190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO21_INT_MID_SEL"
      sgroup "LDO21_INT_MID_SEL (at 0x1541a)"
        set &access:&cmd_addr %l (0x80541a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x541a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO21_INT_PRIORITY"
      sgroup "LDO21_INT_PRIORITY (at 0x1541b)"
        set &access:&cmd_addr %l (0x80541b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x541b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO21_VOLTAGE_CTL1"
      sgroup "LDO21_VOLTAGE_CTL1 (at 0x15440)"
        set &access:&cmd_addr %l (0x8054400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO21_VOLTAGE_CTL2"
      sgroup "LDO21_VOLTAGE_CTL2 (at 0x15441)"
        set &access:&cmd_addr %l (0x8054410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO21_MODE_CTL2"
      sgroup "LDO21_MODE_CTL2 (at 0x15445)"
        set &access:&cmd_addr %l (0x8054450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO21_EN_CTL"
      sgroup "LDO21_EN_CTL (at 0x15446)"
        set &access:&cmd_addr %l (0x8054460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO21_PD_CTL"
      sgroup "LDO21_PD_CTL (at 0x15448)"
        set &access:&cmd_addr %l (0x8054480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO21_CURRENT_LIM_CTL"
      sgroup "LDO21_CURRENT_LIM_CTL (at 0x1544a)"
        set &access:&cmd_addr %l (0x80544a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x544a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO21_SOFT_START_CTL"
      sgroup "LDO21_SOFT_START_CTL (at 0x1544c)"
        set &access:&cmd_addr %l (0x80544c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x544c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO21_CONFIG_CTL"
      sgroup "LDO21_CONFIG_CTL (at 0x15452)"
        set &access:&cmd_addr %l (0x8054520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO21_LL_VOLTAGE_CTL1"
      sgroup "LDO21_LL_VOLTAGE_CTL1 (at 0x15468)"
        set &access:&cmd_addr %l (0x8054680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO21_LL_VOLTAGE_CTL2"
      sgroup "LDO21_LL_VOLTAGE_CTL2 (at 0x15469)"
        set &access:&cmd_addr %l (0x8054690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO21_UL_VOLTAGE_CTL1"
      sgroup "LDO21_UL_VOLTAGE_CTL1 (at 0x1546a)"
        set &access:&cmd_addr %l (0x80546a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x546a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO21_UL_VOLTAGE_CTL2"
      sgroup "LDO21_UL_VOLTAGE_CTL2 (at 0x1546b)"
        set &access:&cmd_addr %l (0x80546b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x546b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO21_SEC_ACCESS"
      sgroup "LDO21_SEC_ACCESS (at 0x154d0)"
        set &access:&cmd_addr %l (0x8054d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO21_PERPH_RESET_CTL1"
      sgroup "LDO21_PERPH_RESET_CTL1 (at 0x154d8)"
        set &access:&cmd_addr %l (0x8054d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO21_PERPH_RESET_CTL2"
      sgroup "LDO21_PERPH_RESET_CTL2 (at 0x154d9)"
        set &access:&cmd_addr %l (0x8054d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO21_PERPH_RESET_CTL3"
      sgroup "LDO21_PERPH_RESET_CTL3 (at 0x154da)"
        set &access:&cmd_addr %l (0x8054da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO21_PERPH_RESET_CTL4"
      sgroup "LDO21_PERPH_RESET_CTL4 (at 0x154db)"
        set &access:&cmd_addr %l (0x8054db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO21_INT_TEST1"
      sgroup "LDO21_INT_TEST1 (at 0x154e0)"
        set &access:&cmd_addr %l (0x8054e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO21_INT_TEST_VAL"
      sgroup "LDO21_INT_TEST_VAL (at 0x154e1)"
        set &access:&cmd_addr %l (0x8054e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO21_TEST1"
      sgroup "LDO21_TEST1 (at 0x154e2)"
        set &access:&cmd_addr %l (0x8054e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO21_TEST2"
      sgroup "LDO21_TEST2 (at 0x154e3)"
        set &access:&cmd_addr %l (0x8054e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO21_TRIM_NUM"
      sgroup "LDO21_TRIM_NUM (at 0x154f0)"
        set &access:&cmd_addr %l (0x8054f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO21_TRIM_CTRL"
      sgroup "LDO21_TRIM_CTRL (at 0x154f1)"
        set &access:&cmd_addr %l (0x8054f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO22"
  tree "LDO22"
    tree "LDO22_REVISION1"
      sgroup "LDO22_REVISION1 (at 0x15500)"
        set &access:&cmd_addr %l (0x8055000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO22_REVISION2"
      sgroup "LDO22_REVISION2 (at 0x15501)"
        set &access:&cmd_addr %l (0x8055010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO22_REVISION3"
      sgroup "LDO22_REVISION3 (at 0x15502)"
        set &access:&cmd_addr %l (0x8055020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO22_REVISION4"
      sgroup "LDO22_REVISION4 (at 0x15503)"
        set &access:&cmd_addr %l (0x8055030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO22_PERPH_TYPE"
      sgroup "LDO22_PERPH_TYPE (at 0x15504)"
        set &access:&cmd_addr %l (0x8055040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO22_PERPH_SUBTYPE"
      sgroup "LDO22_PERPH_SUBTYPE (at 0x15505)"
        set &access:&cmd_addr %l (0x8055050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO22_STATUS1"
      sgroup "LDO22_STATUS1 (at 0x15508)"
        set &access:&cmd_addr %l (0x8055080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO22_STATUS2"
      sgroup "LDO22_STATUS2 (at 0x15509)"
        set &access:&cmd_addr %l (0x8055090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO22_STATUS3"
      sgroup "LDO22_STATUS3 (at 0x1550a)"
        set &access:&cmd_addr %l (0x80550a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x550a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO22_INT_RT_STS"
      sgroup "LDO22_INT_RT_STS (at 0x15510)"
        set &access:&cmd_addr %l (0x8055100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO22_INT_SET_TYPE"
      sgroup "LDO22_INT_SET_TYPE (at 0x15511)"
        set &access:&cmd_addr %l (0x8055110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO22_INT_POLARITY_HIGH"
      sgroup "LDO22_INT_POLARITY_HIGH (at 0x15512)"
        set &access:&cmd_addr %l (0x8055120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO22_INT_POLARITY_LOW"
      sgroup "LDO22_INT_POLARITY_LOW (at 0x15513)"
        set &access:&cmd_addr %l (0x8055130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO22_INT_LATCHED_CLR"
      sgroup "LDO22_INT_LATCHED_CLR (at 0x15514)"
        set &access:&cmd_addr %l (0x8055140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO22_INT_EN_SET"
      sgroup "LDO22_INT_EN_SET (at 0x15515)"
        set &access:&cmd_addr %l (0x8055150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO22_INT_EN_CLR"
      sgroup "LDO22_INT_EN_CLR (at 0x15516)"
        set &access:&cmd_addr %l (0x8055160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO22_INT_LATCHED_STS"
      sgroup "LDO22_INT_LATCHED_STS (at 0x15518)"
        set &access:&cmd_addr %l (0x8055180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO22_INT_PENDING_STS"
      sgroup "LDO22_INT_PENDING_STS (at 0x15519)"
        set &access:&cmd_addr %l (0x8055190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO22_INT_MID_SEL"
      sgroup "LDO22_INT_MID_SEL (at 0x1551a)"
        set &access:&cmd_addr %l (0x80551a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x551a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO22_INT_PRIORITY"
      sgroup "LDO22_INT_PRIORITY (at 0x1551b)"
        set &access:&cmd_addr %l (0x80551b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x551b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO22_VOLTAGE_CTL1"
      sgroup "LDO22_VOLTAGE_CTL1 (at 0x15540)"
        set &access:&cmd_addr %l (0x8055400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO22_VOLTAGE_CTL2"
      sgroup "LDO22_VOLTAGE_CTL2 (at 0x15541)"
        set &access:&cmd_addr %l (0x8055410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO22_MODE_CTL2"
      sgroup "LDO22_MODE_CTL2 (at 0x15545)"
        set &access:&cmd_addr %l (0x8055450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO22_EN_CTL"
      sgroup "LDO22_EN_CTL (at 0x15546)"
        set &access:&cmd_addr %l (0x8055460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO22_PD_CTL"
      sgroup "LDO22_PD_CTL (at 0x15548)"
        set &access:&cmd_addr %l (0x8055480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO22_CURRENT_LIM_CTL"
      sgroup "LDO22_CURRENT_LIM_CTL (at 0x1554a)"
        set &access:&cmd_addr %l (0x80554a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x554a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO22_SOFT_START_CTL"
      sgroup "LDO22_SOFT_START_CTL (at 0x1554c)"
        set &access:&cmd_addr %l (0x80554c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x554c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO22_CONFIG_CTL"
      sgroup "LDO22_CONFIG_CTL (at 0x15552)"
        set &access:&cmd_addr %l (0x8055520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO22_LL_VOLTAGE_CTL1"
      sgroup "LDO22_LL_VOLTAGE_CTL1 (at 0x15568)"
        set &access:&cmd_addr %l (0x8055680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO22_LL_VOLTAGE_CTL2"
      sgroup "LDO22_LL_VOLTAGE_CTL2 (at 0x15569)"
        set &access:&cmd_addr %l (0x8055690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO22_UL_VOLTAGE_CTL1"
      sgroup "LDO22_UL_VOLTAGE_CTL1 (at 0x1556a)"
        set &access:&cmd_addr %l (0x80556a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x556a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO22_UL_VOLTAGE_CTL2"
      sgroup "LDO22_UL_VOLTAGE_CTL2 (at 0x1556b)"
        set &access:&cmd_addr %l (0x80556b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x556b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO22_SEC_ACCESS"
      sgroup "LDO22_SEC_ACCESS (at 0x155d0)"
        set &access:&cmd_addr %l (0x8055d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO22_PERPH_RESET_CTL1"
      sgroup "LDO22_PERPH_RESET_CTL1 (at 0x155d8)"
        set &access:&cmd_addr %l (0x8055d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO22_PERPH_RESET_CTL2"
      sgroup "LDO22_PERPH_RESET_CTL2 (at 0x155d9)"
        set &access:&cmd_addr %l (0x8055d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO22_PERPH_RESET_CTL3"
      sgroup "LDO22_PERPH_RESET_CTL3 (at 0x155da)"
        set &access:&cmd_addr %l (0x8055da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO22_PERPH_RESET_CTL4"
      sgroup "LDO22_PERPH_RESET_CTL4 (at 0x155db)"
        set &access:&cmd_addr %l (0x8055db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO22_INT_TEST1"
      sgroup "LDO22_INT_TEST1 (at 0x155e0)"
        set &access:&cmd_addr %l (0x8055e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO22_INT_TEST_VAL"
      sgroup "LDO22_INT_TEST_VAL (at 0x155e1)"
        set &access:&cmd_addr %l (0x8055e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO22_TEST1"
      sgroup "LDO22_TEST1 (at 0x155e2)"
        set &access:&cmd_addr %l (0x8055e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO22_TEST2"
      sgroup "LDO22_TEST2 (at 0x155e3)"
        set &access:&cmd_addr %l (0x8055e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO22_TRIM_NUM"
      sgroup "LDO22_TRIM_NUM (at 0x155f0)"
        set &access:&cmd_addr %l (0x8055f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO22_TRIM_CTRL"
      sgroup "LDO22_TRIM_CTRL (at 0x155f1)"
        set &access:&cmd_addr %l (0x8055f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO23"
  tree "LDO23"
    tree "LDO23_REVISION1"
      sgroup "LDO23_REVISION1 (at 0x15600)"
        set &access:&cmd_addr %l (0x8056000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO23_REVISION2"
      sgroup "LDO23_REVISION2 (at 0x15601)"
        set &access:&cmd_addr %l (0x8056010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO23_REVISION3"
      sgroup "LDO23_REVISION3 (at 0x15602)"
        set &access:&cmd_addr %l (0x8056020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO23_REVISION4"
      sgroup "LDO23_REVISION4 (at 0x15603)"
        set &access:&cmd_addr %l (0x8056030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO23_PERPH_TYPE"
      sgroup "LDO23_PERPH_TYPE (at 0x15604)"
        set &access:&cmd_addr %l (0x8056040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO23_PERPH_SUBTYPE"
      sgroup "LDO23_PERPH_SUBTYPE (at 0x15605)"
        set &access:&cmd_addr %l (0x8056050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO23_STATUS1"
      sgroup "LDO23_STATUS1 (at 0x15608)"
        set &access:&cmd_addr %l (0x8056080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO23_STATUS2"
      sgroup "LDO23_STATUS2 (at 0x15609)"
        set &access:&cmd_addr %l (0x8056090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO23_STATUS3"
      sgroup "LDO23_STATUS3 (at 0x1560a)"
        set &access:&cmd_addr %l (0x80560a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x560a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO23_INT_RT_STS"
      sgroup "LDO23_INT_RT_STS (at 0x15610)"
        set &access:&cmd_addr %l (0x8056100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO23_INT_SET_TYPE"
      sgroup "LDO23_INT_SET_TYPE (at 0x15611)"
        set &access:&cmd_addr %l (0x8056110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO23_INT_POLARITY_HIGH"
      sgroup "LDO23_INT_POLARITY_HIGH (at 0x15612)"
        set &access:&cmd_addr %l (0x8056120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO23_INT_POLARITY_LOW"
      sgroup "LDO23_INT_POLARITY_LOW (at 0x15613)"
        set &access:&cmd_addr %l (0x8056130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO23_INT_LATCHED_CLR"
      sgroup "LDO23_INT_LATCHED_CLR (at 0x15614)"
        set &access:&cmd_addr %l (0x8056140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO23_INT_EN_SET"
      sgroup "LDO23_INT_EN_SET (at 0x15615)"
        set &access:&cmd_addr %l (0x8056150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO23_INT_EN_CLR"
      sgroup "LDO23_INT_EN_CLR (at 0x15616)"
        set &access:&cmd_addr %l (0x8056160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO23_INT_LATCHED_STS"
      sgroup "LDO23_INT_LATCHED_STS (at 0x15618)"
        set &access:&cmd_addr %l (0x8056180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO23_INT_PENDING_STS"
      sgroup "LDO23_INT_PENDING_STS (at 0x15619)"
        set &access:&cmd_addr %l (0x8056190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO23_INT_MID_SEL"
      sgroup "LDO23_INT_MID_SEL (at 0x1561a)"
        set &access:&cmd_addr %l (0x80561a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x561a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO23_INT_PRIORITY"
      sgroup "LDO23_INT_PRIORITY (at 0x1561b)"
        set &access:&cmd_addr %l (0x80561b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x561b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO23_VOLTAGE_CTL1"
      sgroup "LDO23_VOLTAGE_CTL1 (at 0x15640)"
        set &access:&cmd_addr %l (0x8056400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO23_VOLTAGE_CTL2"
      sgroup "LDO23_VOLTAGE_CTL2 (at 0x15641)"
        set &access:&cmd_addr %l (0x8056410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO23_MODE_CTL2"
      sgroup "LDO23_MODE_CTL2 (at 0x15645)"
        set &access:&cmd_addr %l (0x8056450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO23_EN_CTL"
      sgroup "LDO23_EN_CTL (at 0x15646)"
        set &access:&cmd_addr %l (0x8056460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO23_PD_CTL"
      sgroup "LDO23_PD_CTL (at 0x15648)"
        set &access:&cmd_addr %l (0x8056480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO23_CURRENT_LIM_CTL"
      sgroup "LDO23_CURRENT_LIM_CTL (at 0x1564a)"
        set &access:&cmd_addr %l (0x80564a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x564a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO23_SOFT_START_CTL"
      sgroup "LDO23_SOFT_START_CTL (at 0x1564c)"
        set &access:&cmd_addr %l (0x80564c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x564c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO23_CONFIG_CTL"
      sgroup "LDO23_CONFIG_CTL (at 0x15652)"
        set &access:&cmd_addr %l (0x8056520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO23_LL_VOLTAGE_CTL1"
      sgroup "LDO23_LL_VOLTAGE_CTL1 (at 0x15668)"
        set &access:&cmd_addr %l (0x8056680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO23_LL_VOLTAGE_CTL2"
      sgroup "LDO23_LL_VOLTAGE_CTL2 (at 0x15669)"
        set &access:&cmd_addr %l (0x8056690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO23_UL_VOLTAGE_CTL1"
      sgroup "LDO23_UL_VOLTAGE_CTL1 (at 0x1566a)"
        set &access:&cmd_addr %l (0x80566a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x566a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO23_UL_VOLTAGE_CTL2"
      sgroup "LDO23_UL_VOLTAGE_CTL2 (at 0x1566b)"
        set &access:&cmd_addr %l (0x80566b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x566b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO23_SEC_ACCESS"
      sgroup "LDO23_SEC_ACCESS (at 0x156d0)"
        set &access:&cmd_addr %l (0x8056d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO23_PERPH_RESET_CTL1"
      sgroup "LDO23_PERPH_RESET_CTL1 (at 0x156d8)"
        set &access:&cmd_addr %l (0x8056d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO23_PERPH_RESET_CTL2"
      sgroup "LDO23_PERPH_RESET_CTL2 (at 0x156d9)"
        set &access:&cmd_addr %l (0x8056d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO23_PERPH_RESET_CTL3"
      sgroup "LDO23_PERPH_RESET_CTL3 (at 0x156da)"
        set &access:&cmd_addr %l (0x8056da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO23_PERPH_RESET_CTL4"
      sgroup "LDO23_PERPH_RESET_CTL4 (at 0x156db)"
        set &access:&cmd_addr %l (0x8056db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO23_INT_TEST1"
      sgroup "LDO23_INT_TEST1 (at 0x156e0)"
        set &access:&cmd_addr %l (0x8056e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO23_INT_TEST_VAL"
      sgroup "LDO23_INT_TEST_VAL (at 0x156e1)"
        set &access:&cmd_addr %l (0x8056e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO23_TEST1"
      sgroup "LDO23_TEST1 (at 0x156e2)"
        set &access:&cmd_addr %l (0x8056e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO23_TEST2"
      sgroup "LDO23_TEST2 (at 0x156e3)"
        set &access:&cmd_addr %l (0x8056e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO23_TRIM_NUM"
      sgroup "LDO23_TRIM_NUM (at 0x156f0)"
        set &access:&cmd_addr %l (0x8056f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO23_TRIM_CTRL"
      sgroup "LDO23_TRIM_CTRL (at 0x156f1)"
        set &access:&cmd_addr %l (0x8056f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO24"
  tree "LDO24"
    tree "LDO24_REVISION1"
      sgroup "LDO24_REVISION1 (at 0x15700)"
        set &access:&cmd_addr %l (0x8057000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO24_REVISION2"
      sgroup "LDO24_REVISION2 (at 0x15701)"
        set &access:&cmd_addr %l (0x8057010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO24_REVISION3"
      sgroup "LDO24_REVISION3 (at 0x15702)"
        set &access:&cmd_addr %l (0x8057020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO24_REVISION4"
      sgroup "LDO24_REVISION4 (at 0x15703)"
        set &access:&cmd_addr %l (0x8057030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO24_PERPH_TYPE"
      sgroup "LDO24_PERPH_TYPE (at 0x15704)"
        set &access:&cmd_addr %l (0x8057040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO24_PERPH_SUBTYPE"
      sgroup "LDO24_PERPH_SUBTYPE (at 0x15705)"
        set &access:&cmd_addr %l (0x8057050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO24_STATUS1"
      sgroup "LDO24_STATUS1 (at 0x15708)"
        set &access:&cmd_addr %l (0x8057080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE                             = " "0 (STEPPER_NOT_DONE),1 (STEPPER_DONE)"
    tree.end
    tree "LDO24_STATUS2"
      sgroup "LDO24_STATUS2 (at 0x15709)"
        set &access:&cmd_addr %l (0x8057090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO24_STATUS3"
      sgroup "LDO24_STATUS3 (at 0x1570a)"
        set &access:&cmd_addr %l (0x80570a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x570a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO24_INT_RT_STS"
      sgroup "LDO24_INT_RT_STS (at 0x15710)"
        set &access:&cmd_addr %l (0x8057100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO24_INT_SET_TYPE"
      sgroup "LDO24_INT_SET_TYPE (at 0x15711)"
        set &access:&cmd_addr %l (0x8057110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO24_INT_POLARITY_HIGH"
      sgroup "LDO24_INT_POLARITY_HIGH (at 0x15712)"
        set &access:&cmd_addr %l (0x8057120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO24_INT_POLARITY_LOW"
      sgroup "LDO24_INT_POLARITY_LOW (at 0x15713)"
        set &access:&cmd_addr %l (0x8057130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO24_INT_LATCHED_CLR"
      sgroup "LDO24_INT_LATCHED_CLR (at 0x15714)"
        set &access:&cmd_addr %l (0x8057140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO24_INT_EN_SET"
      sgroup "LDO24_INT_EN_SET (at 0x15715)"
        set &access:&cmd_addr %l (0x8057150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO24_INT_EN_CLR"
      sgroup "LDO24_INT_EN_CLR (at 0x15716)"
        set &access:&cmd_addr %l (0x8057160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO24_INT_LATCHED_STS"
      sgroup "LDO24_INT_LATCHED_STS (at 0x15718)"
        set &access:&cmd_addr %l (0x8057180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO24_INT_PENDING_STS"
      sgroup "LDO24_INT_PENDING_STS (at 0x15719)"
        set &access:&cmd_addr %l (0x8057190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO24_INT_MID_SEL"
      sgroup "LDO24_INT_MID_SEL (at 0x1571a)"
        set &access:&cmd_addr %l (0x80571a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x571a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO24_INT_PRIORITY"
      sgroup "LDO24_INT_PRIORITY (at 0x1571b)"
        set &access:&cmd_addr %l (0x80571b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x571b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO24_VOLTAGE_CTL1"
      sgroup "LDO24_VOLTAGE_CTL1 (at 0x15740)"
        set &access:&cmd_addr %l (0x8057400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO24_VOLTAGE_CTL2"
      sgroup "LDO24_VOLTAGE_CTL2 (at 0x15741)"
        set &access:&cmd_addr %l (0x8057410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO24_MODE_CTL2"
      sgroup "LDO24_MODE_CTL2 (at 0x15745)"
        set &access:&cmd_addr %l (0x8057450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO24_EN_CTL"
      sgroup "LDO24_EN_CTL (at 0x15746)"
        set &access:&cmd_addr %l (0x8057460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO24_PD_CTL"
      sgroup "LDO24_PD_CTL (at 0x15748)"
        set &access:&cmd_addr %l (0x8057480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO24_CURRENT_LIM_CTL"
      sgroup "LDO24_CURRENT_LIM_CTL (at 0x1574a)"
        set &access:&cmd_addr %l (0x80574a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x574a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO24_SOFT_START_CTL"
      sgroup "LDO24_SOFT_START_CTL (at 0x1574c)"
        set &access:&cmd_addr %l (0x80574c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x574c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO24_CONFIG_CTL"
      sgroup "LDO24_CONFIG_CTL (at 0x15752)"
        set &access:&cmd_addr %l (0x8057520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO24_VS_CTL"
      sgroup "LDO24_VS_CTL (at 0x15761)"
        set &access:&cmd_addr %l (0x8057610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VS_EN                                    = " "0 (STEPPER_DIABLED),1 (STEPPER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VS_DELAY                                 = " "0 (DELAY_1_20),1 (DELAY_1_40),2 (DELAY_1_80),3 (DELAY_1_160),4 (DELAY_1_320),5 (DELAY_1_640),6 (DELAY_1_1280),7 (DELAY_1_2560)"
    tree.end
    tree "LDO24_LL_VOLTAGE_CTL1"
      sgroup "LDO24_LL_VOLTAGE_CTL1 (at 0x15768)"
        set &access:&cmd_addr %l (0x8057680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO24_LL_VOLTAGE_CTL2"
      sgroup "LDO24_LL_VOLTAGE_CTL2 (at 0x15769)"
        set &access:&cmd_addr %l (0x8057690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO24_UL_VOLTAGE_CTL1"
      sgroup "LDO24_UL_VOLTAGE_CTL1 (at 0x1576a)"
        set &access:&cmd_addr %l (0x80576a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x576a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO24_UL_VOLTAGE_CTL2"
      sgroup "LDO24_UL_VOLTAGE_CTL2 (at 0x1576b)"
        set &access:&cmd_addr %l (0x80576b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x576b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO24_SEC_ACCESS"
      sgroup "LDO24_SEC_ACCESS (at 0x157d0)"
        set &access:&cmd_addr %l (0x8057d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO24_PERPH_RESET_CTL1"
      sgroup "LDO24_PERPH_RESET_CTL1 (at 0x157d8)"
        set &access:&cmd_addr %l (0x8057d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO24_PERPH_RESET_CTL2"
      sgroup "LDO24_PERPH_RESET_CTL2 (at 0x157d9)"
        set &access:&cmd_addr %l (0x8057d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO24_PERPH_RESET_CTL3"
      sgroup "LDO24_PERPH_RESET_CTL3 (at 0x157da)"
        set &access:&cmd_addr %l (0x8057da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO24_PERPH_RESET_CTL4"
      sgroup "LDO24_PERPH_RESET_CTL4 (at 0x157db)"
        set &access:&cmd_addr %l (0x8057db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO24_INT_TEST1"
      sgroup "LDO24_INT_TEST1 (at 0x157e0)"
        set &access:&cmd_addr %l (0x8057e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO24_INT_TEST_VAL"
      sgroup "LDO24_INT_TEST_VAL (at 0x157e1)"
        set &access:&cmd_addr %l (0x8057e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO24_TEST1"
      sgroup "LDO24_TEST1 (at 0x157e2)"
        set &access:&cmd_addr %l (0x8057e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO24_TEST2"
      sgroup "LDO24_TEST2 (at 0x157e3)"
        set &access:&cmd_addr %l (0x8057e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO24_TRIM_NUM"
      sgroup "LDO24_TRIM_NUM (at 0x157f0)"
        set &access:&cmd_addr %l (0x8057f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO24_TRIM_CTRL"
      sgroup "LDO24_TRIM_CTRL (at 0x157f1)"
        set &access:&cmd_addr %l (0x8057f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x57f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO25"
  tree "LDO25"
    tree "LDO25_REVISION1"
      sgroup "LDO25_REVISION1 (at 0x15800)"
        set &access:&cmd_addr %l (0x8058000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO25_REVISION2"
      sgroup "LDO25_REVISION2 (at 0x15801)"
        set &access:&cmd_addr %l (0x8058010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO25_REVISION3"
      sgroup "LDO25_REVISION3 (at 0x15802)"
        set &access:&cmd_addr %l (0x8058020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO25_REVISION4"
      sgroup "LDO25_REVISION4 (at 0x15803)"
        set &access:&cmd_addr %l (0x8058030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO25_PERPH_TYPE"
      sgroup "LDO25_PERPH_TYPE (at 0x15804)"
        set &access:&cmd_addr %l (0x8058040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO25_PERPH_SUBTYPE"
      sgroup "LDO25_PERPH_SUBTYPE (at 0x15805)"
        set &access:&cmd_addr %l (0x8058050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO25_STATUS1"
      sgroup "LDO25_STATUS1 (at 0x15808)"
        set &access:&cmd_addr %l (0x8058080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO25_STATUS2"
      sgroup "LDO25_STATUS2 (at 0x15809)"
        set &access:&cmd_addr %l (0x8058090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO25_STATUS3"
      sgroup "LDO25_STATUS3 (at 0x1580a)"
        set &access:&cmd_addr %l (0x80580a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x580a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO25_INT_RT_STS"
      sgroup "LDO25_INT_RT_STS (at 0x15810)"
        set &access:&cmd_addr %l (0x8058100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO25_INT_SET_TYPE"
      sgroup "LDO25_INT_SET_TYPE (at 0x15811)"
        set &access:&cmd_addr %l (0x8058110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO25_INT_POLARITY_HIGH"
      sgroup "LDO25_INT_POLARITY_HIGH (at 0x15812)"
        set &access:&cmd_addr %l (0x8058120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO25_INT_POLARITY_LOW"
      sgroup "LDO25_INT_POLARITY_LOW (at 0x15813)"
        set &access:&cmd_addr %l (0x8058130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO25_INT_LATCHED_CLR"
      sgroup "LDO25_INT_LATCHED_CLR (at 0x15814)"
        set &access:&cmd_addr %l (0x8058140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO25_INT_EN_SET"
      sgroup "LDO25_INT_EN_SET (at 0x15815)"
        set &access:&cmd_addr %l (0x8058150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO25_INT_EN_CLR"
      sgroup "LDO25_INT_EN_CLR (at 0x15816)"
        set &access:&cmd_addr %l (0x8058160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO25_INT_LATCHED_STS"
      sgroup "LDO25_INT_LATCHED_STS (at 0x15818)"
        set &access:&cmd_addr %l (0x8058180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO25_INT_PENDING_STS"
      sgroup "LDO25_INT_PENDING_STS (at 0x15819)"
        set &access:&cmd_addr %l (0x8058190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO25_INT_MID_SEL"
      sgroup "LDO25_INT_MID_SEL (at 0x1581a)"
        set &access:&cmd_addr %l (0x80581a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x581a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO25_INT_PRIORITY"
      sgroup "LDO25_INT_PRIORITY (at 0x1581b)"
        set &access:&cmd_addr %l (0x80581b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x581b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO25_VOLTAGE_CTL1"
      sgroup "LDO25_VOLTAGE_CTL1 (at 0x15840)"
        set &access:&cmd_addr %l (0x8058400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO25_VOLTAGE_CTL2"
      sgroup "LDO25_VOLTAGE_CTL2 (at 0x15841)"
        set &access:&cmd_addr %l (0x8058410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO25_MODE_CTL2"
      sgroup "LDO25_MODE_CTL2 (at 0x15845)"
        set &access:&cmd_addr %l (0x8058450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO25_EN_CTL"
      sgroup "LDO25_EN_CTL (at 0x15846)"
        set &access:&cmd_addr %l (0x8058460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO25_PD_CTL"
      sgroup "LDO25_PD_CTL (at 0x15848)"
        set &access:&cmd_addr %l (0x8058480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO25_CURRENT_LIM_CTL"
      sgroup "LDO25_CURRENT_LIM_CTL (at 0x1584a)"
        set &access:&cmd_addr %l (0x80584a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x584a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO25_SOFT_START_CTL"
      sgroup "LDO25_SOFT_START_CTL (at 0x1584c)"
        set &access:&cmd_addr %l (0x80584c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x584c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO25_CONFIG_CTL"
      sgroup "LDO25_CONFIG_CTL (at 0x15852)"
        set &access:&cmd_addr %l (0x8058520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO25_LL_VOLTAGE_CTL1"
      sgroup "LDO25_LL_VOLTAGE_CTL1 (at 0x15868)"
        set &access:&cmd_addr %l (0x8058680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO25_LL_VOLTAGE_CTL2"
      sgroup "LDO25_LL_VOLTAGE_CTL2 (at 0x15869)"
        set &access:&cmd_addr %l (0x8058690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO25_UL_VOLTAGE_CTL1"
      sgroup "LDO25_UL_VOLTAGE_CTL1 (at 0x1586a)"
        set &access:&cmd_addr %l (0x80586a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x586a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO25_UL_VOLTAGE_CTL2"
      sgroup "LDO25_UL_VOLTAGE_CTL2 (at 0x1586b)"
        set &access:&cmd_addr %l (0x80586b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x586b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO25_SEC_ACCESS"
      sgroup "LDO25_SEC_ACCESS (at 0x158d0)"
        set &access:&cmd_addr %l (0x8058d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO25_PERPH_RESET_CTL1"
      sgroup "LDO25_PERPH_RESET_CTL1 (at 0x158d8)"
        set &access:&cmd_addr %l (0x8058d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO25_PERPH_RESET_CTL2"
      sgroup "LDO25_PERPH_RESET_CTL2 (at 0x158d9)"
        set &access:&cmd_addr %l (0x8058d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO25_PERPH_RESET_CTL3"
      sgroup "LDO25_PERPH_RESET_CTL3 (at 0x158da)"
        set &access:&cmd_addr %l (0x8058da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO25_PERPH_RESET_CTL4"
      sgroup "LDO25_PERPH_RESET_CTL4 (at 0x158db)"
        set &access:&cmd_addr %l (0x8058db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO25_INT_TEST1"
      sgroup "LDO25_INT_TEST1 (at 0x158e0)"
        set &access:&cmd_addr %l (0x8058e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO25_INT_TEST_VAL"
      sgroup "LDO25_INT_TEST_VAL (at 0x158e1)"
        set &access:&cmd_addr %l (0x8058e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO25_TEST1"
      sgroup "LDO25_TEST1 (at 0x158e2)"
        set &access:&cmd_addr %l (0x8058e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO25_TEST2"
      sgroup "LDO25_TEST2 (at 0x158e3)"
        set &access:&cmd_addr %l (0x8058e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO25_TRIM_NUM"
      sgroup "LDO25_TRIM_NUM (at 0x158f0)"
        set &access:&cmd_addr %l (0x8058f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO25_TRIM_CTRL"
      sgroup "LDO25_TRIM_CTRL (at 0x158f1)"
        set &access:&cmd_addr %l (0x8058f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x58f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO26"
  tree "LDO26"
    tree "LDO26_REVISION1"
      sgroup "LDO26_REVISION1 (at 0x15900)"
        set &access:&cmd_addr %l (0x8059000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO26_REVISION2"
      sgroup "LDO26_REVISION2 (at 0x15901)"
        set &access:&cmd_addr %l (0x8059010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO26_REVISION3"
      sgroup "LDO26_REVISION3 (at 0x15902)"
        set &access:&cmd_addr %l (0x8059020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO26_REVISION4"
      sgroup "LDO26_REVISION4 (at 0x15903)"
        set &access:&cmd_addr %l (0x8059030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO26_PERPH_TYPE"
      sgroup "LDO26_PERPH_TYPE (at 0x15904)"
        set &access:&cmd_addr %l (0x8059040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO26_PERPH_SUBTYPE"
      sgroup "LDO26_PERPH_SUBTYPE (at 0x15905)"
        set &access:&cmd_addr %l (0x8059050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO26_STATUS1"
      sgroup "LDO26_STATUS1 (at 0x15908)"
        set &access:&cmd_addr %l (0x8059080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE                             = " "0 (STEPPER_NOT_DONE),1 (STEPPER_DONE)"
    tree.end
    tree "LDO26_STATUS2"
      sgroup "LDO26_STATUS2 (at 0x15909)"
        set &access:&cmd_addr %l (0x8059090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO26_STATUS3"
      sgroup "LDO26_STATUS3 (at 0x1590a)"
        set &access:&cmd_addr %l (0x80590a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x590a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO26_INT_RT_STS"
      sgroup "LDO26_INT_RT_STS (at 0x15910)"
        set &access:&cmd_addr %l (0x8059100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO26_INT_SET_TYPE"
      sgroup "LDO26_INT_SET_TYPE (at 0x15911)"
        set &access:&cmd_addr %l (0x8059110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO26_INT_POLARITY_HIGH"
      sgroup "LDO26_INT_POLARITY_HIGH (at 0x15912)"
        set &access:&cmd_addr %l (0x8059120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO26_INT_POLARITY_LOW"
      sgroup "LDO26_INT_POLARITY_LOW (at 0x15913)"
        set &access:&cmd_addr %l (0x8059130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO26_INT_LATCHED_CLR"
      sgroup "LDO26_INT_LATCHED_CLR (at 0x15914)"
        set &access:&cmd_addr %l (0x8059140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO26_INT_EN_SET"
      sgroup "LDO26_INT_EN_SET (at 0x15915)"
        set &access:&cmd_addr %l (0x8059150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO26_INT_EN_CLR"
      sgroup "LDO26_INT_EN_CLR (at 0x15916)"
        set &access:&cmd_addr %l (0x8059160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO26_INT_LATCHED_STS"
      sgroup "LDO26_INT_LATCHED_STS (at 0x15918)"
        set &access:&cmd_addr %l (0x8059180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO26_INT_PENDING_STS"
      sgroup "LDO26_INT_PENDING_STS (at 0x15919)"
        set &access:&cmd_addr %l (0x8059190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO26_INT_MID_SEL"
      sgroup "LDO26_INT_MID_SEL (at 0x1591a)"
        set &access:&cmd_addr %l (0x80591a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x591a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO26_INT_PRIORITY"
      sgroup "LDO26_INT_PRIORITY (at 0x1591b)"
        set &access:&cmd_addr %l (0x80591b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x591b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO26_VOLTAGE_CTL1"
      sgroup "LDO26_VOLTAGE_CTL1 (at 0x15940)"
        set &access:&cmd_addr %l (0x8059400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO26_VOLTAGE_CTL2"
      sgroup "LDO26_VOLTAGE_CTL2 (at 0x15941)"
        set &access:&cmd_addr %l (0x8059410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO26_MODE_CTL2"
      sgroup "LDO26_MODE_CTL2 (at 0x15945)"
        set &access:&cmd_addr %l (0x8059450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO26_EN_CTL"
      sgroup "LDO26_EN_CTL (at 0x15946)"
        set &access:&cmd_addr %l (0x8059460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO26_PD_CTL"
      sgroup "LDO26_PD_CTL (at 0x15948)"
        set &access:&cmd_addr %l (0x8059480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO26_CURRENT_LIM_CTL"
      sgroup "LDO26_CURRENT_LIM_CTL (at 0x1594a)"
        set &access:&cmd_addr %l (0x80594a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x594a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO26_SOFT_START_CTL"
      sgroup "LDO26_SOFT_START_CTL (at 0x1594c)"
        set &access:&cmd_addr %l (0x80594c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x594c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO26_CONFIG_CTL"
      sgroup "LDO26_CONFIG_CTL (at 0x15952)"
        set &access:&cmd_addr %l (0x8059520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO26_VS_CTL"
      sgroup "LDO26_VS_CTL (at 0x15961)"
        set &access:&cmd_addr %l (0x8059610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VS_EN                                    = " "0 (STEPPER_DIABLED),1 (STEPPER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VS_DELAY                                 = " "0 (DELAY_1_20),1 (DELAY_1_40),2 (DELAY_1_80),3 (DELAY_1_160),4 (DELAY_1_320),5 (DELAY_1_640),6 (DELAY_1_1280),7 (DELAY_1_2560)"
    tree.end
    tree "LDO26_LL_VOLTAGE_CTL1"
      sgroup "LDO26_LL_VOLTAGE_CTL1 (at 0x15968)"
        set &access:&cmd_addr %l (0x8059680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO26_LL_VOLTAGE_CTL2"
      sgroup "LDO26_LL_VOLTAGE_CTL2 (at 0x15969)"
        set &access:&cmd_addr %l (0x8059690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO26_UL_VOLTAGE_CTL1"
      sgroup "LDO26_UL_VOLTAGE_CTL1 (at 0x1596a)"
        set &access:&cmd_addr %l (0x80596a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x596a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO26_UL_VOLTAGE_CTL2"
      sgroup "LDO26_UL_VOLTAGE_CTL2 (at 0x1596b)"
        set &access:&cmd_addr %l (0x80596b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x596b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO26_SEC_ACCESS"
      sgroup "LDO26_SEC_ACCESS (at 0x159d0)"
        set &access:&cmd_addr %l (0x8059d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO26_PERPH_RESET_CTL1"
      sgroup "LDO26_PERPH_RESET_CTL1 (at 0x159d8)"
        set &access:&cmd_addr %l (0x8059d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO26_PERPH_RESET_CTL2"
      sgroup "LDO26_PERPH_RESET_CTL2 (at 0x159d9)"
        set &access:&cmd_addr %l (0x8059d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO26_PERPH_RESET_CTL3"
      sgroup "LDO26_PERPH_RESET_CTL3 (at 0x159da)"
        set &access:&cmd_addr %l (0x8059da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO26_PERPH_RESET_CTL4"
      sgroup "LDO26_PERPH_RESET_CTL4 (at 0x159db)"
        set &access:&cmd_addr %l (0x8059db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO26_INT_TEST1"
      sgroup "LDO26_INT_TEST1 (at 0x159e0)"
        set &access:&cmd_addr %l (0x8059e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO26_INT_TEST_VAL"
      sgroup "LDO26_INT_TEST_VAL (at 0x159e1)"
        set &access:&cmd_addr %l (0x8059e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO26_TEST1"
      sgroup "LDO26_TEST1 (at 0x159e2)"
        set &access:&cmd_addr %l (0x8059e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO26_TEST2"
      sgroup "LDO26_TEST2 (at 0x159e3)"
        set &access:&cmd_addr %l (0x8059e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO26_TRIM_NUM"
      sgroup "LDO26_TRIM_NUM (at 0x159f0)"
        set &access:&cmd_addr %l (0x8059f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO26_TRIM_CTRL"
      sgroup "LDO26_TRIM_CTRL (at 0x159f1)"
        set &access:&cmd_addr %l (0x8059f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO27"
  tree "LDO27"
    tree "LDO27_REVISION1"
      sgroup "LDO27_REVISION1 (at 0x15a00)"
        set &access:&cmd_addr %l (0x805a000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO27_REVISION2"
      sgroup "LDO27_REVISION2 (at 0x15a01)"
        set &access:&cmd_addr %l (0x805a010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO27_REVISION3"
      sgroup "LDO27_REVISION3 (at 0x15a02)"
        set &access:&cmd_addr %l (0x805a020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO27_REVISION4"
      sgroup "LDO27_REVISION4 (at 0x15a03)"
        set &access:&cmd_addr %l (0x805a030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO27_PERPH_TYPE"
      sgroup "LDO27_PERPH_TYPE (at 0x15a04)"
        set &access:&cmd_addr %l (0x805a040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO27_PERPH_SUBTYPE"
      sgroup "LDO27_PERPH_SUBTYPE (at 0x15a05)"
        set &access:&cmd_addr %l (0x805a050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO27_STATUS1"
      sgroup "LDO27_STATUS1 (at 0x15a08)"
        set &access:&cmd_addr %l (0x805a080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO27_STATUS2"
      sgroup "LDO27_STATUS2 (at 0x15a09)"
        set &access:&cmd_addr %l (0x805a090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO27_STATUS3"
      sgroup "LDO27_STATUS3 (at 0x15a0a)"
        set &access:&cmd_addr %l (0x805a0a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a0a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO27_INT_RT_STS"
      sgroup "LDO27_INT_RT_STS (at 0x15a10)"
        set &access:&cmd_addr %l (0x805a100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO27_INT_SET_TYPE"
      sgroup "LDO27_INT_SET_TYPE (at 0x15a11)"
        set &access:&cmd_addr %l (0x805a110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO27_INT_POLARITY_HIGH"
      sgroup "LDO27_INT_POLARITY_HIGH (at 0x15a12)"
        set &access:&cmd_addr %l (0x805a120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO27_INT_POLARITY_LOW"
      sgroup "LDO27_INT_POLARITY_LOW (at 0x15a13)"
        set &access:&cmd_addr %l (0x805a130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO27_INT_LATCHED_CLR"
      sgroup "LDO27_INT_LATCHED_CLR (at 0x15a14)"
        set &access:&cmd_addr %l (0x805a140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO27_INT_EN_SET"
      sgroup "LDO27_INT_EN_SET (at 0x15a15)"
        set &access:&cmd_addr %l (0x805a150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO27_INT_EN_CLR"
      sgroup "LDO27_INT_EN_CLR (at 0x15a16)"
        set &access:&cmd_addr %l (0x805a160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO27_INT_LATCHED_STS"
      sgroup "LDO27_INT_LATCHED_STS (at 0x15a18)"
        set &access:&cmd_addr %l (0x805a180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO27_INT_PENDING_STS"
      sgroup "LDO27_INT_PENDING_STS (at 0x15a19)"
        set &access:&cmd_addr %l (0x805a190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO27_INT_MID_SEL"
      sgroup "LDO27_INT_MID_SEL (at 0x15a1a)"
        set &access:&cmd_addr %l (0x805a1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO27_INT_PRIORITY"
      sgroup "LDO27_INT_PRIORITY (at 0x15a1b)"
        set &access:&cmd_addr %l (0x805a1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO27_VOLTAGE_CTL1"
      sgroup "LDO27_VOLTAGE_CTL1 (at 0x15a40)"
        set &access:&cmd_addr %l (0x805a400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO27_VOLTAGE_CTL2"
      sgroup "LDO27_VOLTAGE_CTL2 (at 0x15a41)"
        set &access:&cmd_addr %l (0x805a410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO27_MODE_CTL2"
      sgroup "LDO27_MODE_CTL2 (at 0x15a45)"
        set &access:&cmd_addr %l (0x805a450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO27_EN_CTL"
      sgroup "LDO27_EN_CTL (at 0x15a46)"
        set &access:&cmd_addr %l (0x805a460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO27_PD_CTL"
      sgroup "LDO27_PD_CTL (at 0x15a48)"
        set &access:&cmd_addr %l (0x805a480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO27_CURRENT_LIM_CTL"
      sgroup "LDO27_CURRENT_LIM_CTL (at 0x15a4a)"
        set &access:&cmd_addr %l (0x805a4a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a4a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO27_SOFT_START_CTL"
      sgroup "LDO27_SOFT_START_CTL (at 0x15a4c)"
        set &access:&cmd_addr %l (0x805a4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO27_CONFIG_CTL"
      sgroup "LDO27_CONFIG_CTL (at 0x15a52)"
        set &access:&cmd_addr %l (0x805a520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO27_LL_VOLTAGE_CTL1"
      sgroup "LDO27_LL_VOLTAGE_CTL1 (at 0x15a68)"
        set &access:&cmd_addr %l (0x805a680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO27_LL_VOLTAGE_CTL2"
      sgroup "LDO27_LL_VOLTAGE_CTL2 (at 0x15a69)"
        set &access:&cmd_addr %l (0x805a690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO27_UL_VOLTAGE_CTL1"
      sgroup "LDO27_UL_VOLTAGE_CTL1 (at 0x15a6a)"
        set &access:&cmd_addr %l (0x805a6a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a6a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO27_UL_VOLTAGE_CTL2"
      sgroup "LDO27_UL_VOLTAGE_CTL2 (at 0x15a6b)"
        set &access:&cmd_addr %l (0x805a6b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a6b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO27_SEC_ACCESS"
      sgroup "LDO27_SEC_ACCESS (at 0x15ad0)"
        set &access:&cmd_addr %l (0x805ad00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ad00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO27_PERPH_RESET_CTL1"
      sgroup "LDO27_PERPH_RESET_CTL1 (at 0x15ad8)"
        set &access:&cmd_addr %l (0x805ad80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ad80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO27_PERPH_RESET_CTL2"
      sgroup "LDO27_PERPH_RESET_CTL2 (at 0x15ad9)"
        set &access:&cmd_addr %l (0x805ad90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ad90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO27_PERPH_RESET_CTL3"
      sgroup "LDO27_PERPH_RESET_CTL3 (at 0x15ada)"
        set &access:&cmd_addr %l (0x805ada0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ada0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO27_PERPH_RESET_CTL4"
      sgroup "LDO27_PERPH_RESET_CTL4 (at 0x15adb)"
        set &access:&cmd_addr %l (0x805adb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5adb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO27_INT_TEST1"
      sgroup "LDO27_INT_TEST1 (at 0x15ae0)"
        set &access:&cmd_addr %l (0x805ae00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ae00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO27_INT_TEST_VAL"
      sgroup "LDO27_INT_TEST_VAL (at 0x15ae1)"
        set &access:&cmd_addr %l (0x805ae10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ae10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO27_TEST1"
      sgroup "LDO27_TEST1 (at 0x15ae2)"
        set &access:&cmd_addr %l (0x805ae20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ae20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO27_TEST2"
      sgroup "LDO27_TEST2 (at 0x15ae3)"
        set &access:&cmd_addr %l (0x805ae30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ae30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO27_TRIM_NUM"
      sgroup "LDO27_TRIM_NUM (at 0x15af0)"
        set &access:&cmd_addr %l (0x805af00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5af00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO27_TRIM_CTRL"
      sgroup "LDO27_TRIM_CTRL (at 0x15af1)"
        set &access:&cmd_addr %l (0x805af10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5af10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO28"
  tree "LDO28"
    tree "LDO28_REVISION1"
      sgroup "LDO28_REVISION1 (at 0x15b00)"
        set &access:&cmd_addr %l (0x805b000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO28_REVISION2"
      sgroup "LDO28_REVISION2 (at 0x15b01)"
        set &access:&cmd_addr %l (0x805b010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO28_REVISION3"
      sgroup "LDO28_REVISION3 (at 0x15b02)"
        set &access:&cmd_addr %l (0x805b020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO28_REVISION4"
      sgroup "LDO28_REVISION4 (at 0x15b03)"
        set &access:&cmd_addr %l (0x805b030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO28_PERPH_TYPE"
      sgroup "LDO28_PERPH_TYPE (at 0x15b04)"
        set &access:&cmd_addr %l (0x805b040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO28_PERPH_SUBTYPE"
      sgroup "LDO28_PERPH_SUBTYPE (at 0x15b05)"
        set &access:&cmd_addr %l (0x805b050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO28_STATUS1"
      sgroup "LDO28_STATUS1 (at 0x15b08)"
        set &access:&cmd_addr %l (0x805b080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO28_STATUS2"
      sgroup "LDO28_STATUS2 (at 0x15b09)"
        set &access:&cmd_addr %l (0x805b090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO28_STATUS3"
      sgroup "LDO28_STATUS3 (at 0x15b0a)"
        set &access:&cmd_addr %l (0x805b0a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b0a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO28_INT_RT_STS"
      sgroup "LDO28_INT_RT_STS (at 0x15b10)"
        set &access:&cmd_addr %l (0x805b100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO28_INT_SET_TYPE"
      sgroup "LDO28_INT_SET_TYPE (at 0x15b11)"
        set &access:&cmd_addr %l (0x805b110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO28_INT_POLARITY_HIGH"
      sgroup "LDO28_INT_POLARITY_HIGH (at 0x15b12)"
        set &access:&cmd_addr %l (0x805b120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO28_INT_POLARITY_LOW"
      sgroup "LDO28_INT_POLARITY_LOW (at 0x15b13)"
        set &access:&cmd_addr %l (0x805b130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO28_INT_LATCHED_CLR"
      sgroup "LDO28_INT_LATCHED_CLR (at 0x15b14)"
        set &access:&cmd_addr %l (0x805b140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO28_INT_EN_SET"
      sgroup "LDO28_INT_EN_SET (at 0x15b15)"
        set &access:&cmd_addr %l (0x805b150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO28_INT_EN_CLR"
      sgroup "LDO28_INT_EN_CLR (at 0x15b16)"
        set &access:&cmd_addr %l (0x805b160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO28_INT_LATCHED_STS"
      sgroup "LDO28_INT_LATCHED_STS (at 0x15b18)"
        set &access:&cmd_addr %l (0x805b180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO28_INT_PENDING_STS"
      sgroup "LDO28_INT_PENDING_STS (at 0x15b19)"
        set &access:&cmd_addr %l (0x805b190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO28_INT_MID_SEL"
      sgroup "LDO28_INT_MID_SEL (at 0x15b1a)"
        set &access:&cmd_addr %l (0x805b1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO28_INT_PRIORITY"
      sgroup "LDO28_INT_PRIORITY (at 0x15b1b)"
        set &access:&cmd_addr %l (0x805b1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO28_VOLTAGE_CTL1"
      sgroup "LDO28_VOLTAGE_CTL1 (at 0x15b40)"
        set &access:&cmd_addr %l (0x805b400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO28_VOLTAGE_CTL2"
      sgroup "LDO28_VOLTAGE_CTL2 (at 0x15b41)"
        set &access:&cmd_addr %l (0x805b410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO28_MODE_CTL2"
      sgroup "LDO28_MODE_CTL2 (at 0x15b45)"
        set &access:&cmd_addr %l (0x805b450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO28_EN_CTL"
      sgroup "LDO28_EN_CTL (at 0x15b46)"
        set &access:&cmd_addr %l (0x805b460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO28_PD_CTL"
      sgroup "LDO28_PD_CTL (at 0x15b48)"
        set &access:&cmd_addr %l (0x805b480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO28_CURRENT_LIM_CTL"
      sgroup "LDO28_CURRENT_LIM_CTL (at 0x15b4a)"
        set &access:&cmd_addr %l (0x805b4a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b4a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO28_SOFT_START_CTL"
      sgroup "LDO28_SOFT_START_CTL (at 0x15b4c)"
        set &access:&cmd_addr %l (0x805b4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO28_CONFIG_CTL"
      sgroup "LDO28_CONFIG_CTL (at 0x15b52)"
        set &access:&cmd_addr %l (0x805b520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO28_LL_VOLTAGE_CTL1"
      sgroup "LDO28_LL_VOLTAGE_CTL1 (at 0x15b68)"
        set &access:&cmd_addr %l (0x805b680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO28_LL_VOLTAGE_CTL2"
      sgroup "LDO28_LL_VOLTAGE_CTL2 (at 0x15b69)"
        set &access:&cmd_addr %l (0x805b690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO28_UL_VOLTAGE_CTL1"
      sgroup "LDO28_UL_VOLTAGE_CTL1 (at 0x15b6a)"
        set &access:&cmd_addr %l (0x805b6a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b6a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO28_UL_VOLTAGE_CTL2"
      sgroup "LDO28_UL_VOLTAGE_CTL2 (at 0x15b6b)"
        set &access:&cmd_addr %l (0x805b6b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5b6b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO28_SEC_ACCESS"
      sgroup "LDO28_SEC_ACCESS (at 0x15bd0)"
        set &access:&cmd_addr %l (0x805bd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO28_PERPH_RESET_CTL1"
      sgroup "LDO28_PERPH_RESET_CTL1 (at 0x15bd8)"
        set &access:&cmd_addr %l (0x805bd80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bd80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO28_PERPH_RESET_CTL2"
      sgroup "LDO28_PERPH_RESET_CTL2 (at 0x15bd9)"
        set &access:&cmd_addr %l (0x805bd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO28_PERPH_RESET_CTL3"
      sgroup "LDO28_PERPH_RESET_CTL3 (at 0x15bda)"
        set &access:&cmd_addr %l (0x805bda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO28_PERPH_RESET_CTL4"
      sgroup "LDO28_PERPH_RESET_CTL4 (at 0x15bdb)"
        set &access:&cmd_addr %l (0x805bdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO28_INT_TEST1"
      sgroup "LDO28_INT_TEST1 (at 0x15be0)"
        set &access:&cmd_addr %l (0x805be00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5be00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO28_INT_TEST_VAL"
      sgroup "LDO28_INT_TEST_VAL (at 0x15be1)"
        set &access:&cmd_addr %l (0x805be10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5be10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO28_TEST1"
      sgroup "LDO28_TEST1 (at 0x15be2)"
        set &access:&cmd_addr %l (0x805be20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5be20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO28_TEST2"
      sgroup "LDO28_TEST2 (at 0x15be3)"
        set &access:&cmd_addr %l (0x805be30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5be30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO28_TRIM_NUM"
      sgroup "LDO28_TRIM_NUM (at 0x15bf0)"
        set &access:&cmd_addr %l (0x805bf00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bf00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO28_TRIM_CTRL"
      sgroup "LDO28_TRIM_CTRL (at 0x15bf1)"
        set &access:&cmd_addr %l (0x805bf10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5bf10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO3"
  tree "LDO3"
    tree "LDO3_REVISION1"
      sgroup "LDO3_REVISION1 (at 0x14200)"
        set &access:&cmd_addr %l (0x8042000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO3_REVISION2"
      sgroup "LDO3_REVISION2 (at 0x14201)"
        set &access:&cmd_addr %l (0x8042010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO3_REVISION3"
      sgroup "LDO3_REVISION3 (at 0x14202)"
        set &access:&cmd_addr %l (0x8042020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO3_REVISION4"
      sgroup "LDO3_REVISION4 (at 0x14203)"
        set &access:&cmd_addr %l (0x8042030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO3_PERPH_TYPE"
      sgroup "LDO3_PERPH_TYPE (at 0x14204)"
        set &access:&cmd_addr %l (0x8042040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO3_PERPH_SUBTYPE"
      sgroup "LDO3_PERPH_SUBTYPE (at 0x14205)"
        set &access:&cmd_addr %l (0x8042050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO3_STATUS1"
      sgroup "LDO3_STATUS1 (at 0x14208)"
        set &access:&cmd_addr %l (0x8042080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE                             = " "0 (STEPPER_NOT_DONE),1 (STEPPER_DONE)"
    tree.end
    tree "LDO3_STATUS2"
      sgroup "LDO3_STATUS2 (at 0x14209)"
        set &access:&cmd_addr %l (0x8042090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO3_STATUS3"
      sgroup "LDO3_STATUS3 (at 0x1420a)"
        set &access:&cmd_addr %l (0x80420a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x420a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO3_INT_RT_STS"
      sgroup "LDO3_INT_RT_STS (at 0x14210)"
        set &access:&cmd_addr %l (0x8042100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO3_INT_SET_TYPE"
      sgroup "LDO3_INT_SET_TYPE (at 0x14211)"
        set &access:&cmd_addr %l (0x8042110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO3_INT_POLARITY_HIGH"
      sgroup "LDO3_INT_POLARITY_HIGH (at 0x14212)"
        set &access:&cmd_addr %l (0x8042120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO3_INT_POLARITY_LOW"
      sgroup "LDO3_INT_POLARITY_LOW (at 0x14213)"
        set &access:&cmd_addr %l (0x8042130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO3_INT_LATCHED_CLR"
      sgroup "LDO3_INT_LATCHED_CLR (at 0x14214)"
        set &access:&cmd_addr %l (0x8042140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO3_INT_EN_SET"
      sgroup "LDO3_INT_EN_SET (at 0x14215)"
        set &access:&cmd_addr %l (0x8042150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO3_INT_EN_CLR"
      sgroup "LDO3_INT_EN_CLR (at 0x14216)"
        set &access:&cmd_addr %l (0x8042160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO3_INT_LATCHED_STS"
      sgroup "LDO3_INT_LATCHED_STS (at 0x14218)"
        set &access:&cmd_addr %l (0x8042180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO3_INT_PENDING_STS"
      sgroup "LDO3_INT_PENDING_STS (at 0x14219)"
        set &access:&cmd_addr %l (0x8042190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO3_INT_MID_SEL"
      sgroup "LDO3_INT_MID_SEL (at 0x1421a)"
        set &access:&cmd_addr %l (0x80421a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x421a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO3_INT_PRIORITY"
      sgroup "LDO3_INT_PRIORITY (at 0x1421b)"
        set &access:&cmd_addr %l (0x80421b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x421b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO3_VOLTAGE_CTL1"
      sgroup "LDO3_VOLTAGE_CTL1 (at 0x14240)"
        set &access:&cmd_addr %l (0x8042400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO3_VOLTAGE_CTL2"
      sgroup "LDO3_VOLTAGE_CTL2 (at 0x14241)"
        set &access:&cmd_addr %l (0x8042410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO3_MODE_CTL2"
      sgroup "LDO3_MODE_CTL2 (at 0x14245)"
        set &access:&cmd_addr %l (0x8042450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO3_EN_CTL"
      sgroup "LDO3_EN_CTL (at 0x14246)"
        set &access:&cmd_addr %l (0x8042460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO3_PD_CTL"
      sgroup "LDO3_PD_CTL (at 0x14248)"
        set &access:&cmd_addr %l (0x8042480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO3_CURRENT_LIM_CTL"
      sgroup "LDO3_CURRENT_LIM_CTL (at 0x1424a)"
        set &access:&cmd_addr %l (0x80424a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x424a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO3_SOFT_START_CTL"
      sgroup "LDO3_SOFT_START_CTL (at 0x1424c)"
        set &access:&cmd_addr %l (0x80424c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x424c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO3_CONFIG_CTL"
      sgroup "LDO3_CONFIG_CTL (at 0x14252)"
        set &access:&cmd_addr %l (0x8042520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO3_VS_CTL"
      sgroup "LDO3_VS_CTL (at 0x14261)"
        set &access:&cmd_addr %l (0x8042610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VS_EN                                    = " "0 (STEPPER_DIABLED),1 (STEPPER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VS_DELAY                                 = " "0 (DELAY_1_20),1 (DELAY_1_40),2 (DELAY_1_80),3 (DELAY_1_160),4 (DELAY_1_320),5 (DELAY_1_640),6 (DELAY_1_1280),7 (DELAY_1_2560)"
    tree.end
    tree "LDO3_LL_VOLTAGE_CTL1"
      sgroup "LDO3_LL_VOLTAGE_CTL1 (at 0x14268)"
        set &access:&cmd_addr %l (0x8042680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO3_LL_VOLTAGE_CTL2"
      sgroup "LDO3_LL_VOLTAGE_CTL2 (at 0x14269)"
        set &access:&cmd_addr %l (0x8042690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO3_UL_VOLTAGE_CTL1"
      sgroup "LDO3_UL_VOLTAGE_CTL1 (at 0x1426a)"
        set &access:&cmd_addr %l (0x80426a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x426a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO3_UL_VOLTAGE_CTL2"
      sgroup "LDO3_UL_VOLTAGE_CTL2 (at 0x1426b)"
        set &access:&cmd_addr %l (0x80426b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x426b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO3_SEC_ACCESS"
      sgroup "LDO3_SEC_ACCESS (at 0x142d0)"
        set &access:&cmd_addr %l (0x8042d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO3_PERPH_RESET_CTL1"
      sgroup "LDO3_PERPH_RESET_CTL1 (at 0x142d8)"
        set &access:&cmd_addr %l (0x8042d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO3_PERPH_RESET_CTL2"
      sgroup "LDO3_PERPH_RESET_CTL2 (at 0x142d9)"
        set &access:&cmd_addr %l (0x8042d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO3_PERPH_RESET_CTL3"
      sgroup "LDO3_PERPH_RESET_CTL3 (at 0x142da)"
        set &access:&cmd_addr %l (0x8042da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO3_PERPH_RESET_CTL4"
      sgroup "LDO3_PERPH_RESET_CTL4 (at 0x142db)"
        set &access:&cmd_addr %l (0x8042db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO3_INT_TEST1"
      sgroup "LDO3_INT_TEST1 (at 0x142e0)"
        set &access:&cmd_addr %l (0x8042e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO3_INT_TEST_VAL"
      sgroup "LDO3_INT_TEST_VAL (at 0x142e1)"
        set &access:&cmd_addr %l (0x8042e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO3_TEST1"
      sgroup "LDO3_TEST1 (at 0x142e2)"
        set &access:&cmd_addr %l (0x8042e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO3_TEST2"
      sgroup "LDO3_TEST2 (at 0x142e3)"
        set &access:&cmd_addr %l (0x8042e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO3_TRIM_NUM"
      sgroup "LDO3_TRIM_NUM (at 0x142f0)"
        set &access:&cmd_addr %l (0x8042f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO3_TRIM_CTRL"
      sgroup "LDO3_TRIM_CTRL (at 0x142f1)"
        set &access:&cmd_addr %l (0x8042f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO4"
  tree "LDO4"
    tree "LDO4_REVISION1"
      sgroup "LDO4_REVISION1 (at 0x14300)"
        set &access:&cmd_addr %l (0x8043000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO4_REVISION2"
      sgroup "LDO4_REVISION2 (at 0x14301)"
        set &access:&cmd_addr %l (0x8043010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO4_REVISION3"
      sgroup "LDO4_REVISION3 (at 0x14302)"
        set &access:&cmd_addr %l (0x8043020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO4_REVISION4"
      sgroup "LDO4_REVISION4 (at 0x14303)"
        set &access:&cmd_addr %l (0x8043030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO4_PERPH_TYPE"
      sgroup "LDO4_PERPH_TYPE (at 0x14304)"
        set &access:&cmd_addr %l (0x8043040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO4_PERPH_SUBTYPE"
      sgroup "LDO4_PERPH_SUBTYPE (at 0x14305)"
        set &access:&cmd_addr %l (0x8043050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO4_STATUS1"
      sgroup "LDO4_STATUS1 (at 0x14308)"
        set &access:&cmd_addr %l (0x8043080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO4_STATUS2"
      sgroup "LDO4_STATUS2 (at 0x14309)"
        set &access:&cmd_addr %l (0x8043090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO4_STATUS3"
      sgroup "LDO4_STATUS3 (at 0x1430a)"
        set &access:&cmd_addr %l (0x80430a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x430a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO4_INT_RT_STS"
      sgroup "LDO4_INT_RT_STS (at 0x14310)"
        set &access:&cmd_addr %l (0x8043100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO4_INT_SET_TYPE"
      sgroup "LDO4_INT_SET_TYPE (at 0x14311)"
        set &access:&cmd_addr %l (0x8043110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO4_INT_POLARITY_HIGH"
      sgroup "LDO4_INT_POLARITY_HIGH (at 0x14312)"
        set &access:&cmd_addr %l (0x8043120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO4_INT_POLARITY_LOW"
      sgroup "LDO4_INT_POLARITY_LOW (at 0x14313)"
        set &access:&cmd_addr %l (0x8043130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO4_INT_LATCHED_CLR"
      sgroup "LDO4_INT_LATCHED_CLR (at 0x14314)"
        set &access:&cmd_addr %l (0x8043140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO4_INT_EN_SET"
      sgroup "LDO4_INT_EN_SET (at 0x14315)"
        set &access:&cmd_addr %l (0x8043150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO4_INT_EN_CLR"
      sgroup "LDO4_INT_EN_CLR (at 0x14316)"
        set &access:&cmd_addr %l (0x8043160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO4_INT_LATCHED_STS"
      sgroup "LDO4_INT_LATCHED_STS (at 0x14318)"
        set &access:&cmd_addr %l (0x8043180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO4_INT_PENDING_STS"
      sgroup "LDO4_INT_PENDING_STS (at 0x14319)"
        set &access:&cmd_addr %l (0x8043190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO4_INT_MID_SEL"
      sgroup "LDO4_INT_MID_SEL (at 0x1431a)"
        set &access:&cmd_addr %l (0x80431a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x431a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO4_INT_PRIORITY"
      sgroup "LDO4_INT_PRIORITY (at 0x1431b)"
        set &access:&cmd_addr %l (0x80431b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x431b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO4_VOLTAGE_CTL1"
      sgroup "LDO4_VOLTAGE_CTL1 (at 0x14340)"
        set &access:&cmd_addr %l (0x8043400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO4_VOLTAGE_CTL2"
      sgroup "LDO4_VOLTAGE_CTL2 (at 0x14341)"
        set &access:&cmd_addr %l (0x8043410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO4_MODE_CTL2"
      sgroup "LDO4_MODE_CTL2 (at 0x14345)"
        set &access:&cmd_addr %l (0x8043450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO4_EN_CTL"
      sgroup "LDO4_EN_CTL (at 0x14346)"
        set &access:&cmd_addr %l (0x8043460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO4_PD_CTL"
      sgroup "LDO4_PD_CTL (at 0x14348)"
        set &access:&cmd_addr %l (0x8043480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO4_CURRENT_LIM_CTL"
      sgroup "LDO4_CURRENT_LIM_CTL (at 0x1434a)"
        set &access:&cmd_addr %l (0x80434a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x434a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO4_SOFT_START_CTL"
      sgroup "LDO4_SOFT_START_CTL (at 0x1434c)"
        set &access:&cmd_addr %l (0x80434c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x434c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO4_CONFIG_CTL"
      sgroup "LDO4_CONFIG_CTL (at 0x14352)"
        set &access:&cmd_addr %l (0x8043520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO4_LL_VOLTAGE_CTL1"
      sgroup "LDO4_LL_VOLTAGE_CTL1 (at 0x14368)"
        set &access:&cmd_addr %l (0x8043680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO4_LL_VOLTAGE_CTL2"
      sgroup "LDO4_LL_VOLTAGE_CTL2 (at 0x14369)"
        set &access:&cmd_addr %l (0x8043690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO4_UL_VOLTAGE_CTL1"
      sgroup "LDO4_UL_VOLTAGE_CTL1 (at 0x1436a)"
        set &access:&cmd_addr %l (0x80436a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x436a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO4_UL_VOLTAGE_CTL2"
      sgroup "LDO4_UL_VOLTAGE_CTL2 (at 0x1436b)"
        set &access:&cmd_addr %l (0x80436b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x436b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO4_SEC_ACCESS"
      sgroup "LDO4_SEC_ACCESS (at 0x143d0)"
        set &access:&cmd_addr %l (0x8043d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO4_PERPH_RESET_CTL1"
      sgroup "LDO4_PERPH_RESET_CTL1 (at 0x143d8)"
        set &access:&cmd_addr %l (0x8043d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO4_PERPH_RESET_CTL2"
      sgroup "LDO4_PERPH_RESET_CTL2 (at 0x143d9)"
        set &access:&cmd_addr %l (0x8043d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO4_PERPH_RESET_CTL3"
      sgroup "LDO4_PERPH_RESET_CTL3 (at 0x143da)"
        set &access:&cmd_addr %l (0x8043da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO4_PERPH_RESET_CTL4"
      sgroup "LDO4_PERPH_RESET_CTL4 (at 0x143db)"
        set &access:&cmd_addr %l (0x8043db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO4_INT_TEST1"
      sgroup "LDO4_INT_TEST1 (at 0x143e0)"
        set &access:&cmd_addr %l (0x8043e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO4_INT_TEST_VAL"
      sgroup "LDO4_INT_TEST_VAL (at 0x143e1)"
        set &access:&cmd_addr %l (0x8043e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO4_TEST1"
      sgroup "LDO4_TEST1 (at 0x143e2)"
        set &access:&cmd_addr %l (0x8043e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO4_TEST2"
      sgroup "LDO4_TEST2 (at 0x143e3)"
        set &access:&cmd_addr %l (0x8043e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO4_TRIM_NUM"
      sgroup "LDO4_TRIM_NUM (at 0x143f0)"
        set &access:&cmd_addr %l (0x8043f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO4_TRIM_CTRL"
      sgroup "LDO4_TRIM_CTRL (at 0x143f1)"
        set &access:&cmd_addr %l (0x8043f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO5"
  tree "LDO5"
    tree "LDO5_REVISION1"
      sgroup "LDO5_REVISION1 (at 0x14400)"
        set &access:&cmd_addr %l (0x8044000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO5_REVISION2"
      sgroup "LDO5_REVISION2 (at 0x14401)"
        set &access:&cmd_addr %l (0x8044010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO5_REVISION3"
      sgroup "LDO5_REVISION3 (at 0x14402)"
        set &access:&cmd_addr %l (0x8044020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO5_REVISION4"
      sgroup "LDO5_REVISION4 (at 0x14403)"
        set &access:&cmd_addr %l (0x8044030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO5_PERPH_TYPE"
      sgroup "LDO5_PERPH_TYPE (at 0x14404)"
        set &access:&cmd_addr %l (0x8044040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO5_PERPH_SUBTYPE"
      sgroup "LDO5_PERPH_SUBTYPE (at 0x14405)"
        set &access:&cmd_addr %l (0x8044050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO5_STATUS1"
      sgroup "LDO5_STATUS1 (at 0x14408)"
        set &access:&cmd_addr %l (0x8044080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO5_STATUS2"
      sgroup "LDO5_STATUS2 (at 0x14409)"
        set &access:&cmd_addr %l (0x8044090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO5_STATUS3"
      sgroup "LDO5_STATUS3 (at 0x1440a)"
        set &access:&cmd_addr %l (0x80440a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x440a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO5_INT_RT_STS"
      sgroup "LDO5_INT_RT_STS (at 0x14410)"
        set &access:&cmd_addr %l (0x8044100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO5_INT_SET_TYPE"
      sgroup "LDO5_INT_SET_TYPE (at 0x14411)"
        set &access:&cmd_addr %l (0x8044110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO5_INT_POLARITY_HIGH"
      sgroup "LDO5_INT_POLARITY_HIGH (at 0x14412)"
        set &access:&cmd_addr %l (0x8044120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO5_INT_POLARITY_LOW"
      sgroup "LDO5_INT_POLARITY_LOW (at 0x14413)"
        set &access:&cmd_addr %l (0x8044130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO5_INT_LATCHED_CLR"
      sgroup "LDO5_INT_LATCHED_CLR (at 0x14414)"
        set &access:&cmd_addr %l (0x8044140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO5_INT_EN_SET"
      sgroup "LDO5_INT_EN_SET (at 0x14415)"
        set &access:&cmd_addr %l (0x8044150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO5_INT_EN_CLR"
      sgroup "LDO5_INT_EN_CLR (at 0x14416)"
        set &access:&cmd_addr %l (0x8044160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO5_INT_LATCHED_STS"
      sgroup "LDO5_INT_LATCHED_STS (at 0x14418)"
        set &access:&cmd_addr %l (0x8044180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO5_INT_PENDING_STS"
      sgroup "LDO5_INT_PENDING_STS (at 0x14419)"
        set &access:&cmd_addr %l (0x8044190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO5_INT_MID_SEL"
      sgroup "LDO5_INT_MID_SEL (at 0x1441a)"
        set &access:&cmd_addr %l (0x80441a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x441a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO5_INT_PRIORITY"
      sgroup "LDO5_INT_PRIORITY (at 0x1441b)"
        set &access:&cmd_addr %l (0x80441b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x441b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO5_VOLTAGE_CTL1"
      sgroup "LDO5_VOLTAGE_CTL1 (at 0x14440)"
        set &access:&cmd_addr %l (0x8044400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO5_VOLTAGE_CTL2"
      sgroup "LDO5_VOLTAGE_CTL2 (at 0x14441)"
        set &access:&cmd_addr %l (0x8044410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO5_MODE_CTL2"
      sgroup "LDO5_MODE_CTL2 (at 0x14445)"
        set &access:&cmd_addr %l (0x8044450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO5_EN_CTL"
      sgroup "LDO5_EN_CTL (at 0x14446)"
        set &access:&cmd_addr %l (0x8044460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO5_PD_CTL"
      sgroup "LDO5_PD_CTL (at 0x14448)"
        set &access:&cmd_addr %l (0x8044480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO5_CURRENT_LIM_CTL"
      sgroup "LDO5_CURRENT_LIM_CTL (at 0x1444a)"
        set &access:&cmd_addr %l (0x80444a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x444a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO5_SOFT_START_CTL"
      sgroup "LDO5_SOFT_START_CTL (at 0x1444c)"
        set &access:&cmd_addr %l (0x80444c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x444c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO5_CONFIG_CTL"
      sgroup "LDO5_CONFIG_CTL (at 0x14452)"
        set &access:&cmd_addr %l (0x8044520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO5_LL_VOLTAGE_CTL1"
      sgroup "LDO5_LL_VOLTAGE_CTL1 (at 0x14468)"
        set &access:&cmd_addr %l (0x8044680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO5_LL_VOLTAGE_CTL2"
      sgroup "LDO5_LL_VOLTAGE_CTL2 (at 0x14469)"
        set &access:&cmd_addr %l (0x8044690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO5_UL_VOLTAGE_CTL1"
      sgroup "LDO5_UL_VOLTAGE_CTL1 (at 0x1446a)"
        set &access:&cmd_addr %l (0x80446a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x446a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO5_UL_VOLTAGE_CTL2"
      sgroup "LDO5_UL_VOLTAGE_CTL2 (at 0x1446b)"
        set &access:&cmd_addr %l (0x80446b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x446b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO5_SEC_ACCESS"
      sgroup "LDO5_SEC_ACCESS (at 0x144d0)"
        set &access:&cmd_addr %l (0x8044d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO5_PERPH_RESET_CTL1"
      sgroup "LDO5_PERPH_RESET_CTL1 (at 0x144d8)"
        set &access:&cmd_addr %l (0x8044d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO5_PERPH_RESET_CTL2"
      sgroup "LDO5_PERPH_RESET_CTL2 (at 0x144d9)"
        set &access:&cmd_addr %l (0x8044d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO5_PERPH_RESET_CTL3"
      sgroup "LDO5_PERPH_RESET_CTL3 (at 0x144da)"
        set &access:&cmd_addr %l (0x8044da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO5_PERPH_RESET_CTL4"
      sgroup "LDO5_PERPH_RESET_CTL4 (at 0x144db)"
        set &access:&cmd_addr %l (0x8044db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO5_INT_TEST1"
      sgroup "LDO5_INT_TEST1 (at 0x144e0)"
        set &access:&cmd_addr %l (0x8044e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO5_INT_TEST_VAL"
      sgroup "LDO5_INT_TEST_VAL (at 0x144e1)"
        set &access:&cmd_addr %l (0x8044e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO5_TEST1"
      sgroup "LDO5_TEST1 (at 0x144e2)"
        set &access:&cmd_addr %l (0x8044e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO5_TEST2"
      sgroup "LDO5_TEST2 (at 0x144e3)"
        set &access:&cmd_addr %l (0x8044e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO5_TRIM_NUM"
      sgroup "LDO5_TRIM_NUM (at 0x144f0)"
        set &access:&cmd_addr %l (0x8044f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO5_TRIM_CTRL"
      sgroup "LDO5_TRIM_CTRL (at 0x144f1)"
        set &access:&cmd_addr %l (0x8044f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO6"
  tree "LDO6"
    tree "LDO6_REVISION1"
      sgroup "LDO6_REVISION1 (at 0x14500)"
        set &access:&cmd_addr %l (0x8045000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO6_REVISION2"
      sgroup "LDO6_REVISION2 (at 0x14501)"
        set &access:&cmd_addr %l (0x8045010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO6_REVISION3"
      sgroup "LDO6_REVISION3 (at 0x14502)"
        set &access:&cmd_addr %l (0x8045020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO6_REVISION4"
      sgroup "LDO6_REVISION4 (at 0x14503)"
        set &access:&cmd_addr %l (0x8045030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO6_PERPH_TYPE"
      sgroup "LDO6_PERPH_TYPE (at 0x14504)"
        set &access:&cmd_addr %l (0x8045040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO6_PERPH_SUBTYPE"
      sgroup "LDO6_PERPH_SUBTYPE (at 0x14505)"
        set &access:&cmd_addr %l (0x8045050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO6_STATUS1"
      sgroup "LDO6_STATUS1 (at 0x14508)"
        set &access:&cmd_addr %l (0x8045080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO6_STATUS2"
      sgroup "LDO6_STATUS2 (at 0x14509)"
        set &access:&cmd_addr %l (0x8045090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO6_STATUS3"
      sgroup "LDO6_STATUS3 (at 0x1450a)"
        set &access:&cmd_addr %l (0x80450a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x450a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO6_INT_RT_STS"
      sgroup "LDO6_INT_RT_STS (at 0x14510)"
        set &access:&cmd_addr %l (0x8045100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO6_INT_SET_TYPE"
      sgroup "LDO6_INT_SET_TYPE (at 0x14511)"
        set &access:&cmd_addr %l (0x8045110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO6_INT_POLARITY_HIGH"
      sgroup "LDO6_INT_POLARITY_HIGH (at 0x14512)"
        set &access:&cmd_addr %l (0x8045120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO6_INT_POLARITY_LOW"
      sgroup "LDO6_INT_POLARITY_LOW (at 0x14513)"
        set &access:&cmd_addr %l (0x8045130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO6_INT_LATCHED_CLR"
      sgroup "LDO6_INT_LATCHED_CLR (at 0x14514)"
        set &access:&cmd_addr %l (0x8045140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO6_INT_EN_SET"
      sgroup "LDO6_INT_EN_SET (at 0x14515)"
        set &access:&cmd_addr %l (0x8045150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO6_INT_EN_CLR"
      sgroup "LDO6_INT_EN_CLR (at 0x14516)"
        set &access:&cmd_addr %l (0x8045160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO6_INT_LATCHED_STS"
      sgroup "LDO6_INT_LATCHED_STS (at 0x14518)"
        set &access:&cmd_addr %l (0x8045180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO6_INT_PENDING_STS"
      sgroup "LDO6_INT_PENDING_STS (at 0x14519)"
        set &access:&cmd_addr %l (0x8045190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO6_INT_MID_SEL"
      sgroup "LDO6_INT_MID_SEL (at 0x1451a)"
        set &access:&cmd_addr %l (0x80451a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x451a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO6_INT_PRIORITY"
      sgroup "LDO6_INT_PRIORITY (at 0x1451b)"
        set &access:&cmd_addr %l (0x80451b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x451b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO6_VOLTAGE_CTL1"
      sgroup "LDO6_VOLTAGE_CTL1 (at 0x14540)"
        set &access:&cmd_addr %l (0x8045400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO6_VOLTAGE_CTL2"
      sgroup "LDO6_VOLTAGE_CTL2 (at 0x14541)"
        set &access:&cmd_addr %l (0x8045410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO6_MODE_CTL2"
      sgroup "LDO6_MODE_CTL2 (at 0x14545)"
        set &access:&cmd_addr %l (0x8045450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO6_EN_CTL"
      sgroup "LDO6_EN_CTL (at 0x14546)"
        set &access:&cmd_addr %l (0x8045460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO6_PD_CTL"
      sgroup "LDO6_PD_CTL (at 0x14548)"
        set &access:&cmd_addr %l (0x8045480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO6_CURRENT_LIM_CTL"
      sgroup "LDO6_CURRENT_LIM_CTL (at 0x1454a)"
        set &access:&cmd_addr %l (0x80454a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x454a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO6_SOFT_START_CTL"
      sgroup "LDO6_SOFT_START_CTL (at 0x1454c)"
        set &access:&cmd_addr %l (0x80454c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x454c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO6_CONFIG_CTL"
      sgroup "LDO6_CONFIG_CTL (at 0x14552)"
        set &access:&cmd_addr %l (0x8045520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO6_LL_VOLTAGE_CTL1"
      sgroup "LDO6_LL_VOLTAGE_CTL1 (at 0x14568)"
        set &access:&cmd_addr %l (0x8045680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO6_LL_VOLTAGE_CTL2"
      sgroup "LDO6_LL_VOLTAGE_CTL2 (at 0x14569)"
        set &access:&cmd_addr %l (0x8045690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO6_UL_VOLTAGE_CTL1"
      sgroup "LDO6_UL_VOLTAGE_CTL1 (at 0x1456a)"
        set &access:&cmd_addr %l (0x80456a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x456a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO6_UL_VOLTAGE_CTL2"
      sgroup "LDO6_UL_VOLTAGE_CTL2 (at 0x1456b)"
        set &access:&cmd_addr %l (0x80456b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x456b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO6_SEC_ACCESS"
      sgroup "LDO6_SEC_ACCESS (at 0x145d0)"
        set &access:&cmd_addr %l (0x8045d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO6_PERPH_RESET_CTL1"
      sgroup "LDO6_PERPH_RESET_CTL1 (at 0x145d8)"
        set &access:&cmd_addr %l (0x8045d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO6_PERPH_RESET_CTL2"
      sgroup "LDO6_PERPH_RESET_CTL2 (at 0x145d9)"
        set &access:&cmd_addr %l (0x8045d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO6_PERPH_RESET_CTL3"
      sgroup "LDO6_PERPH_RESET_CTL3 (at 0x145da)"
        set &access:&cmd_addr %l (0x8045da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO6_PERPH_RESET_CTL4"
      sgroup "LDO6_PERPH_RESET_CTL4 (at 0x145db)"
        set &access:&cmd_addr %l (0x8045db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO6_INT_TEST1"
      sgroup "LDO6_INT_TEST1 (at 0x145e0)"
        set &access:&cmd_addr %l (0x8045e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO6_INT_TEST_VAL"
      sgroup "LDO6_INT_TEST_VAL (at 0x145e1)"
        set &access:&cmd_addr %l (0x8045e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO6_TEST1"
      sgroup "LDO6_TEST1 (at 0x145e2)"
        set &access:&cmd_addr %l (0x8045e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO6_TEST2"
      sgroup "LDO6_TEST2 (at 0x145e3)"
        set &access:&cmd_addr %l (0x8045e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO6_TRIM_NUM"
      sgroup "LDO6_TRIM_NUM (at 0x145f0)"
        set &access:&cmd_addr %l (0x8045f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO6_TRIM_CTRL"
      sgroup "LDO6_TRIM_CTRL (at 0x145f1)"
        set &access:&cmd_addr %l (0x8045f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x45f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO7"
  tree "LDO7"
    tree "LDO7_REVISION1"
      sgroup "LDO7_REVISION1 (at 0x14600)"
        set &access:&cmd_addr %l (0x8046000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO7_REVISION2"
      sgroup "LDO7_REVISION2 (at 0x14601)"
        set &access:&cmd_addr %l (0x8046010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO7_REVISION3"
      sgroup "LDO7_REVISION3 (at 0x14602)"
        set &access:&cmd_addr %l (0x8046020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO7_REVISION4"
      sgroup "LDO7_REVISION4 (at 0x14603)"
        set &access:&cmd_addr %l (0x8046030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO7_PERPH_TYPE"
      sgroup "LDO7_PERPH_TYPE (at 0x14604)"
        set &access:&cmd_addr %l (0x8046040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO7_PERPH_SUBTYPE"
      sgroup "LDO7_PERPH_SUBTYPE (at 0x14605)"
        set &access:&cmd_addr %l (0x8046050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO7_STATUS1"
      sgroup "LDO7_STATUS1 (at 0x14608)"
        set &access:&cmd_addr %l (0x8046080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO7_STATUS2"
      sgroup "LDO7_STATUS2 (at 0x14609)"
        set &access:&cmd_addr %l (0x8046090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO7_STATUS3"
      sgroup "LDO7_STATUS3 (at 0x1460a)"
        set &access:&cmd_addr %l (0x80460a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x460a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO7_INT_RT_STS"
      sgroup "LDO7_INT_RT_STS (at 0x14610)"
        set &access:&cmd_addr %l (0x8046100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO7_INT_SET_TYPE"
      sgroup "LDO7_INT_SET_TYPE (at 0x14611)"
        set &access:&cmd_addr %l (0x8046110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO7_INT_POLARITY_HIGH"
      sgroup "LDO7_INT_POLARITY_HIGH (at 0x14612)"
        set &access:&cmd_addr %l (0x8046120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO7_INT_POLARITY_LOW"
      sgroup "LDO7_INT_POLARITY_LOW (at 0x14613)"
        set &access:&cmd_addr %l (0x8046130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO7_INT_LATCHED_CLR"
      sgroup "LDO7_INT_LATCHED_CLR (at 0x14614)"
        set &access:&cmd_addr %l (0x8046140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO7_INT_EN_SET"
      sgroup "LDO7_INT_EN_SET (at 0x14615)"
        set &access:&cmd_addr %l (0x8046150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO7_INT_EN_CLR"
      sgroup "LDO7_INT_EN_CLR (at 0x14616)"
        set &access:&cmd_addr %l (0x8046160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO7_INT_LATCHED_STS"
      sgroup "LDO7_INT_LATCHED_STS (at 0x14618)"
        set &access:&cmd_addr %l (0x8046180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO7_INT_PENDING_STS"
      sgroup "LDO7_INT_PENDING_STS (at 0x14619)"
        set &access:&cmd_addr %l (0x8046190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO7_INT_MID_SEL"
      sgroup "LDO7_INT_MID_SEL (at 0x1461a)"
        set &access:&cmd_addr %l (0x80461a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x461a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO7_INT_PRIORITY"
      sgroup "LDO7_INT_PRIORITY (at 0x1461b)"
        set &access:&cmd_addr %l (0x80461b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x461b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO7_VOLTAGE_CTL1"
      sgroup "LDO7_VOLTAGE_CTL1 (at 0x14640)"
        set &access:&cmd_addr %l (0x8046400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO7_VOLTAGE_CTL2"
      sgroup "LDO7_VOLTAGE_CTL2 (at 0x14641)"
        set &access:&cmd_addr %l (0x8046410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO7_MODE_CTL2"
      sgroup "LDO7_MODE_CTL2 (at 0x14645)"
        set &access:&cmd_addr %l (0x8046450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO7_EN_CTL"
      sgroup "LDO7_EN_CTL (at 0x14646)"
        set &access:&cmd_addr %l (0x8046460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO7_PD_CTL"
      sgroup "LDO7_PD_CTL (at 0x14648)"
        set &access:&cmd_addr %l (0x8046480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO7_CURRENT_LIM_CTL"
      sgroup "LDO7_CURRENT_LIM_CTL (at 0x1464a)"
        set &access:&cmd_addr %l (0x80464a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x464a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO7_SOFT_START_CTL"
      sgroup "LDO7_SOFT_START_CTL (at 0x1464c)"
        set &access:&cmd_addr %l (0x80464c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x464c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO7_CONFIG_CTL"
      sgroup "LDO7_CONFIG_CTL (at 0x14652)"
        set &access:&cmd_addr %l (0x8046520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO7_LL_VOLTAGE_CTL1"
      sgroup "LDO7_LL_VOLTAGE_CTL1 (at 0x14668)"
        set &access:&cmd_addr %l (0x8046680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO7_LL_VOLTAGE_CTL2"
      sgroup "LDO7_LL_VOLTAGE_CTL2 (at 0x14669)"
        set &access:&cmd_addr %l (0x8046690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO7_UL_VOLTAGE_CTL1"
      sgroup "LDO7_UL_VOLTAGE_CTL1 (at 0x1466a)"
        set &access:&cmd_addr %l (0x80466a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x466a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO7_UL_VOLTAGE_CTL2"
      sgroup "LDO7_UL_VOLTAGE_CTL2 (at 0x1466b)"
        set &access:&cmd_addr %l (0x80466b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x466b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO7_SEC_ACCESS"
      sgroup "LDO7_SEC_ACCESS (at 0x146d0)"
        set &access:&cmd_addr %l (0x8046d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO7_PERPH_RESET_CTL1"
      sgroup "LDO7_PERPH_RESET_CTL1 (at 0x146d8)"
        set &access:&cmd_addr %l (0x8046d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO7_PERPH_RESET_CTL2"
      sgroup "LDO7_PERPH_RESET_CTL2 (at 0x146d9)"
        set &access:&cmd_addr %l (0x8046d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO7_PERPH_RESET_CTL3"
      sgroup "LDO7_PERPH_RESET_CTL3 (at 0x146da)"
        set &access:&cmd_addr %l (0x8046da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO7_PERPH_RESET_CTL4"
      sgroup "LDO7_PERPH_RESET_CTL4 (at 0x146db)"
        set &access:&cmd_addr %l (0x8046db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO7_INT_TEST1"
      sgroup "LDO7_INT_TEST1 (at 0x146e0)"
        set &access:&cmd_addr %l (0x8046e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO7_INT_TEST_VAL"
      sgroup "LDO7_INT_TEST_VAL (at 0x146e1)"
        set &access:&cmd_addr %l (0x8046e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO7_TEST1"
      sgroup "LDO7_TEST1 (at 0x146e2)"
        set &access:&cmd_addr %l (0x8046e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO7_TEST2"
      sgroup "LDO7_TEST2 (at 0x146e3)"
        set &access:&cmd_addr %l (0x8046e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO7_TRIM_NUM"
      sgroup "LDO7_TRIM_NUM (at 0x146f0)"
        set &access:&cmd_addr %l (0x8046f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO7_TRIM_CTRL"
      sgroup "LDO7_TRIM_CTRL (at 0x146f1)"
        set &access:&cmd_addr %l (0x8046f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x46f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO8"
  tree "LDO8"
    tree "LDO8_REVISION1"
      sgroup "LDO8_REVISION1 (at 0x14700)"
        set &access:&cmd_addr %l (0x8047000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO8_REVISION2"
      sgroup "LDO8_REVISION2 (at 0x14701)"
        set &access:&cmd_addr %l (0x8047010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO8_REVISION3"
      sgroup "LDO8_REVISION3 (at 0x14702)"
        set &access:&cmd_addr %l (0x8047020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO8_REVISION4"
      sgroup "LDO8_REVISION4 (at 0x14703)"
        set &access:&cmd_addr %l (0x8047030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO8_PERPH_TYPE"
      sgroup "LDO8_PERPH_TYPE (at 0x14704)"
        set &access:&cmd_addr %l (0x8047040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO8_PERPH_SUBTYPE"
      sgroup "LDO8_PERPH_SUBTYPE (at 0x14705)"
        set &access:&cmd_addr %l (0x8047050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO8_STATUS1"
      sgroup "LDO8_STATUS1 (at 0x14708)"
        set &access:&cmd_addr %l (0x8047080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO8_STATUS2"
      sgroup "LDO8_STATUS2 (at 0x14709)"
        set &access:&cmd_addr %l (0x8047090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO8_STATUS3"
      sgroup "LDO8_STATUS3 (at 0x1470a)"
        set &access:&cmd_addr %l (0x80470a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x470a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO8_INT_RT_STS"
      sgroup "LDO8_INT_RT_STS (at 0x14710)"
        set &access:&cmd_addr %l (0x8047100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO8_INT_SET_TYPE"
      sgroup "LDO8_INT_SET_TYPE (at 0x14711)"
        set &access:&cmd_addr %l (0x8047110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO8_INT_POLARITY_HIGH"
      sgroup "LDO8_INT_POLARITY_HIGH (at 0x14712)"
        set &access:&cmd_addr %l (0x8047120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO8_INT_POLARITY_LOW"
      sgroup "LDO8_INT_POLARITY_LOW (at 0x14713)"
        set &access:&cmd_addr %l (0x8047130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO8_INT_LATCHED_CLR"
      sgroup "LDO8_INT_LATCHED_CLR (at 0x14714)"
        set &access:&cmd_addr %l (0x8047140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO8_INT_EN_SET"
      sgroup "LDO8_INT_EN_SET (at 0x14715)"
        set &access:&cmd_addr %l (0x8047150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO8_INT_EN_CLR"
      sgroup "LDO8_INT_EN_CLR (at 0x14716)"
        set &access:&cmd_addr %l (0x8047160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO8_INT_LATCHED_STS"
      sgroup "LDO8_INT_LATCHED_STS (at 0x14718)"
        set &access:&cmd_addr %l (0x8047180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO8_INT_PENDING_STS"
      sgroup "LDO8_INT_PENDING_STS (at 0x14719)"
        set &access:&cmd_addr %l (0x8047190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO8_INT_MID_SEL"
      sgroup "LDO8_INT_MID_SEL (at 0x1471a)"
        set &access:&cmd_addr %l (0x80471a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x471a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO8_INT_PRIORITY"
      sgroup "LDO8_INT_PRIORITY (at 0x1471b)"
        set &access:&cmd_addr %l (0x80471b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x471b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO8_VOLTAGE_CTL1"
      sgroup "LDO8_VOLTAGE_CTL1 (at 0x14740)"
        set &access:&cmd_addr %l (0x8047400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO8_VOLTAGE_CTL2"
      sgroup "LDO8_VOLTAGE_CTL2 (at 0x14741)"
        set &access:&cmd_addr %l (0x8047410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO8_MODE_CTL2"
      sgroup "LDO8_MODE_CTL2 (at 0x14745)"
        set &access:&cmd_addr %l (0x8047450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO8_EN_CTL"
      sgroup "LDO8_EN_CTL (at 0x14746)"
        set &access:&cmd_addr %l (0x8047460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO8_PD_CTL"
      sgroup "LDO8_PD_CTL (at 0x14748)"
        set &access:&cmd_addr %l (0x8047480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO8_CURRENT_LIM_CTL"
      sgroup "LDO8_CURRENT_LIM_CTL (at 0x1474a)"
        set &access:&cmd_addr %l (0x80474a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x474a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO8_SOFT_START_CTL"
      sgroup "LDO8_SOFT_START_CTL (at 0x1474c)"
        set &access:&cmd_addr %l (0x80474c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x474c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO8_CONFIG_CTL"
      sgroup "LDO8_CONFIG_CTL (at 0x14752)"
        set &access:&cmd_addr %l (0x8047520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO8_LL_VOLTAGE_CTL1"
      sgroup "LDO8_LL_VOLTAGE_CTL1 (at 0x14768)"
        set &access:&cmd_addr %l (0x8047680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO8_LL_VOLTAGE_CTL2"
      sgroup "LDO8_LL_VOLTAGE_CTL2 (at 0x14769)"
        set &access:&cmd_addr %l (0x8047690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO8_UL_VOLTAGE_CTL1"
      sgroup "LDO8_UL_VOLTAGE_CTL1 (at 0x1476a)"
        set &access:&cmd_addr %l (0x80476a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x476a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO8_UL_VOLTAGE_CTL2"
      sgroup "LDO8_UL_VOLTAGE_CTL2 (at 0x1476b)"
        set &access:&cmd_addr %l (0x80476b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x476b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO8_SEC_ACCESS"
      sgroup "LDO8_SEC_ACCESS (at 0x147d0)"
        set &access:&cmd_addr %l (0x8047d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO8_PERPH_RESET_CTL1"
      sgroup "LDO8_PERPH_RESET_CTL1 (at 0x147d8)"
        set &access:&cmd_addr %l (0x8047d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO8_PERPH_RESET_CTL2"
      sgroup "LDO8_PERPH_RESET_CTL2 (at 0x147d9)"
        set &access:&cmd_addr %l (0x8047d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO8_PERPH_RESET_CTL3"
      sgroup "LDO8_PERPH_RESET_CTL3 (at 0x147da)"
        set &access:&cmd_addr %l (0x8047da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO8_PERPH_RESET_CTL4"
      sgroup "LDO8_PERPH_RESET_CTL4 (at 0x147db)"
        set &access:&cmd_addr %l (0x8047db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO8_INT_TEST1"
      sgroup "LDO8_INT_TEST1 (at 0x147e0)"
        set &access:&cmd_addr %l (0x8047e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO8_INT_TEST_VAL"
      sgroup "LDO8_INT_TEST_VAL (at 0x147e1)"
        set &access:&cmd_addr %l (0x8047e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO8_TEST1"
      sgroup "LDO8_TEST1 (at 0x147e2)"
        set &access:&cmd_addr %l (0x8047e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO8_TEST2"
      sgroup "LDO8_TEST2 (at 0x147e3)"
        set &access:&cmd_addr %l (0x8047e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO8_TRIM_NUM"
      sgroup "LDO8_TRIM_NUM (at 0x147f0)"
        set &access:&cmd_addr %l (0x8047f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO8_TRIM_CTRL"
      sgroup "LDO8_TRIM_CTRL (at 0x147f1)"
        set &access:&cmd_addr %l (0x8047f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x47f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LDO9"
  tree "LDO9"
    tree "LDO9_REVISION1"
      sgroup "LDO9_REVISION1 (at 0x14800)"
        set &access:&cmd_addr %l (0x8048000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO9_REVISION2"
      sgroup "LDO9_REVISION2 (at 0x14801)"
        set &access:&cmd_addr %l (0x8048010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO9_REVISION3"
      sgroup "LDO9_REVISION3 (at 0x14802)"
        set &access:&cmd_addr %l (0x8048020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO9_REVISION4"
      sgroup "LDO9_REVISION4 (at 0x14803)"
        set &access:&cmd_addr %l (0x8048030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO9_PERPH_TYPE"
      sgroup "LDO9_PERPH_TYPE (at 0x14804)"
        set &access:&cmd_addr %l (0x8048040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO9_PERPH_SUBTYPE"
      sgroup "LDO9_PERPH_SUBTYPE (at 0x14805)"
        set &access:&cmd_addr %l (0x8048050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO9_STATUS1"
      sgroup "LDO9_STATUS1 (at 0x14808)"
        set &access:&cmd_addr %l (0x8048080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO9_STATUS2"
      sgroup "LDO9_STATUS2 (at 0x14809)"
        set &access:&cmd_addr %l (0x8048090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO9_STATUS3"
      sgroup "LDO9_STATUS3 (at 0x1480a)"
        set &access:&cmd_addr %l (0x80480a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x480a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO9_INT_RT_STS"
      sgroup "LDO9_INT_RT_STS (at 0x14810)"
        set &access:&cmd_addr %l (0x8048100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO9_INT_SET_TYPE"
      sgroup "LDO9_INT_SET_TYPE (at 0x14811)"
        set &access:&cmd_addr %l (0x8048110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO9_INT_POLARITY_HIGH"
      sgroup "LDO9_INT_POLARITY_HIGH (at 0x14812)"
        set &access:&cmd_addr %l (0x8048120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO9_INT_POLARITY_LOW"
      sgroup "LDO9_INT_POLARITY_LOW (at 0x14813)"
        set &access:&cmd_addr %l (0x8048130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO9_INT_LATCHED_CLR"
      sgroup "LDO9_INT_LATCHED_CLR (at 0x14814)"
        set &access:&cmd_addr %l (0x8048140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO9_INT_EN_SET"
      sgroup "LDO9_INT_EN_SET (at 0x14815)"
        set &access:&cmd_addr %l (0x8048150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO9_INT_EN_CLR"
      sgroup "LDO9_INT_EN_CLR (at 0x14816)"
        set &access:&cmd_addr %l (0x8048160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO9_INT_LATCHED_STS"
      sgroup "LDO9_INT_LATCHED_STS (at 0x14818)"
        set &access:&cmd_addr %l (0x8048180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO9_INT_PENDING_STS"
      sgroup "LDO9_INT_PENDING_STS (at 0x14819)"
        set &access:&cmd_addr %l (0x8048190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO9_INT_MID_SEL"
      sgroup "LDO9_INT_MID_SEL (at 0x1481a)"
        set &access:&cmd_addr %l (0x80481a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x481a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO9_INT_PRIORITY"
      sgroup "LDO9_INT_PRIORITY (at 0x1481b)"
        set &access:&cmd_addr %l (0x80481b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x481b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO9_VOLTAGE_CTL1"
      sgroup "LDO9_VOLTAGE_CTL1 (at 0x14840)"
        set &access:&cmd_addr %l (0x8048400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO9_VOLTAGE_CTL2"
      sgroup "LDO9_VOLTAGE_CTL2 (at 0x14841)"
        set &access:&cmd_addr %l (0x8048410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO9_MODE_CTL2"
      sgroup "LDO9_MODE_CTL2 (at 0x14845)"
        set &access:&cmd_addr %l (0x8048450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO9_EN_CTL"
      sgroup "LDO9_EN_CTL (at 0x14846)"
        set &access:&cmd_addr %l (0x8048460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO9_PD_CTL"
      sgroup "LDO9_PD_CTL (at 0x14848)"
        set &access:&cmd_addr %l (0x8048480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO9_CURRENT_LIM_CTL"
      sgroup "LDO9_CURRENT_LIM_CTL (at 0x1484a)"
        set &access:&cmd_addr %l (0x80484a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x484a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO9_SOFT_START_CTL"
      sgroup "LDO9_SOFT_START_CTL (at 0x1484c)"
        set &access:&cmd_addr %l (0x80484c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x484c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO9_CONFIG_CTL"
      sgroup "LDO9_CONFIG_CTL (at 0x14852)"
        set &access:&cmd_addr %l (0x8048520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO9_LL_VOLTAGE_CTL1"
      sgroup "LDO9_LL_VOLTAGE_CTL1 (at 0x14868)"
        set &access:&cmd_addr %l (0x8048680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO9_LL_VOLTAGE_CTL2"
      sgroup "LDO9_LL_VOLTAGE_CTL2 (at 0x14869)"
        set &access:&cmd_addr %l (0x8048690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO9_UL_VOLTAGE_CTL1"
      sgroup "LDO9_UL_VOLTAGE_CTL1 (at 0x1486a)"
        set &access:&cmd_addr %l (0x80486a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x486a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO9_UL_VOLTAGE_CTL2"
      sgroup "LDO9_UL_VOLTAGE_CTL2 (at 0x1486b)"
        set &access:&cmd_addr %l (0x80486b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x486b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO9_SEC_ACCESS"
      sgroup "LDO9_SEC_ACCESS (at 0x148d0)"
        set &access:&cmd_addr %l (0x8048d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO9_PERPH_RESET_CTL1"
      sgroup "LDO9_PERPH_RESET_CTL1 (at 0x148d8)"
        set &access:&cmd_addr %l (0x8048d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO9_PERPH_RESET_CTL2"
      sgroup "LDO9_PERPH_RESET_CTL2 (at 0x148d9)"
        set &access:&cmd_addr %l (0x8048d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO9_PERPH_RESET_CTL3"
      sgroup "LDO9_PERPH_RESET_CTL3 (at 0x148da)"
        set &access:&cmd_addr %l (0x8048da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO9_PERPH_RESET_CTL4"
      sgroup "LDO9_PERPH_RESET_CTL4 (at 0x148db)"
        set &access:&cmd_addr %l (0x8048db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO9_INT_TEST1"
      sgroup "LDO9_INT_TEST1 (at 0x148e0)"
        set &access:&cmd_addr %l (0x8048e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO9_INT_TEST_VAL"
      sgroup "LDO9_INT_TEST_VAL (at 0x148e1)"
        set &access:&cmd_addr %l (0x8048e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO9_TEST1"
      sgroup "LDO9_TEST1 (at 0x148e2)"
        set &access:&cmd_addr %l (0x8048e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO9_TEST2"
      sgroup "LDO9_TEST2 (at 0x148e3)"
        set &access:&cmd_addr %l (0x8048e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO9_TRIM_NUM"
      sgroup "LDO9_TRIM_NUM (at 0x148f0)"
        set &access:&cmd_addr %l (0x8048f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO9_TRIM_CTRL"
      sgroup "LDO9_TRIM_CTRL (at 0x148f1)"
        set &access:&cmd_addr %l (0x8048f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x48f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LPG_CHAN1"
  tree "LPG_CHAN1"
    tree "LPG_CHAN1_REVISION1"
      sgroup "LPG_CHAN1_REVISION1 (at 0x1b100)"
        set &access:&cmd_addr %l (0x80b1000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN1_REVISION2"
      sgroup "LPG_CHAN1_REVISION2 (at 0x1b101)"
        set &access:&cmd_addr %l (0x80b1010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN1_PERPH_TYPE"
      sgroup "LPG_CHAN1_PERPH_TYPE (at 0x1b104)"
        set &access:&cmd_addr %l (0x80b1040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN1_PERPH_SUBTYPE"
      sgroup "LPG_CHAN1_PERPH_SUBTYPE (at 0x1b105)"
        set &access:&cmd_addr %l (0x80b1050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN1_INT_RT_STS"
      sgroup "LPG_CHAN1_INT_RT_STS (at 0x1b110)"
        set &access:&cmd_addr %l (0x80b1100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN1_INT_SET_TYPE"
      sgroup "LPG_CHAN1_INT_SET_TYPE (at 0x1b111)"
        set &access:&cmd_addr %l (0x80b1110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN1_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN1_INT_POLARITY_HIGH (at 0x1b112)"
        set &access:&cmd_addr %l (0x80b1120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_POLARITY_LOW"
      sgroup "LPG_CHAN1_INT_POLARITY_LOW (at 0x1b113)"
        set &access:&cmd_addr %l (0x80b1130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_LATCHED_CLR"
      sgroup "LPG_CHAN1_INT_LATCHED_CLR (at 0x1b114)"
        set &access:&cmd_addr %l (0x80b1140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN1_INT_EN_SET"
      sgroup "LPG_CHAN1_INT_EN_SET (at 0x1b115)"
        set &access:&cmd_addr %l (0x80b1150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_EN_CLR"
      sgroup "LPG_CHAN1_INT_EN_CLR (at 0x1b116)"
        set &access:&cmd_addr %l (0x80b1160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_LATCHED_STS"
      sgroup "LPG_CHAN1_INT_LATCHED_STS (at 0x1b118)"
        set &access:&cmd_addr %l (0x80b1180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN1_INT_PENDING_STS"
      sgroup "LPG_CHAN1_INT_PENDING_STS (at 0x1b119)"
        set &access:&cmd_addr %l (0x80b1190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN1_INT_MID_SEL"
      sgroup "LPG_CHAN1_INT_MID_SEL (at 0x1b11a)"
        set &access:&cmd_addr %l (0x80b11a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb11a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN1_INT_PRIORITY"
      sgroup "LPG_CHAN1_INT_PRIORITY (at 0x1b11b)"
        set &access:&cmd_addr %l (0x80b11b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb11b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN1_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN1_LPG_PATTERN_CONFIG (at 0x1b140)"
        set &access:&cmd_addr %l (0x80b1400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN1_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN1_LPG_PWM_SIZE_CLK (at 0x1b141)"
        set &access:&cmd_addr %l (0x80b1410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_7BIT),2 (PWM_8BIT),3 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN1_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN1_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b142)"
        set &access:&cmd_addr %l (0x80b1420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN1_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN1_LPG_PWM_TYPE_CONFIG (at 0x1b143)"
        set &access:&cmd_addr %l (0x80b1430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EN_FULL_SCALE                            = " "0 (PWM_FULL_DIS),1 (PWM_FULL_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_PHASE_STAGGER                         = " "0 (STAGGERING_DIS),1 (STAGGERING_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_STAGGER                            = " "0 (STAGGER_0DEG),1 (STAGGER_90DEG),2 (STAGGER_180DEG),3 (STAGGER_270DEG)"
    tree.end
    tree "LPG_CHAN1_PWM_VALUE_LSB"
      sgroup "LPG_CHAN1_PWM_VALUE_LSB (at 0x1b144)"
        set &access:&cmd_addr %l (0x80b1440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN1_PWM_VALUE_MSB"
      sgroup "LPG_CHAN1_PWM_VALUE_MSB (at 0x1b145)"
        set &access:&cmd_addr %l (0x80b1450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN1_ENABLE_CONTROL"
      sgroup "LPG_CHAN1_ENABLE_CONTROL (at 0x1b146)"
        set &access:&cmd_addr %l (0x80b1460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PWM_HI                                = " "0 (PWM_HI_DIS),1 (LPG_HI_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_PWM_LO                                = " "0 (PWM_LO_DIS),1 (LPG_LO_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN1_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN1_RAMP_STEP_DURATION_LSB (at 0x1b150)"
        set &access:&cmd_addr %l (0x80b1500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN1_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN1_RAMP_STEP_DURATION_MSB (at 0x1b151)"
        set &access:&cmd_addr %l (0x80b1510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN1_PAUSE_HI_MULTIPLIER_LSB"
      sgroup "LPG_CHAN1_PAUSE_HI_MULTIPLIER_LSB (at 0x1b152)"
        set &access:&cmd_addr %l (0x80b1520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN1_PAUSE_HI_MULTIPLIER_MSB"
      sgroup "LPG_CHAN1_PAUSE_HI_MULTIPLIER_MSB (at 0x1b153)"
        set &access:&cmd_addr %l (0x80b1530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_HI_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN1_PAUSE_LO_MULTIPLIER_LSB"
      sgroup "LPG_CHAN1_PAUSE_LO_MULTIPLIER_LSB (at 0x1b154)"
        set &access:&cmd_addr %l (0x80b1540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN1_PAUSE_LO_MULTIPLIER_MSB"
      sgroup "LPG_CHAN1_PAUSE_LO_MULTIPLIER_MSB (at 0x1b155)"
        set &access:&cmd_addr %l (0x80b1550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_LO_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN1_HI_INDEX"
      sgroup "LPG_CHAN1_HI_INDEX (at 0x1b156)"
        set &access:&cmd_addr %l (0x80b1560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN1_LO_INDEX"
      sgroup "LPG_CHAN1_LO_INDEX (at 0x1b157)"
        set &access:&cmd_addr %l (0x80b1570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN1_SEC_ACCESS"
      sgroup "LPG_CHAN1_SEC_ACCESS (at 0x1b1d0)"
        set &access:&cmd_addr %l (0x80b1d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN1_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN1_PERPH_RESET_CTL2 (at 0x1b1d9)"
        set &access:&cmd_addr %l (0x80b1d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN1_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN1_PERPH_RESET_CTL3 (at 0x1b1da)"
        set &access:&cmd_addr %l (0x80b1da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN1_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN1_PERPH_RESET_CTL4 (at 0x1b1db)"
        set &access:&cmd_addr %l (0x80b1db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN1_INT_TEST1"
      sgroup "LPG_CHAN1_INT_TEST1 (at 0x1b1e0)"
        set &access:&cmd_addr %l (0x80b1e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_TEST_VAL"
      sgroup "LPG_CHAN1_INT_TEST_VAL (at 0x1b1e1)"
        set &access:&cmd_addr %l (0x80b1e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN1_TEST1"
      sgroup "LPG_CHAN1_TEST1 (at 0x1b1e2)"
        set &access:&cmd_addr %l (0x80b1e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (reserved),4 (reserved),5 (PWM_0MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN1_TEST2"
      sgroup "LPG_CHAN1_TEST2 (at 0x1b1e3)"
        set &access:&cmd_addr %l (0x80b1e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_1KHZ),4 (FSM_STATE2),5 (PWM_1MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN1_TEST3"
      sgroup "LPG_CHAN1_TEST3 (at 0x1b1e4)"
        set &access:&cmd_addr %l (0x80b1e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_32KHZ),4 (FSM_STATE1),5 (PWM_2MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN1_TEST4"
      sgroup "LPG_CHAN1_TEST4 (at 0x1b1e5)"
        set &access:&cmd_addr %l (0x80b1e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_19P2MHZ),4 (FSM_STATE0),5 (PWM_3MSBS),6 (reserved),7 (reserved)"
    tree.end
  tree.end
tree.end
tree "LPG_CHAN2"
  tree "LPG_CHAN2"
    tree "LPG_CHAN2_REVISION1"
      sgroup "LPG_CHAN2_REVISION1 (at 0x1b200)"
        set &access:&cmd_addr %l (0x80b2000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN2_REVISION2"
      sgroup "LPG_CHAN2_REVISION2 (at 0x1b201)"
        set &access:&cmd_addr %l (0x80b2010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN2_PERPH_TYPE"
      sgroup "LPG_CHAN2_PERPH_TYPE (at 0x1b204)"
        set &access:&cmd_addr %l (0x80b2040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN2_PERPH_SUBTYPE"
      sgroup "LPG_CHAN2_PERPH_SUBTYPE (at 0x1b205)"
        set &access:&cmd_addr %l (0x80b2050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN2_INT_RT_STS"
      sgroup "LPG_CHAN2_INT_RT_STS (at 0x1b210)"
        set &access:&cmd_addr %l (0x80b2100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN2_INT_SET_TYPE"
      sgroup "LPG_CHAN2_INT_SET_TYPE (at 0x1b211)"
        set &access:&cmd_addr %l (0x80b2110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN2_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN2_INT_POLARITY_HIGH (at 0x1b212)"
        set &access:&cmd_addr %l (0x80b2120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_POLARITY_LOW"
      sgroup "LPG_CHAN2_INT_POLARITY_LOW (at 0x1b213)"
        set &access:&cmd_addr %l (0x80b2130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_LATCHED_CLR"
      sgroup "LPG_CHAN2_INT_LATCHED_CLR (at 0x1b214)"
        set &access:&cmd_addr %l (0x80b2140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN2_INT_EN_SET"
      sgroup "LPG_CHAN2_INT_EN_SET (at 0x1b215)"
        set &access:&cmd_addr %l (0x80b2150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_EN_CLR"
      sgroup "LPG_CHAN2_INT_EN_CLR (at 0x1b216)"
        set &access:&cmd_addr %l (0x80b2160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_LATCHED_STS"
      sgroup "LPG_CHAN2_INT_LATCHED_STS (at 0x1b218)"
        set &access:&cmd_addr %l (0x80b2180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN2_INT_PENDING_STS"
      sgroup "LPG_CHAN2_INT_PENDING_STS (at 0x1b219)"
        set &access:&cmd_addr %l (0x80b2190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN2_INT_MID_SEL"
      sgroup "LPG_CHAN2_INT_MID_SEL (at 0x1b21a)"
        set &access:&cmd_addr %l (0x80b21a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb21a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN2_INT_PRIORITY"
      sgroup "LPG_CHAN2_INT_PRIORITY (at 0x1b21b)"
        set &access:&cmd_addr %l (0x80b21b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb21b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN2_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN2_LPG_PATTERN_CONFIG (at 0x1b240)"
        set &access:&cmd_addr %l (0x80b2400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN2_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN2_LPG_PWM_SIZE_CLK (at 0x1b241)"
        set &access:&cmd_addr %l (0x80b2410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_7BIT),2 (PWM_8BIT),3 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN2_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN2_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b242)"
        set &access:&cmd_addr %l (0x80b2420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN2_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN2_LPG_PWM_TYPE_CONFIG (at 0x1b243)"
        set &access:&cmd_addr %l (0x80b2430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EN_FULL_SCALE                            = " "0 (PWM_FULL_DIS),1 (PWM_FULL_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_PHASE_STAGGER                         = " "0 (STAGGERING_DIS),1 (STAGGERING_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_STAGGER                            = " "0 (STAGGER_0DEG),1 (STAGGER_90DEG),2 (STAGGER_180DEG),3 (STAGGER_270DEG)"
    tree.end
    tree "LPG_CHAN2_PWM_VALUE_LSB"
      sgroup "LPG_CHAN2_PWM_VALUE_LSB (at 0x1b244)"
        set &access:&cmd_addr %l (0x80b2440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN2_PWM_VALUE_MSB"
      sgroup "LPG_CHAN2_PWM_VALUE_MSB (at 0x1b245)"
        set &access:&cmd_addr %l (0x80b2450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN2_ENABLE_CONTROL"
      sgroup "LPG_CHAN2_ENABLE_CONTROL (at 0x1b246)"
        set &access:&cmd_addr %l (0x80b2460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PWM_HI                                = " "0 (PWM_HI_DIS),1 (LPG_HI_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_PWM_LO                                = " "0 (PWM_LO_DIS),1 (LPG_LO_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN2_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN2_RAMP_STEP_DURATION_LSB (at 0x1b250)"
        set &access:&cmd_addr %l (0x80b2500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN2_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN2_RAMP_STEP_DURATION_MSB (at 0x1b251)"
        set &access:&cmd_addr %l (0x80b2510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN2_PAUSE_HI_MULTIPLIER_LSB"
      sgroup "LPG_CHAN2_PAUSE_HI_MULTIPLIER_LSB (at 0x1b252)"
        set &access:&cmd_addr %l (0x80b2520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN2_PAUSE_HI_MULTIPLIER_MSB"
      sgroup "LPG_CHAN2_PAUSE_HI_MULTIPLIER_MSB (at 0x1b253)"
        set &access:&cmd_addr %l (0x80b2530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_HI_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN2_PAUSE_LO_MULTIPLIER_LSB"
      sgroup "LPG_CHAN2_PAUSE_LO_MULTIPLIER_LSB (at 0x1b254)"
        set &access:&cmd_addr %l (0x80b2540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN2_PAUSE_LO_MULTIPLIER_MSB"
      sgroup "LPG_CHAN2_PAUSE_LO_MULTIPLIER_MSB (at 0x1b255)"
        set &access:&cmd_addr %l (0x80b2550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_LO_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN2_HI_INDEX"
      sgroup "LPG_CHAN2_HI_INDEX (at 0x1b256)"
        set &access:&cmd_addr %l (0x80b2560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN2_LO_INDEX"
      sgroup "LPG_CHAN2_LO_INDEX (at 0x1b257)"
        set &access:&cmd_addr %l (0x80b2570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN2_SEC_ACCESS"
      sgroup "LPG_CHAN2_SEC_ACCESS (at 0x1b2d0)"
        set &access:&cmd_addr %l (0x80b2d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN2_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN2_PERPH_RESET_CTL2 (at 0x1b2d9)"
        set &access:&cmd_addr %l (0x80b2d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN2_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN2_PERPH_RESET_CTL3 (at 0x1b2da)"
        set &access:&cmd_addr %l (0x80b2da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN2_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN2_PERPH_RESET_CTL4 (at 0x1b2db)"
        set &access:&cmd_addr %l (0x80b2db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN2_INT_TEST1"
      sgroup "LPG_CHAN2_INT_TEST1 (at 0x1b2e0)"
        set &access:&cmd_addr %l (0x80b2e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_TEST_VAL"
      sgroup "LPG_CHAN2_INT_TEST_VAL (at 0x1b2e1)"
        set &access:&cmd_addr %l (0x80b2e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN2_TEST1"
      sgroup "LPG_CHAN2_TEST1 (at 0x1b2e2)"
        set &access:&cmd_addr %l (0x80b2e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (reserved),4 (reserved),5 (PWM_0MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN2_TEST2"
      sgroup "LPG_CHAN2_TEST2 (at 0x1b2e3)"
        set &access:&cmd_addr %l (0x80b2e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_1KHZ),4 (FSM_STATE2),5 (PWM_1MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN2_TEST3"
      sgroup "LPG_CHAN2_TEST3 (at 0x1b2e4)"
        set &access:&cmd_addr %l (0x80b2e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_32KHZ),4 (FSM_STATE1),5 (PWM_2MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN2_TEST4"
      sgroup "LPG_CHAN2_TEST4 (at 0x1b2e5)"
        set &access:&cmd_addr %l (0x80b2e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_19P2MHZ),4 (FSM_STATE0),5 (PWM_3MSBS),6 (reserved),7 (reserved)"
    tree.end
  tree.end
tree.end
tree "LPG_CHAN3"
  tree "LPG_CHAN3"
    tree "LPG_CHAN3_REVISION1"
      sgroup "LPG_CHAN3_REVISION1 (at 0x1b300)"
        set &access:&cmd_addr %l (0x80b3000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN3_REVISION2"
      sgroup "LPG_CHAN3_REVISION2 (at 0x1b301)"
        set &access:&cmd_addr %l (0x80b3010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN3_PERPH_TYPE"
      sgroup "LPG_CHAN3_PERPH_TYPE (at 0x1b304)"
        set &access:&cmd_addr %l (0x80b3040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN3_PERPH_SUBTYPE"
      sgroup "LPG_CHAN3_PERPH_SUBTYPE (at 0x1b305)"
        set &access:&cmd_addr %l (0x80b3050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN3_INT_RT_STS"
      sgroup "LPG_CHAN3_INT_RT_STS (at 0x1b310)"
        set &access:&cmd_addr %l (0x80b3100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN3_INT_SET_TYPE"
      sgroup "LPG_CHAN3_INT_SET_TYPE (at 0x1b311)"
        set &access:&cmd_addr %l (0x80b3110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN3_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN3_INT_POLARITY_HIGH (at 0x1b312)"
        set &access:&cmd_addr %l (0x80b3120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_POLARITY_LOW"
      sgroup "LPG_CHAN3_INT_POLARITY_LOW (at 0x1b313)"
        set &access:&cmd_addr %l (0x80b3130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_LATCHED_CLR"
      sgroup "LPG_CHAN3_INT_LATCHED_CLR (at 0x1b314)"
        set &access:&cmd_addr %l (0x80b3140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN3_INT_EN_SET"
      sgroup "LPG_CHAN3_INT_EN_SET (at 0x1b315)"
        set &access:&cmd_addr %l (0x80b3150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_EN_CLR"
      sgroup "LPG_CHAN3_INT_EN_CLR (at 0x1b316)"
        set &access:&cmd_addr %l (0x80b3160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_LATCHED_STS"
      sgroup "LPG_CHAN3_INT_LATCHED_STS (at 0x1b318)"
        set &access:&cmd_addr %l (0x80b3180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN3_INT_PENDING_STS"
      sgroup "LPG_CHAN3_INT_PENDING_STS (at 0x1b319)"
        set &access:&cmd_addr %l (0x80b3190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN3_INT_MID_SEL"
      sgroup "LPG_CHAN3_INT_MID_SEL (at 0x1b31a)"
        set &access:&cmd_addr %l (0x80b31a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb31a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN3_INT_PRIORITY"
      sgroup "LPG_CHAN3_INT_PRIORITY (at 0x1b31b)"
        set &access:&cmd_addr %l (0x80b31b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb31b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN3_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN3_LPG_PATTERN_CONFIG (at 0x1b340)"
        set &access:&cmd_addr %l (0x80b3400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN3_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN3_LPG_PWM_SIZE_CLK (at 0x1b341)"
        set &access:&cmd_addr %l (0x80b3410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_7BIT),2 (PWM_8BIT),3 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN3_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN3_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b342)"
        set &access:&cmd_addr %l (0x80b3420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN3_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN3_LPG_PWM_TYPE_CONFIG (at 0x1b343)"
        set &access:&cmd_addr %l (0x80b3430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EN_FULL_SCALE                            = " "0 (PWM_FULL_DIS),1 (PWM_FULL_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_PHASE_STAGGER                         = " "0 (STAGGERING_DIS),1 (STAGGERING_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_STAGGER                            = " "0 (STAGGER_0DEG),1 (STAGGER_90DEG),2 (STAGGER_180DEG),3 (STAGGER_270DEG)"
    tree.end
    tree "LPG_CHAN3_PWM_VALUE_LSB"
      sgroup "LPG_CHAN3_PWM_VALUE_LSB (at 0x1b344)"
        set &access:&cmd_addr %l (0x80b3440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN3_PWM_VALUE_MSB"
      sgroup "LPG_CHAN3_PWM_VALUE_MSB (at 0x1b345)"
        set &access:&cmd_addr %l (0x80b3450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN3_ENABLE_CONTROL"
      sgroup "LPG_CHAN3_ENABLE_CONTROL (at 0x1b346)"
        set &access:&cmd_addr %l (0x80b3460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PWM_HI                                = " "0 (PWM_HI_DIS),1 (LPG_HI_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_PWM_LO                                = " "0 (PWM_LO_DIS),1 (LPG_LO_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN3_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN3_RAMP_STEP_DURATION_LSB (at 0x1b350)"
        set &access:&cmd_addr %l (0x80b3500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN3_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN3_RAMP_STEP_DURATION_MSB (at 0x1b351)"
        set &access:&cmd_addr %l (0x80b3510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN3_PAUSE_HI_MULTIPLIER_LSB"
      sgroup "LPG_CHAN3_PAUSE_HI_MULTIPLIER_LSB (at 0x1b352)"
        set &access:&cmd_addr %l (0x80b3520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN3_PAUSE_HI_MULTIPLIER_MSB"
      sgroup "LPG_CHAN3_PAUSE_HI_MULTIPLIER_MSB (at 0x1b353)"
        set &access:&cmd_addr %l (0x80b3530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_HI_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN3_PAUSE_LO_MULTIPLIER_LSB"
      sgroup "LPG_CHAN3_PAUSE_LO_MULTIPLIER_LSB (at 0x1b354)"
        set &access:&cmd_addr %l (0x80b3540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN3_PAUSE_LO_MULTIPLIER_MSB"
      sgroup "LPG_CHAN3_PAUSE_LO_MULTIPLIER_MSB (at 0x1b355)"
        set &access:&cmd_addr %l (0x80b3550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_LO_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN3_HI_INDEX"
      sgroup "LPG_CHAN3_HI_INDEX (at 0x1b356)"
        set &access:&cmd_addr %l (0x80b3560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN3_LO_INDEX"
      sgroup "LPG_CHAN3_LO_INDEX (at 0x1b357)"
        set &access:&cmd_addr %l (0x80b3570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN3_SEC_ACCESS"
      sgroup "LPG_CHAN3_SEC_ACCESS (at 0x1b3d0)"
        set &access:&cmd_addr %l (0x80b3d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN3_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN3_PERPH_RESET_CTL2 (at 0x1b3d9)"
        set &access:&cmd_addr %l (0x80b3d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN3_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN3_PERPH_RESET_CTL3 (at 0x1b3da)"
        set &access:&cmd_addr %l (0x80b3da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN3_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN3_PERPH_RESET_CTL4 (at 0x1b3db)"
        set &access:&cmd_addr %l (0x80b3db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN3_INT_TEST1"
      sgroup "LPG_CHAN3_INT_TEST1 (at 0x1b3e0)"
        set &access:&cmd_addr %l (0x80b3e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_TEST_VAL"
      sgroup "LPG_CHAN3_INT_TEST_VAL (at 0x1b3e1)"
        set &access:&cmd_addr %l (0x80b3e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN3_TEST1"
      sgroup "LPG_CHAN3_TEST1 (at 0x1b3e2)"
        set &access:&cmd_addr %l (0x80b3e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (reserved),4 (reserved),5 (PWM_0MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN3_TEST2"
      sgroup "LPG_CHAN3_TEST2 (at 0x1b3e3)"
        set &access:&cmd_addr %l (0x80b3e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_1KHZ),4 (FSM_STATE2),5 (PWM_1MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN3_TEST3"
      sgroup "LPG_CHAN3_TEST3 (at 0x1b3e4)"
        set &access:&cmd_addr %l (0x80b3e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_32KHZ),4 (FSM_STATE1),5 (PWM_2MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN3_TEST4"
      sgroup "LPG_CHAN3_TEST4 (at 0x1b3e5)"
        set &access:&cmd_addr %l (0x80b3e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_19P2MHZ),4 (FSM_STATE0),5 (PWM_3MSBS),6 (reserved),7 (reserved)"
    tree.end
  tree.end
tree.end
tree "LPG_CHAN4"
  tree "LPG_CHAN4"
    tree "LPG_CHAN4_REVISION1"
      sgroup "LPG_CHAN4_REVISION1 (at 0x1b400)"
        set &access:&cmd_addr %l (0x80b4000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN4_REVISION2"
      sgroup "LPG_CHAN4_REVISION2 (at 0x1b401)"
        set &access:&cmd_addr %l (0x80b4010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN4_PERPH_TYPE"
      sgroup "LPG_CHAN4_PERPH_TYPE (at 0x1b404)"
        set &access:&cmd_addr %l (0x80b4040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN4_PERPH_SUBTYPE"
      sgroup "LPG_CHAN4_PERPH_SUBTYPE (at 0x1b405)"
        set &access:&cmd_addr %l (0x80b4050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN4_INT_RT_STS"
      sgroup "LPG_CHAN4_INT_RT_STS (at 0x1b410)"
        set &access:&cmd_addr %l (0x80b4100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN4_INT_SET_TYPE"
      sgroup "LPG_CHAN4_INT_SET_TYPE (at 0x1b411)"
        set &access:&cmd_addr %l (0x80b4110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN4_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN4_INT_POLARITY_HIGH (at 0x1b412)"
        set &access:&cmd_addr %l (0x80b4120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_POLARITY_LOW"
      sgroup "LPG_CHAN4_INT_POLARITY_LOW (at 0x1b413)"
        set &access:&cmd_addr %l (0x80b4130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_LATCHED_CLR"
      sgroup "LPG_CHAN4_INT_LATCHED_CLR (at 0x1b414)"
        set &access:&cmd_addr %l (0x80b4140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN4_INT_EN_SET"
      sgroup "LPG_CHAN4_INT_EN_SET (at 0x1b415)"
        set &access:&cmd_addr %l (0x80b4150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_EN_CLR"
      sgroup "LPG_CHAN4_INT_EN_CLR (at 0x1b416)"
        set &access:&cmd_addr %l (0x80b4160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_LATCHED_STS"
      sgroup "LPG_CHAN4_INT_LATCHED_STS (at 0x1b418)"
        set &access:&cmd_addr %l (0x80b4180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN4_INT_PENDING_STS"
      sgroup "LPG_CHAN4_INT_PENDING_STS (at 0x1b419)"
        set &access:&cmd_addr %l (0x80b4190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN4_INT_MID_SEL"
      sgroup "LPG_CHAN4_INT_MID_SEL (at 0x1b41a)"
        set &access:&cmd_addr %l (0x80b41a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb41a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN4_INT_PRIORITY"
      sgroup "LPG_CHAN4_INT_PRIORITY (at 0x1b41b)"
        set &access:&cmd_addr %l (0x80b41b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb41b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN4_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN4_LPG_PATTERN_CONFIG (at 0x1b440)"
        set &access:&cmd_addr %l (0x80b4400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN4_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN4_LPG_PWM_SIZE_CLK (at 0x1b441)"
        set &access:&cmd_addr %l (0x80b4410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_7BIT),2 (PWM_8BIT),3 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN4_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN4_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b442)"
        set &access:&cmd_addr %l (0x80b4420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN4_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN4_LPG_PWM_TYPE_CONFIG (at 0x1b443)"
        set &access:&cmd_addr %l (0x80b4430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EN_FULL_SCALE                            = " "0 (PWM_FULL_DIS),1 (PWM_FULL_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_PHASE_STAGGER                         = " "0 (STAGGERING_DIS),1 (STAGGERING_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_STAGGER                            = " "0 (STAGGER_0DEG),1 (STAGGER_90DEG),2 (STAGGER_180DEG),3 (STAGGER_270DEG)"
    tree.end
    tree "LPG_CHAN4_PWM_VALUE_LSB"
      sgroup "LPG_CHAN4_PWM_VALUE_LSB (at 0x1b444)"
        set &access:&cmd_addr %l (0x80b4440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN4_PWM_VALUE_MSB"
      sgroup "LPG_CHAN4_PWM_VALUE_MSB (at 0x1b445)"
        set &access:&cmd_addr %l (0x80b4450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN4_ENABLE_CONTROL"
      sgroup "LPG_CHAN4_ENABLE_CONTROL (at 0x1b446)"
        set &access:&cmd_addr %l (0x80b4460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PWM_HI                                = " "0 (PWM_HI_DIS),1 (LPG_HI_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_PWM_LO                                = " "0 (PWM_LO_DIS),1 (LPG_LO_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN4_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN4_RAMP_STEP_DURATION_LSB (at 0x1b450)"
        set &access:&cmd_addr %l (0x80b4500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN4_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN4_RAMP_STEP_DURATION_MSB (at 0x1b451)"
        set &access:&cmd_addr %l (0x80b4510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN4_PAUSE_HI_MULTIPLIER_LSB"
      sgroup "LPG_CHAN4_PAUSE_HI_MULTIPLIER_LSB (at 0x1b452)"
        set &access:&cmd_addr %l (0x80b4520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN4_PAUSE_HI_MULTIPLIER_MSB"
      sgroup "LPG_CHAN4_PAUSE_HI_MULTIPLIER_MSB (at 0x1b453)"
        set &access:&cmd_addr %l (0x80b4530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_HI_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN4_PAUSE_LO_MULTIPLIER_LSB"
      sgroup "LPG_CHAN4_PAUSE_LO_MULTIPLIER_LSB (at 0x1b454)"
        set &access:&cmd_addr %l (0x80b4540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN4_PAUSE_LO_MULTIPLIER_MSB"
      sgroup "LPG_CHAN4_PAUSE_LO_MULTIPLIER_MSB (at 0x1b455)"
        set &access:&cmd_addr %l (0x80b4550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_LO_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN4_HI_INDEX"
      sgroup "LPG_CHAN4_HI_INDEX (at 0x1b456)"
        set &access:&cmd_addr %l (0x80b4560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN4_LO_INDEX"
      sgroup "LPG_CHAN4_LO_INDEX (at 0x1b457)"
        set &access:&cmd_addr %l (0x80b4570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN4_SEC_ACCESS"
      sgroup "LPG_CHAN4_SEC_ACCESS (at 0x1b4d0)"
        set &access:&cmd_addr %l (0x80b4d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN4_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN4_PERPH_RESET_CTL2 (at 0x1b4d9)"
        set &access:&cmd_addr %l (0x80b4d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN4_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN4_PERPH_RESET_CTL3 (at 0x1b4da)"
        set &access:&cmd_addr %l (0x80b4da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN4_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN4_PERPH_RESET_CTL4 (at 0x1b4db)"
        set &access:&cmd_addr %l (0x80b4db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN4_INT_TEST1"
      sgroup "LPG_CHAN4_INT_TEST1 (at 0x1b4e0)"
        set &access:&cmd_addr %l (0x80b4e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_TEST_VAL"
      sgroup "LPG_CHAN4_INT_TEST_VAL (at 0x1b4e1)"
        set &access:&cmd_addr %l (0x80b4e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN4_TEST1"
      sgroup "LPG_CHAN4_TEST1 (at 0x1b4e2)"
        set &access:&cmd_addr %l (0x80b4e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (reserved),4 (reserved),5 (PWM_0MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN4_TEST2"
      sgroup "LPG_CHAN4_TEST2 (at 0x1b4e3)"
        set &access:&cmd_addr %l (0x80b4e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_1KHZ),4 (FSM_STATE2),5 (PWM_1MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN4_TEST3"
      sgroup "LPG_CHAN4_TEST3 (at 0x1b4e4)"
        set &access:&cmd_addr %l (0x80b4e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_32KHZ),4 (FSM_STATE1),5 (PWM_2MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN4_TEST4"
      sgroup "LPG_CHAN4_TEST4 (at 0x1b4e5)"
        set &access:&cmd_addr %l (0x80b4e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_19P2MHZ),4 (FSM_STATE0),5 (PWM_3MSBS),6 (reserved),7 (reserved)"
    tree.end
  tree.end
tree.end
tree "LPG_CHAN5"
  tree "LPG_CHAN5"
    tree "LPG_CHAN5_REVISION1"
      sgroup "LPG_CHAN5_REVISION1 (at 0x1b500)"
        set &access:&cmd_addr %l (0x80b5000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN5_REVISION2"
      sgroup "LPG_CHAN5_REVISION2 (at 0x1b501)"
        set &access:&cmd_addr %l (0x80b5010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN5_PERPH_TYPE"
      sgroup "LPG_CHAN5_PERPH_TYPE (at 0x1b504)"
        set &access:&cmd_addr %l (0x80b5040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN5_PERPH_SUBTYPE"
      sgroup "LPG_CHAN5_PERPH_SUBTYPE (at 0x1b505)"
        set &access:&cmd_addr %l (0x80b5050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN5_INT_RT_STS"
      sgroup "LPG_CHAN5_INT_RT_STS (at 0x1b510)"
        set &access:&cmd_addr %l (0x80b5100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN5_INT_SET_TYPE"
      sgroup "LPG_CHAN5_INT_SET_TYPE (at 0x1b511)"
        set &access:&cmd_addr %l (0x80b5110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN5_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN5_INT_POLARITY_HIGH (at 0x1b512)"
        set &access:&cmd_addr %l (0x80b5120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN5_INT_POLARITY_LOW"
      sgroup "LPG_CHAN5_INT_POLARITY_LOW (at 0x1b513)"
        set &access:&cmd_addr %l (0x80b5130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN5_INT_LATCHED_CLR"
      sgroup "LPG_CHAN5_INT_LATCHED_CLR (at 0x1b514)"
        set &access:&cmd_addr %l (0x80b5140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN5_INT_EN_SET"
      sgroup "LPG_CHAN5_INT_EN_SET (at 0x1b515)"
        set &access:&cmd_addr %l (0x80b5150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN5_INT_EN_CLR"
      sgroup "LPG_CHAN5_INT_EN_CLR (at 0x1b516)"
        set &access:&cmd_addr %l (0x80b5160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN5_INT_LATCHED_STS"
      sgroup "LPG_CHAN5_INT_LATCHED_STS (at 0x1b518)"
        set &access:&cmd_addr %l (0x80b5180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN5_INT_PENDING_STS"
      sgroup "LPG_CHAN5_INT_PENDING_STS (at 0x1b519)"
        set &access:&cmd_addr %l (0x80b5190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN5_INT_MID_SEL"
      sgroup "LPG_CHAN5_INT_MID_SEL (at 0x1b51a)"
        set &access:&cmd_addr %l (0x80b51a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb51a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN5_INT_PRIORITY"
      sgroup "LPG_CHAN5_INT_PRIORITY (at 0x1b51b)"
        set &access:&cmd_addr %l (0x80b51b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb51b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN5_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN5_LPG_PATTERN_CONFIG (at 0x1b540)"
        set &access:&cmd_addr %l (0x80b5400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN5_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN5_LPG_PWM_SIZE_CLK (at 0x1b541)"
        set &access:&cmd_addr %l (0x80b5410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_7BIT),2 (PWM_8BIT),3 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN5_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN5_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b542)"
        set &access:&cmd_addr %l (0x80b5420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN5_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN5_LPG_PWM_TYPE_CONFIG (at 0x1b543)"
        set &access:&cmd_addr %l (0x80b5430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EN_FULL_SCALE                            = " "0 (PWM_FULL_DIS),1 (PWM_FULL_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_PHASE_STAGGER                         = " "0 (STAGGERING_DIS),1 (STAGGERING_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_STAGGER                            = " "0 (STAGGER_0DEG),1 (STAGGER_90DEG),2 (STAGGER_180DEG),3 (STAGGER_270DEG)"
    tree.end
    tree "LPG_CHAN5_PWM_VALUE_LSB"
      sgroup "LPG_CHAN5_PWM_VALUE_LSB (at 0x1b544)"
        set &access:&cmd_addr %l (0x80b5440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN5_PWM_VALUE_MSB"
      sgroup "LPG_CHAN5_PWM_VALUE_MSB (at 0x1b545)"
        set &access:&cmd_addr %l (0x80b5450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN5_ENABLE_CONTROL"
      sgroup "LPG_CHAN5_ENABLE_CONTROL (at 0x1b546)"
        set &access:&cmd_addr %l (0x80b5460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PWM_HI                                = " "0 (PWM_HI_DIS),1 (LPG_HI_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_PWM_LO                                = " "0 (PWM_LO_DIS),1 (LPG_LO_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN5_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN5_RAMP_STEP_DURATION_LSB (at 0x1b550)"
        set &access:&cmd_addr %l (0x80b5500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN5_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN5_RAMP_STEP_DURATION_MSB (at 0x1b551)"
        set &access:&cmd_addr %l (0x80b5510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN5_PAUSE_HI_MULTIPLIER_LSB"
      sgroup "LPG_CHAN5_PAUSE_HI_MULTIPLIER_LSB (at 0x1b552)"
        set &access:&cmd_addr %l (0x80b5520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN5_PAUSE_HI_MULTIPLIER_MSB"
      sgroup "LPG_CHAN5_PAUSE_HI_MULTIPLIER_MSB (at 0x1b553)"
        set &access:&cmd_addr %l (0x80b5530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_HI_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN5_PAUSE_LO_MULTIPLIER_LSB"
      sgroup "LPG_CHAN5_PAUSE_LO_MULTIPLIER_LSB (at 0x1b554)"
        set &access:&cmd_addr %l (0x80b5540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN5_PAUSE_LO_MULTIPLIER_MSB"
      sgroup "LPG_CHAN5_PAUSE_LO_MULTIPLIER_MSB (at 0x1b555)"
        set &access:&cmd_addr %l (0x80b5550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_LO_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN5_HI_INDEX"
      sgroup "LPG_CHAN5_HI_INDEX (at 0x1b556)"
        set &access:&cmd_addr %l (0x80b5560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN5_LO_INDEX"
      sgroup "LPG_CHAN5_LO_INDEX (at 0x1b557)"
        set &access:&cmd_addr %l (0x80b5570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN5_SEC_ACCESS"
      sgroup "LPG_CHAN5_SEC_ACCESS (at 0x1b5d0)"
        set &access:&cmd_addr %l (0x80b5d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN5_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN5_PERPH_RESET_CTL2 (at 0x1b5d9)"
        set &access:&cmd_addr %l (0x80b5d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN5_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN5_PERPH_RESET_CTL3 (at 0x1b5da)"
        set &access:&cmd_addr %l (0x80b5da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN5_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN5_PERPH_RESET_CTL4 (at 0x1b5db)"
        set &access:&cmd_addr %l (0x80b5db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN5_INT_TEST1"
      sgroup "LPG_CHAN5_INT_TEST1 (at 0x1b5e0)"
        set &access:&cmd_addr %l (0x80b5e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN5_INT_TEST_VAL"
      sgroup "LPG_CHAN5_INT_TEST_VAL (at 0x1b5e1)"
        set &access:&cmd_addr %l (0x80b5e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN5_TEST1"
      sgroup "LPG_CHAN5_TEST1 (at 0x1b5e2)"
        set &access:&cmd_addr %l (0x80b5e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (reserved),4 (reserved),5 (PWM_0MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN5_TEST2"
      sgroup "LPG_CHAN5_TEST2 (at 0x1b5e3)"
        set &access:&cmd_addr %l (0x80b5e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_1KHZ),4 (FSM_STATE2),5 (PWM_1MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN5_TEST3"
      sgroup "LPG_CHAN5_TEST3 (at 0x1b5e4)"
        set &access:&cmd_addr %l (0x80b5e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_32KHZ),4 (FSM_STATE1),5 (PWM_2MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN5_TEST4"
      sgroup "LPG_CHAN5_TEST4 (at 0x1b5e5)"
        set &access:&cmd_addr %l (0x80b5e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb5e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_19P2MHZ),4 (FSM_STATE0),5 (PWM_3MSBS),6 (reserved),7 (reserved)"
    tree.end
  tree.end
tree.end
tree "LPG_CHAN6"
  tree "LPG_CHAN6"
    tree "LPG_CHAN6_REVISION1"
      sgroup "LPG_CHAN6_REVISION1 (at 0x1b600)"
        set &access:&cmd_addr %l (0x80b6000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN6_REVISION2"
      sgroup "LPG_CHAN6_REVISION2 (at 0x1b601)"
        set &access:&cmd_addr %l (0x80b6010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN6_PERPH_TYPE"
      sgroup "LPG_CHAN6_PERPH_TYPE (at 0x1b604)"
        set &access:&cmd_addr %l (0x80b6040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN6_PERPH_SUBTYPE"
      sgroup "LPG_CHAN6_PERPH_SUBTYPE (at 0x1b605)"
        set &access:&cmd_addr %l (0x80b6050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN6_INT_RT_STS"
      sgroup "LPG_CHAN6_INT_RT_STS (at 0x1b610)"
        set &access:&cmd_addr %l (0x80b6100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN6_INT_SET_TYPE"
      sgroup "LPG_CHAN6_INT_SET_TYPE (at 0x1b611)"
        set &access:&cmd_addr %l (0x80b6110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN6_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN6_INT_POLARITY_HIGH (at 0x1b612)"
        set &access:&cmd_addr %l (0x80b6120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN6_INT_POLARITY_LOW"
      sgroup "LPG_CHAN6_INT_POLARITY_LOW (at 0x1b613)"
        set &access:&cmd_addr %l (0x80b6130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN6_INT_LATCHED_CLR"
      sgroup "LPG_CHAN6_INT_LATCHED_CLR (at 0x1b614)"
        set &access:&cmd_addr %l (0x80b6140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN6_INT_EN_SET"
      sgroup "LPG_CHAN6_INT_EN_SET (at 0x1b615)"
        set &access:&cmd_addr %l (0x80b6150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN6_INT_EN_CLR"
      sgroup "LPG_CHAN6_INT_EN_CLR (at 0x1b616)"
        set &access:&cmd_addr %l (0x80b6160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN6_INT_LATCHED_STS"
      sgroup "LPG_CHAN6_INT_LATCHED_STS (at 0x1b618)"
        set &access:&cmd_addr %l (0x80b6180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN6_INT_PENDING_STS"
      sgroup "LPG_CHAN6_INT_PENDING_STS (at 0x1b619)"
        set &access:&cmd_addr %l (0x80b6190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN6_INT_MID_SEL"
      sgroup "LPG_CHAN6_INT_MID_SEL (at 0x1b61a)"
        set &access:&cmd_addr %l (0x80b61a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb61a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN6_INT_PRIORITY"
      sgroup "LPG_CHAN6_INT_PRIORITY (at 0x1b61b)"
        set &access:&cmd_addr %l (0x80b61b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb61b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN6_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN6_LPG_PATTERN_CONFIG (at 0x1b640)"
        set &access:&cmd_addr %l (0x80b6400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN6_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN6_LPG_PWM_SIZE_CLK (at 0x1b641)"
        set &access:&cmd_addr %l (0x80b6410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_7BIT),2 (PWM_8BIT),3 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN6_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN6_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b642)"
        set &access:&cmd_addr %l (0x80b6420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN6_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN6_LPG_PWM_TYPE_CONFIG (at 0x1b643)"
        set &access:&cmd_addr %l (0x80b6430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EN_FULL_SCALE                            = " "0 (PWM_FULL_DIS),1 (PWM_FULL_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_PHASE_STAGGER                         = " "0 (STAGGERING_DIS),1 (STAGGERING_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_STAGGER                            = " "0 (STAGGER_0DEG),1 (STAGGER_90DEG),2 (STAGGER_180DEG),3 (STAGGER_270DEG)"
    tree.end
    tree "LPG_CHAN6_PWM_VALUE_LSB"
      sgroup "LPG_CHAN6_PWM_VALUE_LSB (at 0x1b644)"
        set &access:&cmd_addr %l (0x80b6440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN6_PWM_VALUE_MSB"
      sgroup "LPG_CHAN6_PWM_VALUE_MSB (at 0x1b645)"
        set &access:&cmd_addr %l (0x80b6450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN6_ENABLE_CONTROL"
      sgroup "LPG_CHAN6_ENABLE_CONTROL (at 0x1b646)"
        set &access:&cmd_addr %l (0x80b6460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PWM_HI                                = " "0 (PWM_HI_DIS),1 (LPG_HI_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_PWM_LO                                = " "0 (PWM_LO_DIS),1 (LPG_LO_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN6_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN6_RAMP_STEP_DURATION_LSB (at 0x1b650)"
        set &access:&cmd_addr %l (0x80b6500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN6_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN6_RAMP_STEP_DURATION_MSB (at 0x1b651)"
        set &access:&cmd_addr %l (0x80b6510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN6_PAUSE_HI_MULTIPLIER_LSB"
      sgroup "LPG_CHAN6_PAUSE_HI_MULTIPLIER_LSB (at 0x1b652)"
        set &access:&cmd_addr %l (0x80b6520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN6_PAUSE_HI_MULTIPLIER_MSB"
      sgroup "LPG_CHAN6_PAUSE_HI_MULTIPLIER_MSB (at 0x1b653)"
        set &access:&cmd_addr %l (0x80b6530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_HI_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN6_PAUSE_LO_MULTIPLIER_LSB"
      sgroup "LPG_CHAN6_PAUSE_LO_MULTIPLIER_LSB (at 0x1b654)"
        set &access:&cmd_addr %l (0x80b6540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT_LSB                        = "
    tree.end
    tree "LPG_CHAN6_PAUSE_LO_MULTIPLIER_MSB"
      sgroup "LPG_CHAN6_PAUSE_LO_MULTIPLIER_MSB (at 0x1b655)"
        set &access:&cmd_addr %l (0x80b6550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PAUSE_LO_MULT_MSB                        = "
    tree.end
    tree "LPG_CHAN6_HI_INDEX"
      sgroup "LPG_CHAN6_HI_INDEX (at 0x1b656)"
        set &access:&cmd_addr %l (0x80b6560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN6_LO_INDEX"
      sgroup "LPG_CHAN6_LO_INDEX (at 0x1b657)"
        set &access:&cmd_addr %l (0x80b6570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN6_SEC_ACCESS"
      sgroup "LPG_CHAN6_SEC_ACCESS (at 0x1b6d0)"
        set &access:&cmd_addr %l (0x80b6d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN6_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN6_PERPH_RESET_CTL2 (at 0x1b6d9)"
        set &access:&cmd_addr %l (0x80b6d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN6_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN6_PERPH_RESET_CTL3 (at 0x1b6da)"
        set &access:&cmd_addr %l (0x80b6da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN6_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN6_PERPH_RESET_CTL4 (at 0x1b6db)"
        set &access:&cmd_addr %l (0x80b6db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN6_INT_TEST1"
      sgroup "LPG_CHAN6_INT_TEST1 (at 0x1b6e0)"
        set &access:&cmd_addr %l (0x80b6e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN6_INT_TEST_VAL"
      sgroup "LPG_CHAN6_INT_TEST_VAL (at 0x1b6e1)"
        set &access:&cmd_addr %l (0x80b6e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN6_TEST1"
      sgroup "LPG_CHAN6_TEST1 (at 0x1b6e2)"
        set &access:&cmd_addr %l (0x80b6e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (reserved),4 (reserved),5 (PWM_0MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN6_TEST2"
      sgroup "LPG_CHAN6_TEST2 (at 0x1b6e3)"
        set &access:&cmd_addr %l (0x80b6e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_1KHZ),4 (FSM_STATE2),5 (PWM_1MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN6_TEST3"
      sgroup "LPG_CHAN6_TEST3 (at 0x1b6e4)"
        set &access:&cmd_addr %l (0x80b6e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_32KHZ),4 (FSM_STATE1),5 (PWM_2MSBS),6 (reserved),7 (reserved)"
    tree.end
    tree "LPG_CHAN6_TEST4"
      sgroup "LPG_CHAN6_TEST4 (at 0x1b6e5)"
        set &access:&cmd_addr %l (0x80b6e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb6e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0 (TEST_DIS),1 (LPG_OUT_LO),2 (LPG_OUT_HI),3 (CLK_19P2MHZ),4 (FSM_STATE0),5 (PWM_3MSBS),6 (reserved),7 (reserved)"
    tree.end
  tree.end
tree.end
tree "LPG_LUT"
  tree "LPG_LUT"
    tree "LPG_LUT_REVISION1"
      sgroup "LPG_LUT_REVISION1 (at 0x1b000)"
        set &access:&cmd_addr %l (0x80b0000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_LUT_REVISION2"
      sgroup "LPG_LUT_REVISION2 (at 0x1b001)"
        set &access:&cmd_addr %l (0x80b0010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_LUT_PERPH_TYPE"
      sgroup "LPG_LUT_PERPH_TYPE (at 0x1b004)"
        set &access:&cmd_addr %l (0x80b0040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_LUT_PERPH_SUBTYPE"
      sgroup "LPG_LUT_PERPH_SUBTYPE (at 0x1b005)"
        set &access:&cmd_addr %l (0x80b0050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_LUT_LUT0_LSB"
      sgroup "LPG_LUT_LUT0_LSB (at 0x1b040)"
        set &access:&cmd_addr %l (0x80b0400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT0_MSB"
      sgroup "LPG_LUT_LUT0_MSB (at 0x1b041)"
        set &access:&cmd_addr %l (0x80b0410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT1_LSB"
      sgroup "LPG_LUT_LUT1_LSB (at 0x1b042)"
        set &access:&cmd_addr %l (0x80b0420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT1_MSB"
      sgroup "LPG_LUT_LUT1_MSB (at 0x1b043)"
        set &access:&cmd_addr %l (0x80b0430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT2_LSB"
      sgroup "LPG_LUT_LUT2_LSB (at 0x1b044)"
        set &access:&cmd_addr %l (0x80b0440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT2_MSB"
      sgroup "LPG_LUT_LUT2_MSB (at 0x1b045)"
        set &access:&cmd_addr %l (0x80b0450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT3_LSB"
      sgroup "LPG_LUT_LUT3_LSB (at 0x1b046)"
        set &access:&cmd_addr %l (0x80b0460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT3_MSB"
      sgroup "LPG_LUT_LUT3_MSB (at 0x1b047)"
        set &access:&cmd_addr %l (0x80b0470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT4_LSB"
      sgroup "LPG_LUT_LUT4_LSB (at 0x1b048)"
        set &access:&cmd_addr %l (0x80b0480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT4_MSB"
      sgroup "LPG_LUT_LUT4_MSB (at 0x1b049)"
        set &access:&cmd_addr %l (0x80b0490|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0490|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT5_LSB"
      sgroup "LPG_LUT_LUT5_LSB (at 0x1b04a)"
        set &access:&cmd_addr %l (0x80b04a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT5_MSB"
      sgroup "LPG_LUT_LUT5_MSB (at 0x1b04b)"
        set &access:&cmd_addr %l (0x80b04b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT6_LSB"
      sgroup "LPG_LUT_LUT6_LSB (at 0x1b04c)"
        set &access:&cmd_addr %l (0x80b04c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT6_MSB"
      sgroup "LPG_LUT_LUT6_MSB (at 0x1b04d)"
        set &access:&cmd_addr %l (0x80b04d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT7_LSB"
      sgroup "LPG_LUT_LUT7_LSB (at 0x1b04e)"
        set &access:&cmd_addr %l (0x80b04e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT7_MSB"
      sgroup "LPG_LUT_LUT7_MSB (at 0x1b04f)"
        set &access:&cmd_addr %l (0x80b04f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT8_LSB"
      sgroup "LPG_LUT_LUT8_LSB (at 0x1b050)"
        set &access:&cmd_addr %l (0x80b0500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT8_MSB"
      sgroup "LPG_LUT_LUT8_MSB (at 0x1b051)"
        set &access:&cmd_addr %l (0x80b0510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT9_LSB"
      sgroup "LPG_LUT_LUT9_LSB (at 0x1b052)"
        set &access:&cmd_addr %l (0x80b0520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT9_MSB"
      sgroup "LPG_LUT_LUT9_MSB (at 0x1b053)"
        set &access:&cmd_addr %l (0x80b0530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT10_LSB"
      sgroup "LPG_LUT_LUT10_LSB (at 0x1b054)"
        set &access:&cmd_addr %l (0x80b0540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT10_MSB"
      sgroup "LPG_LUT_LUT10_MSB (at 0x1b055)"
        set &access:&cmd_addr %l (0x80b0550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT11_LSB"
      sgroup "LPG_LUT_LUT11_LSB (at 0x1b056)"
        set &access:&cmd_addr %l (0x80b0560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT11_MSB"
      sgroup "LPG_LUT_LUT11_MSB (at 0x1b057)"
        set &access:&cmd_addr %l (0x80b0570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT12_LSB"
      sgroup "LPG_LUT_LUT12_LSB (at 0x1b058)"
        set &access:&cmd_addr %l (0x80b0580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT12_MSB"
      sgroup "LPG_LUT_LUT12_MSB (at 0x1b059)"
        set &access:&cmd_addr %l (0x80b0590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT13_LSB"
      sgroup "LPG_LUT_LUT13_LSB (at 0x1b05a)"
        set &access:&cmd_addr %l (0x80b05a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT13_MSB"
      sgroup "LPG_LUT_LUT13_MSB (at 0x1b05b)"
        set &access:&cmd_addr %l (0x80b05b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT14_LSB"
      sgroup "LPG_LUT_LUT14_LSB (at 0x1b05c)"
        set &access:&cmd_addr %l (0x80b05c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT14_MSB"
      sgroup "LPG_LUT_LUT14_MSB (at 0x1b05d)"
        set &access:&cmd_addr %l (0x80b05d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT15_LSB"
      sgroup "LPG_LUT_LUT15_LSB (at 0x1b05e)"
        set &access:&cmd_addr %l (0x80b05e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT15_MSB"
      sgroup "LPG_LUT_LUT15_MSB (at 0x1b05f)"
        set &access:&cmd_addr %l (0x80b05f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT16_LSB"
      sgroup "LPG_LUT_LUT16_LSB (at 0x1b060)"
        set &access:&cmd_addr %l (0x80b0600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT16_MSB"
      sgroup "LPG_LUT_LUT16_MSB (at 0x1b061)"
        set &access:&cmd_addr %l (0x80b0610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT17_LSB"
      sgroup "LPG_LUT_LUT17_LSB (at 0x1b062)"
        set &access:&cmd_addr %l (0x80b0620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT17_MSB"
      sgroup "LPG_LUT_LUT17_MSB (at 0x1b063)"
        set &access:&cmd_addr %l (0x80b0630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT18_LSB"
      sgroup "LPG_LUT_LUT18_LSB (at 0x1b064)"
        set &access:&cmd_addr %l (0x80b0640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT18_MSB"
      sgroup "LPG_LUT_LUT18_MSB (at 0x1b065)"
        set &access:&cmd_addr %l (0x80b0650|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0650|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT19_LSB"
      sgroup "LPG_LUT_LUT19_LSB (at 0x1b066)"
        set &access:&cmd_addr %l (0x80b0660|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0660|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT19_MSB"
      sgroup "LPG_LUT_LUT19_MSB (at 0x1b067)"
        set &access:&cmd_addr %l (0x80b0670|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0670|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT20_LSB"
      sgroup "LPG_LUT_LUT20_LSB (at 0x1b068)"
        set &access:&cmd_addr %l (0x80b0680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT20_MSB"
      sgroup "LPG_LUT_LUT20_MSB (at 0x1b069)"
        set &access:&cmd_addr %l (0x80b0690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT21_LSB"
      sgroup "LPG_LUT_LUT21_LSB (at 0x1b06a)"
        set &access:&cmd_addr %l (0x80b06a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT21_MSB"
      sgroup "LPG_LUT_LUT21_MSB (at 0x1b06b)"
        set &access:&cmd_addr %l (0x80b06b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT22_LSB"
      sgroup "LPG_LUT_LUT22_LSB (at 0x1b06c)"
        set &access:&cmd_addr %l (0x80b06c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT22_MSB"
      sgroup "LPG_LUT_LUT22_MSB (at 0x1b06d)"
        set &access:&cmd_addr %l (0x80b06d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT23_LSB"
      sgroup "LPG_LUT_LUT23_LSB (at 0x1b06e)"
        set &access:&cmd_addr %l (0x80b06e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT23_MSB"
      sgroup "LPG_LUT_LUT23_MSB (at 0x1b06f)"
        set &access:&cmd_addr %l (0x80b06f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT24_LSB"
      sgroup "LPG_LUT_LUT24_LSB (at 0x1b070)"
        set &access:&cmd_addr %l (0x80b0700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT24_MSB"
      sgroup "LPG_LUT_LUT24_MSB (at 0x1b071)"
        set &access:&cmd_addr %l (0x80b0710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT25_LSB"
      sgroup "LPG_LUT_LUT25_LSB (at 0x1b072)"
        set &access:&cmd_addr %l (0x80b0720|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0720|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT25_MSB"
      sgroup "LPG_LUT_LUT25_MSB (at 0x1b073)"
        set &access:&cmd_addr %l (0x80b0730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT26_LSB"
      sgroup "LPG_LUT_LUT26_LSB (at 0x1b074)"
        set &access:&cmd_addr %l (0x80b0740|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0740|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT26_MSB"
      sgroup "LPG_LUT_LUT26_MSB (at 0x1b075)"
        set &access:&cmd_addr %l (0x80b0750|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0750|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT27_LSB"
      sgroup "LPG_LUT_LUT27_LSB (at 0x1b076)"
        set &access:&cmd_addr %l (0x80b0760|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0760|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT27_MSB"
      sgroup "LPG_LUT_LUT27_MSB (at 0x1b077)"
        set &access:&cmd_addr %l (0x80b0770|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0770|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT28_LSB"
      sgroup "LPG_LUT_LUT28_LSB (at 0x1b078)"
        set &access:&cmd_addr %l (0x80b0780|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0780|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT28_MSB"
      sgroup "LPG_LUT_LUT28_MSB (at 0x1b079)"
        set &access:&cmd_addr %l (0x80b0790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT29_LSB"
      sgroup "LPG_LUT_LUT29_LSB (at 0x1b07a)"
        set &access:&cmd_addr %l (0x80b07a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb07a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT29_MSB"
      sgroup "LPG_LUT_LUT29_MSB (at 0x1b07b)"
        set &access:&cmd_addr %l (0x80b07b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb07b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT30_LSB"
      sgroup "LPG_LUT_LUT30_LSB (at 0x1b07c)"
        set &access:&cmd_addr %l (0x80b07c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb07c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT30_MSB"
      sgroup "LPG_LUT_LUT30_MSB (at 0x1b07d)"
        set &access:&cmd_addr %l (0x80b07d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb07d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT31_LSB"
      sgroup "LPG_LUT_LUT31_LSB (at 0x1b07e)"
        set &access:&cmd_addr %l (0x80b07e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb07e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT31_MSB"
      sgroup "LPG_LUT_LUT31_MSB (at 0x1b07f)"
        set &access:&cmd_addr %l (0x80b07f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb07f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT32_LSB"
      sgroup "LPG_LUT_LUT32_LSB (at 0x1b080)"
        set &access:&cmd_addr %l (0x80b0800|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0800|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT32_MSB"
      sgroup "LPG_LUT_LUT32_MSB (at 0x1b081)"
        set &access:&cmd_addr %l (0x80b0810|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0810|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT33_LSB"
      sgroup "LPG_LUT_LUT33_LSB (at 0x1b082)"
        set &access:&cmd_addr %l (0x80b0820|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0820|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT33_MSB"
      sgroup "LPG_LUT_LUT33_MSB (at 0x1b083)"
        set &access:&cmd_addr %l (0x80b0830|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0830|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT34_LSB"
      sgroup "LPG_LUT_LUT34_LSB (at 0x1b084)"
        set &access:&cmd_addr %l (0x80b0840|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0840|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT34_MSB"
      sgroup "LPG_LUT_LUT34_MSB (at 0x1b085)"
        set &access:&cmd_addr %l (0x80b0850|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0850|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT35_LSB"
      sgroup "LPG_LUT_LUT35_LSB (at 0x1b086)"
        set &access:&cmd_addr %l (0x80b0860|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0860|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT35_MSB"
      sgroup "LPG_LUT_LUT35_MSB (at 0x1b087)"
        set &access:&cmd_addr %l (0x80b0870|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0870|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT36_LSB"
      sgroup "LPG_LUT_LUT36_LSB (at 0x1b088)"
        set &access:&cmd_addr %l (0x80b0880|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0880|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT36_MSB"
      sgroup "LPG_LUT_LUT36_MSB (at 0x1b089)"
        set &access:&cmd_addr %l (0x80b0890|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0890|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT37_LSB"
      sgroup "LPG_LUT_LUT37_LSB (at 0x1b08a)"
        set &access:&cmd_addr %l (0x80b08a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb08a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT37_MSB"
      sgroup "LPG_LUT_LUT37_MSB (at 0x1b08b)"
        set &access:&cmd_addr %l (0x80b08b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb08b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT38_LSB"
      sgroup "LPG_LUT_LUT38_LSB (at 0x1b08c)"
        set &access:&cmd_addr %l (0x80b08c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb08c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT38_MSB"
      sgroup "LPG_LUT_LUT38_MSB (at 0x1b08d)"
        set &access:&cmd_addr %l (0x80b08d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb08d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT39_LSB"
      sgroup "LPG_LUT_LUT39_LSB (at 0x1b08e)"
        set &access:&cmd_addr %l (0x80b08e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb08e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT39_MSB"
      sgroup "LPG_LUT_LUT39_MSB (at 0x1b08f)"
        set &access:&cmd_addr %l (0x80b08f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb08f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT40_LSB"
      sgroup "LPG_LUT_LUT40_LSB (at 0x1b090)"
        set &access:&cmd_addr %l (0x80b0900|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0900|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT40_MSB"
      sgroup "LPG_LUT_LUT40_MSB (at 0x1b091)"
        set &access:&cmd_addr %l (0x80b0910|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0910|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT41_LSB"
      sgroup "LPG_LUT_LUT41_LSB (at 0x1b092)"
        set &access:&cmd_addr %l (0x80b0920|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0920|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT41_MSB"
      sgroup "LPG_LUT_LUT41_MSB (at 0x1b093)"
        set &access:&cmd_addr %l (0x80b0930|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0930|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT42_LSB"
      sgroup "LPG_LUT_LUT42_LSB (at 0x1b094)"
        set &access:&cmd_addr %l (0x80b0940|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0940|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT42_MSB"
      sgroup "LPG_LUT_LUT42_MSB (at 0x1b095)"
        set &access:&cmd_addr %l (0x80b0950|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0950|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT43_LSB"
      sgroup "LPG_LUT_LUT43_LSB (at 0x1b096)"
        set &access:&cmd_addr %l (0x80b0960|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0960|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT43_MSB"
      sgroup "LPG_LUT_LUT43_MSB (at 0x1b097)"
        set &access:&cmd_addr %l (0x80b0970|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0970|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT44_LSB"
      sgroup "LPG_LUT_LUT44_LSB (at 0x1b098)"
        set &access:&cmd_addr %l (0x80b0980|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0980|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT44_MSB"
      sgroup "LPG_LUT_LUT44_MSB (at 0x1b099)"
        set &access:&cmd_addr %l (0x80b0990|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0990|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT45_LSB"
      sgroup "LPG_LUT_LUT45_LSB (at 0x1b09a)"
        set &access:&cmd_addr %l (0x80b09a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb09a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT45_MSB"
      sgroup "LPG_LUT_LUT45_MSB (at 0x1b09b)"
        set &access:&cmd_addr %l (0x80b09b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb09b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT46_LSB"
      sgroup "LPG_LUT_LUT46_LSB (at 0x1b09c)"
        set &access:&cmd_addr %l (0x80b09c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb09c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT46_MSB"
      sgroup "LPG_LUT_LUT46_MSB (at 0x1b09d)"
        set &access:&cmd_addr %l (0x80b09d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb09d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT47_LSB"
      sgroup "LPG_LUT_LUT47_LSB (at 0x1b09e)"
        set &access:&cmd_addr %l (0x80b09e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb09e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT47_MSB"
      sgroup "LPG_LUT_LUT47_MSB (at 0x1b09f)"
        set &access:&cmd_addr %l (0x80b09f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb09f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT48_LSB"
      sgroup "LPG_LUT_LUT48_LSB (at 0x1b0a0)"
        set &access:&cmd_addr %l (0x80b0a00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT48_MSB"
      sgroup "LPG_LUT_LUT48_MSB (at 0x1b0a1)"
        set &access:&cmd_addr %l (0x80b0a10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT49_LSB"
      sgroup "LPG_LUT_LUT49_LSB (at 0x1b0a2)"
        set &access:&cmd_addr %l (0x80b0a20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT49_MSB"
      sgroup "LPG_LUT_LUT49_MSB (at 0x1b0a3)"
        set &access:&cmd_addr %l (0x80b0a30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT50_LSB"
      sgroup "LPG_LUT_LUT50_LSB (at 0x1b0a4)"
        set &access:&cmd_addr %l (0x80b0a40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT50_MSB"
      sgroup "LPG_LUT_LUT50_MSB (at 0x1b0a5)"
        set &access:&cmd_addr %l (0x80b0a50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT51_LSB"
      sgroup "LPG_LUT_LUT51_LSB (at 0x1b0a6)"
        set &access:&cmd_addr %l (0x80b0a60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT51_MSB"
      sgroup "LPG_LUT_LUT51_MSB (at 0x1b0a7)"
        set &access:&cmd_addr %l (0x80b0a70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT52_LSB"
      sgroup "LPG_LUT_LUT52_LSB (at 0x1b0a8)"
        set &access:&cmd_addr %l (0x80b0a80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT52_MSB"
      sgroup "LPG_LUT_LUT52_MSB (at 0x1b0a9)"
        set &access:&cmd_addr %l (0x80b0a90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0a90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT53_LSB"
      sgroup "LPG_LUT_LUT53_LSB (at 0x1b0aa)"
        set &access:&cmd_addr %l (0x80b0aa0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0aa0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT53_MSB"
      sgroup "LPG_LUT_LUT53_MSB (at 0x1b0ab)"
        set &access:&cmd_addr %l (0x80b0ab0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0ab0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT54_LSB"
      sgroup "LPG_LUT_LUT54_LSB (at 0x1b0ac)"
        set &access:&cmd_addr %l (0x80b0ac0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0ac0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT54_MSB"
      sgroup "LPG_LUT_LUT54_MSB (at 0x1b0ad)"
        set &access:&cmd_addr %l (0x80b0ad0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0ad0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT55_LSB"
      sgroup "LPG_LUT_LUT55_LSB (at 0x1b0ae)"
        set &access:&cmd_addr %l (0x80b0ae0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0ae0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT55_MSB"
      sgroup "LPG_LUT_LUT55_MSB (at 0x1b0af)"
        set &access:&cmd_addr %l (0x80b0af0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0af0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT56_LSB"
      sgroup "LPG_LUT_LUT56_LSB (at 0x1b0b0)"
        set &access:&cmd_addr %l (0x80b0b00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT56_MSB"
      sgroup "LPG_LUT_LUT56_MSB (at 0x1b0b1)"
        set &access:&cmd_addr %l (0x80b0b10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT57_LSB"
      sgroup "LPG_LUT_LUT57_LSB (at 0x1b0b2)"
        set &access:&cmd_addr %l (0x80b0b20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT57_MSB"
      sgroup "LPG_LUT_LUT57_MSB (at 0x1b0b3)"
        set &access:&cmd_addr %l (0x80b0b30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT58_LSB"
      sgroup "LPG_LUT_LUT58_LSB (at 0x1b0b4)"
        set &access:&cmd_addr %l (0x80b0b40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT58_MSB"
      sgroup "LPG_LUT_LUT58_MSB (at 0x1b0b5)"
        set &access:&cmd_addr %l (0x80b0b50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT59_LSB"
      sgroup "LPG_LUT_LUT59_LSB (at 0x1b0b6)"
        set &access:&cmd_addr %l (0x80b0b60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT59_MSB"
      sgroup "LPG_LUT_LUT59_MSB (at 0x1b0b7)"
        set &access:&cmd_addr %l (0x80b0b70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT60_LSB"
      sgroup "LPG_LUT_LUT60_LSB (at 0x1b0b8)"
        set &access:&cmd_addr %l (0x80b0b80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT60_MSB"
      sgroup "LPG_LUT_LUT60_MSB (at 0x1b0b9)"
        set &access:&cmd_addr %l (0x80b0b90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0b90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT61_LSB"
      sgroup "LPG_LUT_LUT61_LSB (at 0x1b0ba)"
        set &access:&cmd_addr %l (0x80b0ba0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0ba0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT61_MSB"
      sgroup "LPG_LUT_LUT61_MSB (at 0x1b0bb)"
        set &access:&cmd_addr %l (0x80b0bb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0bb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT62_LSB"
      sgroup "LPG_LUT_LUT62_LSB (at 0x1b0bc)"
        set &access:&cmd_addr %l (0x80b0bc0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0bc0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT62_MSB"
      sgroup "LPG_LUT_LUT62_MSB (at 0x1b0bd)"
        set &access:&cmd_addr %l (0x80b0bd0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0bd0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT63_LSB"
      sgroup "LPG_LUT_LUT63_LSB (at 0x1b0be)"
        set &access:&cmd_addr %l (0x80b0be0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0be0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT63_MSB"
      sgroup "LPG_LUT_LUT63_MSB (at 0x1b0bf)"
        set &access:&cmd_addr %l (0x80b0bf0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0bf0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_RAMP_CONTROL"
      sgroup "LPG_LUT_RAMP_CONTROL (at 0x1b0c8)"
        set &access:&cmd_addr %l (0x80b0c80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0c80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S7_RAMP_START                            = " "0 (LPG8_RAMP_DIS),1 (LPG8_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   S6_RAMP_START                            = " "0 (LPG7_RAMP_DIS),1 (LPG7_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   S5_RAMP_START                            = " "0 (LPG6_RAMP_DIS),1 (LPG6_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   S4_RAMP_START                            = " "0 (LPG5_RAMP_DIS),1 (LPG5_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   S3_RAMP_START                            = " "0 (LPG4_RAMP_DIS),1 (LPG4_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   S2_RAMP_START                            = " "0 (LPG3_RAMP_DIS),1 (LPG3_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   S1_RAMP_START                            = " "0 (LPG2_RAMP_DIS),1 (LPG2_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   S0_RAMP_START                            = " "0 (LPG1_RAMP_DIS),1 (LPG1_RAMP_START)"
    tree.end
    tree "LPG_LUT_SEC_ACCESS"
      sgroup "LPG_LUT_SEC_ACCESS (at 0x1b0d0)"
        set &access:&cmd_addr %l (0x80b0d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_LUT_PERPH_RESET_CTL2"
      sgroup "LPG_LUT_PERPH_RESET_CTL2 (at 0x1b0d9)"
        set &access:&cmd_addr %l (0x80b0d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_LUT_PERPH_RESET_CTL3"
      sgroup "LPG_LUT_PERPH_RESET_CTL3 (at 0x1b0da)"
        set &access:&cmd_addr %l (0x80b0da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_LUT_PERPH_RESET_CTL4"
      sgroup "LPG_LUT_PERPH_RESET_CTL4 (at 0x1b0db)"
        set &access:&cmd_addr %l (0x80b0db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "LVS1"
  tree "LVS1"
    tree "LVS1_REVISION1"
      sgroup "LVS1_REVISION1 (at 0x18000)"
        set &access:&cmd_addr %l (0x8080000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LVS1_REVISION2"
      sgroup "LVS1_REVISION2 (at 0x18001)"
        set &access:&cmd_addr %l (0x8080010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LVS1_REVISION3"
      sgroup "LVS1_REVISION3 (at 0x18002)"
        set &access:&cmd_addr %l (0x8080020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LVS1_REVISION4"
      sgroup "LVS1_REVISION4 (at 0x18003)"
        set &access:&cmd_addr %l (0x8080030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LVS1_PERPH_TYPE"
      sgroup "LVS1_PERPH_TYPE (at 0x18004)"
        set &access:&cmd_addr %l (0x8080040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LVS1_PERPH_SUBTYPE"
      sgroup "LVS1_PERPH_SUBTYPE (at 0x18005)"
        set &access:&cmd_addr %l (0x8080050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LVS1_STATUS1"
      sgroup "LVS1_STATUS1 (at 0x18008)"
        set &access:&cmd_addr %l (0x8080080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (VS_NOT_OK),1 (VS_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OVERCURRENT                              = " "0 (NO_OC_EVENT),1 (OC_EVENT_OCCURRED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (LPM),1 (NPM)"
    tree.end
    tree "LVS1_INT_RT_STS"
      sgroup "LVS1_INT_RT_STS (at 0x18010)"
        set &access:&cmd_addr %l (0x8080100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_RT_STS                       = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "LVS1_INT_SET_TYPE"
      sgroup "LVS1_INT_SET_TYPE (at 0x18011)"
        set &access:&cmd_addr %l (0x8080110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_TYPE                         = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LVS1_INT_POLARITY_HIGH"
      sgroup "LVS1_INT_POLARITY_HIGH (at 0x18012)"
        set &access:&cmd_addr %l (0x8080120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_HIGH                         = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LVS1_INT_POLARITY_LOW"
      sgroup "LVS1_INT_POLARITY_LOW (at 0x18013)"
        set &access:&cmd_addr %l (0x8080130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_LOW                          = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LVS1_INT_LATCHED_CLR"
      sgroup "LVS1_INT_LATCHED_CLR (at 0x18014)"
        set &access:&cmd_addr %l (0x8080140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LVS1_INT_EN_SET"
      sgroup "LVS1_INT_EN_SET (at 0x18015)"
        set &access:&cmd_addr %l (0x8080150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LVS1_INT_EN_CLR"
      sgroup "LVS1_INT_EN_CLR (at 0x18016)"
        set &access:&cmd_addr %l (0x8080160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LVS1_INT_LATCHED_STS"
      sgroup "LVS1_INT_LATCHED_STS (at 0x18018)"
        set &access:&cmd_addr %l (0x8080180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LVS1_INT_PENDING_STS"
      sgroup "LVS1_INT_PENDING_STS (at 0x18019)"
        set &access:&cmd_addr %l (0x8080190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LVS1_INT_MID_SEL"
      sgroup "LVS1_INT_MID_SEL (at 0x1801a)"
        set &access:&cmd_addr %l (0x80801a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x801a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LVS1_INT_PRIORITY"
      sgroup "LVS1_INT_PRIORITY (at 0x1801b)"
        set &access:&cmd_addr %l (0x80801b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x801b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "LVS1_MODE_CTL1"
      sgroup "LVS1_MODE_CTL1 (at 0x18045)"
        set &access:&cmd_addr %l (0x8080450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (NO_FORCE),1 (FORCE_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO                                     = " "0 (NO_AUTO),1 (AUTO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (NO_FOLLOW),1 (FOLLOW_SLEEP_B)"
    tree.end
    tree "LVS1_EN_CTL1"
      sgroup "LVS1_EN_CTL1 (at 0x18046)"
        set &access:&cmd_addr %l (0x8080460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (NO_FORCE),1 (FORCE_ON)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HWEN3                             = " "0 (NO_FOLLOW),1 (FOLLOW_HWEN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HWEN2                             = " "0 (NO_FOLLOW),1 (FOLLOW_HWEN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HWEN1                             = " "0 (NO_FOLLOW),1 (FOLLOW_HWEN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HWEN0                             = " "0 (NO_FOLLOW),1 (FOLLOW_HWEN)"
    tree.end
    tree "LVS1_PD_CTL"
      sgroup "LVS1_PD_CTL (at 0x18048)"
        set &access:&cmd_addr %l (0x8080480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PD_DISABLED),1 (PD_ENABLED)"
    tree.end
    tree "LVS1_CURRENT_LIM_CTL"
      sgroup "LVS1_CURRENT_LIM_CTL (at 0x1804a)"
        set &access:&cmd_addr %l (0x80804a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x804a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OCP_OVERRIDE                             = " "0 (DISABLE_ON_OCP),1 (STAY_ENABLED_ON_OCP)"
    tree.end
    tree "LVS1_SOFT_START_CTL"
      sgroup "LVS1_SOFT_START_CTL (at 0x1804c)"
        set &access:&cmd_addr %l (0x80804c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x804c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START_EN                            = " "0 (SOFTSTART_ENABLED),1 (SOFTSTART_DISABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SOFT_START_SEL                           = " "0 (SS_PD_50NA),1 (SS_PD_250NA),2 (SS_PD_550NA),3 (SS_PD_750NA)"
    tree.end
    tree "LVS1_SEC_ACCESS"
      sgroup "LVS1_SEC_ACCESS (at 0x180d0)"
        set &access:&cmd_addr %l (0x8080d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LVS1_PERPH_RESET_CTL1"
      sgroup "LVS1_PERPH_RESET_CTL1 (at 0x180d8)"
        set &access:&cmd_addr %l (0x8080d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "LVS1_PERPH_RESET_CTL2"
      sgroup "LVS1_PERPH_RESET_CTL2 (at 0x180d9)"
        set &access:&cmd_addr %l (0x8080d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "LVS1_PERPH_RESET_CTL3"
      sgroup "LVS1_PERPH_RESET_CTL3 (at 0x180da)"
        set &access:&cmd_addr %l (0x8080da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "LVS1_PERPH_RESET_CTL4"
      sgroup "LVS1_PERPH_RESET_CTL4 (at 0x180db)"
        set &access:&cmd_addr %l (0x8080db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LVS1_INT_TEST1"
      sgroup "LVS1_INT_TEST1 (at 0x180e0)"
        set &access:&cmd_addr %l (0x8080e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LVS1_INT_TEST_VAL"
      sgroup "LVS1_INT_TEST_VAL (at 0x180e1)"
        set &access:&cmd_addr %l (0x8080e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERCURRENT_TEST_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LVS1_TEST1"
      sgroup "LVS1_TEST1 (at 0x180e2)"
        set &access:&cmd_addr %l (0x8080e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK_TM                               = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ATEST_SEL                                = " "0 (DISABLE_RDS_ON_TEST),1 (ENABLE_RDS_ON_TEST)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DTEST_SEL                                = " "0 (DTEST_DISABLED),1 (DTEST_VOUT_OK),2 (DTEST_OCP),3 (RESERVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OCP_TM                                   = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "LVS1_TRIM_NUM"
      sgroup "LVS1_TRIM_NUM (at 0x180f0)"
        set &access:&cmd_addr %l (0x8080f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LVS1_TRIM1"
      sgroup "LVS1_TRIM1 (at 0x180f1)"
        set &access:&cmd_addr %l (0x8080f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   OTA_TRIM                                 = "
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   OCP_TRIM                                 = " "0 (MINUS_10PCT),1 (MINUS_20PCT),2 (MINUS_30PCT),3 (MINUS_40PCT),4 (PLUS_30PCT),5 (PLUS_20PCT),6 (PLUS_10PCT),7 (NOMINAL_450MA)"
    tree.end
  tree.end
tree.end
tree "MBG1"
  tree "MBG1"
    tree "MBG1_REVISION1"
      sgroup "MBG1_REVISION1 (at 0x2c00)"
        set &access:&cmd_addr %l (0x802c000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MBG1_REVISION2"
      sgroup "MBG1_REVISION2 (at 0x2c01)"
        set &access:&cmd_addr %l (0x802c010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MBG1_REVISION3"
      sgroup "MBG1_REVISION3 (at 0x2c02)"
        set &access:&cmd_addr %l (0x802c020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MBG1_REVISION4"
      sgroup "MBG1_REVISION4 (at 0x2c03)"
        set &access:&cmd_addr %l (0x802c030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MBG1_PERPH_TYPE"
      sgroup "MBG1_PERPH_TYPE (at 0x2c04)"
        set &access:&cmd_addr %l (0x802c040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MBG1_PERPH_SUBTYPE"
      sgroup "MBG1_PERPH_SUBTYPE (at 0x2c05)"
        set &access:&cmd_addr %l (0x802c050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MBG1_STATUS1"
      sgroup "MBG1_STATUS1 (at 0x2c08)"
        set &access:&cmd_addr %l (0x802c080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MBG_OK                                   = " "0 (MBG_NOT_OK),1 (MBG_OK)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (MBG_LPM),1 (MBG_NPM)"
    tree.end
    tree "MBG1_MODE_CTRL"
      sgroup "MBG1_MODE_CTRL (at 0x2c44)"
        set &access:&cmd_addr %l (0x802c440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FORCE_NPM                                = " "0 (NO_FORCE_LPM),1 (FORCE_NPM)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NPM_FOLLOW_SLEEPB                        = " "0 (NO_FOLLOW),1 (FOLLOW_SLEEP_B)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FORCE_FASTVBG                            = " "0 (NORMAL_MODE),1 (FORCE_FAST_VBG)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FORCE_MBGCC_EN                           = " "0 (CC_DISABLED),1 (CC_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FORCE_IPTAT_EN                           = " "0 (NO_FORCE_IPTAT),1 (FORCE_IPTAT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FORCE_IREF_EN                            = " "0 (NO_FORCE_IREF),1 (FORCE_IREF)"
    tree.end
    tree "MBG1_EN_CTL"
      sgroup "MBG1_EN_CTL (at 0x2c46)"
        set &access:&cmd_addr %l (0x802c460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MBG_EN                                   = " "0 (MBG_DISABLED),1 (MBG_ENABLED)"
    tree.end
    tree "MBG1_SEC_ACCESS"
      sgroup "MBG1_SEC_ACCESS (at 0x2cd0)"
        set &access:&cmd_addr %l (0x802cd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MBG1_PERPH_RESET_CTL1"
      sgroup "MBG1_PERPH_RESET_CTL1 (at 0x2cd8)"
        set &access:&cmd_addr %l (0x802cd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MBG1_PERPH_RESET_CTL2"
      sgroup "MBG1_PERPH_RESET_CTL2 (at 0x2cd9)"
        set &access:&cmd_addr %l (0x802cd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "MBG1_PERPH_RESET_CTL3"
      sgroup "MBG1_PERPH_RESET_CTL3 (at 0x2cda)"
        set &access:&cmd_addr %l (0x802cda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "MBG1_PERPH_RESET_CTL4"
      sgroup "MBG1_PERPH_RESET_CTL4 (at 0x2cdb)"
        set &access:&cmd_addr %l (0x802cdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "MBG1_TEST1"
      sgroup "MBG1_TEST1 (at 0x2ce2)"
        set &access:&cmd_addr %l (0x802ce20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2ce20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   ATEST1                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST2                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "MBG1_TEST2"
      sgroup "MBG1_TEST2 (at 0x2ce3)"
        set &access:&cmd_addr %l (0x802ce30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2ce30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DIS_BUFFS                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DISCON_CAPS                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OB_FAST_TRIM_MODE_EN                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MBG_CC_RES_TRIM                          = " "0, 1, 2, 3"
    tree.end
    tree "MBG1_TRIM_NUM"
      sgroup "MBG1_TRIM_NUM (at 0x2cf0)"
        set &access:&cmd_addr %l (0x802cf00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "MBG1_MBG_TRIM1"
      sgroup "MBG1_MBG_TRIM1 (at 0x2cf1)"
        set &access:&cmd_addr %l (0x802cf10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VBG0_TRIM                                = "
    tree.end
    tree "MBG1_MBG_TRIM2"
      sgroup "MBG1_MBG_TRIM2 (at 0x2cf2)"
        set &access:&cmd_addr %l (0x802cf20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   ISLEEP_TRIM                              = "
    tree.end
    tree "MBG1_MBG_TRIM3"
      sgroup "MBG1_MBG_TRIM3 (at 0x2cf3)"
        set &access:&cmd_addr %l (0x802cf30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   IPTAT_TRIM                               = "
    tree.end
    tree "MBG1_MBG_TRIM4"
      sgroup "MBG1_MBG_TRIM4 (at 0x2cf4)"
        set &access:&cmd_addr %l (0x802cf40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   MBG_CC_TRIM                              = "
    tree.end
    tree "MBG1_MBG_TRIM5"
      sgroup "MBG1_MBG_TRIM5 (at 0x2cf5)"
        set &access:&cmd_addr %l (0x802cf50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   IREF_TRIM                                = "
    tree.end
    tree "MBG1_MBG_TRIM6"
      sgroup "MBG1_MBG_TRIM6 (at 0x2cf6)"
        set &access:&cmd_addr %l (0x802cf60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   VBG1P25_TRIM                             = "
    tree.end
    tree "MBG1_MBG_TRIM7"
      sgroup "MBG1_MBG_TRIM7 (at 0x2cf7)"
        set &access:&cmd_addr %l (0x802cf70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VBG0P625_TRIM                            = "
    tree.end
    tree "MBG1_MBG_TRIM8"
      sgroup "MBG1_MBG_TRIM8 (at 0x2cf8)"
        set &access:&cmd_addr %l (0x802cf80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VBG0P3125_TRIM                           = "
    tree.end
  tree.end
tree.end
tree "MISC"
  tree "MISC"
    tree "MISC_REVISION1"
      sgroup "MISC_REVISION1 (at 0x900)"
        set &access:&cmd_addr %l (0x8009000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MISC_REVISION2"
      sgroup "MISC_REVISION2 (at 0x901)"
        set &access:&cmd_addr %l (0x8009010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MISC_REVISION3"
      sgroup "MISC_REVISION3 (at 0x902)"
        set &access:&cmd_addr %l (0x8009020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MISC_REVISION4"
      sgroup "MISC_REVISION4 (at 0x903)"
        set &access:&cmd_addr %l (0x8009030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MISC_PERPH_TYPE"
      sgroup "MISC_PERPH_TYPE (at 0x904)"
        set &access:&cmd_addr %l (0x8009040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MISC_PERPH_SUBTYPE"
      sgroup "MISC_PERPH_SUBTYPE (at 0x905)"
        set &access:&cmd_addr %l (0x8009050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MISC_STATUS1"
      sgroup "MISC_STATUS1 (at 0x908)"
        set &access:&cmd_addr %l (0x8009080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   USB_HOST_DETECTED                        = " "0 (NO_USB_HOST_DETECTED),1 (USB_HOST_DETECTED)"
    tree.end
    tree "MISC_INT_RT_STS"
      sgroup "MISC_INT_RT_STS (at 0x910)"
        set &access:&cmd_addr %l (0x8009100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBID_INT_STS                            = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MISC_INT_SET_TYPE"
      sgroup "MISC_INT_SET_TYPE (at 0x911)"
        set &access:&cmd_addr %l (0x8009110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBID_INT_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MISC_INT_POLARITY_HIGH"
      sgroup "MISC_INT_POLARITY_HIGH (at 0x912)"
        set &access:&cmd_addr %l (0x8009120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBID_INT_POLARITY_HIGH                  = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MISC_INT_POLARITY_LOW"
      sgroup "MISC_INT_POLARITY_LOW (at 0x913)"
        set &access:&cmd_addr %l (0x8009130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBID_INT_POLARITY_LOW                   = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MISC_INT_LATCHED_CLR"
      sgroup "MISC_INT_LATCHED_CLR (at 0x914)"
        set &access:&cmd_addr %l (0x8009140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBID_INT_CLR                            = " "0, 1"
    tree.end
    tree "MISC_INT_EN_SET"
      sgroup "MISC_INT_EN_SET (at 0x915)"
        set &access:&cmd_addr %l (0x8009150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBID_INT_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MISC_INT_EN_CLR"
      sgroup "MISC_INT_EN_CLR (at 0x916)"
        set &access:&cmd_addr %l (0x8009160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBID_INT_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MISC_INT_LATCHED_STS"
      sgroup "MISC_INT_LATCHED_STS (at 0x918)"
        set &access:&cmd_addr %l (0x8009180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBID_INT_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MISC_INT_PENDING_STS"
      sgroup "MISC_INT_PENDING_STS (at 0x919)"
        set &access:&cmd_addr %l (0x8009190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBID_INT_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MISC_INT_MID_SEL"
      sgroup "MISC_INT_MID_SEL (at 0x91a)"
        set &access:&cmd_addr %l (0x80091a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x91a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MISC_INT_PRIORITY"
      sgroup "MISC_INT_PRIORITY (at 0x91b)"
        set &access:&cmd_addr %l (0x80091b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x91b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MISC_TEST_CONNECT"
      sgroup "MISC_TEST_CONNECT (at 0x940)"
        set &access:&cmd_addr %l (0x8009400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ATEST_CONNECT                            = " "0 (ATEST_CON_DISABLED),1 (ATEST_CON_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST_CONNECT_1                          = " "0 (DTEST_CON1_DISABLED),1 (DTEST_CON1_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST_CONNECT_0                          = " "0 (DTEST_CON0_DISABLED),1 (DTEST_CON0_ENABLED)"
    tree.end
    tree "MISC_XVDD_DVDD_SRC_CTL"
      sgroup "MISC_XVDD_DVDD_SRC_CTL (at 0x942)"
        set &access:&cmd_addr %l (0x8009420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   XVDD_DVDD_SRC_CTRL                       = " "0 (reserved),1 (USE_LDO),2 (DO_NOT_USE_LDO),3 (reserved)"
    tree.end
    tree "MISC_LED_IZTC_CTL"
      sgroup "MISC_LED_IZTC_CTL (at 0x943)"
        set &access:&cmd_addr %l (0x8009430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_ATEST_LED_IZTC                        = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "MISC_MISC_OPTIONS"
      sgroup "MISC_MISC_OPTIONS (at 0x944)"
        set &access:&cmd_addr %l (0x8009440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RIM_EN                                   = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "MISC_BUCK_CMN_CTL1"
      sgroup "MISC_BUCK_CMN_CTL1 (at 0x945)"
        set &access:&cmd_addr %l (0x8009450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BYPASS_IBG_DLY                           = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
    tree.end
    tree "MISC_USB_ID_CTL1"
      sgroup "MISC_USB_ID_CTL1 (at 0x946)"
        set &access:&cmd_addr %l (0x8009460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   USB_ID_PU_EN                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USB_ID_LVDET_EN                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   USB_ID_IIDPU_EN                          = " "0, 1"
    tree.end
    tree "MISC_S5_DF_CTL"
      sgroup "MISC_S5_DF_CTL (at 0x947)"
        set &access:&cmd_addr %l (0x8009470|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9470|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S5_FORCE_RESET                           = " "0 (S5_USABLE),1 (S5_DEFEATURED)"
    tree.end
    tree "MISC_SEC_ACCESS"
      sgroup "MISC_SEC_ACCESS (at 0x9d0)"
        set &access:&cmd_addr %l (0x8009d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MISC_PERPH_RESET_CTL2"
      sgroup "MISC_PERPH_RESET_CTL2 (at 0x9d9)"
        set &access:&cmd_addr %l (0x8009d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "MISC_PERPH_RESET_CTL3"
      sgroup "MISC_PERPH_RESET_CTL3 (at 0x9da)"
        set &access:&cmd_addr %l (0x8009da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "MISC_PERPH_RESET_CTL4"
      sgroup "MISC_PERPH_RESET_CTL4 (at 0x9db)"
        set &access:&cmd_addr %l (0x8009db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "MISC_INT_TEST1"
      sgroup "MISC_INT_TEST1 (at 0x9dc)"
        set &access:&cmd_addr %l (0x8009dc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9dc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "MISC_INT_TEST_VAL"
      sgroup "MISC_INT_TEST_VAL (at 0x9de)"
        set &access:&cmd_addr %l (0x8009de0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9de0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USB_ID_TEST_VAL                          = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "MISC_TEST_ACCESS"
      sgroup "MISC_TEST_ACCESS (at 0x9e0)"
        set &access:&cmd_addr %l (0x8009e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TEST_ACCESS_EN                           = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "MISC_TRIM_NUM"
      sgroup "MISC_TRIM_NUM (at 0x9f0)"
        set &access:&cmd_addr %l (0x8009f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "MISC_IZTC_TRIM"
      sgroup "MISC_IZTC_TRIM (at 0x9f1)"
        set &access:&cmd_addr %l (0x8009f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IZTC_TRIM                                = "
    tree.end
  tree.end
tree.end
tree "MPP1"
  tree "MPP1"
    tree "MPP1_REVISION1"
      sgroup "MPP1_REVISION1 (at 0xa000)"
        set &access:&cmd_addr %l (0x80a0000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP1_REVISION2"
      sgroup "MPP1_REVISION2 (at 0xa001)"
        set &access:&cmd_addr %l (0x80a0010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP1_REVISION3"
      sgroup "MPP1_REVISION3 (at 0xa002)"
        set &access:&cmd_addr %l (0x80a0020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP1_REVISION4"
      sgroup "MPP1_REVISION4 (at 0xa003)"
        set &access:&cmd_addr %l (0x80a0030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP1_PERPH_TYPE"
      sgroup "MPP1_PERPH_TYPE (at 0xa004)"
        set &access:&cmd_addr %l (0x80a0040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP1_PERPH_SUBTYPE"
      sgroup "MPP1_PERPH_SUBTYPE (at 0xa005)"
        set &access:&cmd_addr %l (0x80a0050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP1_STATUS1"
      sgroup "MPP1_STATUS1 (at 0xa008)"
        set &access:&cmd_addr %l (0x80a0080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP1_INT_RT_STS"
      sgroup "MPP1_INT_RT_STS (at 0xa010)"
        set &access:&cmd_addr %l (0x80a0100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP1_INT_SET_TYPE"
      sgroup "MPP1_INT_SET_TYPE (at 0xa011)"
        set &access:&cmd_addr %l (0x80a0110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP1_INT_POLARITY_HIGH"
      sgroup "MPP1_INT_POLARITY_HIGH (at 0xa012)"
        set &access:&cmd_addr %l (0x80a0120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP1_INT_POLARITY_LOW"
      sgroup "MPP1_INT_POLARITY_LOW (at 0xa013)"
        set &access:&cmd_addr %l (0x80a0130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP1_INT_LATCHED_CLR"
      sgroup "MPP1_INT_LATCHED_CLR (at 0xa014)"
        set &access:&cmd_addr %l (0x80a0140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP1_INT_EN_SET"
      sgroup "MPP1_INT_EN_SET (at 0xa015)"
        set &access:&cmd_addr %l (0x80a0150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP1_INT_EN_CLR"
      sgroup "MPP1_INT_EN_CLR (at 0xa016)"
        set &access:&cmd_addr %l (0x80a0160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP1_INT_LATCHED_STS"
      sgroup "MPP1_INT_LATCHED_STS (at 0xa018)"
        set &access:&cmd_addr %l (0x80a0180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP1_INT_PENDING_STS"
      sgroup "MPP1_INT_PENDING_STS (at 0xa019)"
        set &access:&cmd_addr %l (0x80a0190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP1_INT_MID_SEL"
      sgroup "MPP1_INT_MID_SEL (at 0xa01a)"
        set &access:&cmd_addr %l (0x80a01a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa01a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP1_INT_PRIORITY"
      sgroup "MPP1_INT_PRIORITY (at 0xa01b)"
        set &access:&cmd_addr %l (0x80a01b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa01b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP1_MODE_CTL"
      sgroup "MPP1_MODE_CTL (at 0xa040)"
        set &access:&cmd_addr %l (0x80a0400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP1_DIG_VIN_CTL"
      sgroup "MPP1_DIG_VIN_CTL (at 0xa041)"
        set &access:&cmd_addr %l (0x80a0410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP1_DIG_PULL_CTL"
      sgroup "MPP1_DIG_PULL_CTL (at 0xa042)"
        set &access:&cmd_addr %l (0x80a0420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP1_DIG_IN_CTL"
      sgroup "MPP1_DIG_IN_CTL (at 0xa043)"
        set &access:&cmd_addr %l (0x80a0430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP1_EN_CTL"
      sgroup "MPP1_EN_CTL (at 0xa046)"
        set &access:&cmd_addr %l (0x80a0460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP1_ANA_OUT_CTL"
      sgroup "MPP1_ANA_OUT_CTL (at 0xa048)"
        set &access:&cmd_addr %l (0x80a0480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP1_ANA_IN_CTL"
      sgroup "MPP1_ANA_IN_CTL (at 0xa04a)"
        set &access:&cmd_addr %l (0x80a04a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa04a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP1_SINK_CTL"
      sgroup "MPP1_SINK_CTL (at 0xa04c)"
        set &access:&cmd_addr %l (0x80a04c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa04c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP1_SEC_ACCESS"
      sgroup "MPP1_SEC_ACCESS (at 0xa0d0)"
        set &access:&cmd_addr %l (0x80a0d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP1_PERPH_RESET_CTL1"
      sgroup "MPP1_PERPH_RESET_CTL1 (at 0xa0d8)"
        set &access:&cmd_addr %l (0x80a0d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP1_PERPH_RESET_CTL2"
      sgroup "MPP1_PERPH_RESET_CTL2 (at 0xa0d9)"
        set &access:&cmd_addr %l (0x80a0d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP1_PERPH_RESET_CTL3"
      sgroup "MPP1_PERPH_RESET_CTL3 (at 0xa0da)"
        set &access:&cmd_addr %l (0x80a0da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP1_PERPH_RESET_CTL4"
      sgroup "MPP1_PERPH_RESET_CTL4 (at 0xa0db)"
        set &access:&cmd_addr %l (0x80a0db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP2"
  tree "MPP2"
    tree "MPP2_REVISION1"
      sgroup "MPP2_REVISION1 (at 0xa100)"
        set &access:&cmd_addr %l (0x80a1000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP2_REVISION2"
      sgroup "MPP2_REVISION2 (at 0xa101)"
        set &access:&cmd_addr %l (0x80a1010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP2_REVISION3"
      sgroup "MPP2_REVISION3 (at 0xa102)"
        set &access:&cmd_addr %l (0x80a1020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP2_REVISION4"
      sgroup "MPP2_REVISION4 (at 0xa103)"
        set &access:&cmd_addr %l (0x80a1030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP2_PERPH_TYPE"
      sgroup "MPP2_PERPH_TYPE (at 0xa104)"
        set &access:&cmd_addr %l (0x80a1040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP2_PERPH_SUBTYPE"
      sgroup "MPP2_PERPH_SUBTYPE (at 0xa105)"
        set &access:&cmd_addr %l (0x80a1050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP2_STATUS1"
      sgroup "MPP2_STATUS1 (at 0xa108)"
        set &access:&cmd_addr %l (0x80a1080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP2_INT_RT_STS"
      sgroup "MPP2_INT_RT_STS (at 0xa110)"
        set &access:&cmd_addr %l (0x80a1100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP2_INT_SET_TYPE"
      sgroup "MPP2_INT_SET_TYPE (at 0xa111)"
        set &access:&cmd_addr %l (0x80a1110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP2_INT_POLARITY_HIGH"
      sgroup "MPP2_INT_POLARITY_HIGH (at 0xa112)"
        set &access:&cmd_addr %l (0x80a1120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP2_INT_POLARITY_LOW"
      sgroup "MPP2_INT_POLARITY_LOW (at 0xa113)"
        set &access:&cmd_addr %l (0x80a1130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP2_INT_LATCHED_CLR"
      sgroup "MPP2_INT_LATCHED_CLR (at 0xa114)"
        set &access:&cmd_addr %l (0x80a1140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP2_INT_EN_SET"
      sgroup "MPP2_INT_EN_SET (at 0xa115)"
        set &access:&cmd_addr %l (0x80a1150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP2_INT_EN_CLR"
      sgroup "MPP2_INT_EN_CLR (at 0xa116)"
        set &access:&cmd_addr %l (0x80a1160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP2_INT_LATCHED_STS"
      sgroup "MPP2_INT_LATCHED_STS (at 0xa118)"
        set &access:&cmd_addr %l (0x80a1180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP2_INT_PENDING_STS"
      sgroup "MPP2_INT_PENDING_STS (at 0xa119)"
        set &access:&cmd_addr %l (0x80a1190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP2_INT_MID_SEL"
      sgroup "MPP2_INT_MID_SEL (at 0xa11a)"
        set &access:&cmd_addr %l (0x80a11a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa11a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP2_INT_PRIORITY"
      sgroup "MPP2_INT_PRIORITY (at 0xa11b)"
        set &access:&cmd_addr %l (0x80a11b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa11b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP2_MODE_CTL"
      sgroup "MPP2_MODE_CTL (at 0xa140)"
        set &access:&cmd_addr %l (0x80a1400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP2_DIG_VIN_CTL"
      sgroup "MPP2_DIG_VIN_CTL (at 0xa141)"
        set &access:&cmd_addr %l (0x80a1410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP2_DIG_PULL_CTL"
      sgroup "MPP2_DIG_PULL_CTL (at 0xa142)"
        set &access:&cmd_addr %l (0x80a1420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP2_DIG_IN_CTL"
      sgroup "MPP2_DIG_IN_CTL (at 0xa143)"
        set &access:&cmd_addr %l (0x80a1430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP2_EN_CTL"
      sgroup "MPP2_EN_CTL (at 0xa146)"
        set &access:&cmd_addr %l (0x80a1460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP2_ANA_OUT_CTL"
      sgroup "MPP2_ANA_OUT_CTL (at 0xa148)"
        set &access:&cmd_addr %l (0x80a1480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP2_ANA_IN_CTL"
      sgroup "MPP2_ANA_IN_CTL (at 0xa14a)"
        set &access:&cmd_addr %l (0x80a14a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa14a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP2_SINK_CTL"
      sgroup "MPP2_SINK_CTL (at 0xa14c)"
        set &access:&cmd_addr %l (0x80a14c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa14c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP2_SEC_ACCESS"
      sgroup "MPP2_SEC_ACCESS (at 0xa1d0)"
        set &access:&cmd_addr %l (0x80a1d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP2_PERPH_RESET_CTL1"
      sgroup "MPP2_PERPH_RESET_CTL1 (at 0xa1d8)"
        set &access:&cmd_addr %l (0x80a1d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP2_PERPH_RESET_CTL2"
      sgroup "MPP2_PERPH_RESET_CTL2 (at 0xa1d9)"
        set &access:&cmd_addr %l (0x80a1d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP2_PERPH_RESET_CTL3"
      sgroup "MPP2_PERPH_RESET_CTL3 (at 0xa1da)"
        set &access:&cmd_addr %l (0x80a1da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP2_PERPH_RESET_CTL4"
      sgroup "MPP2_PERPH_RESET_CTL4 (at 0xa1db)"
        set &access:&cmd_addr %l (0x80a1db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP3"
  tree "MPP3"
    tree "MPP3_REVISION1"
      sgroup "MPP3_REVISION1 (at 0xa200)"
        set &access:&cmd_addr %l (0x80a2000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP3_REVISION2"
      sgroup "MPP3_REVISION2 (at 0xa201)"
        set &access:&cmd_addr %l (0x80a2010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP3_REVISION3"
      sgroup "MPP3_REVISION3 (at 0xa202)"
        set &access:&cmd_addr %l (0x80a2020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP3_REVISION4"
      sgroup "MPP3_REVISION4 (at 0xa203)"
        set &access:&cmd_addr %l (0x80a2030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP3_PERPH_TYPE"
      sgroup "MPP3_PERPH_TYPE (at 0xa204)"
        set &access:&cmd_addr %l (0x80a2040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP3_PERPH_SUBTYPE"
      sgroup "MPP3_PERPH_SUBTYPE (at 0xa205)"
        set &access:&cmd_addr %l (0x80a2050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP3_STATUS1"
      sgroup "MPP3_STATUS1 (at 0xa208)"
        set &access:&cmd_addr %l (0x80a2080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP3_INT_RT_STS"
      sgroup "MPP3_INT_RT_STS (at 0xa210)"
        set &access:&cmd_addr %l (0x80a2100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP3_INT_SET_TYPE"
      sgroup "MPP3_INT_SET_TYPE (at 0xa211)"
        set &access:&cmd_addr %l (0x80a2110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP3_INT_POLARITY_HIGH"
      sgroup "MPP3_INT_POLARITY_HIGH (at 0xa212)"
        set &access:&cmd_addr %l (0x80a2120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP3_INT_POLARITY_LOW"
      sgroup "MPP3_INT_POLARITY_LOW (at 0xa213)"
        set &access:&cmd_addr %l (0x80a2130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP3_INT_LATCHED_CLR"
      sgroup "MPP3_INT_LATCHED_CLR (at 0xa214)"
        set &access:&cmd_addr %l (0x80a2140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP3_INT_EN_SET"
      sgroup "MPP3_INT_EN_SET (at 0xa215)"
        set &access:&cmd_addr %l (0x80a2150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP3_INT_EN_CLR"
      sgroup "MPP3_INT_EN_CLR (at 0xa216)"
        set &access:&cmd_addr %l (0x80a2160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP3_INT_LATCHED_STS"
      sgroup "MPP3_INT_LATCHED_STS (at 0xa218)"
        set &access:&cmd_addr %l (0x80a2180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP3_INT_PENDING_STS"
      sgroup "MPP3_INT_PENDING_STS (at 0xa219)"
        set &access:&cmd_addr %l (0x80a2190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP3_INT_MID_SEL"
      sgroup "MPP3_INT_MID_SEL (at 0xa21a)"
        set &access:&cmd_addr %l (0x80a21a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa21a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP3_INT_PRIORITY"
      sgroup "MPP3_INT_PRIORITY (at 0xa21b)"
        set &access:&cmd_addr %l (0x80a21b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa21b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP3_MODE_CTL"
      sgroup "MPP3_MODE_CTL (at 0xa240)"
        set &access:&cmd_addr %l (0x80a2400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP3_DIG_VIN_CTL"
      sgroup "MPP3_DIG_VIN_CTL (at 0xa241)"
        set &access:&cmd_addr %l (0x80a2410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP3_DIG_PULL_CTL"
      sgroup "MPP3_DIG_PULL_CTL (at 0xa242)"
        set &access:&cmd_addr %l (0x80a2420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP3_DIG_IN_CTL"
      sgroup "MPP3_DIG_IN_CTL (at 0xa243)"
        set &access:&cmd_addr %l (0x80a2430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP3_EN_CTL"
      sgroup "MPP3_EN_CTL (at 0xa246)"
        set &access:&cmd_addr %l (0x80a2460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP3_ANA_OUT_CTL"
      sgroup "MPP3_ANA_OUT_CTL (at 0xa248)"
        set &access:&cmd_addr %l (0x80a2480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP3_ANA_IN_CTL"
      sgroup "MPP3_ANA_IN_CTL (at 0xa24a)"
        set &access:&cmd_addr %l (0x80a24a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa24a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP3_SINK_CTL"
      sgroup "MPP3_SINK_CTL (at 0xa24c)"
        set &access:&cmd_addr %l (0x80a24c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa24c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP3_SEC_ACCESS"
      sgroup "MPP3_SEC_ACCESS (at 0xa2d0)"
        set &access:&cmd_addr %l (0x80a2d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP3_PERPH_RESET_CTL1"
      sgroup "MPP3_PERPH_RESET_CTL1 (at 0xa2d8)"
        set &access:&cmd_addr %l (0x80a2d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP3_PERPH_RESET_CTL2"
      sgroup "MPP3_PERPH_RESET_CTL2 (at 0xa2d9)"
        set &access:&cmd_addr %l (0x80a2d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP3_PERPH_RESET_CTL3"
      sgroup "MPP3_PERPH_RESET_CTL3 (at 0xa2da)"
        set &access:&cmd_addr %l (0x80a2da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP3_PERPH_RESET_CTL4"
      sgroup "MPP3_PERPH_RESET_CTL4 (at 0xa2db)"
        set &access:&cmd_addr %l (0x80a2db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP4"
  tree "MPP4"
    tree "MPP4_REVISION1"
      sgroup "MPP4_REVISION1 (at 0xa300)"
        set &access:&cmd_addr %l (0x80a3000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP4_REVISION2"
      sgroup "MPP4_REVISION2 (at 0xa301)"
        set &access:&cmd_addr %l (0x80a3010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP4_REVISION3"
      sgroup "MPP4_REVISION3 (at 0xa302)"
        set &access:&cmd_addr %l (0x80a3020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP4_REVISION4"
      sgroup "MPP4_REVISION4 (at 0xa303)"
        set &access:&cmd_addr %l (0x80a3030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP4_PERPH_TYPE"
      sgroup "MPP4_PERPH_TYPE (at 0xa304)"
        set &access:&cmd_addr %l (0x80a3040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP4_PERPH_SUBTYPE"
      sgroup "MPP4_PERPH_SUBTYPE (at 0xa305)"
        set &access:&cmd_addr %l (0x80a3050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP4_STATUS1"
      sgroup "MPP4_STATUS1 (at 0xa308)"
        set &access:&cmd_addr %l (0x80a3080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP4_INT_RT_STS"
      sgroup "MPP4_INT_RT_STS (at 0xa310)"
        set &access:&cmd_addr %l (0x80a3100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP4_INT_SET_TYPE"
      sgroup "MPP4_INT_SET_TYPE (at 0xa311)"
        set &access:&cmd_addr %l (0x80a3110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP4_INT_POLARITY_HIGH"
      sgroup "MPP4_INT_POLARITY_HIGH (at 0xa312)"
        set &access:&cmd_addr %l (0x80a3120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP4_INT_POLARITY_LOW"
      sgroup "MPP4_INT_POLARITY_LOW (at 0xa313)"
        set &access:&cmd_addr %l (0x80a3130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP4_INT_LATCHED_CLR"
      sgroup "MPP4_INT_LATCHED_CLR (at 0xa314)"
        set &access:&cmd_addr %l (0x80a3140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP4_INT_EN_SET"
      sgroup "MPP4_INT_EN_SET (at 0xa315)"
        set &access:&cmd_addr %l (0x80a3150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP4_INT_EN_CLR"
      sgroup "MPP4_INT_EN_CLR (at 0xa316)"
        set &access:&cmd_addr %l (0x80a3160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP4_INT_LATCHED_STS"
      sgroup "MPP4_INT_LATCHED_STS (at 0xa318)"
        set &access:&cmd_addr %l (0x80a3180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP4_INT_PENDING_STS"
      sgroup "MPP4_INT_PENDING_STS (at 0xa319)"
        set &access:&cmd_addr %l (0x80a3190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP4_INT_MID_SEL"
      sgroup "MPP4_INT_MID_SEL (at 0xa31a)"
        set &access:&cmd_addr %l (0x80a31a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa31a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP4_INT_PRIORITY"
      sgroup "MPP4_INT_PRIORITY (at 0xa31b)"
        set &access:&cmd_addr %l (0x80a31b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa31b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP4_MODE_CTL"
      sgroup "MPP4_MODE_CTL (at 0xa340)"
        set &access:&cmd_addr %l (0x80a3400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP4_DIG_VIN_CTL"
      sgroup "MPP4_DIG_VIN_CTL (at 0xa341)"
        set &access:&cmd_addr %l (0x80a3410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP4_DIG_PULL_CTL"
      sgroup "MPP4_DIG_PULL_CTL (at 0xa342)"
        set &access:&cmd_addr %l (0x80a3420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP4_DIG_IN_CTL"
      sgroup "MPP4_DIG_IN_CTL (at 0xa343)"
        set &access:&cmd_addr %l (0x80a3430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP4_EN_CTL"
      sgroup "MPP4_EN_CTL (at 0xa346)"
        set &access:&cmd_addr %l (0x80a3460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP4_ANA_OUT_CTL"
      sgroup "MPP4_ANA_OUT_CTL (at 0xa348)"
        set &access:&cmd_addr %l (0x80a3480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP4_ANA_IN_CTL"
      sgroup "MPP4_ANA_IN_CTL (at 0xa34a)"
        set &access:&cmd_addr %l (0x80a34a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa34a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP4_SINK_CTL"
      sgroup "MPP4_SINK_CTL (at 0xa34c)"
        set &access:&cmd_addr %l (0x80a34c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa34c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP4_SEC_ACCESS"
      sgroup "MPP4_SEC_ACCESS (at 0xa3d0)"
        set &access:&cmd_addr %l (0x80a3d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP4_PERPH_RESET_CTL1"
      sgroup "MPP4_PERPH_RESET_CTL1 (at 0xa3d8)"
        set &access:&cmd_addr %l (0x80a3d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP4_PERPH_RESET_CTL2"
      sgroup "MPP4_PERPH_RESET_CTL2 (at 0xa3d9)"
        set &access:&cmd_addr %l (0x80a3d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP4_PERPH_RESET_CTL3"
      sgroup "MPP4_PERPH_RESET_CTL3 (at 0xa3da)"
        set &access:&cmd_addr %l (0x80a3da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP4_PERPH_RESET_CTL4"
      sgroup "MPP4_PERPH_RESET_CTL4 (at 0xa3db)"
        set &access:&cmd_addr %l (0x80a3db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP5"
  tree "MPP5"
    tree "MPP5_REVISION1"
      sgroup "MPP5_REVISION1 (at 0xa400)"
        set &access:&cmd_addr %l (0x80a4000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP5_REVISION2"
      sgroup "MPP5_REVISION2 (at 0xa401)"
        set &access:&cmd_addr %l (0x80a4010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP5_REVISION3"
      sgroup "MPP5_REVISION3 (at 0xa402)"
        set &access:&cmd_addr %l (0x80a4020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP5_REVISION4"
      sgroup "MPP5_REVISION4 (at 0xa403)"
        set &access:&cmd_addr %l (0x80a4030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP5_PERPH_TYPE"
      sgroup "MPP5_PERPH_TYPE (at 0xa404)"
        set &access:&cmd_addr %l (0x80a4040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP5_PERPH_SUBTYPE"
      sgroup "MPP5_PERPH_SUBTYPE (at 0xa405)"
        set &access:&cmd_addr %l (0x80a4050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP5_STATUS1"
      sgroup "MPP5_STATUS1 (at 0xa408)"
        set &access:&cmd_addr %l (0x80a4080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP5_INT_RT_STS"
      sgroup "MPP5_INT_RT_STS (at 0xa410)"
        set &access:&cmd_addr %l (0x80a4100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP5_INT_SET_TYPE"
      sgroup "MPP5_INT_SET_TYPE (at 0xa411)"
        set &access:&cmd_addr %l (0x80a4110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP5_INT_POLARITY_HIGH"
      sgroup "MPP5_INT_POLARITY_HIGH (at 0xa412)"
        set &access:&cmd_addr %l (0x80a4120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP5_INT_POLARITY_LOW"
      sgroup "MPP5_INT_POLARITY_LOW (at 0xa413)"
        set &access:&cmd_addr %l (0x80a4130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP5_INT_LATCHED_CLR"
      sgroup "MPP5_INT_LATCHED_CLR (at 0xa414)"
        set &access:&cmd_addr %l (0x80a4140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP5_INT_EN_SET"
      sgroup "MPP5_INT_EN_SET (at 0xa415)"
        set &access:&cmd_addr %l (0x80a4150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP5_INT_EN_CLR"
      sgroup "MPP5_INT_EN_CLR (at 0xa416)"
        set &access:&cmd_addr %l (0x80a4160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP5_INT_LATCHED_STS"
      sgroup "MPP5_INT_LATCHED_STS (at 0xa418)"
        set &access:&cmd_addr %l (0x80a4180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP5_INT_PENDING_STS"
      sgroup "MPP5_INT_PENDING_STS (at 0xa419)"
        set &access:&cmd_addr %l (0x80a4190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP5_INT_MID_SEL"
      sgroup "MPP5_INT_MID_SEL (at 0xa41a)"
        set &access:&cmd_addr %l (0x80a41a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa41a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP5_INT_PRIORITY"
      sgroup "MPP5_INT_PRIORITY (at 0xa41b)"
        set &access:&cmd_addr %l (0x80a41b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa41b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP5_MODE_CTL"
      sgroup "MPP5_MODE_CTL (at 0xa440)"
        set &access:&cmd_addr %l (0x80a4400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP5_DIG_VIN_CTL"
      sgroup "MPP5_DIG_VIN_CTL (at 0xa441)"
        set &access:&cmd_addr %l (0x80a4410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP5_DIG_PULL_CTL"
      sgroup "MPP5_DIG_PULL_CTL (at 0xa442)"
        set &access:&cmd_addr %l (0x80a4420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP5_DIG_IN_CTL"
      sgroup "MPP5_DIG_IN_CTL (at 0xa443)"
        set &access:&cmd_addr %l (0x80a4430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP5_EN_CTL"
      sgroup "MPP5_EN_CTL (at 0xa446)"
        set &access:&cmd_addr %l (0x80a4460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP5_ANA_OUT_CTL"
      sgroup "MPP5_ANA_OUT_CTL (at 0xa448)"
        set &access:&cmd_addr %l (0x80a4480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP5_ANA_IN_CTL"
      sgroup "MPP5_ANA_IN_CTL (at 0xa44a)"
        set &access:&cmd_addr %l (0x80a44a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa44a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP5_SINK_CTL"
      sgroup "MPP5_SINK_CTL (at 0xa44c)"
        set &access:&cmd_addr %l (0x80a44c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa44c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP5_SEC_ACCESS"
      sgroup "MPP5_SEC_ACCESS (at 0xa4d0)"
        set &access:&cmd_addr %l (0x80a4d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP5_PERPH_RESET_CTL1"
      sgroup "MPP5_PERPH_RESET_CTL1 (at 0xa4d8)"
        set &access:&cmd_addr %l (0x80a4d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP5_PERPH_RESET_CTL2"
      sgroup "MPP5_PERPH_RESET_CTL2 (at 0xa4d9)"
        set &access:&cmd_addr %l (0x80a4d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP5_PERPH_RESET_CTL3"
      sgroup "MPP5_PERPH_RESET_CTL3 (at 0xa4da)"
        set &access:&cmd_addr %l (0x80a4da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP5_PERPH_RESET_CTL4"
      sgroup "MPP5_PERPH_RESET_CTL4 (at 0xa4db)"
        set &access:&cmd_addr %l (0x80a4db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa4db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP6"
  tree "MPP6"
    tree "MPP6_REVISION1"
      sgroup "MPP6_REVISION1 (at 0xa500)"
        set &access:&cmd_addr %l (0x80a5000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP6_REVISION2"
      sgroup "MPP6_REVISION2 (at 0xa501)"
        set &access:&cmd_addr %l (0x80a5010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP6_REVISION3"
      sgroup "MPP6_REVISION3 (at 0xa502)"
        set &access:&cmd_addr %l (0x80a5020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP6_REVISION4"
      sgroup "MPP6_REVISION4 (at 0xa503)"
        set &access:&cmd_addr %l (0x80a5030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP6_PERPH_TYPE"
      sgroup "MPP6_PERPH_TYPE (at 0xa504)"
        set &access:&cmd_addr %l (0x80a5040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP6_PERPH_SUBTYPE"
      sgroup "MPP6_PERPH_SUBTYPE (at 0xa505)"
        set &access:&cmd_addr %l (0x80a5050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP6_STATUS1"
      sgroup "MPP6_STATUS1 (at 0xa508)"
        set &access:&cmd_addr %l (0x80a5080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP6_INT_RT_STS"
      sgroup "MPP6_INT_RT_STS (at 0xa510)"
        set &access:&cmd_addr %l (0x80a5100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP6_INT_SET_TYPE"
      sgroup "MPP6_INT_SET_TYPE (at 0xa511)"
        set &access:&cmd_addr %l (0x80a5110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP6_INT_POLARITY_HIGH"
      sgroup "MPP6_INT_POLARITY_HIGH (at 0xa512)"
        set &access:&cmd_addr %l (0x80a5120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP6_INT_POLARITY_LOW"
      sgroup "MPP6_INT_POLARITY_LOW (at 0xa513)"
        set &access:&cmd_addr %l (0x80a5130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP6_INT_LATCHED_CLR"
      sgroup "MPP6_INT_LATCHED_CLR (at 0xa514)"
        set &access:&cmd_addr %l (0x80a5140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP6_INT_EN_SET"
      sgroup "MPP6_INT_EN_SET (at 0xa515)"
        set &access:&cmd_addr %l (0x80a5150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP6_INT_EN_CLR"
      sgroup "MPP6_INT_EN_CLR (at 0xa516)"
        set &access:&cmd_addr %l (0x80a5160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP6_INT_LATCHED_STS"
      sgroup "MPP6_INT_LATCHED_STS (at 0xa518)"
        set &access:&cmd_addr %l (0x80a5180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP6_INT_PENDING_STS"
      sgroup "MPP6_INT_PENDING_STS (at 0xa519)"
        set &access:&cmd_addr %l (0x80a5190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP6_INT_MID_SEL"
      sgroup "MPP6_INT_MID_SEL (at 0xa51a)"
        set &access:&cmd_addr %l (0x80a51a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa51a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP6_INT_PRIORITY"
      sgroup "MPP6_INT_PRIORITY (at 0xa51b)"
        set &access:&cmd_addr %l (0x80a51b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa51b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP6_MODE_CTL"
      sgroup "MPP6_MODE_CTL (at 0xa540)"
        set &access:&cmd_addr %l (0x80a5400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP6_DIG_VIN_CTL"
      sgroup "MPP6_DIG_VIN_CTL (at 0xa541)"
        set &access:&cmd_addr %l (0x80a5410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP6_DIG_PULL_CTL"
      sgroup "MPP6_DIG_PULL_CTL (at 0xa542)"
        set &access:&cmd_addr %l (0x80a5420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP6_DIG_IN_CTL"
      sgroup "MPP6_DIG_IN_CTL (at 0xa543)"
        set &access:&cmd_addr %l (0x80a5430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP6_EN_CTL"
      sgroup "MPP6_EN_CTL (at 0xa546)"
        set &access:&cmd_addr %l (0x80a5460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP6_ANA_OUT_CTL"
      sgroup "MPP6_ANA_OUT_CTL (at 0xa548)"
        set &access:&cmd_addr %l (0x80a5480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP6_ANA_IN_CTL"
      sgroup "MPP6_ANA_IN_CTL (at 0xa54a)"
        set &access:&cmd_addr %l (0x80a54a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa54a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP6_SINK_CTL"
      sgroup "MPP6_SINK_CTL (at 0xa54c)"
        set &access:&cmd_addr %l (0x80a54c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa54c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP6_SEC_ACCESS"
      sgroup "MPP6_SEC_ACCESS (at 0xa5d0)"
        set &access:&cmd_addr %l (0x80a5d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP6_PERPH_RESET_CTL1"
      sgroup "MPP6_PERPH_RESET_CTL1 (at 0xa5d8)"
        set &access:&cmd_addr %l (0x80a5d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP6_PERPH_RESET_CTL2"
      sgroup "MPP6_PERPH_RESET_CTL2 (at 0xa5d9)"
        set &access:&cmd_addr %l (0x80a5d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP6_PERPH_RESET_CTL3"
      sgroup "MPP6_PERPH_RESET_CTL3 (at 0xa5da)"
        set &access:&cmd_addr %l (0x80a5da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP6_PERPH_RESET_CTL4"
      sgroup "MPP6_PERPH_RESET_CTL4 (at 0xa5db)"
        set &access:&cmd_addr %l (0x80a5db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa5db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP7"
  tree "MPP7"
    tree "MPP7_REVISION1"
      sgroup "MPP7_REVISION1 (at 0xa600)"
        set &access:&cmd_addr %l (0x80a6000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP7_REVISION2"
      sgroup "MPP7_REVISION2 (at 0xa601)"
        set &access:&cmd_addr %l (0x80a6010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP7_REVISION3"
      sgroup "MPP7_REVISION3 (at 0xa602)"
        set &access:&cmd_addr %l (0x80a6020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP7_REVISION4"
      sgroup "MPP7_REVISION4 (at 0xa603)"
        set &access:&cmd_addr %l (0x80a6030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP7_PERPH_TYPE"
      sgroup "MPP7_PERPH_TYPE (at 0xa604)"
        set &access:&cmd_addr %l (0x80a6040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP7_PERPH_SUBTYPE"
      sgroup "MPP7_PERPH_SUBTYPE (at 0xa605)"
        set &access:&cmd_addr %l (0x80a6050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP7_STATUS1"
      sgroup "MPP7_STATUS1 (at 0xa608)"
        set &access:&cmd_addr %l (0x80a6080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP7_INT_RT_STS"
      sgroup "MPP7_INT_RT_STS (at 0xa610)"
        set &access:&cmd_addr %l (0x80a6100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP7_INT_SET_TYPE"
      sgroup "MPP7_INT_SET_TYPE (at 0xa611)"
        set &access:&cmd_addr %l (0x80a6110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP7_INT_POLARITY_HIGH"
      sgroup "MPP7_INT_POLARITY_HIGH (at 0xa612)"
        set &access:&cmd_addr %l (0x80a6120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP7_INT_POLARITY_LOW"
      sgroup "MPP7_INT_POLARITY_LOW (at 0xa613)"
        set &access:&cmd_addr %l (0x80a6130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP7_INT_LATCHED_CLR"
      sgroup "MPP7_INT_LATCHED_CLR (at 0xa614)"
        set &access:&cmd_addr %l (0x80a6140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP7_INT_EN_SET"
      sgroup "MPP7_INT_EN_SET (at 0xa615)"
        set &access:&cmd_addr %l (0x80a6150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP7_INT_EN_CLR"
      sgroup "MPP7_INT_EN_CLR (at 0xa616)"
        set &access:&cmd_addr %l (0x80a6160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP7_INT_LATCHED_STS"
      sgroup "MPP7_INT_LATCHED_STS (at 0xa618)"
        set &access:&cmd_addr %l (0x80a6180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP7_INT_PENDING_STS"
      sgroup "MPP7_INT_PENDING_STS (at 0xa619)"
        set &access:&cmd_addr %l (0x80a6190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP7_INT_MID_SEL"
      sgroup "MPP7_INT_MID_SEL (at 0xa61a)"
        set &access:&cmd_addr %l (0x80a61a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa61a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP7_INT_PRIORITY"
      sgroup "MPP7_INT_PRIORITY (at 0xa61b)"
        set &access:&cmd_addr %l (0x80a61b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa61b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP7_MODE_CTL"
      sgroup "MPP7_MODE_CTL (at 0xa640)"
        set &access:&cmd_addr %l (0x80a6400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP7_DIG_VIN_CTL"
      sgroup "MPP7_DIG_VIN_CTL (at 0xa641)"
        set &access:&cmd_addr %l (0x80a6410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP7_DIG_PULL_CTL"
      sgroup "MPP7_DIG_PULL_CTL (at 0xa642)"
        set &access:&cmd_addr %l (0x80a6420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP7_DIG_IN_CTL"
      sgroup "MPP7_DIG_IN_CTL (at 0xa643)"
        set &access:&cmd_addr %l (0x80a6430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP7_EN_CTL"
      sgroup "MPP7_EN_CTL (at 0xa646)"
        set &access:&cmd_addr %l (0x80a6460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP7_ANA_OUT_CTL"
      sgroup "MPP7_ANA_OUT_CTL (at 0xa648)"
        set &access:&cmd_addr %l (0x80a6480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP7_ANA_IN_CTL"
      sgroup "MPP7_ANA_IN_CTL (at 0xa64a)"
        set &access:&cmd_addr %l (0x80a64a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa64a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP7_SINK_CTL"
      sgroup "MPP7_SINK_CTL (at 0xa64c)"
        set &access:&cmd_addr %l (0x80a64c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa64c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP7_SEC_ACCESS"
      sgroup "MPP7_SEC_ACCESS (at 0xa6d0)"
        set &access:&cmd_addr %l (0x80a6d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP7_PERPH_RESET_CTL1"
      sgroup "MPP7_PERPH_RESET_CTL1 (at 0xa6d8)"
        set &access:&cmd_addr %l (0x80a6d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP7_PERPH_RESET_CTL2"
      sgroup "MPP7_PERPH_RESET_CTL2 (at 0xa6d9)"
        set &access:&cmd_addr %l (0x80a6d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP7_PERPH_RESET_CTL3"
      sgroup "MPP7_PERPH_RESET_CTL3 (at 0xa6da)"
        set &access:&cmd_addr %l (0x80a6da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP7_PERPH_RESET_CTL4"
      sgroup "MPP7_PERPH_RESET_CTL4 (at 0xa6db)"
        set &access:&cmd_addr %l (0x80a6db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa6db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP8"
  tree "MPP8"
    tree "MPP8_REVISION1"
      sgroup "MPP8_REVISION1 (at 0xa700)"
        set &access:&cmd_addr %l (0x80a7000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP8_REVISION2"
      sgroup "MPP8_REVISION2 (at 0xa701)"
        set &access:&cmd_addr %l (0x80a7010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP8_REVISION3"
      sgroup "MPP8_REVISION3 (at 0xa702)"
        set &access:&cmd_addr %l (0x80a7020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP8_REVISION4"
      sgroup "MPP8_REVISION4 (at 0xa703)"
        set &access:&cmd_addr %l (0x80a7030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP8_PERPH_TYPE"
      sgroup "MPP8_PERPH_TYPE (at 0xa704)"
        set &access:&cmd_addr %l (0x80a7040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP8_PERPH_SUBTYPE"
      sgroup "MPP8_PERPH_SUBTYPE (at 0xa705)"
        set &access:&cmd_addr %l (0x80a7050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP8_STATUS1"
      sgroup "MPP8_STATUS1 (at 0xa708)"
        set &access:&cmd_addr %l (0x80a7080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP8_INT_RT_STS"
      sgroup "MPP8_INT_RT_STS (at 0xa710)"
        set &access:&cmd_addr %l (0x80a7100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP8_INT_SET_TYPE"
      sgroup "MPP8_INT_SET_TYPE (at 0xa711)"
        set &access:&cmd_addr %l (0x80a7110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP8_INT_POLARITY_HIGH"
      sgroup "MPP8_INT_POLARITY_HIGH (at 0xa712)"
        set &access:&cmd_addr %l (0x80a7120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP8_INT_POLARITY_LOW"
      sgroup "MPP8_INT_POLARITY_LOW (at 0xa713)"
        set &access:&cmd_addr %l (0x80a7130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP8_INT_LATCHED_CLR"
      sgroup "MPP8_INT_LATCHED_CLR (at 0xa714)"
        set &access:&cmd_addr %l (0x80a7140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP8_INT_EN_SET"
      sgroup "MPP8_INT_EN_SET (at 0xa715)"
        set &access:&cmd_addr %l (0x80a7150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP8_INT_EN_CLR"
      sgroup "MPP8_INT_EN_CLR (at 0xa716)"
        set &access:&cmd_addr %l (0x80a7160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP8_INT_LATCHED_STS"
      sgroup "MPP8_INT_LATCHED_STS (at 0xa718)"
        set &access:&cmd_addr %l (0x80a7180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP8_INT_PENDING_STS"
      sgroup "MPP8_INT_PENDING_STS (at 0xa719)"
        set &access:&cmd_addr %l (0x80a7190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP8_INT_MID_SEL"
      sgroup "MPP8_INT_MID_SEL (at 0xa71a)"
        set &access:&cmd_addr %l (0x80a71a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa71a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP8_INT_PRIORITY"
      sgroup "MPP8_INT_PRIORITY (at 0xa71b)"
        set &access:&cmd_addr %l (0x80a71b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa71b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP8_MODE_CTL"
      sgroup "MPP8_MODE_CTL (at 0xa740)"
        set &access:&cmd_addr %l (0x80a7400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP8_DIG_VIN_CTL"
      sgroup "MPP8_DIG_VIN_CTL (at 0xa741)"
        set &access:&cmd_addr %l (0x80a7410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP8_DIG_PULL_CTL"
      sgroup "MPP8_DIG_PULL_CTL (at 0xa742)"
        set &access:&cmd_addr %l (0x80a7420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP8_DIG_IN_CTL"
      sgroup "MPP8_DIG_IN_CTL (at 0xa743)"
        set &access:&cmd_addr %l (0x80a7430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP8_EN_CTL"
      sgroup "MPP8_EN_CTL (at 0xa746)"
        set &access:&cmd_addr %l (0x80a7460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP8_ANA_OUT_CTL"
      sgroup "MPP8_ANA_OUT_CTL (at 0xa748)"
        set &access:&cmd_addr %l (0x80a7480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP8_ANA_IN_CTL"
      sgroup "MPP8_ANA_IN_CTL (at 0xa74a)"
        set &access:&cmd_addr %l (0x80a74a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa74a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP8_SINK_CTL"
      sgroup "MPP8_SINK_CTL (at 0xa74c)"
        set &access:&cmd_addr %l (0x80a74c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa74c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP8_SEC_ACCESS"
      sgroup "MPP8_SEC_ACCESS (at 0xa7d0)"
        set &access:&cmd_addr %l (0x80a7d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP8_PERPH_RESET_CTL1"
      sgroup "MPP8_PERPH_RESET_CTL1 (at 0xa7d8)"
        set &access:&cmd_addr %l (0x80a7d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP8_PERPH_RESET_CTL2"
      sgroup "MPP8_PERPH_RESET_CTL2 (at 0xa7d9)"
        set &access:&cmd_addr %l (0x80a7d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP8_PERPH_RESET_CTL3"
      sgroup "MPP8_PERPH_RESET_CTL3 (at 0xa7da)"
        set &access:&cmd_addr %l (0x80a7da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP8_PERPH_RESET_CTL4"
      sgroup "MPP8_PERPH_RESET_CTL4 (at 0xa7db)"
        set &access:&cmd_addr %l (0x80a7db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa7db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT0"
  tree "PBS_CLIENT0"
    tree "PBS_CLIENT0_REVISION1"
      sgroup "PBS_CLIENT0_REVISION1 (at 0x7100)"
        set &access:&cmd_addr %l (0x8071000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT0_REVISION2"
      sgroup "PBS_CLIENT0_REVISION2 (at 0x7101)"
        set &access:&cmd_addr %l (0x8071010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT0_REVISION3"
      sgroup "PBS_CLIENT0_REVISION3 (at 0x7102)"
        set &access:&cmd_addr %l (0x8071020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT0_REVISION4"
      sgroup "PBS_CLIENT0_REVISION4 (at 0x7103)"
        set &access:&cmd_addr %l (0x8071030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT0_PERPH_TYPE"
      sgroup "PBS_CLIENT0_PERPH_TYPE (at 0x7104)"
        set &access:&cmd_addr %l (0x8071040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT0_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT0_PERPH_SUBTYPE (at 0x7105)"
        set &access:&cmd_addr %l (0x8071050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT0_STATUS0"
      sgroup "PBS_CLIENT0_STATUS0 (at 0x7108)"
        set &access:&cmd_addr %l (0x8071080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_STATUS1"
      sgroup "PBS_CLIENT0_STATUS1 (at 0x7109)"
        set &access:&cmd_addr %l (0x8071090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT0_INT_RT_STS"
      sgroup "PBS_CLIENT0_INT_RT_STS (at 0x7110)"
        set &access:&cmd_addr %l (0x8071100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT0_INT_SET_TYPE"
      sgroup "PBS_CLIENT0_INT_SET_TYPE (at 0x7111)"
        set &access:&cmd_addr %l (0x8071110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT0_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT0_INT_POLARITY_HIGH (at 0x7112)"
        set &access:&cmd_addr %l (0x8071120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT0_INT_POLARITY_LOW (at 0x7113)"
        set &access:&cmd_addr %l (0x8071130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT0_INT_LATCHED_CLR (at 0x7114)"
        set &access:&cmd_addr %l (0x8071140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT0_INT_EN_SET"
      sgroup "PBS_CLIENT0_INT_EN_SET (at 0x7115)"
        set &access:&cmd_addr %l (0x8071150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_EN_CLR"
      sgroup "PBS_CLIENT0_INT_EN_CLR (at 0x7116)"
        set &access:&cmd_addr %l (0x8071160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_LATCHED_STS"
      sgroup "PBS_CLIENT0_INT_LATCHED_STS (at 0x7118)"
        set &access:&cmd_addr %l (0x8071180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT0_INT_PENDING_STS"
      sgroup "PBS_CLIENT0_INT_PENDING_STS (at 0x7119)"
        set &access:&cmd_addr %l (0x8071190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT0_INT_MID_SEL"
      sgroup "PBS_CLIENT0_INT_MID_SEL (at 0x711a)"
        set &access:&cmd_addr %l (0x80711a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x711a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT0_INT_PRIORITY"
      sgroup "PBS_CLIENT0_INT_PRIORITY (at 0x711b)"
        set &access:&cmd_addr %l (0x80711b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x711b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT0_TRIG_CFG"
      sgroup "PBS_CLIENT0_TRIG_CFG (at 0x7140)"
        set &access:&cmd_addr %l (0x8071400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT0_TRIG_CTL"
      sgroup "PBS_CLIENT0_TRIG_CTL (at 0x7142)"
        set &access:&cmd_addr %l (0x8071420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT0_EN_CTL"
      sgroup "PBS_CLIENT0_EN_CTL (at 0x7146)"
        set &access:&cmd_addr %l (0x8071460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_SEC_ACCESS"
      sgroup "PBS_CLIENT0_SEC_ACCESS (at 0x71d0)"
        set &access:&cmd_addr %l (0x8071d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT0_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT0_PERPH_RESET_CTL1 (at 0x71d8)"
        set &access:&cmd_addr %l (0x8071d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT0_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT0_PERPH_RESET_CTL2 (at 0x71d9)"
        set &access:&cmd_addr %l (0x8071d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT0_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT0_PERPH_RESET_CTL3 (at 0x71da)"
        set &access:&cmd_addr %l (0x8071da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT0_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT0_PERPH_RESET_CTL4 (at 0x71db)"
        set &access:&cmd_addr %l (0x8071db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT0_INT_TEST1"
      sgroup "PBS_CLIENT0_INT_TEST1 (at 0x71e0)"
        set &access:&cmd_addr %l (0x8071e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_TEST_VAL"
      sgroup "PBS_CLIENT0_INT_TEST_VAL (at 0x71e1)"
        set &access:&cmd_addr %l (0x8071e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT1"
  tree "PBS_CLIENT1"
    tree "PBS_CLIENT1_REVISION1"
      sgroup "PBS_CLIENT1_REVISION1 (at 0x7200)"
        set &access:&cmd_addr %l (0x8072000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT1_REVISION2"
      sgroup "PBS_CLIENT1_REVISION2 (at 0x7201)"
        set &access:&cmd_addr %l (0x8072010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT1_REVISION3"
      sgroup "PBS_CLIENT1_REVISION3 (at 0x7202)"
        set &access:&cmd_addr %l (0x8072020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT1_REVISION4"
      sgroup "PBS_CLIENT1_REVISION4 (at 0x7203)"
        set &access:&cmd_addr %l (0x8072030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT1_PERPH_TYPE"
      sgroup "PBS_CLIENT1_PERPH_TYPE (at 0x7204)"
        set &access:&cmd_addr %l (0x8072040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT1_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT1_PERPH_SUBTYPE (at 0x7205)"
        set &access:&cmd_addr %l (0x8072050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT1_STATUS0"
      sgroup "PBS_CLIENT1_STATUS0 (at 0x7208)"
        set &access:&cmd_addr %l (0x8072080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_STATUS1"
      sgroup "PBS_CLIENT1_STATUS1 (at 0x7209)"
        set &access:&cmd_addr %l (0x8072090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT1_INT_RT_STS"
      sgroup "PBS_CLIENT1_INT_RT_STS (at 0x7210)"
        set &access:&cmd_addr %l (0x8072100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT1_INT_SET_TYPE"
      sgroup "PBS_CLIENT1_INT_SET_TYPE (at 0x7211)"
        set &access:&cmd_addr %l (0x8072110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT1_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT1_INT_POLARITY_HIGH (at 0x7212)"
        set &access:&cmd_addr %l (0x8072120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT1_INT_POLARITY_LOW (at 0x7213)"
        set &access:&cmd_addr %l (0x8072130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT1_INT_LATCHED_CLR (at 0x7214)"
        set &access:&cmd_addr %l (0x8072140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT1_INT_EN_SET"
      sgroup "PBS_CLIENT1_INT_EN_SET (at 0x7215)"
        set &access:&cmd_addr %l (0x8072150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_EN_CLR"
      sgroup "PBS_CLIENT1_INT_EN_CLR (at 0x7216)"
        set &access:&cmd_addr %l (0x8072160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_LATCHED_STS"
      sgroup "PBS_CLIENT1_INT_LATCHED_STS (at 0x7218)"
        set &access:&cmd_addr %l (0x8072180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT1_INT_PENDING_STS"
      sgroup "PBS_CLIENT1_INT_PENDING_STS (at 0x7219)"
        set &access:&cmd_addr %l (0x8072190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT1_INT_MID_SEL"
      sgroup "PBS_CLIENT1_INT_MID_SEL (at 0x721a)"
        set &access:&cmd_addr %l (0x80721a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x721a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT1_INT_PRIORITY"
      sgroup "PBS_CLIENT1_INT_PRIORITY (at 0x721b)"
        set &access:&cmd_addr %l (0x80721b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x721b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT1_TRIG_CFG"
      sgroup "PBS_CLIENT1_TRIG_CFG (at 0x7240)"
        set &access:&cmd_addr %l (0x8072400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT1_TRIG_CTL"
      sgroup "PBS_CLIENT1_TRIG_CTL (at 0x7242)"
        set &access:&cmd_addr %l (0x8072420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT1_EN_CTL"
      sgroup "PBS_CLIENT1_EN_CTL (at 0x7246)"
        set &access:&cmd_addr %l (0x8072460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_SEC_ACCESS"
      sgroup "PBS_CLIENT1_SEC_ACCESS (at 0x72d0)"
        set &access:&cmd_addr %l (0x8072d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT1_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT1_PERPH_RESET_CTL1 (at 0x72d8)"
        set &access:&cmd_addr %l (0x8072d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT1_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT1_PERPH_RESET_CTL2 (at 0x72d9)"
        set &access:&cmd_addr %l (0x8072d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT1_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT1_PERPH_RESET_CTL3 (at 0x72da)"
        set &access:&cmd_addr %l (0x8072da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT1_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT1_PERPH_RESET_CTL4 (at 0x72db)"
        set &access:&cmd_addr %l (0x8072db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT1_INT_TEST1"
      sgroup "PBS_CLIENT1_INT_TEST1 (at 0x72e0)"
        set &access:&cmd_addr %l (0x8072e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_TEST_VAL"
      sgroup "PBS_CLIENT1_INT_TEST_VAL (at 0x72e1)"
        set &access:&cmd_addr %l (0x8072e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT10"
  tree "PBS_CLIENT10"
    tree "PBS_CLIENT10_REVISION1"
      sgroup "PBS_CLIENT10_REVISION1 (at 0x7b00)"
        set &access:&cmd_addr %l (0x807b000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT10_REVISION2"
      sgroup "PBS_CLIENT10_REVISION2 (at 0x7b01)"
        set &access:&cmd_addr %l (0x807b010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT10_REVISION3"
      sgroup "PBS_CLIENT10_REVISION3 (at 0x7b02)"
        set &access:&cmd_addr %l (0x807b020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT10_REVISION4"
      sgroup "PBS_CLIENT10_REVISION4 (at 0x7b03)"
        set &access:&cmd_addr %l (0x807b030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT10_PERPH_TYPE"
      sgroup "PBS_CLIENT10_PERPH_TYPE (at 0x7b04)"
        set &access:&cmd_addr %l (0x807b040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT10_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT10_PERPH_SUBTYPE (at 0x7b05)"
        set &access:&cmd_addr %l (0x807b050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT10_STATUS0"
      sgroup "PBS_CLIENT10_STATUS0 (at 0x7b08)"
        set &access:&cmd_addr %l (0x807b080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_STATUS1"
      sgroup "PBS_CLIENT10_STATUS1 (at 0x7b09)"
        set &access:&cmd_addr %l (0x807b090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT10_INT_RT_STS"
      sgroup "PBS_CLIENT10_INT_RT_STS (at 0x7b10)"
        set &access:&cmd_addr %l (0x807b100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT10_INT_SET_TYPE"
      sgroup "PBS_CLIENT10_INT_SET_TYPE (at 0x7b11)"
        set &access:&cmd_addr %l (0x807b110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT10_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT10_INT_POLARITY_HIGH (at 0x7b12)"
        set &access:&cmd_addr %l (0x807b120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT10_INT_POLARITY_LOW (at 0x7b13)"
        set &access:&cmd_addr %l (0x807b130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT10_INT_LATCHED_CLR (at 0x7b14)"
        set &access:&cmd_addr %l (0x807b140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT10_INT_EN_SET"
      sgroup "PBS_CLIENT10_INT_EN_SET (at 0x7b15)"
        set &access:&cmd_addr %l (0x807b150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_EN_CLR"
      sgroup "PBS_CLIENT10_INT_EN_CLR (at 0x7b16)"
        set &access:&cmd_addr %l (0x807b160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_LATCHED_STS"
      sgroup "PBS_CLIENT10_INT_LATCHED_STS (at 0x7b18)"
        set &access:&cmd_addr %l (0x807b180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT10_INT_PENDING_STS"
      sgroup "PBS_CLIENT10_INT_PENDING_STS (at 0x7b19)"
        set &access:&cmd_addr %l (0x807b190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT10_INT_MID_SEL"
      sgroup "PBS_CLIENT10_INT_MID_SEL (at 0x7b1a)"
        set &access:&cmd_addr %l (0x807b1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT10_INT_PRIORITY"
      sgroup "PBS_CLIENT10_INT_PRIORITY (at 0x7b1b)"
        set &access:&cmd_addr %l (0x807b1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT10_TRIG_CFG"
      sgroup "PBS_CLIENT10_TRIG_CFG (at 0x7b40)"
        set &access:&cmd_addr %l (0x807b400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT10_TRIG_CTL"
      sgroup "PBS_CLIENT10_TRIG_CTL (at 0x7b42)"
        set &access:&cmd_addr %l (0x807b420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT10_EN_CTL"
      sgroup "PBS_CLIENT10_EN_CTL (at 0x7b46)"
        set &access:&cmd_addr %l (0x807b460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_SEC_ACCESS"
      sgroup "PBS_CLIENT10_SEC_ACCESS (at 0x7bd0)"
        set &access:&cmd_addr %l (0x807bd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT10_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT10_PERPH_RESET_CTL1 (at 0x7bd8)"
        set &access:&cmd_addr %l (0x807bd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT10_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT10_PERPH_RESET_CTL2 (at 0x7bd9)"
        set &access:&cmd_addr %l (0x807bd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT10_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT10_PERPH_RESET_CTL3 (at 0x7bda)"
        set &access:&cmd_addr %l (0x807bda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT10_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT10_PERPH_RESET_CTL4 (at 0x7bdb)"
        set &access:&cmd_addr %l (0x807bdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT10_INT_TEST1"
      sgroup "PBS_CLIENT10_INT_TEST1 (at 0x7be0)"
        set &access:&cmd_addr %l (0x807be00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7be00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_TEST_VAL"
      sgroup "PBS_CLIENT10_INT_TEST_VAL (at 0x7be1)"
        set &access:&cmd_addr %l (0x807be10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7be10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT11"
  tree "PBS_CLIENT11"
    tree "PBS_CLIENT11_REVISION1"
      sgroup "PBS_CLIENT11_REVISION1 (at 0x7c00)"
        set &access:&cmd_addr %l (0x807c000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT11_REVISION2"
      sgroup "PBS_CLIENT11_REVISION2 (at 0x7c01)"
        set &access:&cmd_addr %l (0x807c010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT11_REVISION3"
      sgroup "PBS_CLIENT11_REVISION3 (at 0x7c02)"
        set &access:&cmd_addr %l (0x807c020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT11_REVISION4"
      sgroup "PBS_CLIENT11_REVISION4 (at 0x7c03)"
        set &access:&cmd_addr %l (0x807c030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT11_PERPH_TYPE"
      sgroup "PBS_CLIENT11_PERPH_TYPE (at 0x7c04)"
        set &access:&cmd_addr %l (0x807c040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT11_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT11_PERPH_SUBTYPE (at 0x7c05)"
        set &access:&cmd_addr %l (0x807c050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT11_STATUS0"
      sgroup "PBS_CLIENT11_STATUS0 (at 0x7c08)"
        set &access:&cmd_addr %l (0x807c080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_STATUS1"
      sgroup "PBS_CLIENT11_STATUS1 (at 0x7c09)"
        set &access:&cmd_addr %l (0x807c090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT11_INT_RT_STS"
      sgroup "PBS_CLIENT11_INT_RT_STS (at 0x7c10)"
        set &access:&cmd_addr %l (0x807c100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT11_INT_SET_TYPE"
      sgroup "PBS_CLIENT11_INT_SET_TYPE (at 0x7c11)"
        set &access:&cmd_addr %l (0x807c110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT11_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT11_INT_POLARITY_HIGH (at 0x7c12)"
        set &access:&cmd_addr %l (0x807c120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT11_INT_POLARITY_LOW (at 0x7c13)"
        set &access:&cmd_addr %l (0x807c130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT11_INT_LATCHED_CLR (at 0x7c14)"
        set &access:&cmd_addr %l (0x807c140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT11_INT_EN_SET"
      sgroup "PBS_CLIENT11_INT_EN_SET (at 0x7c15)"
        set &access:&cmd_addr %l (0x807c150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_EN_CLR"
      sgroup "PBS_CLIENT11_INT_EN_CLR (at 0x7c16)"
        set &access:&cmd_addr %l (0x807c160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_LATCHED_STS"
      sgroup "PBS_CLIENT11_INT_LATCHED_STS (at 0x7c18)"
        set &access:&cmd_addr %l (0x807c180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT11_INT_PENDING_STS"
      sgroup "PBS_CLIENT11_INT_PENDING_STS (at 0x7c19)"
        set &access:&cmd_addr %l (0x807c190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT11_INT_MID_SEL"
      sgroup "PBS_CLIENT11_INT_MID_SEL (at 0x7c1a)"
        set &access:&cmd_addr %l (0x807c1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT11_INT_PRIORITY"
      sgroup "PBS_CLIENT11_INT_PRIORITY (at 0x7c1b)"
        set &access:&cmd_addr %l (0x807c1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT11_TRIG_CFG"
      sgroup "PBS_CLIENT11_TRIG_CFG (at 0x7c40)"
        set &access:&cmd_addr %l (0x807c400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT11_TRIG_CTL"
      sgroup "PBS_CLIENT11_TRIG_CTL (at 0x7c42)"
        set &access:&cmd_addr %l (0x807c420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT11_EN_CTL"
      sgroup "PBS_CLIENT11_EN_CTL (at 0x7c46)"
        set &access:&cmd_addr %l (0x807c460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_SEC_ACCESS"
      sgroup "PBS_CLIENT11_SEC_ACCESS (at 0x7cd0)"
        set &access:&cmd_addr %l (0x807cd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT11_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT11_PERPH_RESET_CTL1 (at 0x7cd8)"
        set &access:&cmd_addr %l (0x807cd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT11_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT11_PERPH_RESET_CTL2 (at 0x7cd9)"
        set &access:&cmd_addr %l (0x807cd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT11_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT11_PERPH_RESET_CTL3 (at 0x7cda)"
        set &access:&cmd_addr %l (0x807cda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT11_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT11_PERPH_RESET_CTL4 (at 0x7cdb)"
        set &access:&cmd_addr %l (0x807cdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT11_INT_TEST1"
      sgroup "PBS_CLIENT11_INT_TEST1 (at 0x7ce0)"
        set &access:&cmd_addr %l (0x807ce00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ce00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_TEST_VAL"
      sgroup "PBS_CLIENT11_INT_TEST_VAL (at 0x7ce1)"
        set &access:&cmd_addr %l (0x807ce10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ce10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT12"
  tree "PBS_CLIENT12"
    tree "PBS_CLIENT12_REVISION1"
      sgroup "PBS_CLIENT12_REVISION1 (at 0x7d00)"
        set &access:&cmd_addr %l (0x807d000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT12_REVISION2"
      sgroup "PBS_CLIENT12_REVISION2 (at 0x7d01)"
        set &access:&cmd_addr %l (0x807d010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT12_REVISION3"
      sgroup "PBS_CLIENT12_REVISION3 (at 0x7d02)"
        set &access:&cmd_addr %l (0x807d020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT12_REVISION4"
      sgroup "PBS_CLIENT12_REVISION4 (at 0x7d03)"
        set &access:&cmd_addr %l (0x807d030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT12_PERPH_TYPE"
      sgroup "PBS_CLIENT12_PERPH_TYPE (at 0x7d04)"
        set &access:&cmd_addr %l (0x807d040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT12_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT12_PERPH_SUBTYPE (at 0x7d05)"
        set &access:&cmd_addr %l (0x807d050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT12_STATUS0"
      sgroup "PBS_CLIENT12_STATUS0 (at 0x7d08)"
        set &access:&cmd_addr %l (0x807d080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT12_STATUS1"
      sgroup "PBS_CLIENT12_STATUS1 (at 0x7d09)"
        set &access:&cmd_addr %l (0x807d090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT12_INT_RT_STS"
      sgroup "PBS_CLIENT12_INT_RT_STS (at 0x7d10)"
        set &access:&cmd_addr %l (0x807d100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT12_INT_SET_TYPE"
      sgroup "PBS_CLIENT12_INT_SET_TYPE (at 0x7d11)"
        set &access:&cmd_addr %l (0x807d110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT12_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT12_INT_POLARITY_HIGH (at 0x7d12)"
        set &access:&cmd_addr %l (0x807d120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT12_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT12_INT_POLARITY_LOW (at 0x7d13)"
        set &access:&cmd_addr %l (0x807d130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT12_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT12_INT_LATCHED_CLR (at 0x7d14)"
        set &access:&cmd_addr %l (0x807d140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT12_INT_EN_SET"
      sgroup "PBS_CLIENT12_INT_EN_SET (at 0x7d15)"
        set &access:&cmd_addr %l (0x807d150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT12_INT_EN_CLR"
      sgroup "PBS_CLIENT12_INT_EN_CLR (at 0x7d16)"
        set &access:&cmd_addr %l (0x807d160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT12_INT_LATCHED_STS"
      sgroup "PBS_CLIENT12_INT_LATCHED_STS (at 0x7d18)"
        set &access:&cmd_addr %l (0x807d180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT12_INT_PENDING_STS"
      sgroup "PBS_CLIENT12_INT_PENDING_STS (at 0x7d19)"
        set &access:&cmd_addr %l (0x807d190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT12_INT_MID_SEL"
      sgroup "PBS_CLIENT12_INT_MID_SEL (at 0x7d1a)"
        set &access:&cmd_addr %l (0x807d1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT12_INT_PRIORITY"
      sgroup "PBS_CLIENT12_INT_PRIORITY (at 0x7d1b)"
        set &access:&cmd_addr %l (0x807d1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT12_TRIG_CFG"
      sgroup "PBS_CLIENT12_TRIG_CFG (at 0x7d40)"
        set &access:&cmd_addr %l (0x807d400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT12_TRIG_CTL"
      sgroup "PBS_CLIENT12_TRIG_CTL (at 0x7d42)"
        set &access:&cmd_addr %l (0x807d420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT12_EN_CTL"
      sgroup "PBS_CLIENT12_EN_CTL (at 0x7d46)"
        set &access:&cmd_addr %l (0x807d460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7d460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT12_SEC_ACCESS"
      sgroup "PBS_CLIENT12_SEC_ACCESS (at 0x7dd0)"
        set &access:&cmd_addr %l (0x807dd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7dd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT12_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT12_PERPH_RESET_CTL1 (at 0x7dd8)"
        set &access:&cmd_addr %l (0x807dd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7dd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT12_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT12_PERPH_RESET_CTL2 (at 0x7dd9)"
        set &access:&cmd_addr %l (0x807dd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7dd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT12_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT12_PERPH_RESET_CTL3 (at 0x7dda)"
        set &access:&cmd_addr %l (0x807dda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7dda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT12_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT12_PERPH_RESET_CTL4 (at 0x7ddb)"
        set &access:&cmd_addr %l (0x807ddb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ddb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT12_INT_TEST1"
      sgroup "PBS_CLIENT12_INT_TEST1 (at 0x7de0)"
        set &access:&cmd_addr %l (0x807de00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7de00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT12_INT_TEST_VAL"
      sgroup "PBS_CLIENT12_INT_TEST_VAL (at 0x7de1)"
        set &access:&cmd_addr %l (0x807de10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7de10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT13"
  tree "PBS_CLIENT13"
    tree "PBS_CLIENT13_REVISION1"
      sgroup "PBS_CLIENT13_REVISION1 (at 0x7e00)"
        set &access:&cmd_addr %l (0x807e000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT13_REVISION2"
      sgroup "PBS_CLIENT13_REVISION2 (at 0x7e01)"
        set &access:&cmd_addr %l (0x807e010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT13_REVISION3"
      sgroup "PBS_CLIENT13_REVISION3 (at 0x7e02)"
        set &access:&cmd_addr %l (0x807e020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT13_REVISION4"
      sgroup "PBS_CLIENT13_REVISION4 (at 0x7e03)"
        set &access:&cmd_addr %l (0x807e030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT13_PERPH_TYPE"
      sgroup "PBS_CLIENT13_PERPH_TYPE (at 0x7e04)"
        set &access:&cmd_addr %l (0x807e040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT13_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT13_PERPH_SUBTYPE (at 0x7e05)"
        set &access:&cmd_addr %l (0x807e050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT13_STATUS0"
      sgroup "PBS_CLIENT13_STATUS0 (at 0x7e08)"
        set &access:&cmd_addr %l (0x807e080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT13_STATUS1"
      sgroup "PBS_CLIENT13_STATUS1 (at 0x7e09)"
        set &access:&cmd_addr %l (0x807e090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT13_INT_RT_STS"
      sgroup "PBS_CLIENT13_INT_RT_STS (at 0x7e10)"
        set &access:&cmd_addr %l (0x807e100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT13_INT_SET_TYPE"
      sgroup "PBS_CLIENT13_INT_SET_TYPE (at 0x7e11)"
        set &access:&cmd_addr %l (0x807e110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT13_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT13_INT_POLARITY_HIGH (at 0x7e12)"
        set &access:&cmd_addr %l (0x807e120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT13_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT13_INT_POLARITY_LOW (at 0x7e13)"
        set &access:&cmd_addr %l (0x807e130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT13_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT13_INT_LATCHED_CLR (at 0x7e14)"
        set &access:&cmd_addr %l (0x807e140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT13_INT_EN_SET"
      sgroup "PBS_CLIENT13_INT_EN_SET (at 0x7e15)"
        set &access:&cmd_addr %l (0x807e150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT13_INT_EN_CLR"
      sgroup "PBS_CLIENT13_INT_EN_CLR (at 0x7e16)"
        set &access:&cmd_addr %l (0x807e160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT13_INT_LATCHED_STS"
      sgroup "PBS_CLIENT13_INT_LATCHED_STS (at 0x7e18)"
        set &access:&cmd_addr %l (0x807e180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT13_INT_PENDING_STS"
      sgroup "PBS_CLIENT13_INT_PENDING_STS (at 0x7e19)"
        set &access:&cmd_addr %l (0x807e190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT13_INT_MID_SEL"
      sgroup "PBS_CLIENT13_INT_MID_SEL (at 0x7e1a)"
        set &access:&cmd_addr %l (0x807e1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT13_INT_PRIORITY"
      sgroup "PBS_CLIENT13_INT_PRIORITY (at 0x7e1b)"
        set &access:&cmd_addr %l (0x807e1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT13_TRIG_CFG"
      sgroup "PBS_CLIENT13_TRIG_CFG (at 0x7e40)"
        set &access:&cmd_addr %l (0x807e400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT13_TRIG_CTL"
      sgroup "PBS_CLIENT13_TRIG_CTL (at 0x7e42)"
        set &access:&cmd_addr %l (0x807e420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT13_EN_CTL"
      sgroup "PBS_CLIENT13_EN_CTL (at 0x7e46)"
        set &access:&cmd_addr %l (0x807e460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7e460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT13_SEC_ACCESS"
      sgroup "PBS_CLIENT13_SEC_ACCESS (at 0x7ed0)"
        set &access:&cmd_addr %l (0x807ed00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ed00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT13_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT13_PERPH_RESET_CTL1 (at 0x7ed8)"
        set &access:&cmd_addr %l (0x807ed80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ed80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT13_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT13_PERPH_RESET_CTL2 (at 0x7ed9)"
        set &access:&cmd_addr %l (0x807ed90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ed90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT13_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT13_PERPH_RESET_CTL3 (at 0x7eda)"
        set &access:&cmd_addr %l (0x807eda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7eda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT13_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT13_PERPH_RESET_CTL4 (at 0x7edb)"
        set &access:&cmd_addr %l (0x807edb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7edb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT13_INT_TEST1"
      sgroup "PBS_CLIENT13_INT_TEST1 (at 0x7ee0)"
        set &access:&cmd_addr %l (0x807ee00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ee00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT13_INT_TEST_VAL"
      sgroup "PBS_CLIENT13_INT_TEST_VAL (at 0x7ee1)"
        set &access:&cmd_addr %l (0x807ee10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ee10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT14"
  tree "PBS_CLIENT14"
    tree "PBS_CLIENT14_REVISION1"
      sgroup "PBS_CLIENT14_REVISION1 (at 0x7f00)"
        set &access:&cmd_addr %l (0x807f000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT14_REVISION2"
      sgroup "PBS_CLIENT14_REVISION2 (at 0x7f01)"
        set &access:&cmd_addr %l (0x807f010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT14_REVISION3"
      sgroup "PBS_CLIENT14_REVISION3 (at 0x7f02)"
        set &access:&cmd_addr %l (0x807f020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT14_REVISION4"
      sgroup "PBS_CLIENT14_REVISION4 (at 0x7f03)"
        set &access:&cmd_addr %l (0x807f030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT14_PERPH_TYPE"
      sgroup "PBS_CLIENT14_PERPH_TYPE (at 0x7f04)"
        set &access:&cmd_addr %l (0x807f040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT14_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT14_PERPH_SUBTYPE (at 0x7f05)"
        set &access:&cmd_addr %l (0x807f050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT14_STATUS0"
      sgroup "PBS_CLIENT14_STATUS0 (at 0x7f08)"
        set &access:&cmd_addr %l (0x807f080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT14_STATUS1"
      sgroup "PBS_CLIENT14_STATUS1 (at 0x7f09)"
        set &access:&cmd_addr %l (0x807f090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT14_INT_RT_STS"
      sgroup "PBS_CLIENT14_INT_RT_STS (at 0x7f10)"
        set &access:&cmd_addr %l (0x807f100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT14_INT_SET_TYPE"
      sgroup "PBS_CLIENT14_INT_SET_TYPE (at 0x7f11)"
        set &access:&cmd_addr %l (0x807f110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT14_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT14_INT_POLARITY_HIGH (at 0x7f12)"
        set &access:&cmd_addr %l (0x807f120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT14_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT14_INT_POLARITY_LOW (at 0x7f13)"
        set &access:&cmd_addr %l (0x807f130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT14_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT14_INT_LATCHED_CLR (at 0x7f14)"
        set &access:&cmd_addr %l (0x807f140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT14_INT_EN_SET"
      sgroup "PBS_CLIENT14_INT_EN_SET (at 0x7f15)"
        set &access:&cmd_addr %l (0x807f150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT14_INT_EN_CLR"
      sgroup "PBS_CLIENT14_INT_EN_CLR (at 0x7f16)"
        set &access:&cmd_addr %l (0x807f160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT14_INT_LATCHED_STS"
      sgroup "PBS_CLIENT14_INT_LATCHED_STS (at 0x7f18)"
        set &access:&cmd_addr %l (0x807f180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT14_INT_PENDING_STS"
      sgroup "PBS_CLIENT14_INT_PENDING_STS (at 0x7f19)"
        set &access:&cmd_addr %l (0x807f190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT14_INT_MID_SEL"
      sgroup "PBS_CLIENT14_INT_MID_SEL (at 0x7f1a)"
        set &access:&cmd_addr %l (0x807f1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT14_INT_PRIORITY"
      sgroup "PBS_CLIENT14_INT_PRIORITY (at 0x7f1b)"
        set &access:&cmd_addr %l (0x807f1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT14_TRIG_CFG"
      sgroup "PBS_CLIENT14_TRIG_CFG (at 0x7f40)"
        set &access:&cmd_addr %l (0x807f400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT14_TRIG_CTL"
      sgroup "PBS_CLIENT14_TRIG_CTL (at 0x7f42)"
        set &access:&cmd_addr %l (0x807f420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT14_EN_CTL"
      sgroup "PBS_CLIENT14_EN_CTL (at 0x7f46)"
        set &access:&cmd_addr %l (0x807f460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7f460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT14_SEC_ACCESS"
      sgroup "PBS_CLIENT14_SEC_ACCESS (at 0x7fd0)"
        set &access:&cmd_addr %l (0x807fd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7fd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT14_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT14_PERPH_RESET_CTL1 (at 0x7fd8)"
        set &access:&cmd_addr %l (0x807fd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7fd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT14_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT14_PERPH_RESET_CTL2 (at 0x7fd9)"
        set &access:&cmd_addr %l (0x807fd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7fd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT14_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT14_PERPH_RESET_CTL3 (at 0x7fda)"
        set &access:&cmd_addr %l (0x807fda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7fda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT14_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT14_PERPH_RESET_CTL4 (at 0x7fdb)"
        set &access:&cmd_addr %l (0x807fdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7fdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT14_INT_TEST1"
      sgroup "PBS_CLIENT14_INT_TEST1 (at 0x7fe0)"
        set &access:&cmd_addr %l (0x807fe00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7fe00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT14_INT_TEST_VAL"
      sgroup "PBS_CLIENT14_INT_TEST_VAL (at 0x7fe1)"
        set &access:&cmd_addr %l (0x807fe10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7fe10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT15"
  tree "PBS_CLIENT15"
    tree "PBS_CLIENT15_REVISION1"
      sgroup "PBS_CLIENT15_REVISION1 (at 0x8000)"
        set &access:&cmd_addr %l (0x8080000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT15_REVISION2"
      sgroup "PBS_CLIENT15_REVISION2 (at 0x8001)"
        set &access:&cmd_addr %l (0x8080010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT15_REVISION3"
      sgroup "PBS_CLIENT15_REVISION3 (at 0x8002)"
        set &access:&cmd_addr %l (0x8080020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT15_REVISION4"
      sgroup "PBS_CLIENT15_REVISION4 (at 0x8003)"
        set &access:&cmd_addr %l (0x8080030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT15_PERPH_TYPE"
      sgroup "PBS_CLIENT15_PERPH_TYPE (at 0x8004)"
        set &access:&cmd_addr %l (0x8080040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT15_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT15_PERPH_SUBTYPE (at 0x8005)"
        set &access:&cmd_addr %l (0x8080050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT15_STATUS0"
      sgroup "PBS_CLIENT15_STATUS0 (at 0x8008)"
        set &access:&cmd_addr %l (0x8080080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT15_STATUS1"
      sgroup "PBS_CLIENT15_STATUS1 (at 0x8009)"
        set &access:&cmd_addr %l (0x8080090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT15_INT_RT_STS"
      sgroup "PBS_CLIENT15_INT_RT_STS (at 0x8010)"
        set &access:&cmd_addr %l (0x8080100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT15_INT_SET_TYPE"
      sgroup "PBS_CLIENT15_INT_SET_TYPE (at 0x8011)"
        set &access:&cmd_addr %l (0x8080110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT15_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT15_INT_POLARITY_HIGH (at 0x8012)"
        set &access:&cmd_addr %l (0x8080120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT15_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT15_INT_POLARITY_LOW (at 0x8013)"
        set &access:&cmd_addr %l (0x8080130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT15_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT15_INT_LATCHED_CLR (at 0x8014)"
        set &access:&cmd_addr %l (0x8080140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT15_INT_EN_SET"
      sgroup "PBS_CLIENT15_INT_EN_SET (at 0x8015)"
        set &access:&cmd_addr %l (0x8080150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT15_INT_EN_CLR"
      sgroup "PBS_CLIENT15_INT_EN_CLR (at 0x8016)"
        set &access:&cmd_addr %l (0x8080160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT15_INT_LATCHED_STS"
      sgroup "PBS_CLIENT15_INT_LATCHED_STS (at 0x8018)"
        set &access:&cmd_addr %l (0x8080180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT15_INT_PENDING_STS"
      sgroup "PBS_CLIENT15_INT_PENDING_STS (at 0x8019)"
        set &access:&cmd_addr %l (0x8080190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT15_INT_MID_SEL"
      sgroup "PBS_CLIENT15_INT_MID_SEL (at 0x801a)"
        set &access:&cmd_addr %l (0x80801a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x801a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT15_INT_PRIORITY"
      sgroup "PBS_CLIENT15_INT_PRIORITY (at 0x801b)"
        set &access:&cmd_addr %l (0x80801b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x801b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT15_TRIG_CFG"
      sgroup "PBS_CLIENT15_TRIG_CFG (at 0x8040)"
        set &access:&cmd_addr %l (0x8080400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT15_TRIG_CTL"
      sgroup "PBS_CLIENT15_TRIG_CTL (at 0x8042)"
        set &access:&cmd_addr %l (0x8080420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT15_EN_CTL"
      sgroup "PBS_CLIENT15_EN_CTL (at 0x8046)"
        set &access:&cmd_addr %l (0x8080460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT15_SEC_ACCESS"
      sgroup "PBS_CLIENT15_SEC_ACCESS (at 0x80d0)"
        set &access:&cmd_addr %l (0x8080d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT15_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT15_PERPH_RESET_CTL1 (at 0x80d8)"
        set &access:&cmd_addr %l (0x8080d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT15_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT15_PERPH_RESET_CTL2 (at 0x80d9)"
        set &access:&cmd_addr %l (0x8080d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT15_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT15_PERPH_RESET_CTL3 (at 0x80da)"
        set &access:&cmd_addr %l (0x8080da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT15_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT15_PERPH_RESET_CTL4 (at 0x80db)"
        set &access:&cmd_addr %l (0x8080db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT15_INT_TEST1"
      sgroup "PBS_CLIENT15_INT_TEST1 (at 0x80e0)"
        set &access:&cmd_addr %l (0x8080e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT15_INT_TEST_VAL"
      sgroup "PBS_CLIENT15_INT_TEST_VAL (at 0x80e1)"
        set &access:&cmd_addr %l (0x8080e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT2"
  tree "PBS_CLIENT2"
    tree "PBS_CLIENT2_REVISION1"
      sgroup "PBS_CLIENT2_REVISION1 (at 0x7300)"
        set &access:&cmd_addr %l (0x8073000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT2_REVISION2"
      sgroup "PBS_CLIENT2_REVISION2 (at 0x7301)"
        set &access:&cmd_addr %l (0x8073010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT2_REVISION3"
      sgroup "PBS_CLIENT2_REVISION3 (at 0x7302)"
        set &access:&cmd_addr %l (0x8073020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT2_REVISION4"
      sgroup "PBS_CLIENT2_REVISION4 (at 0x7303)"
        set &access:&cmd_addr %l (0x8073030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT2_PERPH_TYPE"
      sgroup "PBS_CLIENT2_PERPH_TYPE (at 0x7304)"
        set &access:&cmd_addr %l (0x8073040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT2_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT2_PERPH_SUBTYPE (at 0x7305)"
        set &access:&cmd_addr %l (0x8073050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT2_STATUS0"
      sgroup "PBS_CLIENT2_STATUS0 (at 0x7308)"
        set &access:&cmd_addr %l (0x8073080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_STATUS1"
      sgroup "PBS_CLIENT2_STATUS1 (at 0x7309)"
        set &access:&cmd_addr %l (0x8073090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT2_INT_RT_STS"
      sgroup "PBS_CLIENT2_INT_RT_STS (at 0x7310)"
        set &access:&cmd_addr %l (0x8073100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT2_INT_SET_TYPE"
      sgroup "PBS_CLIENT2_INT_SET_TYPE (at 0x7311)"
        set &access:&cmd_addr %l (0x8073110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT2_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT2_INT_POLARITY_HIGH (at 0x7312)"
        set &access:&cmd_addr %l (0x8073120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT2_INT_POLARITY_LOW (at 0x7313)"
        set &access:&cmd_addr %l (0x8073130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT2_INT_LATCHED_CLR (at 0x7314)"
        set &access:&cmd_addr %l (0x8073140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT2_INT_EN_SET"
      sgroup "PBS_CLIENT2_INT_EN_SET (at 0x7315)"
        set &access:&cmd_addr %l (0x8073150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_EN_CLR"
      sgroup "PBS_CLIENT2_INT_EN_CLR (at 0x7316)"
        set &access:&cmd_addr %l (0x8073160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_LATCHED_STS"
      sgroup "PBS_CLIENT2_INT_LATCHED_STS (at 0x7318)"
        set &access:&cmd_addr %l (0x8073180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT2_INT_PENDING_STS"
      sgroup "PBS_CLIENT2_INT_PENDING_STS (at 0x7319)"
        set &access:&cmd_addr %l (0x8073190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT2_INT_MID_SEL"
      sgroup "PBS_CLIENT2_INT_MID_SEL (at 0x731a)"
        set &access:&cmd_addr %l (0x80731a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x731a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT2_INT_PRIORITY"
      sgroup "PBS_CLIENT2_INT_PRIORITY (at 0x731b)"
        set &access:&cmd_addr %l (0x80731b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x731b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT2_TRIG_CFG"
      sgroup "PBS_CLIENT2_TRIG_CFG (at 0x7340)"
        set &access:&cmd_addr %l (0x8073400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT2_TRIG_CTL"
      sgroup "PBS_CLIENT2_TRIG_CTL (at 0x7342)"
        set &access:&cmd_addr %l (0x8073420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT2_EN_CTL"
      sgroup "PBS_CLIENT2_EN_CTL (at 0x7346)"
        set &access:&cmd_addr %l (0x8073460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_SEC_ACCESS"
      sgroup "PBS_CLIENT2_SEC_ACCESS (at 0x73d0)"
        set &access:&cmd_addr %l (0x8073d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT2_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT2_PERPH_RESET_CTL1 (at 0x73d8)"
        set &access:&cmd_addr %l (0x8073d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT2_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT2_PERPH_RESET_CTL2 (at 0x73d9)"
        set &access:&cmd_addr %l (0x8073d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT2_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT2_PERPH_RESET_CTL3 (at 0x73da)"
        set &access:&cmd_addr %l (0x8073da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT2_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT2_PERPH_RESET_CTL4 (at 0x73db)"
        set &access:&cmd_addr %l (0x8073db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT2_INT_TEST1"
      sgroup "PBS_CLIENT2_INT_TEST1 (at 0x73e0)"
        set &access:&cmd_addr %l (0x8073e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_TEST_VAL"
      sgroup "PBS_CLIENT2_INT_TEST_VAL (at 0x73e1)"
        set &access:&cmd_addr %l (0x8073e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT3"
  tree "PBS_CLIENT3"
    tree "PBS_CLIENT3_REVISION1"
      sgroup "PBS_CLIENT3_REVISION1 (at 0x7400)"
        set &access:&cmd_addr %l (0x8074000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT3_REVISION2"
      sgroup "PBS_CLIENT3_REVISION2 (at 0x7401)"
        set &access:&cmd_addr %l (0x8074010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT3_REVISION3"
      sgroup "PBS_CLIENT3_REVISION3 (at 0x7402)"
        set &access:&cmd_addr %l (0x8074020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT3_REVISION4"
      sgroup "PBS_CLIENT3_REVISION4 (at 0x7403)"
        set &access:&cmd_addr %l (0x8074030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT3_PERPH_TYPE"
      sgroup "PBS_CLIENT3_PERPH_TYPE (at 0x7404)"
        set &access:&cmd_addr %l (0x8074040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT3_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT3_PERPH_SUBTYPE (at 0x7405)"
        set &access:&cmd_addr %l (0x8074050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT3_STATUS0"
      sgroup "PBS_CLIENT3_STATUS0 (at 0x7408)"
        set &access:&cmd_addr %l (0x8074080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_STATUS1"
      sgroup "PBS_CLIENT3_STATUS1 (at 0x7409)"
        set &access:&cmd_addr %l (0x8074090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT3_INT_RT_STS"
      sgroup "PBS_CLIENT3_INT_RT_STS (at 0x7410)"
        set &access:&cmd_addr %l (0x8074100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT3_INT_SET_TYPE"
      sgroup "PBS_CLIENT3_INT_SET_TYPE (at 0x7411)"
        set &access:&cmd_addr %l (0x8074110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT3_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT3_INT_POLARITY_HIGH (at 0x7412)"
        set &access:&cmd_addr %l (0x8074120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT3_INT_POLARITY_LOW (at 0x7413)"
        set &access:&cmd_addr %l (0x8074130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT3_INT_LATCHED_CLR (at 0x7414)"
        set &access:&cmd_addr %l (0x8074140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT3_INT_EN_SET"
      sgroup "PBS_CLIENT3_INT_EN_SET (at 0x7415)"
        set &access:&cmd_addr %l (0x8074150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_EN_CLR"
      sgroup "PBS_CLIENT3_INT_EN_CLR (at 0x7416)"
        set &access:&cmd_addr %l (0x8074160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_LATCHED_STS"
      sgroup "PBS_CLIENT3_INT_LATCHED_STS (at 0x7418)"
        set &access:&cmd_addr %l (0x8074180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT3_INT_PENDING_STS"
      sgroup "PBS_CLIENT3_INT_PENDING_STS (at 0x7419)"
        set &access:&cmd_addr %l (0x8074190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT3_INT_MID_SEL"
      sgroup "PBS_CLIENT3_INT_MID_SEL (at 0x741a)"
        set &access:&cmd_addr %l (0x80741a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x741a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT3_INT_PRIORITY"
      sgroup "PBS_CLIENT3_INT_PRIORITY (at 0x741b)"
        set &access:&cmd_addr %l (0x80741b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x741b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT3_TRIG_CFG"
      sgroup "PBS_CLIENT3_TRIG_CFG (at 0x7440)"
        set &access:&cmd_addr %l (0x8074400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT3_TRIG_CTL"
      sgroup "PBS_CLIENT3_TRIG_CTL (at 0x7442)"
        set &access:&cmd_addr %l (0x8074420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT3_EN_CTL"
      sgroup "PBS_CLIENT3_EN_CTL (at 0x7446)"
        set &access:&cmd_addr %l (0x8074460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_SEC_ACCESS"
      sgroup "PBS_CLIENT3_SEC_ACCESS (at 0x74d0)"
        set &access:&cmd_addr %l (0x8074d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT3_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT3_PERPH_RESET_CTL1 (at 0x74d8)"
        set &access:&cmd_addr %l (0x8074d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT3_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT3_PERPH_RESET_CTL2 (at 0x74d9)"
        set &access:&cmd_addr %l (0x8074d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT3_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT3_PERPH_RESET_CTL3 (at 0x74da)"
        set &access:&cmd_addr %l (0x8074da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT3_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT3_PERPH_RESET_CTL4 (at 0x74db)"
        set &access:&cmd_addr %l (0x8074db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT3_INT_TEST1"
      sgroup "PBS_CLIENT3_INT_TEST1 (at 0x74e0)"
        set &access:&cmd_addr %l (0x8074e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_TEST_VAL"
      sgroup "PBS_CLIENT3_INT_TEST_VAL (at 0x74e1)"
        set &access:&cmd_addr %l (0x8074e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT4"
  tree "PBS_CLIENT4"
    tree "PBS_CLIENT4_REVISION1"
      sgroup "PBS_CLIENT4_REVISION1 (at 0x7500)"
        set &access:&cmd_addr %l (0x8075000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT4_REVISION2"
      sgroup "PBS_CLIENT4_REVISION2 (at 0x7501)"
        set &access:&cmd_addr %l (0x8075010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT4_REVISION3"
      sgroup "PBS_CLIENT4_REVISION3 (at 0x7502)"
        set &access:&cmd_addr %l (0x8075020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT4_REVISION4"
      sgroup "PBS_CLIENT4_REVISION4 (at 0x7503)"
        set &access:&cmd_addr %l (0x8075030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT4_PERPH_TYPE"
      sgroup "PBS_CLIENT4_PERPH_TYPE (at 0x7504)"
        set &access:&cmd_addr %l (0x8075040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT4_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT4_PERPH_SUBTYPE (at 0x7505)"
        set &access:&cmd_addr %l (0x8075050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT4_STATUS0"
      sgroup "PBS_CLIENT4_STATUS0 (at 0x7508)"
        set &access:&cmd_addr %l (0x8075080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_STATUS1"
      sgroup "PBS_CLIENT4_STATUS1 (at 0x7509)"
        set &access:&cmd_addr %l (0x8075090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT4_INT_RT_STS"
      sgroup "PBS_CLIENT4_INT_RT_STS (at 0x7510)"
        set &access:&cmd_addr %l (0x8075100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT4_INT_SET_TYPE"
      sgroup "PBS_CLIENT4_INT_SET_TYPE (at 0x7511)"
        set &access:&cmd_addr %l (0x8075110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT4_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT4_INT_POLARITY_HIGH (at 0x7512)"
        set &access:&cmd_addr %l (0x8075120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT4_INT_POLARITY_LOW (at 0x7513)"
        set &access:&cmd_addr %l (0x8075130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT4_INT_LATCHED_CLR (at 0x7514)"
        set &access:&cmd_addr %l (0x8075140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT4_INT_EN_SET"
      sgroup "PBS_CLIENT4_INT_EN_SET (at 0x7515)"
        set &access:&cmd_addr %l (0x8075150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_EN_CLR"
      sgroup "PBS_CLIENT4_INT_EN_CLR (at 0x7516)"
        set &access:&cmd_addr %l (0x8075160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_LATCHED_STS"
      sgroup "PBS_CLIENT4_INT_LATCHED_STS (at 0x7518)"
        set &access:&cmd_addr %l (0x8075180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT4_INT_PENDING_STS"
      sgroup "PBS_CLIENT4_INT_PENDING_STS (at 0x7519)"
        set &access:&cmd_addr %l (0x8075190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT4_INT_MID_SEL"
      sgroup "PBS_CLIENT4_INT_MID_SEL (at 0x751a)"
        set &access:&cmd_addr %l (0x80751a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x751a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT4_INT_PRIORITY"
      sgroup "PBS_CLIENT4_INT_PRIORITY (at 0x751b)"
        set &access:&cmd_addr %l (0x80751b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x751b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT4_TRIG_CFG"
      sgroup "PBS_CLIENT4_TRIG_CFG (at 0x7540)"
        set &access:&cmd_addr %l (0x8075400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT4_TRIG_CTL"
      sgroup "PBS_CLIENT4_TRIG_CTL (at 0x7542)"
        set &access:&cmd_addr %l (0x8075420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT4_EN_CTL"
      sgroup "PBS_CLIENT4_EN_CTL (at 0x7546)"
        set &access:&cmd_addr %l (0x8075460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_SEC_ACCESS"
      sgroup "PBS_CLIENT4_SEC_ACCESS (at 0x75d0)"
        set &access:&cmd_addr %l (0x8075d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT4_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT4_PERPH_RESET_CTL1 (at 0x75d8)"
        set &access:&cmd_addr %l (0x8075d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT4_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT4_PERPH_RESET_CTL2 (at 0x75d9)"
        set &access:&cmd_addr %l (0x8075d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT4_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT4_PERPH_RESET_CTL3 (at 0x75da)"
        set &access:&cmd_addr %l (0x8075da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT4_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT4_PERPH_RESET_CTL4 (at 0x75db)"
        set &access:&cmd_addr %l (0x8075db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT4_INT_TEST1"
      sgroup "PBS_CLIENT4_INT_TEST1 (at 0x75e0)"
        set &access:&cmd_addr %l (0x8075e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_TEST_VAL"
      sgroup "PBS_CLIENT4_INT_TEST_VAL (at 0x75e1)"
        set &access:&cmd_addr %l (0x8075e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT5"
  tree "PBS_CLIENT5"
    tree "PBS_CLIENT5_REVISION1"
      sgroup "PBS_CLIENT5_REVISION1 (at 0x7600)"
        set &access:&cmd_addr %l (0x8076000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT5_REVISION2"
      sgroup "PBS_CLIENT5_REVISION2 (at 0x7601)"
        set &access:&cmd_addr %l (0x8076010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT5_REVISION3"
      sgroup "PBS_CLIENT5_REVISION3 (at 0x7602)"
        set &access:&cmd_addr %l (0x8076020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT5_REVISION4"
      sgroup "PBS_CLIENT5_REVISION4 (at 0x7603)"
        set &access:&cmd_addr %l (0x8076030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT5_PERPH_TYPE"
      sgroup "PBS_CLIENT5_PERPH_TYPE (at 0x7604)"
        set &access:&cmd_addr %l (0x8076040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT5_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT5_PERPH_SUBTYPE (at 0x7605)"
        set &access:&cmd_addr %l (0x8076050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT5_STATUS0"
      sgroup "PBS_CLIENT5_STATUS0 (at 0x7608)"
        set &access:&cmd_addr %l (0x8076080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_STATUS1"
      sgroup "PBS_CLIENT5_STATUS1 (at 0x7609)"
        set &access:&cmd_addr %l (0x8076090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT5_INT_RT_STS"
      sgroup "PBS_CLIENT5_INT_RT_STS (at 0x7610)"
        set &access:&cmd_addr %l (0x8076100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT5_INT_SET_TYPE"
      sgroup "PBS_CLIENT5_INT_SET_TYPE (at 0x7611)"
        set &access:&cmd_addr %l (0x8076110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT5_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT5_INT_POLARITY_HIGH (at 0x7612)"
        set &access:&cmd_addr %l (0x8076120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT5_INT_POLARITY_LOW (at 0x7613)"
        set &access:&cmd_addr %l (0x8076130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT5_INT_LATCHED_CLR (at 0x7614)"
        set &access:&cmd_addr %l (0x8076140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT5_INT_EN_SET"
      sgroup "PBS_CLIENT5_INT_EN_SET (at 0x7615)"
        set &access:&cmd_addr %l (0x8076150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_EN_CLR"
      sgroup "PBS_CLIENT5_INT_EN_CLR (at 0x7616)"
        set &access:&cmd_addr %l (0x8076160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_LATCHED_STS"
      sgroup "PBS_CLIENT5_INT_LATCHED_STS (at 0x7618)"
        set &access:&cmd_addr %l (0x8076180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT5_INT_PENDING_STS"
      sgroup "PBS_CLIENT5_INT_PENDING_STS (at 0x7619)"
        set &access:&cmd_addr %l (0x8076190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT5_INT_MID_SEL"
      sgroup "PBS_CLIENT5_INT_MID_SEL (at 0x761a)"
        set &access:&cmd_addr %l (0x80761a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x761a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT5_INT_PRIORITY"
      sgroup "PBS_CLIENT5_INT_PRIORITY (at 0x761b)"
        set &access:&cmd_addr %l (0x80761b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x761b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT5_TRIG_CFG"
      sgroup "PBS_CLIENT5_TRIG_CFG (at 0x7640)"
        set &access:&cmd_addr %l (0x8076400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT5_TRIG_CTL"
      sgroup "PBS_CLIENT5_TRIG_CTL (at 0x7642)"
        set &access:&cmd_addr %l (0x8076420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT5_EN_CTL"
      sgroup "PBS_CLIENT5_EN_CTL (at 0x7646)"
        set &access:&cmd_addr %l (0x8076460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_SEC_ACCESS"
      sgroup "PBS_CLIENT5_SEC_ACCESS (at 0x76d0)"
        set &access:&cmd_addr %l (0x8076d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT5_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT5_PERPH_RESET_CTL1 (at 0x76d8)"
        set &access:&cmd_addr %l (0x8076d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT5_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT5_PERPH_RESET_CTL2 (at 0x76d9)"
        set &access:&cmd_addr %l (0x8076d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT5_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT5_PERPH_RESET_CTL3 (at 0x76da)"
        set &access:&cmd_addr %l (0x8076da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT5_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT5_PERPH_RESET_CTL4 (at 0x76db)"
        set &access:&cmd_addr %l (0x8076db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT5_INT_TEST1"
      sgroup "PBS_CLIENT5_INT_TEST1 (at 0x76e0)"
        set &access:&cmd_addr %l (0x8076e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_TEST_VAL"
      sgroup "PBS_CLIENT5_INT_TEST_VAL (at 0x76e1)"
        set &access:&cmd_addr %l (0x8076e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT6"
  tree "PBS_CLIENT6"
    tree "PBS_CLIENT6_REVISION1"
      sgroup "PBS_CLIENT6_REVISION1 (at 0x7700)"
        set &access:&cmd_addr %l (0x8077000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT6_REVISION2"
      sgroup "PBS_CLIENT6_REVISION2 (at 0x7701)"
        set &access:&cmd_addr %l (0x8077010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT6_REVISION3"
      sgroup "PBS_CLIENT6_REVISION3 (at 0x7702)"
        set &access:&cmd_addr %l (0x8077020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT6_REVISION4"
      sgroup "PBS_CLIENT6_REVISION4 (at 0x7703)"
        set &access:&cmd_addr %l (0x8077030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT6_PERPH_TYPE"
      sgroup "PBS_CLIENT6_PERPH_TYPE (at 0x7704)"
        set &access:&cmd_addr %l (0x8077040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT6_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT6_PERPH_SUBTYPE (at 0x7705)"
        set &access:&cmd_addr %l (0x8077050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT6_STATUS0"
      sgroup "PBS_CLIENT6_STATUS0 (at 0x7708)"
        set &access:&cmd_addr %l (0x8077080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_STATUS1"
      sgroup "PBS_CLIENT6_STATUS1 (at 0x7709)"
        set &access:&cmd_addr %l (0x8077090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT6_INT_RT_STS"
      sgroup "PBS_CLIENT6_INT_RT_STS (at 0x7710)"
        set &access:&cmd_addr %l (0x8077100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT6_INT_SET_TYPE"
      sgroup "PBS_CLIENT6_INT_SET_TYPE (at 0x7711)"
        set &access:&cmd_addr %l (0x8077110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT6_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT6_INT_POLARITY_HIGH (at 0x7712)"
        set &access:&cmd_addr %l (0x8077120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT6_INT_POLARITY_LOW (at 0x7713)"
        set &access:&cmd_addr %l (0x8077130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT6_INT_LATCHED_CLR (at 0x7714)"
        set &access:&cmd_addr %l (0x8077140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT6_INT_EN_SET"
      sgroup "PBS_CLIENT6_INT_EN_SET (at 0x7715)"
        set &access:&cmd_addr %l (0x8077150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_EN_CLR"
      sgroup "PBS_CLIENT6_INT_EN_CLR (at 0x7716)"
        set &access:&cmd_addr %l (0x8077160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_LATCHED_STS"
      sgroup "PBS_CLIENT6_INT_LATCHED_STS (at 0x7718)"
        set &access:&cmd_addr %l (0x8077180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT6_INT_PENDING_STS"
      sgroup "PBS_CLIENT6_INT_PENDING_STS (at 0x7719)"
        set &access:&cmd_addr %l (0x8077190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT6_INT_MID_SEL"
      sgroup "PBS_CLIENT6_INT_MID_SEL (at 0x771a)"
        set &access:&cmd_addr %l (0x80771a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x771a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT6_INT_PRIORITY"
      sgroup "PBS_CLIENT6_INT_PRIORITY (at 0x771b)"
        set &access:&cmd_addr %l (0x80771b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x771b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT6_TRIG_CFG"
      sgroup "PBS_CLIENT6_TRIG_CFG (at 0x7740)"
        set &access:&cmd_addr %l (0x8077400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT6_TRIG_CTL"
      sgroup "PBS_CLIENT6_TRIG_CTL (at 0x7742)"
        set &access:&cmd_addr %l (0x8077420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT6_EN_CTL"
      sgroup "PBS_CLIENT6_EN_CTL (at 0x7746)"
        set &access:&cmd_addr %l (0x8077460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_SEC_ACCESS"
      sgroup "PBS_CLIENT6_SEC_ACCESS (at 0x77d0)"
        set &access:&cmd_addr %l (0x8077d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT6_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT6_PERPH_RESET_CTL1 (at 0x77d8)"
        set &access:&cmd_addr %l (0x8077d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT6_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT6_PERPH_RESET_CTL2 (at 0x77d9)"
        set &access:&cmd_addr %l (0x8077d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT6_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT6_PERPH_RESET_CTL3 (at 0x77da)"
        set &access:&cmd_addr %l (0x8077da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT6_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT6_PERPH_RESET_CTL4 (at 0x77db)"
        set &access:&cmd_addr %l (0x8077db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT6_INT_TEST1"
      sgroup "PBS_CLIENT6_INT_TEST1 (at 0x77e0)"
        set &access:&cmd_addr %l (0x8077e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_TEST_VAL"
      sgroup "PBS_CLIENT6_INT_TEST_VAL (at 0x77e1)"
        set &access:&cmd_addr %l (0x8077e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT7"
  tree "PBS_CLIENT7"
    tree "PBS_CLIENT7_REVISION1"
      sgroup "PBS_CLIENT7_REVISION1 (at 0x7800)"
        set &access:&cmd_addr %l (0x8078000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT7_REVISION2"
      sgroup "PBS_CLIENT7_REVISION2 (at 0x7801)"
        set &access:&cmd_addr %l (0x8078010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT7_REVISION3"
      sgroup "PBS_CLIENT7_REVISION3 (at 0x7802)"
        set &access:&cmd_addr %l (0x8078020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT7_REVISION4"
      sgroup "PBS_CLIENT7_REVISION4 (at 0x7803)"
        set &access:&cmd_addr %l (0x8078030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT7_PERPH_TYPE"
      sgroup "PBS_CLIENT7_PERPH_TYPE (at 0x7804)"
        set &access:&cmd_addr %l (0x8078040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT7_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT7_PERPH_SUBTYPE (at 0x7805)"
        set &access:&cmd_addr %l (0x8078050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT7_STATUS0"
      sgroup "PBS_CLIENT7_STATUS0 (at 0x7808)"
        set &access:&cmd_addr %l (0x8078080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_STATUS1"
      sgroup "PBS_CLIENT7_STATUS1 (at 0x7809)"
        set &access:&cmd_addr %l (0x8078090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT7_INT_RT_STS"
      sgroup "PBS_CLIENT7_INT_RT_STS (at 0x7810)"
        set &access:&cmd_addr %l (0x8078100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT7_INT_SET_TYPE"
      sgroup "PBS_CLIENT7_INT_SET_TYPE (at 0x7811)"
        set &access:&cmd_addr %l (0x8078110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT7_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT7_INT_POLARITY_HIGH (at 0x7812)"
        set &access:&cmd_addr %l (0x8078120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT7_INT_POLARITY_LOW (at 0x7813)"
        set &access:&cmd_addr %l (0x8078130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT7_INT_LATCHED_CLR (at 0x7814)"
        set &access:&cmd_addr %l (0x8078140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT7_INT_EN_SET"
      sgroup "PBS_CLIENT7_INT_EN_SET (at 0x7815)"
        set &access:&cmd_addr %l (0x8078150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_EN_CLR"
      sgroup "PBS_CLIENT7_INT_EN_CLR (at 0x7816)"
        set &access:&cmd_addr %l (0x8078160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_LATCHED_STS"
      sgroup "PBS_CLIENT7_INT_LATCHED_STS (at 0x7818)"
        set &access:&cmd_addr %l (0x8078180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT7_INT_PENDING_STS"
      sgroup "PBS_CLIENT7_INT_PENDING_STS (at 0x7819)"
        set &access:&cmd_addr %l (0x8078190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT7_INT_MID_SEL"
      sgroup "PBS_CLIENT7_INT_MID_SEL (at 0x781a)"
        set &access:&cmd_addr %l (0x80781a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x781a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT7_INT_PRIORITY"
      sgroup "PBS_CLIENT7_INT_PRIORITY (at 0x781b)"
        set &access:&cmd_addr %l (0x80781b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x781b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT7_TRIG_CFG"
      sgroup "PBS_CLIENT7_TRIG_CFG (at 0x7840)"
        set &access:&cmd_addr %l (0x8078400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT7_TRIG_CTL"
      sgroup "PBS_CLIENT7_TRIG_CTL (at 0x7842)"
        set &access:&cmd_addr %l (0x8078420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT7_EN_CTL"
      sgroup "PBS_CLIENT7_EN_CTL (at 0x7846)"
        set &access:&cmd_addr %l (0x8078460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_SEC_ACCESS"
      sgroup "PBS_CLIENT7_SEC_ACCESS (at 0x78d0)"
        set &access:&cmd_addr %l (0x8078d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT7_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT7_PERPH_RESET_CTL1 (at 0x78d8)"
        set &access:&cmd_addr %l (0x8078d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT7_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT7_PERPH_RESET_CTL2 (at 0x78d9)"
        set &access:&cmd_addr %l (0x8078d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT7_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT7_PERPH_RESET_CTL3 (at 0x78da)"
        set &access:&cmd_addr %l (0x8078da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT7_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT7_PERPH_RESET_CTL4 (at 0x78db)"
        set &access:&cmd_addr %l (0x8078db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT7_INT_TEST1"
      sgroup "PBS_CLIENT7_INT_TEST1 (at 0x78e0)"
        set &access:&cmd_addr %l (0x8078e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_TEST_VAL"
      sgroup "PBS_CLIENT7_INT_TEST_VAL (at 0x78e1)"
        set &access:&cmd_addr %l (0x8078e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT8"
  tree "PBS_CLIENT8"
    tree "PBS_CLIENT8_REVISION1"
      sgroup "PBS_CLIENT8_REVISION1 (at 0x7900)"
        set &access:&cmd_addr %l (0x8079000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT8_REVISION2"
      sgroup "PBS_CLIENT8_REVISION2 (at 0x7901)"
        set &access:&cmd_addr %l (0x8079010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT8_REVISION3"
      sgroup "PBS_CLIENT8_REVISION3 (at 0x7902)"
        set &access:&cmd_addr %l (0x8079020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT8_REVISION4"
      sgroup "PBS_CLIENT8_REVISION4 (at 0x7903)"
        set &access:&cmd_addr %l (0x8079030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT8_PERPH_TYPE"
      sgroup "PBS_CLIENT8_PERPH_TYPE (at 0x7904)"
        set &access:&cmd_addr %l (0x8079040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT8_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT8_PERPH_SUBTYPE (at 0x7905)"
        set &access:&cmd_addr %l (0x8079050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT8_STATUS0"
      sgroup "PBS_CLIENT8_STATUS0 (at 0x7908)"
        set &access:&cmd_addr %l (0x8079080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_STATUS1"
      sgroup "PBS_CLIENT8_STATUS1 (at 0x7909)"
        set &access:&cmd_addr %l (0x8079090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT8_INT_RT_STS"
      sgroup "PBS_CLIENT8_INT_RT_STS (at 0x7910)"
        set &access:&cmd_addr %l (0x8079100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT8_INT_SET_TYPE"
      sgroup "PBS_CLIENT8_INT_SET_TYPE (at 0x7911)"
        set &access:&cmd_addr %l (0x8079110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT8_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT8_INT_POLARITY_HIGH (at 0x7912)"
        set &access:&cmd_addr %l (0x8079120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT8_INT_POLARITY_LOW (at 0x7913)"
        set &access:&cmd_addr %l (0x8079130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT8_INT_LATCHED_CLR (at 0x7914)"
        set &access:&cmd_addr %l (0x8079140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT8_INT_EN_SET"
      sgroup "PBS_CLIENT8_INT_EN_SET (at 0x7915)"
        set &access:&cmd_addr %l (0x8079150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_EN_CLR"
      sgroup "PBS_CLIENT8_INT_EN_CLR (at 0x7916)"
        set &access:&cmd_addr %l (0x8079160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_LATCHED_STS"
      sgroup "PBS_CLIENT8_INT_LATCHED_STS (at 0x7918)"
        set &access:&cmd_addr %l (0x8079180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT8_INT_PENDING_STS"
      sgroup "PBS_CLIENT8_INT_PENDING_STS (at 0x7919)"
        set &access:&cmd_addr %l (0x8079190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT8_INT_MID_SEL"
      sgroup "PBS_CLIENT8_INT_MID_SEL (at 0x791a)"
        set &access:&cmd_addr %l (0x80791a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x791a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT8_INT_PRIORITY"
      sgroup "PBS_CLIENT8_INT_PRIORITY (at 0x791b)"
        set &access:&cmd_addr %l (0x80791b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x791b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT8_TRIG_CFG"
      sgroup "PBS_CLIENT8_TRIG_CFG (at 0x7940)"
        set &access:&cmd_addr %l (0x8079400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT8_TRIG_CTL"
      sgroup "PBS_CLIENT8_TRIG_CTL (at 0x7942)"
        set &access:&cmd_addr %l (0x8079420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT8_EN_CTL"
      sgroup "PBS_CLIENT8_EN_CTL (at 0x7946)"
        set &access:&cmd_addr %l (0x8079460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_SEC_ACCESS"
      sgroup "PBS_CLIENT8_SEC_ACCESS (at 0x79d0)"
        set &access:&cmd_addr %l (0x8079d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT8_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT8_PERPH_RESET_CTL1 (at 0x79d8)"
        set &access:&cmd_addr %l (0x8079d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT8_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT8_PERPH_RESET_CTL2 (at 0x79d9)"
        set &access:&cmd_addr %l (0x8079d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT8_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT8_PERPH_RESET_CTL3 (at 0x79da)"
        set &access:&cmd_addr %l (0x8079da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT8_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT8_PERPH_RESET_CTL4 (at 0x79db)"
        set &access:&cmd_addr %l (0x8079db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT8_INT_TEST1"
      sgroup "PBS_CLIENT8_INT_TEST1 (at 0x79e0)"
        set &access:&cmd_addr %l (0x8079e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_TEST_VAL"
      sgroup "PBS_CLIENT8_INT_TEST_VAL (at 0x79e1)"
        set &access:&cmd_addr %l (0x8079e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT9"
  tree "PBS_CLIENT9"
    tree "PBS_CLIENT9_REVISION1"
      sgroup "PBS_CLIENT9_REVISION1 (at 0x7a00)"
        set &access:&cmd_addr %l (0x807a000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT9_REVISION2"
      sgroup "PBS_CLIENT9_REVISION2 (at 0x7a01)"
        set &access:&cmd_addr %l (0x807a010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT9_REVISION3"
      sgroup "PBS_CLIENT9_REVISION3 (at 0x7a02)"
        set &access:&cmd_addr %l (0x807a020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT9_REVISION4"
      sgroup "PBS_CLIENT9_REVISION4 (at 0x7a03)"
        set &access:&cmd_addr %l (0x807a030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT9_PERPH_TYPE"
      sgroup "PBS_CLIENT9_PERPH_TYPE (at 0x7a04)"
        set &access:&cmd_addr %l (0x807a040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT9_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT9_PERPH_SUBTYPE (at 0x7a05)"
        set &access:&cmd_addr %l (0x807a050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT9_STATUS0"
      sgroup "PBS_CLIENT9_STATUS0 (at 0x7a08)"
        set &access:&cmd_addr %l (0x807a080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_STATUS1"
      sgroup "PBS_CLIENT9_STATUS1 (at 0x7a09)"
        set &access:&cmd_addr %l (0x807a090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT9_INT_RT_STS"
      sgroup "PBS_CLIENT9_INT_RT_STS (at 0x7a10)"
        set &access:&cmd_addr %l (0x807a100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT9_INT_SET_TYPE"
      sgroup "PBS_CLIENT9_INT_SET_TYPE (at 0x7a11)"
        set &access:&cmd_addr %l (0x807a110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT9_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT9_INT_POLARITY_HIGH (at 0x7a12)"
        set &access:&cmd_addr %l (0x807a120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT9_INT_POLARITY_LOW (at 0x7a13)"
        set &access:&cmd_addr %l (0x807a130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT9_INT_LATCHED_CLR (at 0x7a14)"
        set &access:&cmd_addr %l (0x807a140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT9_INT_EN_SET"
      sgroup "PBS_CLIENT9_INT_EN_SET (at 0x7a15)"
        set &access:&cmd_addr %l (0x807a150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_EN_CLR"
      sgroup "PBS_CLIENT9_INT_EN_CLR (at 0x7a16)"
        set &access:&cmd_addr %l (0x807a160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_LATCHED_STS"
      sgroup "PBS_CLIENT9_INT_LATCHED_STS (at 0x7a18)"
        set &access:&cmd_addr %l (0x807a180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT9_INT_PENDING_STS"
      sgroup "PBS_CLIENT9_INT_PENDING_STS (at 0x7a19)"
        set &access:&cmd_addr %l (0x807a190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT9_INT_MID_SEL"
      sgroup "PBS_CLIENT9_INT_MID_SEL (at 0x7a1a)"
        set &access:&cmd_addr %l (0x807a1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT9_INT_PRIORITY"
      sgroup "PBS_CLIENT9_INT_PRIORITY (at 0x7a1b)"
        set &access:&cmd_addr %l (0x807a1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT9_TRIG_CFG"
      sgroup "PBS_CLIENT9_TRIG_CFG (at 0x7a40)"
        set &access:&cmd_addr %l (0x807a400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT9_TRIG_CTL"
      sgroup "PBS_CLIENT9_TRIG_CTL (at 0x7a42)"
        set &access:&cmd_addr %l (0x807a420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT9_EN_CTL"
      sgroup "PBS_CLIENT9_EN_CTL (at 0x7a46)"
        set &access:&cmd_addr %l (0x807a460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_SEC_ACCESS"
      sgroup "PBS_CLIENT9_SEC_ACCESS (at 0x7ad0)"
        set &access:&cmd_addr %l (0x807ad00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ad00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT9_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT9_PERPH_RESET_CTL1 (at 0x7ad8)"
        set &access:&cmd_addr %l (0x807ad80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ad80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT9_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT9_PERPH_RESET_CTL2 (at 0x7ad9)"
        set &access:&cmd_addr %l (0x807ad90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ad90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT9_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT9_PERPH_RESET_CTL3 (at 0x7ada)"
        set &access:&cmd_addr %l (0x807ada0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ada0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT9_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT9_PERPH_RESET_CTL4 (at 0x7adb)"
        set &access:&cmd_addr %l (0x807adb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7adb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT9_INT_TEST1"
      sgroup "PBS_CLIENT9_INT_TEST1 (at 0x7ae0)"
        set &access:&cmd_addr %l (0x807ae00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ae00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_TEST_VAL"
      sgroup "PBS_CLIENT9_INT_TEST_VAL (at 0x7ae1)"
        set &access:&cmd_addr %l (0x807ae10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ae10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CORE"
  tree "PBS_CORE"
    tree "PBS_CORE_REVISION1"
      sgroup "PBS_CORE_REVISION1 (at 0x7000)"
        set &access:&cmd_addr %l (0x8070000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CORE_REVISION2"
      sgroup "PBS_CORE_REVISION2 (at 0x7001)"
        set &access:&cmd_addr %l (0x8070010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CORE_REVISION3"
      sgroup "PBS_CORE_REVISION3 (at 0x7002)"
        set &access:&cmd_addr %l (0x8070020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CORE_REVISION4"
      sgroup "PBS_CORE_REVISION4 (at 0x7003)"
        set &access:&cmd_addr %l (0x8070030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CORE_PERPH_TYPE"
      sgroup "PBS_CORE_PERPH_TYPE (at 0x7004)"
        set &access:&cmd_addr %l (0x8070040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CORE_PERPH_SUBTYPE"
      sgroup "PBS_CORE_PERPH_SUBTYPE (at 0x7005)"
        set &access:&cmd_addr %l (0x8070050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CORE_SEQ_STATUS0"
      sgroup "PBS_CORE_SEQ_STATUS0 (at 0x7008)"
        set &access:&cmd_addr %l (0x8070080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   LAST_SEQ_COMP_STATUS                     = " "0 (RESERVED),1 (NORMAL),2 (ERROR),3 (ABORT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LAST_SEQ_COMP                            = "
    tree.end
    tree "PBS_CORE_SEQ_STATUS3"
      sgroup "PBS_CORE_SEQ_STATUS3 (at 0x7009)"
        set &access:&cmd_addr %l (0x8070090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PBS_MODE_STATUS                          = " "0 (NORMAL_MODE),1 (RIF_MEM_ACCESS_MODE)"
    tree.end
    tree "PBS_CORE_SEQ_PC_STATUS0"
      sgroup "PBS_CORE_SEQ_PC_STATUS0 (at 0x700a)"
        set &access:&cmd_addr %l (0x80700a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PC_LSB                                   = "
    tree.end
    tree "PBS_CORE_SEQ_PC_STATUS1"
      sgroup "PBS_CORE_SEQ_PC_STATUS1 (at 0x700b)"
        set &access:&cmd_addr %l (0x80700b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PC_MSB                                   = "
    tree.end
    tree "PBS_CORE_SEQ_IR_STATUS0"
      sgroup "PBS_CORE_SEQ_IR_STATUS0 (at 0x700c)"
        set &access:&cmd_addr %l (0x80700c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IR_BYTE0                                 = "
    tree.end
    tree "PBS_CORE_SEQ_IR_STATUS1"
      sgroup "PBS_CORE_SEQ_IR_STATUS1 (at 0x700d)"
        set &access:&cmd_addr %l (0x80700d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IR_BYTE1                                 = "
    tree.end
    tree "PBS_CORE_SEQ_IR_STATUS2"
      sgroup "PBS_CORE_SEQ_IR_STATUS2 (at 0x700e)"
        set &access:&cmd_addr %l (0x80700e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IR_BYTE2                                 = "
    tree.end
    tree "PBS_CORE_SEQ_IR_STATUS3"
      sgroup "PBS_CORE_SEQ_IR_STATUS3 (at 0x700f)"
        set &access:&cmd_addr %l (0x80700f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IR_BYTE3                                 = "
    tree.end
    tree "PBS_CORE_MEM_INTF_CFG"
      sgroup "PBS_CORE_MEM_INTF_CFG (at 0x7040)"
        set &access:&cmd_addr %l (0x8070400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RIF_MEM_ACCESS_EN                        = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PBS_CORE_MEM_INTF_CTL"
      sgroup "PBS_CORE_MEM_INTF_CTL (at 0x7041)"
        set &access:&cmd_addr %l (0x8070410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BURST                                    = " "0 (SINGLE_MODE),1 (BURST_MODE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   WR_EN                                    = " "0 (READ_ACCESS),1 (WRITE_ACCESS)"
    tree.end
    tree "PBS_CORE_MEM_INTF_ADDR_LSB"
      sgroup "PBS_CORE_MEM_INTF_ADDR_LSB (at 0x7042)"
        set &access:&cmd_addr %l (0x8070420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_ADDR_LSB                        = "
    tree.end
    tree "PBS_CORE_MEM_INTF_ADDR_MSB"
      sgroup "PBS_CORE_MEM_INTF_ADDR_MSB (at 0x7043)"
        set &access:&cmd_addr %l (0x8070430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_ADDR_MSB                        = "
    tree.end
    tree "PBS_CORE_MEM_INTF_WR_DATA0"
      sgroup "PBS_CORE_MEM_INTF_WR_DATA0 (at 0x7048)"
        set &access:&cmd_addr %l (0x8070480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_0                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_WR_DATA1"
      sgroup "PBS_CORE_MEM_INTF_WR_DATA1 (at 0x7049)"
        set &access:&cmd_addr %l (0x8070490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_1                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_WR_DATA2"
      sgroup "PBS_CORE_MEM_INTF_WR_DATA2 (at 0x704a)"
        set &access:&cmd_addr %l (0x80704a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_2                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_WR_DATA3"
      sgroup "PBS_CORE_MEM_INTF_WR_DATA3 (at 0x704b)"
        set &access:&cmd_addr %l (0x80704b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_3                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_RD_DATA0"
      sgroup "PBS_CORE_MEM_INTF_RD_DATA0 (at 0x704c)"
        set &access:&cmd_addr %l (0x80704c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_0                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_RD_DATA1"
      sgroup "PBS_CORE_MEM_INTF_RD_DATA1 (at 0x704d)"
        set &access:&cmd_addr %l (0x80704d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_1                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_RD_DATA2"
      sgroup "PBS_CORE_MEM_INTF_RD_DATA2 (at 0x704e)"
        set &access:&cmd_addr %l (0x80704e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_2                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_RD_DATA3"
      sgroup "PBS_CORE_MEM_INTF_RD_DATA3 (at 0x704f)"
        set &access:&cmd_addr %l (0x80704f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_3                       = "
    tree.end
    tree "PBS_CORE_TRIG0_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG0_START_ADDR_LSB (at 0x7050)"
        set &access:&cmd_addr %l (0x8070500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG0_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG0_START_ADDR_MSB (at 0x7051)"
        set &access:&cmd_addr %l (0x8070510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG1_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG1_START_ADDR_LSB (at 0x7054)"
        set &access:&cmd_addr %l (0x8070540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG1_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG1_START_ADDR_MSB (at 0x7055)"
        set &access:&cmd_addr %l (0x8070550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG2_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG2_START_ADDR_LSB (at 0x7058)"
        set &access:&cmd_addr %l (0x8070580|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70580|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG2_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG2_START_ADDR_MSB (at 0x7059)"
        set &access:&cmd_addr %l (0x8070590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG3_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG3_START_ADDR_LSB (at 0x705c)"
        set &access:&cmd_addr %l (0x80705c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x705c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG3_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG3_START_ADDR_MSB (at 0x705d)"
        set &access:&cmd_addr %l (0x80705d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x705d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG4_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG4_START_ADDR_LSB (at 0x7060)"
        set &access:&cmd_addr %l (0x8070600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG4_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG4_START_ADDR_MSB (at 0x7061)"
        set &access:&cmd_addr %l (0x8070610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG5_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG5_START_ADDR_LSB (at 0x7064)"
        set &access:&cmd_addr %l (0x8070640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG5_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG5_START_ADDR_MSB (at 0x7065)"
        set &access:&cmd_addr %l (0x8070650|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70650|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG6_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG6_START_ADDR_LSB (at 0x7068)"
        set &access:&cmd_addr %l (0x8070680|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70680|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG6_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG6_START_ADDR_MSB (at 0x7069)"
        set &access:&cmd_addr %l (0x8070690|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70690|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG7_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG7_START_ADDR_LSB (at 0x706c)"
        set &access:&cmd_addr %l (0x80706c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x706c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG7_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG7_START_ADDR_MSB (at 0x706d)"
        set &access:&cmd_addr %l (0x80706d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x706d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG8_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG8_START_ADDR_LSB (at 0x7070)"
        set &access:&cmd_addr %l (0x8070700|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70700|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG8_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG8_START_ADDR_MSB (at 0x7071)"
        set &access:&cmd_addr %l (0x8070710|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70710|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG9_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG9_START_ADDR_LSB (at 0x7074)"
        set &access:&cmd_addr %l (0x8070740|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70740|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG9_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG9_START_ADDR_MSB (at 0x7075)"
        set &access:&cmd_addr %l (0x8070750|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70750|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG10_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG10_START_ADDR_LSB (at 0x7078)"
        set &access:&cmd_addr %l (0x8070780|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70780|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG10_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG10_START_ADDR_MSB (at 0x7079)"
        set &access:&cmd_addr %l (0x8070790|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70790|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG11_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG11_START_ADDR_LSB (at 0x707c)"
        set &access:&cmd_addr %l (0x80707c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x707c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG11_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG11_START_ADDR_MSB (at 0x707d)"
        set &access:&cmd_addr %l (0x80707d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x707d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG12_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG12_START_ADDR_LSB (at 0x7080)"
        set &access:&cmd_addr %l (0x8070800|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70800|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG12_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG12_START_ADDR_MSB (at 0x7081)"
        set &access:&cmd_addr %l (0x8070810|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70810|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG13_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG13_START_ADDR_LSB (at 0x7084)"
        set &access:&cmd_addr %l (0x8070840|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70840|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG13_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG13_START_ADDR_MSB (at 0x7085)"
        set &access:&cmd_addr %l (0x8070850|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70850|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG14_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG14_START_ADDR_LSB (at 0x7088)"
        set &access:&cmd_addr %l (0x8070880|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70880|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG14_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG14_START_ADDR_MSB (at 0x7089)"
        set &access:&cmd_addr %l (0x8070890|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70890|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG15_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG15_START_ADDR_LSB (at 0x708c)"
        set &access:&cmd_addr %l (0x80708c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x708c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG15_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG15_START_ADDR_MSB (at 0x708d)"
        set &access:&cmd_addr %l (0x80708d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x708d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_SEQ_STATUS1"
      sgroup "PBS_CORE_SEQ_STATUS1 (at 0x7090)"
        set &access:&cmd_addr %l (0x8070900|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70900|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   SEQ_IN_SERVICE                           = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LAST_SEQ_NORMAL                          = "
    tree.end
    tree "PBS_CORE_SEQ_STATUS2"
      sgroup "PBS_CORE_SEQ_STATUS2 (at 0x7091)"
        set &access:&cmd_addr %l (0x8070910|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70910|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   LAST_SEQ_ABORTED                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LAST_SEQ_ERROR                           = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_PC_STATUS0"
      sgroup "PBS_CORE_SEQ_ERR_PC_STATUS0 (at 0x7092)"
        set &access:&cmd_addr %l (0x8070920|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70920|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_PC_LSB                               = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_PC_STATUS1"
      sgroup "PBS_CORE_SEQ_ERR_PC_STATUS1 (at 0x7093)"
        set &access:&cmd_addr %l (0x8070930|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70930|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_PC_MSB                               = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_IR_STATUS0"
      sgroup "PBS_CORE_SEQ_ERR_IR_STATUS0 (at 0x7094)"
        set &access:&cmd_addr %l (0x8070940|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70940|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_IR_BYTE0                             = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_IR_STATUS1"
      sgroup "PBS_CORE_SEQ_ERR_IR_STATUS1 (at 0x7095)"
        set &access:&cmd_addr %l (0x8070950|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70950|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_IR_BYTE1                             = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_IR_STATUS2"
      sgroup "PBS_CORE_SEQ_ERR_IR_STATUS2 (at 0x7096)"
        set &access:&cmd_addr %l (0x8070960|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70960|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_IR_BYTE2                             = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_IR_STATUS3"
      sgroup "PBS_CORE_SEQ_ERR_IR_STATUS3 (at 0x7097)"
        set &access:&cmd_addr %l (0x8070970|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70970|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_IR_BYTE3                             = "
    tree.end
    tree "PBS_CORE_SEC_ACCESS"
      sgroup "PBS_CORE_SEC_ACCESS (at 0x70d0)"
        set &access:&cmd_addr %l (0x8070d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CORE_PERPH_RESET_CTL2"
      sgroup "PBS_CORE_PERPH_RESET_CTL2 (at 0x70d9)"
        set &access:&cmd_addr %l (0x8070d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CORE_PERPH_RESET_CTL3"
      sgroup "PBS_CORE_PERPH_RESET_CTL3 (at 0x70da)"
        set &access:&cmd_addr %l (0x8070da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CORE_PERPH_RESET_CTL4"
      sgroup "PBS_CORE_PERPH_RESET_CTL4 (at 0x70db)"
        set &access:&cmd_addr %l (0x8070db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CORE_SEQ_DEBUG_CFG"
      sgroup "PBS_CORE_SEQ_DEBUG_CFG (at 0x70e0)"
        set &access:&cmd_addr %l (0x8070e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DEBUG_EN                                 = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PBS_CORE_SEQ_DEBUG_NEXT"
      sgroup "PBS_CORE_SEQ_DEBUG_NEXT (at 0x70e1)"
        set &access:&cmd_addr %l (0x8070e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NEXT_CMD                                 = " "0, 1"
    tree.end
    tree "PBS_CORE_OTP_CFG1"
      sgroup "PBS_CORE_OTP_CFG1 (at 0x70e2)"
        set &access:&cmd_addr %l (0x8070e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VPP_SEL                                  = " "0 (DVDD),1 (VPP_EXT)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PPROG                                    = " "0 (OTP_PROGRAMMING_DISABLED),1 (OTP_PROGRAMMING_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PTM                                      = " "0 (REGULAR_MODES),1 (RESERVED),2 (MARGIN_1_READ_MODE),3 (MARGIN_2_READ_MODE)"
    tree.end
    tree "PBS_CORE_OTP_CFG2"
      sgroup "PBS_CORE_OTP_CFG2 (at 0x70e3)"
        set &access:&cmd_addr %l (0x8070e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   MARGIN_RD_WS                             = "
    tree.end
    tree "PBS_CORE_TEST1"
      sgroup "PBS_CORE_TEST1 (at 0x70e4)"
        set &access:&cmd_addr %l (0x8070e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DTEST4_EN                                = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DTEST3_EN                                = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DTEST2_EN                                = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DTEST1_EN                                = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
  tree.end
tree.end
tree "PON"
  tree "PON"
    tree "PON_REVISION1"
      sgroup "PON_REVISION1 (at 0x800)"
        set &access:&cmd_addr %l (0x8008000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PON_REVISION2"
      sgroup "PON_REVISION2 (at 0x801)"
        set &access:&cmd_addr %l (0x8008010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PON_REVISION3"
      sgroup "PON_REVISION3 (at 0x802)"
        set &access:&cmd_addr %l (0x8008020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PON_REVISION4"
      sgroup "PON_REVISION4 (at 0x803)"
        set &access:&cmd_addr %l (0x8008030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PON_PERPH_TYPE"
      sgroup "PON_PERPH_TYPE (at 0x804)"
        set &access:&cmd_addr %l (0x8008040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PON_PERPH_SUBTYPE"
      sgroup "PON_PERPH_SUBTYPE (at 0x805)"
        set &access:&cmd_addr %l (0x8008050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PON_PON_PBL_STATUS"
      sgroup "PON_PON_PBL_STATUS (at 0x807)"
        set &access:&cmd_addr %l (0x8008070|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8070|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DVDD_RB_OCCURRED                         = " "0 (NO_RESET),1 (RESET_OCCURRED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   XVDD_RB_OCCURRED                         = " "0 (NO_RESET),1 (RESET_OCCURRED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   REG_WRITE_ERROR                          = " "0 (NO_ERROR),1 (ERROR_OCCURRED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   REG_RESET_ERROR                          = " "0 (NO_ERROR),1 (ERROR_OCCURRED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   REG_SYNC_ERROR                           = " "0, 1"
    tree.end
    tree "PON_PON_REASON1"
      sgroup "PON_PON_REASON1 (at 0x808)"
        set &access:&cmd_addr %l (0x8008080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CBLPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PON1                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   USB_CHG                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DC_CHG                                   = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RTC                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SMPL                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HARD_RESET                               = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_WARM_RESET_REASON1"
      sgroup "PON_WARM_RESET_REASON1 (at 0x80a)"
        set &access:&cmd_addr %l (0x80080a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   RESIN_N                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   KPDPWR_AND_RESIN                         = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   GP2                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GP1                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PMIC_WD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PS_HOLD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_WARM_RESET_REASON2"
      sgroup "PON_WARM_RESET_REASON2 (at 0x80b)"
        set &access:&cmd_addr %l (0x80080b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TFT                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_POFF_REASON1"
      sgroup "PON_POFF_REASON1 (at 0x80c)"
        set &access:&cmd_addr %l (0x80080c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   RESIN_N                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   KPDPWR_AND_RESIN                         = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   GP2                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GP1                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PMIC_WD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PS_HOLD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_POFF_REASON2"
      sgroup "PON_POFF_REASON2 (at 0x80d)"
        set &access:&cmd_addr %l (0x80080d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STAGE3                                   = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OTST3                                    = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   UVLO                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TFT                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGER                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_SOFT_RESET_REASON1"
      sgroup "PON_SOFT_RESET_REASON1 (at 0x80e)"
        set &access:&cmd_addr %l (0x80080e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   RESIN_N                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   KPDPWR_AND_RESIN                         = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   GP2                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GP1                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PMIC_WD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PS_HOLD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_SOFT_RESET_REASON2"
      sgroup "PON_SOFT_RESET_REASON2 (at 0x80f)"
        set &access:&cmd_addr %l (0x80080f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TFT                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_INT_RT_STS"
      sgroup "PON_INT_RT_STS (at 0x810)"
        set &access:&cmd_addr %l (0x8008100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PON_INT_SET_TYPE"
      sgroup "PON_INT_SET_TYPE (at 0x811)"
        set &access:&cmd_addr %l (0x8008110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PON_INT_POLARITY_HIGH"
      sgroup "PON_INT_POLARITY_HIGH (at 0x812)"
        set &access:&cmd_addr %l (0x8008120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PON_INT_POLARITY_LOW"
      sgroup "PON_INT_POLARITY_LOW (at 0x813)"
        set &access:&cmd_addr %l (0x8008130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PON_INT_LATCHED_CLR"
      sgroup "PON_INT_LATCHED_CLR (at 0x814)"
        set &access:&cmd_addr %l (0x8008140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0, 1"
    tree.end
    tree "PON_INT_EN_SET"
      sgroup "PON_INT_EN_SET (at 0x815)"
        set &access:&cmd_addr %l (0x8008150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PON_INT_EN_CLR"
      sgroup "PON_INT_EN_CLR (at 0x816)"
        set &access:&cmd_addr %l (0x8008160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PON_INT_LATCHED_STS"
      sgroup "PON_INT_LATCHED_STS (at 0x818)"
        set &access:&cmd_addr %l (0x8008180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
    tree.end
    tree "PON_INT_PENDING_STS"
      sgroup "PON_INT_PENDING_STS (at 0x819)"
        set &access:&cmd_addr %l (0x8008190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PON_INT_MID_SEL"
      sgroup "PON_INT_MID_SEL (at 0x81a)"
        set &access:&cmd_addr %l (0x80081a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x81a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PON_INT_PRIORITY"
      sgroup "PON_INT_PRIORITY (at 0x81b)"
        set &access:&cmd_addr %l (0x80081b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x81b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "PON_KPDPWR_N_RESET_S1_TIMER"
      sgroup "PON_KPDPWR_N_RESET_S1_TIMER (at 0x840)"
        set &access:&cmd_addr %l (0x8008400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_KPDPWR_N_RESET_S2_TIMER"
      sgroup "PON_KPDPWR_N_RESET_S2_TIMER (at 0x841)"
        set &access:&cmd_addr %l (0x8008410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_KPDPWR_N_RESET_S2_CTL"
      sgroup "PON_KPDPWR_N_RESET_S2_CTL (at 0x842)"
        set &access:&cmd_addr %l (0x8008420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_KPDPWR_N_RESET_S2_CTL2"
      sgroup "PON_KPDPWR_N_RESET_S2_CTL2 (at 0x843)"
        set &access:&cmd_addr %l (0x8008430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_RESIN_N_RESET_S1_TIMER"
      sgroup "PON_RESIN_N_RESET_S1_TIMER (at 0x844)"
        set &access:&cmd_addr %l (0x8008440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_RESIN_N_RESET_S2_TIMER"
      sgroup "PON_RESIN_N_RESET_S2_TIMER (at 0x845)"
        set &access:&cmd_addr %l (0x8008450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_RESIN_N_RESET_S2_CTL"
      sgroup "PON_RESIN_N_RESET_S2_CTL (at 0x846)"
        set &access:&cmd_addr %l (0x8008460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_RESIN_N_RESET_S2_CTL2"
      sgroup "PON_RESIN_N_RESET_S2_CTL2 (at 0x847)"
        set &access:&cmd_addr %l (0x8008470|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8470|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_RESIN_AND_KPDPWR_RESET_S1_TIMER"
      sgroup "PON_RESIN_AND_KPDPWR_RESET_S1_TIMER (at 0x848)"
        set &access:&cmd_addr %l (0x8008480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_RESIN_AND_KPDPWR_RESET_S2_TIMER"
      sgroup "PON_RESIN_AND_KPDPWR_RESET_S2_TIMER (at 0x849)"
        set &access:&cmd_addr %l (0x8008490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_RESIN_AND_KPDPWR_RESET_S2_CTL"
      sgroup "PON_RESIN_AND_KPDPWR_RESET_S2_CTL (at 0x84a)"
        set &access:&cmd_addr %l (0x80084a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_RESIN_AND_KPDPWR_RESET_S2_CTL2"
      sgroup "PON_RESIN_AND_KPDPWR_RESET_S2_CTL2 (at 0x84b)"
        set &access:&cmd_addr %l (0x80084b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_GP2_RESET_S1_TIMER"
      sgroup "PON_GP2_RESET_S1_TIMER (at 0x84c)"
        set &access:&cmd_addr %l (0x80084c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_GP2_RESET_S2_TIMER"
      sgroup "PON_GP2_RESET_S2_TIMER (at 0x84d)"
        set &access:&cmd_addr %l (0x80084d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_GP2_RESET_S2_CTL"
      sgroup "PON_GP2_RESET_S2_CTL (at 0x84e)"
        set &access:&cmd_addr %l (0x80084e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_GP2_RESET_S2_CTL2"
      sgroup "PON_GP2_RESET_S2_CTL2 (at 0x84f)"
        set &access:&cmd_addr %l (0x80084f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_GP1_RESET_S1_TIMER"
      sgroup "PON_GP1_RESET_S1_TIMER (at 0x850)"
        set &access:&cmd_addr %l (0x8008500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_GP1_RESET_S2_TIMER"
      sgroup "PON_GP1_RESET_S2_TIMER (at 0x851)"
        set &access:&cmd_addr %l (0x8008510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_GP1_RESET_S2_CTL"
      sgroup "PON_GP1_RESET_S2_CTL (at 0x852)"
        set &access:&cmd_addr %l (0x8008520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_GP1_RESET_S2_CTL2"
      sgroup "PON_GP1_RESET_S2_CTL2 (at 0x853)"
        set &access:&cmd_addr %l (0x8008530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_PMIC_WD_RESET_S1_TIMER"
      sgroup "PON_PMIC_WD_RESET_S1_TIMER (at 0x854)"
        set &access:&cmd_addr %l (0x8008540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_PMIC_WD_RESET_S2_TIMER"
      sgroup "PON_PMIC_WD_RESET_S2_TIMER (at 0x855)"
        set &access:&cmd_addr %l (0x8008550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   S2_TIMER                                 = "
    tree.end
    tree "PON_PMIC_WD_RESET_S2_CTL"
      sgroup "PON_PMIC_WD_RESET_S2_CTL (at 0x856)"
        set &access:&cmd_addr %l (0x8008560|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8560|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_PMIC_WD_RESET_S2_CTL2"
      sgroup "PON_PMIC_WD_RESET_S2_CTL2 (at 0x857)"
        set &access:&cmd_addr %l (0x8008570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_PMIC_WD_RESET_PET"
      sgroup "PON_PMIC_WD_RESET_PET (at 0x858)"
        set &access:&cmd_addr %l (0x8008580|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8580|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   WATCHDOG_PET                             = " "0 (reserved),1 (PET_WD)"
    tree.end
    tree "PON_PS_HOLD_RESET_CTL"
      sgroup "PON_PS_HOLD_RESET_CTL (at 0x85a)"
        set &access:&cmd_addr %l (0x80085a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x85a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_PS_HOLD_RESET_CTL2"
      sgroup "PON_PS_HOLD_RESET_CTL2 (at 0x85b)"
        set &access:&cmd_addr %l (0x80085b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x85b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_SW_RESET_S2_CTL"
      sgroup "PON_SW_RESET_S2_CTL (at 0x862)"
        set &access:&cmd_addr %l (0x8008620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_SW_RESET_S2_CTL2"
      sgroup "PON_SW_RESET_S2_CTL2 (at 0x863)"
        set &access:&cmd_addr %l (0x8008630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_SW_RESET_GO"
      sgroup "PON_SW_RESET_GO (at 0x864)"
        set &access:&cmd_addr %l (0x8008640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_RESET_GO                              = "
    tree.end
    tree "PON_OVERTEMP_RESET_CTL"
      sgroup "PON_OVERTEMP_RESET_CTL (at 0x866)"
        set &access:&cmd_addr %l (0x8008660|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8660|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_OVERTEMP_RESET_CTL2"
      sgroup "PON_OVERTEMP_RESET_CTL2 (at 0x867)"
        set &access:&cmd_addr %l (0x8008670|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8670|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_TFT_RESET_CTL"
      sgroup "PON_TFT_RESET_CTL (at 0x86a)"
        set &access:&cmd_addr %l (0x80086a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x86a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_TFT_RESET_CTL2"
      sgroup "PON_TFT_RESET_CTL2 (at 0x86b)"
        set &access:&cmd_addr %l (0x80086b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x86b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_PULL_CTL"
      sgroup "PON_PULL_CTL (at 0x870)"
        set &access:&cmd_addr %l (0x8008700|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8700|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PON1_PD_EN                               = " "0 (PD_DISABLED),1 (PD_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_N_PU_EN                           = " "0 (PD_DISABLED),1 (PD_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   KPDPWR_N_PU_EN                           = " "0 (PD_DISABLED),1 (PD_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RESIN_N_PU_EN                            = " "0 (PD_DISABLED),1 (PD_ENABLED)"
    tree.end
    tree "PON_DEBOUNCE_CTL"
      sgroup "PON_DEBOUNCE_CTL (at 0x871)"
        set &access:&cmd_addr %l (0x8008710|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8710|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DEBOUNCE                                 = " "0 (MS_15P6),1 (MS_31P2),2 (MS_62P5),3 (MS_125),4 (MS_250),5 (MS_500),6 (MS_1000),7 (MS_2000)"
    tree.end
    tree "PON_RESET_S3_SRC"
      sgroup "PON_RESET_S3_SRC (at 0x874)"
        set &access:&cmd_addr %l (0x8008740|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8740|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   RESET_S3_SOURCE                          = " "0 (KPDPWR_N),1 (RESIN_N),2 (KPDPWR_AND_RESIN),3 (KPDPWR_OR_RESIN)"
    tree.end
    tree "PON_RESET_S3_TIMER"
      sgroup "PON_RESET_S3_TIMER (at 0x875)"
        set &access:&cmd_addr %l (0x8008750|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8750|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S3_TIMER                                 = " "0 (IMMEDIATE),1 (SEC_2),2 (SEC_4),3 (SEC_8),4 (SEC_16),5 (SEC_32),6 (SEC_64),7 (SEC_128)"
    tree.end
    tree "PON_PON_TRIGGER_EN"
      sgroup "PON_PON_TRIGGER_EN (at 0x880)"
        set &access:&cmd_addr %l (0x8008800|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8800|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CBLPWR_N                                 = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PON1                                     = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   USB_CHG                                  = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DC_CHG                                   = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RTC                                      = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SMPL                                     = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_OPTION_BITS"
      sgroup "PON_OPTION_BITS (at 0x882)"
        set &access:&cmd_addr %l (0x8008820|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8820|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CLOCK_50K_EN                             = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MBG_EN                                   = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_PWR_EN                               = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_WATCHDOG_LOCK"
      sgroup "PON_WATCHDOG_LOCK (at 0x883)"
        set &access:&cmd_addr %l (0x8008830|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8830|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PMIC_WD_LOCK                             = " "0 (WD_UNLOCKED),1 (WD_LOCKED)"
    tree.end
    tree "PON_UVLO"
      sgroup "PON_UVLO (at 0x888)"
        set &access:&cmd_addr %l (0x8008880|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8880|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UVLO_DLY                                 = " "0 (IMMEDIATE),1 (MSEC_0P98),2 (MSEC_1P95),3 (MSEC_3P91),4 (MSEC_7P81),5 (MSEC_15P63),6 (MSEC_31P25),7 (MSEC_62P5)"
    tree.end
    tree "PON_AVDD_VPH"
      sgroup "PON_AVDD_VPH (at 0x88a)"
        set &access:&cmd_addr %l (0x80088a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AVDD_HPM_EN                              = " "0 (LPM),1 (HPM)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   AVDD_REF_OVR                             = " "0 (AUTO),1 (FORCE_MINI_BG)"
    tree.end
    tree "PON_PERPH_RB_SPARE"
      sgroup "PON_PERPH_RB_SPARE (at 0x88c)"
        set &access:&cmd_addr %l (0x80088c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SPARE                                    = "
    tree.end
    tree "PON_DVDD_RB_SPARE"
      sgroup "PON_DVDD_RB_SPARE (at 0x88d)"
        set &access:&cmd_addr %l (0x80088d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SPARE                                    = "
    tree.end
    tree "PON_XVDD_RB_SPARE"
      sgroup "PON_XVDD_RB_SPARE (at 0x88e)"
        set &access:&cmd_addr %l (0x80088e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SPARE                                    = "
    tree.end
    tree "PON_SOFT_RB_SPARE"
      sgroup "PON_SOFT_RB_SPARE (at 0x88f)"
        set &access:&cmd_addr %l (0x80088f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SPARE                                    = "
    tree.end
    tree "PON_PON1_INTERFACE"
      sgroup "PON_PON1_INTERFACE (at 0x890)"
        set &access:&cmd_addr %l (0x8008900|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8900|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PON_OUT                                  = " "0 (LOW),1 (HIGH)"
    tree.end
    tree "PON_PBS_INTERFACE"
      sgroup "PON_PBS_INTERFACE (at 0x891)"
        set &access:&cmd_addr %l (0x8008910|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8910|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ACK_NACK                                 = " "0 (NACK),1 (ACK)"
    tree.end
    tree "PON_FSM_CTL"
      sgroup "PON_FSM_CTL (at 0x894)"
        set &access:&cmd_addr %l (0x8008940|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8940|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SEL_FSM                                  = "
    tree.end
    tree "PON_FSM_STATUS"
      sgroup "PON_FSM_STATUS (at 0x895)"
        set &access:&cmd_addr %l (0x8008950|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8950|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FSM_STATE                                = "
    tree.end
    tree "PON_SEC_ACCESS"
      sgroup "PON_SEC_ACCESS (at 0x8d0)"
        set &access:&cmd_addr %l (0x8008d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PON_PERPH_RESET_CTL2"
      sgroup "PON_PERPH_RESET_CTL2 (at 0x8d9)"
        set &access:&cmd_addr %l (0x8008d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "PON_PERPH_RESET_CTL3"
      sgroup "PON_PERPH_RESET_CTL3 (at 0x8da)"
        set &access:&cmd_addr %l (0x8008da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "PON_PERPH_RESET_CTL4"
      sgroup "PON_PERPH_RESET_CTL4 (at 0x8db)"
        set &access:&cmd_addr %l (0x8008db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PON_INT_TEST1"
      sgroup "PON_INT_TEST1 (at 0x8e0)"
        set &access:&cmd_addr %l (0x8008e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_INT_TEST_VAL"
      sgroup "PON_INT_TEST_VAL (at 0x8e1)"
        set &access:&cmd_addr %l (0x8008e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0, 1"
    tree.end
    tree "PON_TEST1"
      sgroup "PON_TEST1 (at 0x8e2)"
        set &access:&cmd_addr %l (0x8008e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UVLO_TEST_EN                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FORCE_VPH_MAX                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FORCE_AVDD_OK                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FAST_ON                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FORCE_ON                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BYPASS_TRIM_COPY                         = " "0, 1"
    tree.end
    tree "PON_TEST2"
      sgroup "PON_TEST2 (at 0x8e3)"
        set &access:&cmd_addr %l (0x8008e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ATEST2_AVDD                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ATEST2_DVDD                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ATEST2_AVDD_OK                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ATEST1_VBG                               = " "0, 1"
    tree.end
    tree "PON_TEST3"
      sgroup "PON_TEST3 (at 0x8e4)"
        set &access:&cmd_addr %l (0x8008e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   DTEST_EN                                 = "
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PON_WARM_REASON_CLEAR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USE_MSME_FOR_DVDD                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STAY_ON                                  = " "0, 1"
    tree.end
    tree "PON_TEST5"
      sgroup "PON_TEST5 (at 0x8e6)"
        set &access:&cmd_addr %l (0x8008e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   MASK_DVDD_RB                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MASK_SHUTDOWN1_RB                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MASK_SHUTDOWN2_RB                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MASK_WARM_RB                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MASK_GLOBAL_SOFT_RB                      = " "0, 1"
    tree.end
    tree "PON_VMAX_SEL"
      sgroup "PON_VMAX_SEL (at 0x8e7)"
        set &access:&cmd_addr %l (0x8008e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VMAX_SEL                                 = "
    tree.end
    tree "PON_TRIM_NUM"
      sgroup "PON_TRIM_NUM (at 0x8f0)"
        set &access:&cmd_addr %l (0x8008f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "PON_PON_TRIM"
      sgroup "PON_PON_TRIM (at 0x8f1)"
        set &access:&cmd_addr %l (0x8008f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PON_BG_TRIM                              = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   AVDD_REG_TRIM                            = "
    tree.end
    tree "PON_PON_CNTL_2_TRIM"
      sgroup "PON_PON_CNTL_2_TRIM (at 0x8f2)"
        set &access:&cmd_addr %l (0x8008f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   UVLO_THRESH                              = "
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   UVLO_VOLT_HYST                           = " "0, 1, 2, 3"
    tree.end
  tree.end
tree.end
tree "PWM_3D"
  tree "PWM_3D"
    tree "PWM_3D_REVISION1"
      sgroup "PWM_3D_REVISION1 (at 0x1bc00)"
        set &access:&cmd_addr %l (0x80bc000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbc000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PWM_3D_REVISION2"
      sgroup "PWM_3D_REVISION2 (at 0x1bc01)"
        set &access:&cmd_addr %l (0x80bc010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbc010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PWM_3D_PERPH_TYPE"
      sgroup "PWM_3D_PERPH_TYPE (at 0x1bc04)"
        set &access:&cmd_addr %l (0x80bc040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbc040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PWM_3D_PERPH_SUBTYPE"
      sgroup "PWM_3D_PERPH_SUBTYPE (at 0x1bc05)"
        set &access:&cmd_addr %l (0x80bc050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbc050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PWM_3D_PWM_SOURCE_SEL"
      sgroup "PWM_3D_PWM_SOURCE_SEL (at 0x1bc45)"
        set &access:&cmd_addr %l (0x80bc450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbc450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_SOURCE                               = " "0 (PWM_SRC_LPG0),1 (PWM_SRC_LPG1),2 (PWM_SRC_LPG2),3 (PWM_SRC_LPG3),4 (PWM_SRC_LPG4),5 (PWM_SRC_LPG5),6 (PWM_SRC_LPG6),7 (PWM_SRC_LPG7)"
    tree.end
    tree "PWM_3D_ENABLE_CONTROL"
      sgroup "PWM_3D_ENABLE_CONTROL (at 0x1bc46)"
        set &access:&cmd_addr %l (0x80bc460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbc460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_3D_PWM                                = " "0 (PWM_3D_DIS),1 (PWM_3D_EN)"
    tree.end
    tree "PWM_3D_PHASE_SELECT"
      sgroup "PWM_3D_PHASE_SELECT (at 0x1bc47)"
        set &access:&cmd_addr %l (0x80bc470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbc470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PHASE_SEL                                = "
    tree.end
    tree "PWM_3D_SEC_ACCESS"
      sgroup "PWM_3D_SEC_ACCESS (at 0x1bcd0)"
        set &access:&cmd_addr %l (0x80bcd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbcd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PWM_3D_PERPH_RESET_CTL2"
      sgroup "PWM_3D_PERPH_RESET_CTL2 (at 0x1bcd9)"
        set &access:&cmd_addr %l (0x80bcd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbcd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PWM_3D_PERPH_RESET_CTL3"
      sgroup "PWM_3D_PERPH_RESET_CTL3 (at 0x1bcda)"
        set &access:&cmd_addr %l (0x80bcda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbcda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PWM_3D_PERPH_RESET_CTL4"
      sgroup "PWM_3D_PERPH_RESET_CTL4 (at 0x1bcdb)"
        set &access:&cmd_addr %l (0x80bcdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xbcdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "REVID"
  tree "REVID"
    tree "REVID_REVISION1"
      sgroup "REVID_REVISION1 (at 0x100)"
        set &access:&cmd_addr %l (0x8001000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "REVID_REVISION2"
      sgroup "REVID_REVISION2 (at 0x101)"
        set &access:&cmd_addr %l (0x8001010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VARIANT                                  = "
    tree.end
    tree "REVID_REVISION3"
      sgroup "REVID_REVISION3 (at 0x102)"
        set &access:&cmd_addr %l (0x8001020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   METAL                                    = "
    tree.end
    tree "REVID_REVISION4"
      sgroup "REVID_REVISION4 (at 0x103)"
        set &access:&cmd_addr %l (0x8001030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ALL_LAYER                                = "
    tree.end
    tree "REVID_PERPH_TYPE"
      sgroup "REVID_PERPH_TYPE (at 0x104)"
        set &access:&cmd_addr %l (0x8001040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "REVID_PERPH_SUBTYPE"
      sgroup "REVID_PERPH_SUBTYPE (at 0x105)"
        set &access:&cmd_addr %l (0x8001050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "REVID_STATUS1"
      sgroup "REVID_STATUS1 (at 0x108)"
        set &access:&cmd_addr %l (0x8001080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   OP4                                      = " "0 (OP4_GND),1 (reserved),2 (OP4_HIZ),3 (OP4_VDD)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OP3                                      = " "0 (OP3_GND),1 (reserved),2 (OP3_HIZ),3 (OP3_VDD)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   OP2                                      = " "0 (OP2_GND),1 (reserved),2 (OP2_HIZ),3 (OP2_VDD)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OP1                                      = " "0 (OP1_GND),1 (reserved),2 (OP1_HIZ),3 (OP1_VDD)"
    tree.end
    tree "REVID_SEC_ACCESS"
      sgroup "REVID_SEC_ACCESS (at 0x1d0)"
        set &access:&cmd_addr %l (0x8001d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "REVID_TEST1"
      sgroup "REVID_TEST1 (at 0x1e0)"
        set &access:&cmd_addr %l (0x8001e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FORCE_ON                                 = " "0 (FORCE_ON_DISABLED),1 (FORCE_ON_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST                                    = " "0 (DTEST_DISABLED),1 (DTEST_OPT1),2 (DTEST_OPT2),3 (DTEST_OPT3),4 (DTEST_OPT4),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
  tree.end
tree.end
tree "RF_CLK1"
  tree "RF_CLK1"
    tree "RF_CLK1_REVISION1"
      sgroup "RF_CLK1_REVISION1 (at 0x5400)"
        set &access:&cmd_addr %l (0x8054000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "RF_CLK1_REVISION2"
      sgroup "RF_CLK1_REVISION2 (at 0x5401)"
        set &access:&cmd_addr %l (0x8054010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "RF_CLK1_REVISION3"
      sgroup "RF_CLK1_REVISION3 (at 0x5402)"
        set &access:&cmd_addr %l (0x8054020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "RF_CLK1_REVISION4"
      sgroup "RF_CLK1_REVISION4 (at 0x5403)"
        set &access:&cmd_addr %l (0x8054030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "RF_CLK1_PERPH_TYPE"
      sgroup "RF_CLK1_PERPH_TYPE (at 0x5404)"
        set &access:&cmd_addr %l (0x8054040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "RF_CLK1_PERPH_SUBTYPE"
      sgroup "RF_CLK1_PERPH_SUBTYPE (at 0x5405)"
        set &access:&cmd_addr %l (0x8054050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "RF_CLK1_STATUS1"
      sgroup "RF_CLK1_STATUS1 (at 0x5408)"
        set &access:&cmd_addr %l (0x8054080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_OK                                   = " "0 (RFCLK_OFF),1 (RFCLK_ON)"
    tree.end
    tree "RF_CLK1_DRV_CTL1"
      sgroup "RF_CLK1_DRV_CTL1 (at 0x5444)"
        set &access:&cmd_addr %l (0x8054440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUT_DRV                                  = " "0 (ONE_X),1 (TWO_X),2 (THREE_X),3 (FOUR_X)"
    tree.end
    tree "RF_CLK1_EN_CTL"
      sgroup "RF_CLK1_EN_CTL (at 0x5446)"
        set &access:&cmd_addr %l (0x8054460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_EN                                   = " "0 (RFCLK_NOT_FORCE),1 (RFCLK_FORCE_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PC_POLARITY                              = " "0 (POS_PINCONTROL_POLARITY),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_PC_EN                             = " "0 (NOT_FOLLOW_PIN),1 (FOLLOW_PIN)"
    tree.end
    tree "RF_CLK1_PD_CTL"
      sgroup "RF_CLK1_PD_CTL (at 0x5448)"
        set &access:&cmd_addr %l (0x8054480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PULLDN_DIS),1 (PULLDN_EN)"
    tree.end
    tree "RF_CLK1_SEC_ACCESS"
      sgroup "RF_CLK1_SEC_ACCESS (at 0x54d0)"
        set &access:&cmd_addr %l (0x8054d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "RF_CLK1_PERPH_RESET_CTL1"
      sgroup "RF_CLK1_PERPH_RESET_CTL1 (at 0x54d8)"
        set &access:&cmd_addr %l (0x8054d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (RFCLK_NOT_FORCE),1 (RFCLK_FORCE_EN)"
    tree.end
    tree "RF_CLK1_PERPH_RESET_CTL2"
      sgroup "RF_CLK1_PERPH_RESET_CTL2 (at 0x54d9)"
        set &access:&cmd_addr %l (0x8054d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "RF_CLK1_PERPH_RESET_CTL3"
      sgroup "RF_CLK1_PERPH_RESET_CTL3 (at 0x54da)"
        set &access:&cmd_addr %l (0x8054da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "RF_CLK1_PERPH_RESET_CTL4"
      sgroup "RF_CLK1_PERPH_RESET_CTL4 (at 0x54db)"
        set &access:&cmd_addr %l (0x8054db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x54db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NO_RESET),1 (RESET_MODULE)"
    tree.end
  tree.end
tree.end
tree "RF_CLK2"
  tree "RF_CLK2"
    tree "RF_CLK2_REVISION1"
      sgroup "RF_CLK2_REVISION1 (at 0x5500)"
        set &access:&cmd_addr %l (0x8055000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "RF_CLK2_REVISION2"
      sgroup "RF_CLK2_REVISION2 (at 0x5501)"
        set &access:&cmd_addr %l (0x8055010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "RF_CLK2_REVISION3"
      sgroup "RF_CLK2_REVISION3 (at 0x5502)"
        set &access:&cmd_addr %l (0x8055020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "RF_CLK2_REVISION4"
      sgroup "RF_CLK2_REVISION4 (at 0x5503)"
        set &access:&cmd_addr %l (0x8055030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "RF_CLK2_PERPH_TYPE"
      sgroup "RF_CLK2_PERPH_TYPE (at 0x5504)"
        set &access:&cmd_addr %l (0x8055040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "RF_CLK2_PERPH_SUBTYPE"
      sgroup "RF_CLK2_PERPH_SUBTYPE (at 0x5505)"
        set &access:&cmd_addr %l (0x8055050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "RF_CLK2_STATUS1"
      sgroup "RF_CLK2_STATUS1 (at 0x5508)"
        set &access:&cmd_addr %l (0x8055080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_OK                                   = " "0 (RFCLK_OFF),1 (RFCLK_ON)"
    tree.end
    tree "RF_CLK2_DRV_CTL1"
      sgroup "RF_CLK2_DRV_CTL1 (at 0x5544)"
        set &access:&cmd_addr %l (0x8055440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUT_DRV                                  = " "0 (ONE_X),1 (TWO_X),2 (THREE_X),3 (FOUR_X)"
    tree.end
    tree "RF_CLK2_EN_CTL"
      sgroup "RF_CLK2_EN_CTL (at 0x5546)"
        set &access:&cmd_addr %l (0x8055460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_EN                                   = " "0 (RFCLK_NOT_FORCE),1 (RFCLK_FORCE_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PC_POLARITY                              = " "0 (POS_PINCONTROL_POLARITY),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_PC_EN                             = " "0 (NOT_FOLLOW_PIN),1 (FOLLOW_PIN)"
    tree.end
    tree "RF_CLK2_PD_CTL"
      sgroup "RF_CLK2_PD_CTL (at 0x5548)"
        set &access:&cmd_addr %l (0x8055480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PULLDN_DIS),1 (PULLDN_EN)"
    tree.end
    tree "RF_CLK2_SEC_ACCESS"
      sgroup "RF_CLK2_SEC_ACCESS (at 0x55d0)"
        set &access:&cmd_addr %l (0x8055d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "RF_CLK2_PERPH_RESET_CTL1"
      sgroup "RF_CLK2_PERPH_RESET_CTL1 (at 0x55d8)"
        set &access:&cmd_addr %l (0x8055d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (RFCLK_NOT_FORCE),1 (RFCLK_FORCE_EN)"
    tree.end
    tree "RF_CLK2_PERPH_RESET_CTL2"
      sgroup "RF_CLK2_PERPH_RESET_CTL2 (at 0x55d9)"
        set &access:&cmd_addr %l (0x8055d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "RF_CLK2_PERPH_RESET_CTL3"
      sgroup "RF_CLK2_PERPH_RESET_CTL3 (at 0x55da)"
        set &access:&cmd_addr %l (0x8055da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "RF_CLK2_PERPH_RESET_CTL4"
      sgroup "RF_CLK2_PERPH_RESET_CTL4 (at 0x55db)"
        set &access:&cmd_addr %l (0x8055db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x55db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NO_RESET),1 (RESET_MODULE)"
    tree.end
  tree.end
tree.end
tree "RF_CLK3"
  tree "RF_CLK3"
    tree "RF_CLK3_REVISION1"
      sgroup "RF_CLK3_REVISION1 (at 0x5600)"
        set &access:&cmd_addr %l (0x8056000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "RF_CLK3_REVISION2"
      sgroup "RF_CLK3_REVISION2 (at 0x5601)"
        set &access:&cmd_addr %l (0x8056010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "RF_CLK3_REVISION3"
      sgroup "RF_CLK3_REVISION3 (at 0x5602)"
        set &access:&cmd_addr %l (0x8056020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "RF_CLK3_REVISION4"
      sgroup "RF_CLK3_REVISION4 (at 0x5603)"
        set &access:&cmd_addr %l (0x8056030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "RF_CLK3_PERPH_TYPE"
      sgroup "RF_CLK3_PERPH_TYPE (at 0x5604)"
        set &access:&cmd_addr %l (0x8056040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "RF_CLK3_PERPH_SUBTYPE"
      sgroup "RF_CLK3_PERPH_SUBTYPE (at 0x5605)"
        set &access:&cmd_addr %l (0x8056050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "RF_CLK3_STATUS1"
      sgroup "RF_CLK3_STATUS1 (at 0x5608)"
        set &access:&cmd_addr %l (0x8056080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_OK                                   = " "0 (RFCLK_OFF),1 (RFCLK_ON)"
    tree.end
    tree "RF_CLK3_DRV_CTL1"
      sgroup "RF_CLK3_DRV_CTL1 (at 0x5644)"
        set &access:&cmd_addr %l (0x8056440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUT_DRV                                  = " "0 (ONE_X),1 (TWO_X),2 (THREE_X),3 (FOUR_X)"
    tree.end
    tree "RF_CLK3_EN_CTL"
      sgroup "RF_CLK3_EN_CTL (at 0x5646)"
        set &access:&cmd_addr %l (0x8056460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLK_EN                                   = " "0 (RFCLK_NOT_FORCE),1 (RFCLK_FORCE_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PC_POLARITY                              = " "0 (POS_PINCONTROL_POLARITY),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_PC_EN                             = " "0 (NOT_FOLLOW_PIN),1 (FOLLOW_PIN)"
    tree.end
    tree "RF_CLK3_PD_CTL"
      sgroup "RF_CLK3_PD_CTL (at 0x5648)"
        set &access:&cmd_addr %l (0x8056480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PULLDN_DIS),1 (PULLDN_EN)"
    tree.end
    tree "RF_CLK3_SEC_ACCESS"
      sgroup "RF_CLK3_SEC_ACCESS (at 0x56d0)"
        set &access:&cmd_addr %l (0x8056d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "RF_CLK3_PERPH_RESET_CTL1"
      sgroup "RF_CLK3_PERPH_RESET_CTL1 (at 0x56d8)"
        set &access:&cmd_addr %l (0x8056d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (RFCLK_NOT_FORCE),1 (RFCLK_FORCE_EN)"
    tree.end
    tree "RF_CLK3_PERPH_RESET_CTL2"
      sgroup "RF_CLK3_PERPH_RESET_CTL2 (at 0x56d9)"
        set &access:&cmd_addr %l (0x8056d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "RF_CLK3_PERPH_RESET_CTL3"
      sgroup "RF_CLK3_PERPH_RESET_CTL3 (at 0x56da)"
        set &access:&cmd_addr %l (0x8056da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "RF_CLK3_PERPH_RESET_CTL4"
      sgroup "RF_CLK3_PERPH_RESET_CTL4 (at 0x56db)"
        set &access:&cmd_addr %l (0x8056db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x56db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NO_RESET),1 (RESET_MODULE)"
    tree.end
  tree.end
tree.end
tree "RTC_ALARM"
  tree "RTC_ALARM"
    tree "RTC_ALARM_REVISION1"
      sgroup "RTC_ALARM_REVISION1 (at 0x6100)"
        set &access:&cmd_addr %l (0x8061000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "RTC_ALARM_REVISION2"
      sgroup "RTC_ALARM_REVISION2 (at 0x6101)"
        set &access:&cmd_addr %l (0x8061010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "RTC_ALARM_PERPH_TYPE"
      sgroup "RTC_ALARM_PERPH_TYPE (at 0x6104)"
        set &access:&cmd_addr %l (0x8061040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "RTC_ALARM_PERPH_SUBTYPE"
      sgroup "RTC_ALARM_PERPH_SUBTYPE (at 0x6105)"
        set &access:&cmd_addr %l (0x8061050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "RTC_ALARM_STATUS1"
      sgroup "RTC_ALARM_STATUS1 (at 0x6108)"
        set &access:&cmd_addr %l (0x8061080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RTC_ALARM_OK                             = " "0 (RTC_ALARM_DIS),1 (RTC_ALARM_EN)"
    tree.end
    tree "RTC_ALARM_INT_RT_STS"
      sgroup "RTC_ALARM_INT_RT_STS (at 0x6110)"
        set &access:&cmd_addr %l (0x8061100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM                                = " "0 (RTC_ALARM_NOT_EXPIRED),1 (RTC_ALARM_EXPIRED)"
    tree.end
    tree "RTC_ALARM_INT_SET_TYPE"
      sgroup "RTC_ALARM_INT_SET_TYPE (at 0x6111)"
        set &access:&cmd_addr %l (0x8061110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM                                = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "RTC_ALARM_INT_POLARITY_HIGH"
      sgroup "RTC_ALARM_INT_POLARITY_HIGH (at 0x6112)"
        set &access:&cmd_addr %l (0x8061120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM                                = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "RTC_ALARM_INT_POLARITY_LOW"
      sgroup "RTC_ALARM_INT_POLARITY_LOW (at 0x6113)"
        set &access:&cmd_addr %l (0x8061130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM                                = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "RTC_ALARM_INT_LATCHED_CLR"
      sgroup "RTC_ALARM_INT_LATCHED_CLR (at 0x6114)"
        set &access:&cmd_addr %l (0x8061140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM                                = " "0, 1"
    tree.end
    tree "RTC_ALARM_INT_EN_SET"
      sgroup "RTC_ALARM_INT_EN_SET (at 0x6115)"
        set &access:&cmd_addr %l (0x8061150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM                                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "RTC_ALARM_INT_EN_CLR"
      sgroup "RTC_ALARM_INT_EN_CLR (at 0x6116)"
        set &access:&cmd_addr %l (0x8061160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM                                = " "0, 1"
    tree.end
    tree "RTC_ALARM_INT_LATCHED_STS"
      sgroup "RTC_ALARM_INT_LATCHED_STS (at 0x6118)"
        set &access:&cmd_addr %l (0x8061180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM                                = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "RTC_ALARM_INT_PENDING_STS"
      sgroup "RTC_ALARM_INT_PENDING_STS (at 0x6119)"
        set &access:&cmd_addr %l (0x8061190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM                                = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "RTC_ALARM_INT_MID_SEL"
      sgroup "RTC_ALARM_INT_MID_SEL (at 0x611a)"
        set &access:&cmd_addr %l (0x80611a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x611a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "RTC_ALARM_INT_PRIORITY"
      sgroup "RTC_ALARM_INT_PRIORITY (at 0x611b)"
        set &access:&cmd_addr %l (0x80611b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x611b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "RTC_ALARM_ALARM_DATA0"
      sgroup "RTC_ALARM_ALARM_DATA0 (at 0x6140)"
        set &access:&cmd_addr %l (0x8061400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_ALARM_DATA0                          = "
    tree.end
    tree "RTC_ALARM_ALARM_DATA1"
      sgroup "RTC_ALARM_ALARM_DATA1 (at 0x6141)"
        set &access:&cmd_addr %l (0x8061410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_ALARM_DATA1                          = "
    tree.end
    tree "RTC_ALARM_ALARM_DATA2"
      sgroup "RTC_ALARM_ALARM_DATA2 (at 0x6142)"
        set &access:&cmd_addr %l (0x8061420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_ALARM_DATA2                          = "
    tree.end
    tree "RTC_ALARM_ALARM_DATA3"
      sgroup "RTC_ALARM_ALARM_DATA3 (at 0x6143)"
        set &access:&cmd_addr %l (0x8061430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_ALARM_DATA3                          = "
    tree.end
    tree "RTC_ALARM_EN_CTL1"
      sgroup "RTC_ALARM_EN_CTL1 (at 0x6146)"
        set &access:&cmd_addr %l (0x8061460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ALARM_EN                                 = " "0 (RTC_ALARM_DIS),1 (RTC_ALARM_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ABORT_EN                                 = " "0 (RTC_STARTUP_DOESNT_ABORT),1 (RTC_STARTUP_ABORT_EN)"
    tree.end
    tree "RTC_ALARM_ALARM_CLR"
      sgroup "RTC_ALARM_ALARM_CLR (at 0x6148)"
        set &access:&cmd_addr %l (0x8061480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ALARM_CLR                                = " "0, 1"
    tree.end
    tree "RTC_ALARM_SEC_ACCESS"
      sgroup "RTC_ALARM_SEC_ACCESS (at 0x61d0)"
        set &access:&cmd_addr %l (0x8061d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "RTC_ALARM_PERPH_RESET_CTL1"
      sgroup "RTC_ALARM_PERPH_RESET_CTL1 (at 0x61d8)"
        set &access:&cmd_addr %l (0x8061d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (DEFAULT_DIS),1 (DEFAULT_EN)"
    tree.end
    tree "RTC_ALARM_PERPH_RESET_CTL2"
      sgroup "RTC_ALARM_PERPH_RESET_CTL2 (at 0x61d9)"
        set &access:&cmd_addr %l (0x8061d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "RTC_ALARM_PERPH_RESET_CTL3"
      sgroup "RTC_ALARM_PERPH_RESET_CTL3 (at 0x61da)"
        set &access:&cmd_addr %l (0x8061da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "RTC_ALARM_PERPH_RESET_CTL4"
      sgroup "RTC_ALARM_PERPH_RESET_CTL4 (at 0x61db)"
        set &access:&cmd_addr %l (0x8061db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "RTC_ALARM_INT_TEST1"
      sgroup "RTC_ALARM_INT_TEST1 (at 0x61e0)"
        set &access:&cmd_addr %l (0x8061e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_DIS),1 (INT_TEST_EN)"
    tree.end
    tree "RTC_ALARM_INT_TEST_VAL"
      sgroup "RTC_ALARM_INT_TEST_VAL (at 0x61e1)"
        set &access:&cmd_addr %l (0x8061e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RTC_ALARM_TEST_VAL                       = " "0 (INT_TEST_OUT_0),1 (INT_TEST_OUT_1)"
    tree.end
  tree.end
tree.end
tree "RTC_TIMER"
  tree "RTC_TIMER"
    tree "RTC_TIMER_REVISION1"
      sgroup "RTC_TIMER_REVISION1 (at 0x6200)"
        set &access:&cmd_addr %l (0x8062000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "RTC_TIMER_REVISION2"
      sgroup "RTC_TIMER_REVISION2 (at 0x6201)"
        set &access:&cmd_addr %l (0x8062010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "RTC_TIMER_PERPH_TYPE"
      sgroup "RTC_TIMER_PERPH_TYPE (at 0x6204)"
        set &access:&cmd_addr %l (0x8062040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "RTC_TIMER_PERPH_SUBTYPE"
      sgroup "RTC_TIMER_PERPH_SUBTYPE (at 0x6205)"
        set &access:&cmd_addr %l (0x8062050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "RTC_TIMER_STATUS1"
      sgroup "RTC_TIMER_STATUS1 (at 0x6208)"
        set &access:&cmd_addr %l (0x8062080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TIMER_OK                                 = " "0 (TIMER_OFF),1 (TIMER_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0 (TIMER_NOT_EXPIRED),1 (TIMER_EXPIRED)"
    tree.end
    tree "RTC_TIMER_INT_RT_STS"
      sgroup "RTC_TIMER_INT_RT_STS (at 0x6210)"
        set &access:&cmd_addr %l (0x8062100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0 (TIMER_NOT_EXPIRED),1 (TIMER_EXPIRED)"
    tree.end
    tree "RTC_TIMER_INT_SET_TYPE"
      sgroup "RTC_TIMER_INT_SET_TYPE (at 0x6211)"
        set &access:&cmd_addr %l (0x8062110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "RTC_TIMER_INT_POLARITY_HIGH"
      sgroup "RTC_TIMER_INT_POLARITY_HIGH (at 0x6212)"
        set &access:&cmd_addr %l (0x8062120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "RTC_TIMER_INT_POLARITY_LOW"
      sgroup "RTC_TIMER_INT_POLARITY_LOW (at 0x6213)"
        set &access:&cmd_addr %l (0x8062130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "RTC_TIMER_INT_LATCHED_CLR"
      sgroup "RTC_TIMER_INT_LATCHED_CLR (at 0x6214)"
        set &access:&cmd_addr %l (0x8062140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0, 1"
    tree.end
    tree "RTC_TIMER_INT_EN_SET"
      sgroup "RTC_TIMER_INT_EN_SET (at 0x6215)"
        set &access:&cmd_addr %l (0x8062150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "RTC_TIMER_INT_EN_CLR"
      sgroup "RTC_TIMER_INT_EN_CLR (at 0x6216)"
        set &access:&cmd_addr %l (0x8062160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0, 1"
    tree.end
    tree "RTC_TIMER_INT_LATCHED_STS"
      sgroup "RTC_TIMER_INT_LATCHED_STS (at 0x6218)"
        set &access:&cmd_addr %l (0x8062180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "RTC_TIMER_INT_PENDING_STS"
      sgroup "RTC_TIMER_INT_PENDING_STS (at 0x6219)"
        set &access:&cmd_addr %l (0x8062190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED                            = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "RTC_TIMER_INT_MID_SEL"
      sgroup "RTC_TIMER_INT_MID_SEL (at 0x621a)"
        set &access:&cmd_addr %l (0x80621a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x621a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "RTC_TIMER_INT_PRIORITY"
      sgroup "RTC_TIMER_INT_PRIORITY (at 0x621b)"
        set &access:&cmd_addr %l (0x80621b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x621b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "RTC_TIMER_TIMER_DATA1"
      sgroup "RTC_TIMER_TIMER_DATA1 (at 0x6240)"
        set &access:&cmd_addr %l (0x8062400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TIMER_DATA1                              = "
    tree.end
    tree "RTC_TIMER_TIMER_DATA2"
      sgroup "RTC_TIMER_TIMER_DATA2 (at 0x6242)"
        set &access:&cmd_addr %l (0x8062420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TIMER_DATA2                              = "
    tree.end
    tree "RTC_TIMER_TIMER_MODE"
      sgroup "RTC_TIMER_TIMER_MODE (at 0x6245)"
        set &access:&cmd_addr %l (0x8062450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CONTINUOUS                               = " "0 (TIMER_STOPS),1 (TIMER_RESTARTS)"
    tree.end
    tree "RTC_TIMER_EN_CTL"
      sgroup "RTC_TIMER_EN_CTL (at 0x6246)"
        set &access:&cmd_addr %l (0x8062460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TIMER_EN                                 = " "0 (TIMER_DIS),1 (TIMER_EN)"
    tree.end
    tree "RTC_TIMER_TIMER_RDATA1"
      sgroup "RTC_TIMER_TIMER_RDATA1 (at 0x6248)"
        set &access:&cmd_addr %l (0x8062480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TIMER_RDATA1                             = "
    tree.end
    tree "RTC_TIMER_TIMER_RDATA2"
      sgroup "RTC_TIMER_TIMER_RDATA2 (at 0x6249)"
        set &access:&cmd_addr %l (0x8062490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TIMER_RDATA2                             = "
    tree.end
    tree "RTC_TIMER_SEC_ACCESS"
      sgroup "RTC_TIMER_SEC_ACCESS (at 0x62d0)"
        set &access:&cmd_addr %l (0x8062d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "RTC_TIMER_PERPH_RESET_CTL1"
      sgroup "RTC_TIMER_PERPH_RESET_CTL1 (at 0x62d8)"
        set &access:&cmd_addr %l (0x8062d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (DEFAULT_DIS),1 (DEFAULT_EN)"
    tree.end
    tree "RTC_TIMER_PERPH_RESET_CTL2"
      sgroup "RTC_TIMER_PERPH_RESET_CTL2 (at 0x62d9)"
        set &access:&cmd_addr %l (0x8062d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "RTC_TIMER_PERPH_RESET_CTL3"
      sgroup "RTC_TIMER_PERPH_RESET_CTL3 (at 0x62da)"
        set &access:&cmd_addr %l (0x8062da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "RTC_TIMER_PERPH_RESET_CTL4"
      sgroup "RTC_TIMER_PERPH_RESET_CTL4 (at 0x62db)"
        set &access:&cmd_addr %l (0x8062db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "RTC_TIMER_INT_TEST1"
      sgroup "RTC_TIMER_INT_TEST1 (at 0x62e0)"
        set &access:&cmd_addr %l (0x8062e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_DIS),1 (INT_TEST_EN)"
    tree.end
    tree "RTC_TIMER_INT_TEST_VAL"
      sgroup "RTC_TIMER_INT_TEST_VAL (at 0x62e1)"
        set &access:&cmd_addr %l (0x8062e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x62e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER_EXPIRED_TEST_VAL                   = " "0 (INT_TEST_OUT_0),1 (INT_TEST_OUT_1)"
    tree.end
  tree.end
tree.end
tree "RTC_WR"
  tree "RTC_WR"
    tree "RTC_WR_REVISION1"
      sgroup "RTC_WR_REVISION1 (at 0x6000)"
        set &access:&cmd_addr %l (0x8060000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "RTC_WR_REVISION2"
      sgroup "RTC_WR_REVISION2 (at 0x6001)"
        set &access:&cmd_addr %l (0x8060010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "RTC_WR_PERPH_TYPE"
      sgroup "RTC_WR_PERPH_TYPE (at 0x6004)"
        set &access:&cmd_addr %l (0x8060040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "RTC_WR_PERPH_SUBTYPE"
      sgroup "RTC_WR_PERPH_SUBTYPE (at 0x6005)"
        set &access:&cmd_addr %l (0x8060050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "RTC_WR_STATUS1"
      sgroup "RTC_WR_STATUS1 (at 0x6008)"
        set &access:&cmd_addr %l (0x8060080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RTC_OK                                   = " "0 (RTC_OFF),1 (RTC_ON)"
    tree.end
    tree "RTC_WR_INT_RT_STS"
      sgroup "RTC_WR_INT_RT_STS (at 0x6010)"
        set &access:&cmd_addr %l (0x8060100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ                                  = " "0 (RTC_1SEC_NOT_EXPIRED),1 (RTC_1SEC_EXPIRED)"
    tree.end
    tree "RTC_WR_INT_SET_TYPE"
      sgroup "RTC_WR_INT_SET_TYPE (at 0x6011)"
        set &access:&cmd_addr %l (0x8060110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ                                  = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "RTC_WR_INT_POLARITY_HIGH"
      sgroup "RTC_WR_INT_POLARITY_HIGH (at 0x6012)"
        set &access:&cmd_addr %l (0x8060120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ                                  = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "RTC_WR_INT_POLARITY_LOW"
      sgroup "RTC_WR_INT_POLARITY_LOW (at 0x6013)"
        set &access:&cmd_addr %l (0x8060130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ                                  = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "RTC_WR_INT_LATCHED_CLR"
      sgroup "RTC_WR_INT_LATCHED_CLR (at 0x6014)"
        set &access:&cmd_addr %l (0x8060140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ                                  = " "0, 1"
    tree.end
    tree "RTC_WR_INT_EN_SET"
      sgroup "RTC_WR_INT_EN_SET (at 0x6015)"
        set &access:&cmd_addr %l (0x8060150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ                                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "RTC_WR_INT_EN_CLR"
      sgroup "RTC_WR_INT_EN_CLR (at 0x6016)"
        set &access:&cmd_addr %l (0x8060160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ                                  = " "0, 1"
    tree.end
    tree "RTC_WR_INT_LATCHED_STS"
      sgroup "RTC_WR_INT_LATCHED_STS (at 0x6018)"
        set &access:&cmd_addr %l (0x8060180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ                                  = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "RTC_WR_INT_PENDING_STS"
      sgroup "RTC_WR_INT_PENDING_STS (at 0x6019)"
        set &access:&cmd_addr %l (0x8060190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ                                  = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "RTC_WR_INT_MID_SEL"
      sgroup "RTC_WR_INT_MID_SEL (at 0x601a)"
        set &access:&cmd_addr %l (0x80601a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x601a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "RTC_WR_INT_PRIORITY"
      sgroup "RTC_WR_INT_PRIORITY (at 0x601b)"
        set &access:&cmd_addr %l (0x80601b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x601b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "RTC_WR_WDATA0"
      sgroup "RTC_WR_WDATA0 (at 0x6040)"
        set &access:&cmd_addr %l (0x8060400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_WDATA0                               = "
    tree.end
    tree "RTC_WR_WDATA1"
      sgroup "RTC_WR_WDATA1 (at 0x6041)"
        set &access:&cmd_addr %l (0x8060410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_WDATA1                               = "
    tree.end
    tree "RTC_WR_WDATA2"
      sgroup "RTC_WR_WDATA2 (at 0x6042)"
        set &access:&cmd_addr %l (0x8060420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_WDATA2                               = "
    tree.end
    tree "RTC_WR_WDATA3"
      sgroup "RTC_WR_WDATA3 (at 0x6043)"
        set &access:&cmd_addr %l (0x8060430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_WDATA3                               = "
    tree.end
    tree "RTC_WR_TIME_ADJ"
      sgroup "RTC_WR_TIME_ADJ (at 0x6044)"
        set &access:&cmd_addr %l (0x8060440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   RTC_TIME_ADJ                             = "
    tree.end
    tree "RTC_WR_EN_CTL1"
      sgroup "RTC_WR_EN_CTL1 (at 0x6046)"
        set &access:&cmd_addr %l (0x8060460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RTC_EN                                   = " "0 (RTC_COUNTER_DIS),1 (RTC_COUNTER_EN)"
    tree.end
    tree "RTC_WR_RDATA0"
      sgroup "RTC_WR_RDATA0 (at 0x6048)"
        set &access:&cmd_addr %l (0x8060480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_RDATA0                               = "
    tree.end
    tree "RTC_WR_RDATA1"
      sgroup "RTC_WR_RDATA1 (at 0x6049)"
        set &access:&cmd_addr %l (0x8060490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_RDATA1                               = "
    tree.end
    tree "RTC_WR_RDATA2"
      sgroup "RTC_WR_RDATA2 (at 0x604a)"
        set &access:&cmd_addr %l (0x80604a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x604a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_RDATA2                               = "
    tree.end
    tree "RTC_WR_RDATA3"
      sgroup "RTC_WR_RDATA3 (at 0x604b)"
        set &access:&cmd_addr %l (0x80604b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x604b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RTC_RDATA3                               = "
    tree.end
    tree "RTC_WR_SEC_ACCESS"
      sgroup "RTC_WR_SEC_ACCESS (at 0x60d0)"
        set &access:&cmd_addr %l (0x8060d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "RTC_WR_PERPH_RESET_CTL1"
      sgroup "RTC_WR_PERPH_RESET_CTL1 (at 0x60d8)"
        set &access:&cmd_addr %l (0x8060d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (DEFAULT_DIS),1 (DEFAULT_EN)"
    tree.end
    tree "RTC_WR_PERPH_RESET_CTL2"
      sgroup "RTC_WR_PERPH_RESET_CTL2 (at 0x60d9)"
        set &access:&cmd_addr %l (0x8060d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "RTC_WR_PERPH_RESET_CTL3"
      sgroup "RTC_WR_PERPH_RESET_CTL3 (at 0x60da)"
        set &access:&cmd_addr %l (0x8060da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "RTC_WR_PERPH_RESET_CTL4"
      sgroup "RTC_WR_PERPH_RESET_CTL4 (at 0x60db)"
        set &access:&cmd_addr %l (0x8060db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "RTC_WR_INT_TEST1"
      sgroup "RTC_WR_INT_TEST1 (at 0x60e0)"
        set &access:&cmd_addr %l (0x8060e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_DIS),1 (INT_TEST_EN)"
    tree.end
    tree "RTC_WR_INT_TEST_VAL"
      sgroup "RTC_WR_INT_TEST_VAL (at 0x60e1)"
        set &access:&cmd_addr %l (0x8060e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RTC_1HZ_TEST_VAL                         = " "0 (INT_TEST_OUT_0),1 (INT_TEST_OUT_1)"
    tree.end
    tree "RTC_WR_TEST1"
      sgroup "RTC_WR_TEST1 (at 0x60e2)"
        set &access:&cmd_addr %l (0x8060e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DTEST1                                   = " "0 (NORMAL),1 (RTC_1HZ_ON_DTEST1)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DIV20CLKSEL                              = " "0 (NORMAL),1 (ALT_SLP_ON_DIV20)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DIVSEL                                   = " "0 (DIV16384),1 (DIV20)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BYPASSDIV2                               = " "0 (DIV2),1 (BYPASS_DIV2)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0 (NONE),1 (CLK_1HZ),2 (CLK_1HZ_LATCH),3 (LOAD),4 (ABORT_ALARM),5 (ALARM_INT),6 (RTC_ALARM),7 (ALARM_RST_N)"
    tree.end
  tree.end
tree.end
tree "S1_CTRL"
  tree "S1_CTRL"
    tree "S1_CTRL_REVISION1"
      sgroup "S1_CTRL_REVISION1 (at 0x11400)"
        set &access:&cmd_addr %l (0x8014000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S1_CTRL_REVISION2"
      sgroup "S1_CTRL_REVISION2 (at 0x11401)"
        set &access:&cmd_addr %l (0x8014010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S1_CTRL_REVISION3"
      sgroup "S1_CTRL_REVISION3 (at 0x11402)"
        set &access:&cmd_addr %l (0x8014020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S1_CTRL_REVISION4"
      sgroup "S1_CTRL_REVISION4 (at 0x11403)"
        set &access:&cmd_addr %l (0x8014030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S1_CTRL_PERPH_TYPE"
      sgroup "S1_CTRL_PERPH_TYPE (at 0x11404)"
        set &access:&cmd_addr %l (0x8014040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S1_CTRL_PERPH_SUBTYPE"
      sgroup "S1_CTRL_PERPH_SUBTYPE (at 0x11405)"
        set &access:&cmd_addr %l (0x8014050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S1_CTRL_STATUS_1"
      sgroup "S1_CTRL_STATUS_1 (at 0x11408)"
        set &access:&cmd_addr %l (0x8014080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK_FLAG                             = " "0 (VREG_OK_FLAG_FALSE),1 (VREG_OK_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VREG_FAULT_FLAG                          = " "0 (VREG_FAULT_FLAG_FALSE),1 (VREG_FAULT_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FLAG                                 = " "0 (NPM_FLAG_FALSE),1 (NPM_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE_FLAG                        = " "0 (STEPPER_DONE_FLAG_FALSE),1 (STEPPER_DONE_FLAG_TRUE)"
    tree.end
    tree "S1_CTRL_STATUS_2"
      sgroup "S1_CTRL_STATUS_2 (at 0x11409)"
        set &access:&cmd_addr %l (0x8014090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ILS_FLAG                                 = " "0 (ILS_FLAG_FALSE),1 (ILS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ULS_FLAG                                 = " "0 (ULS_FLAG_FALSE),1 (ULS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LLS_FLAG                                 = " "0 (LLS_FLAG_FALSE),1 (LLS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   GPL_HI_FLAG                              = " "0 (GPL_HI_FLAG_FALSE),1 (GPL_HI_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPL_LO_FLAG                              = " "0 (GPL_LO_FLAG_FALSE),1 (GPL_LO_FLAG_TRUE)"
    tree.end
    tree "S1_CTRL_STATUS_3"
      sgroup "S1_CTRL_STATUS_3 (at 0x1140a)"
        set &access:&cmd_addr %l (0x80140a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x140a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IDAC_CAL_FAULT                           = " "0 (IDAC_CAL_FAULT_FALSE),1 (IDAC_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CORR_CAL_FAULT                           = " "0 (CORR_CAL_FAULT_FALSE),1 (CORR_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PWM_CAL_FAULT                            = " "0 (PWM_CAL_FAULT_FALSE),1 (PWM_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PFM_CAL_FAULT                            = " "0 (PFM_CAL_FAULT_FALSE),1 (PFM_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PS_CAL_DONE_FLAG                         = " "0 (PS_CAL_DONE_FLAG_FALSE),1 (PS_CAL_DONE_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CAL_DONE_FLAG                            = " "0 (CTL_CAL_DONE_FLAG_FALSE),1 (CTL_CAL_DONE_FLAG_TRUE)"
    tree.end
    tree "S1_CTRL_STATUS_4"
      sgroup "S1_CTRL_STATUS_4 (at 0x1140b)"
        set &access:&cmd_addr %l (0x80140b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x140b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MODE_FSM_3                               = " "0 (MODE_FSM_3_IS_0),1 (MODE_FSM_3_IS_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MODE_FSM_2                               = " "0 (MODE_FSM_2_IS_0),1 (MODE_FSM_2_IS_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MODE_FSM_1                               = " "0 (MODE_FSM_1_IS_0),1 (MODE_FSM_1_IS_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MODE_FSM_0                               = " "0 (MODE_FSM_0_IS_0),1 (MODE_FSM_0_IS_1)"
    tree.end
    tree "S1_CTRL_INT_RT_STS"
      sgroup "S1_CTRL_INT_RT_STS (at 0x11410)"
        set &access:&cmd_addr %l (0x8014100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_FALSE),1 (VREG_FAULT_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_SET_TYPE"
      sgroup "S1_CTRL_INT_SET_TYPE (at 0x11411)"
        set &access:&cmd_addr %l (0x8014110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_LEVEL_TRIGGERED),1 (VREG_FAULT_INT_EDGE_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_LEVEL_TRIGGERED),1 (LIMIT_ERR_INT_EDGE_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_LEVEL_TRIGGERED),1 (VREG_OK_INT_EDGE_TRIGGERED)"
    tree.end
    tree "S1_CTRL_INT_POLARITY_HIGH"
      sgroup "S1_CTRL_INT_POLARITY_HIGH (at 0x11412)"
        set &access:&cmd_addr %l (0x8014120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_RISING_EDGE_TRIGGER_DISABL),1 (VREG_FAULT_INT_RISING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_RISING_EDGE_TRIGGER_DISABL),1 (LIMIT_ERR_INT_RISING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_RISING_EDGE_TRIGGER_DISABL),1 (VREG_OK_INT_RISING_EDGE_TRIGGER_ENABL)"
    tree.end
    tree "S1_CTRL_INT_POLARITY_LOW"
      sgroup "S1_CTRL_INT_POLARITY_LOW (at 0x11413)"
        set &access:&cmd_addr %l (0x8014130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_FALLING_EDGE_TRIGGER_DISABL),1 (VREG_FAULT_INT_FALLING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALLING_EDGE_TRIGGER_DISABL),1 (LIMIT_ERR_INT_FALLING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALLING_EDGE_TRIGGER_DISABL),1 (VREG_OK_INT_FALLING_EDGE_TRIGGER_ENABL)"
    tree.end
    tree "S1_CTRL_INT_LATCHED_CLR"
      sgroup "S1_CTRL_INT_LATCHED_CLR (at 0x11414)"
        set &access:&cmd_addr %l (0x8014140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0, 1"
    tree.end
    tree "S1_CTRL_INT_EN_SET"
      sgroup "S1_CTRL_INT_EN_SET (at 0x11415)"
        set &access:&cmd_addr %l (0x8014150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_DISABL),1 (VREG_FAULT_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_DISABL),1 (LIMIT_ERR_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_DISABL),1 (VREG_OK_INT_ENABL)"
    tree.end
    tree "S1_CTRL_INT_EN_CLR"
      sgroup "S1_CTRL_INT_EN_CLR (at 0x11416)"
        set &access:&cmd_addr %l (0x8014160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_DISABL),1 (VREG_FAULT_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_DISABL),1 (LIMIT_ERR_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_DISABL),1 (VREG_OK_INT_ENABL)"
    tree.end
    tree "S1_CTRL_INT_LATCHED_STS"
      sgroup "S1_CTRL_INT_LATCHED_STS (at 0x11418)"
        set &access:&cmd_addr %l (0x8014180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_NOT_TRIGGERED),1 (VREG_FAULT_INT_TRIGGERED_AND_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_NOT_TRIGGERED),1 (LIMIT_ERR_INT_TRIGGERED_AND_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_NOT_TRIGGERED),1 (VREG_OK_INT_TRIGGERED_AND_LATCHED)"
    tree.end
    tree "S1_CTRL_INT_PENDING_STS"
      sgroup "S1_CTRL_INT_PENDING_STS (at 0x11419)"
        set &access:&cmd_addr %l (0x8014190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_NOT_PENDING),1 (VREG_FAULT_INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_NOT_PENDING),1 (LIMIT_ERR_INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_NOT_PENDING),1 (VREG_OK_INT_PENDING)"
    tree.end
    tree "S1_CTRL_INT_MID_SEL"
      sgroup "S1_CTRL_INT_MID_SEL (at 0x1141a)"
        set &access:&cmd_addr %l (0x80141a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x141a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID_0),1 (MID_1),2 (MID_2),3 (MID_3)"
    tree.end
    tree "S1_CTRL_INT_PRIORITY"
      sgroup "S1_CTRL_INT_PRIORITY (at 0x1141b)"
        set &access:&cmd_addr %l (0x80141b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x141b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_0),1 (INT_PRIORITY_1)"
    tree.end
    tree "S1_CTRL_VOLTAGE_CTL1"
      sgroup "S1_CTRL_VOLTAGE_CTL1 (at 0x11440)"
        set &access:&cmd_addr %l (0x8014400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MV_RANGE                                 = " "0 (MV_RANGE_FALSE),1 (MV_RANGE_TRUE)"
    tree.end
    tree "S1_CTRL_VOLTAGE_CTL2"
      sgroup "S1_CTRL_VOLTAGE_CTL2 (at 0x11441)"
        set &access:&cmd_addr %l (0x8014410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET                                     = "
    tree.end
    tree "S1_CTRL_VSET_VALID"
      sgroup "S1_CTRL_VSET_VALID (at 0x11442)"
        set &access:&cmd_addr %l (0x8014420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_VALID                               = "
    tree.end
    tree "S1_CTRL_VOLTAGE_CTL3"
      sgroup "S1_CTRL_VOLTAGE_CTL3 (at 0x11444)"
        set &access:&cmd_addr %l (0x8014440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_VOFFSET_EN                           = " "0 (PFM_VOFFSET_EN_FALSE),1 (PFM_VOFFSET_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_VOFFSET                              = " "0, 1, 2, 3"
    tree.end
    tree "S1_CTRL_MODE_CTL"
      sgroup "S1_CTRL_MODE_CTL (at 0x11445)"
        set &access:&cmd_addr %l (0x8014450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (NPM_NOT_FORCED),1 (NPM_FORCED_IF_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_MODE_FALSE),1 (AUTO_MODE_TRUE)"
    tree.end
    tree "S1_CTRL_EN_CTL"
      sgroup "S1_CTRL_EN_CTL (at 0x11446)"
        set &access:&cmd_addr %l (0x8014460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (FTS_DISABL),1 (FTS_ENABL)"
    tree.end
    tree "S1_CTRL_PD_CTL"
      sgroup "S1_CTRL_PD_CTL (at 0x11448)"
        set &access:&cmd_addr %l (0x8014480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (STRONG_PD_ALWAYS_OFF),1 (STRONG_PD_ON_WHEN_FTS_IS_DISABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   WEAK_PD_EN                               = " "0 (WEAK_PD_DISABL_IN_PMIC_OFF_STATE),1 (SWEAK_PD_ENABL_IN_PMIC_OFF_STATE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   WEAK_PD_PFM                              = " "0 (WEAK_PD_DISABL_IN_PFM),1 (WEAK_PD_ENABL_IN_PFM)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   WEAK_PD_PWM                              = " "0 (WEAK_PD_DISABL_IN_PWM_AND_HCPFM),1 (WEAK_PD_ENABL_IN_PWM_AND_HCPFM)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LEAK_PD_EN                               = " "0 (LEAKAGE_PD_ALWAYS_OFF),1 (LEAKAGE_PD_ALWAYS_ENABL)"
    tree.end
    tree "S1_CTRL_FREQ_CTL"
      sgroup "S1_CTRL_FREQ_CTL (at 0x11450)"
        set &access:&cmd_addr %l (0x8014500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FREQ_CTL                                 = "
    tree.end
    tree "S1_CTRL_MULTIPHASE_CTL"
      sgroup "S1_CTRL_MULTIPHASE_CTL (at 0x11451)"
        set &access:&cmd_addr %l (0x8014510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MULTIPHASE_EN                            = " "0 (SINGLE_PHASE_CONFIG),1 (MULTI_PHASE_CONFIG)"
    tree.end
    tree "S1_CTRL_PHASE_CTL"
      sgroup "S1_CTRL_PHASE_CTL (at 0x11452)"
        set &access:&cmd_addr %l (0x8014520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PHASE_BALANCE_EN                         = " "0 (DISABL_ACTIVE_PHASE_CURRENT_BALANCING),1 (ENABL_ACTIVE_PHASE_CURRENT_BALANCING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PHASE_STANDBY_MODE                       = " "0 (STANDBY_OFF),1 (WARM_STANDBY)"
    tree.end
    tree "S1_CTRL_PHASE_ID"
      sgroup "S1_CTRL_PHASE_ID (at 0x11453)"
        set &access:&cmd_addr %l (0x8014530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_ID                                 = " "0 (PHASE_NUMBER_1),1 (PHASE_NUMBER_2),2 (PHASE_NUMBER_3),3 (PHASE_NUMBER_4)"
    tree.end
    tree "S1_CTRL_PHASE_CNT"
      sgroup "S1_CTRL_PHASE_CNT (at 0x11454)"
        set &access:&cmd_addr %l (0x8014540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_CNT                                = " "0 (PHASE_COUNT_1),1 (PHASE_COUNT_2),2 (PHASE_COUNT_4_NOT_3),3 (PHASE_COUNT_4)"
    tree.end
    tree "S1_CTRL_SPARE"
      sgroup "S1_CTRL_SPARE (at 0x11455)"
        set &access:&cmd_addr %l (0x8014550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0 (SPARE1_BIT_STATE_0),1 (SPARE1_BIT_STATE_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPARE_0                                  = " "0 (SPARE0_BIT_STATE_0),1 (SPARE0_BIT_STATE_1)"
    tree.end
    tree "S1_CTRL_SS_CTL"
      sgroup "S1_CTRL_SS_CTL (at 0x11460)"
        set &access:&cmd_addr %l (0x8014600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   SS_STEP                                  = " "0 (SOFT_START_VSTEP_1_LSB),1 (SOFT_START_VSTEP_2_LSB),2 (SOFT_START_VSTEP_4_LSB),3 (SOFT_START_VSTEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SS_DELAY                                 = " "0 (SOFT_START_TIME_STEP_417NS),1 (SOFT_START_TIME_STEP_833NS),2 (SOFT_START_TIME_STEP_1U67S),3 (SOFT_START_TIME_STEP_3U3S),4 (SOFT_START_TIME_STEP_6U7S),5 (SOFT_START_TIME_STEP_13U3S),6 (SOFT_START_TIME_STEP_26U7S),7 (SOFT_START_TIME_STEP_53U3S)"
    tree.end
    tree "S1_CTRL_VS_CTL"
      sgroup "S1_CTRL_VS_CTL (at 0x11461)"
        set &access:&cmd_addr %l (0x8014610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VS_EN                                    = " "0 (VSTEPPER_DISABL),1 (VSTEPPER_ENABL)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   VS_STEP                                  = " "0 (VSTEPPER_STEP_SIZE_1_LSB),1 (VSTEPPER_STEP_SIZE_2_LSB),2 (VSTEPPER_STEP_SIZE_4_LSB),3 (VSTEPPER_STEP_SIZE_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VS_DELAY                                 = " "0 (VSTEPPER_TIME_STEP_417NS),1 (VSTEPPER_TIME_STEP_833NS),2 (VSTEPPER_TIME_STEP_1U67S),3 (VSTEPPER_TIME_STEP_3U3S),4 (VSTEPPER_TIME_STEP_6U7S),5 (VSTEPPER_TIME_STEP_13U3S),6 (VSTEPPER_TIME_STEP_26U7S),7 (VSTEPPER_TIME_STEP_53U3S)"
    tree.end
    tree "S1_CTRL_CORR_CFG"
      sgroup "S1_CTRL_CORR_CFG (at 0x11462)"
        set &access:&cmd_addr %l (0x8014620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   CORR_MAG_CFG                             = " "0 (DC_ERROR_CORR_MAG_20MV),1 (DC_ERROR_CORR_MAG_30MV),2 (DC_ERROR_CORR_MAG_40MV),3 (DC_ERROR_CORR_MAG_50MV),4 (DC_ERROR_CORR_MAG_60MV),5 (DC_ERROR_CORR_MAG_70MV),6 (DC_ERROR_CORR_MAG_80MV),7 (DC_ERROR_CORR_MAG_90MV)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CORR_FILT_CFG                            = "
    tree.end
    tree "S1_CTRL_RAMP_CFG"
      sgroup "S1_CTRL_RAMP_CFG (at 0x11463)"
        set &access:&cmd_addr %l (0x8014630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   RAMP_COMPENS_CFG                         = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RAMP_CFG                                 = " "0 (RAMP_CFG_20MV),1 (RAMP_CFG_30MV),2 (RAMP_CFG_40MV),3 (RAMP_CFG_50MV),4 (DRAMP_CFG_60MV),5 (DRAMP_CFG_70MV),6 (RAMP_CFG_80MV),7 (DRAMP_CFG_90MV)"
    tree.end
    tree "S1_CTRL_COMPENS_CFG"
      sgroup "S1_CTRL_COMPENS_CFG (at 0x11464)"
        set &access:&cmd_addr %l (0x8014640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   BPHP_CFG                                 = " "0 (BP_HPF_10KHZ),1 (BP_HPF_20KHZ),2 (BP_HPF_40KHZ),3 (BP_HPF_80KHZ)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   BPLP_CFG                                 = " "0 (BP_LPF_200KHZ),1 (BP_LPF_400KHZ),2 (BP_LPF_600KHZ),3 (BP_LPF_800KHZ),4 (BP_LPF_1000KHZ),5 (BP_LPF_1200KHZ),6 (BP_LPF_NOT_SUPPORTED_110),7 (BP_LPF_NOT_SUPPORTED_111)"
    tree.end
    tree "S1_CTRL_CFG_VREG_OK"
      sgroup "S1_CTRL_CFG_VREG_OK (at 0x11465)"
        set &access:&cmd_addr %l (0x8014650|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14650|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_VREG_OK                              = " "0 (VREG_OK_COMP_DISABL),1 (VREG_OK_COMP_ENABL_IN_NPM),2 (VREG_OK_COMP_ENABL_IN_NPM_AND_LPM),3 (ILLEGAL_SETTING)"
    tree.end
    tree "S1_CTRL_CFG_VREG_FAULT"
      sgroup "S1_CTRL_CFG_VREG_FAULT (at 0x11466)"
        set &access:&cmd_addr %l (0x8014660|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14660|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_VREG_FAULT                           = " "0 (VREG_FAULT_FOLDBACK_COMP_DISABL),1 (VREG_FAULT_FOLDBACK_COMP_ENABL_IN_NPM),2 (VREG_FAULT_FOLDBACK_COMP_ENABL_IN_NPM_AND_LPM),3 (ILLEGAL_SETTING)"
    tree.end
    tree "S1_CTRL_CFG_PFM_COMP"
      sgroup "S1_CTRL_CFG_PFM_COMP (at 0x11467)"
        set &access:&cmd_addr %l (0x8014670|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14670|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_HYS                                  = " "0 (PFM_COMPARATOR_HYSTERESIS_5MV),1 (PFM_COMPARATOR_HYSTERESIS_10MV),2 (PFM_COMPARATOR_HYSTERESIS_20MV),3 (PFM_COMPARATOR_HYSTERESIS_40MV)"
    tree.end
    tree "S1_CTRL_UL_LL_CTL"
      sgroup "S1_CTRL_UL_LL_CTL (at 0x11468)"
        set &access:&cmd_addr %l (0x8014680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UL_EN                                    = " "0 (UL_STOP_DISABL),1 (UL_STOP_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LL_EN                                    = " "0 (LL_STOP_DISABL),1 (LL_STOP_ENABL)"
    tree.end
    tree "S1_CTRL_VSET_ULS"
      sgroup "S1_CTRL_VSET_ULS (at 0x11469)"
        set &access:&cmd_addr %l (0x8014690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_ULS                                 = "
    tree.end
    tree "S1_CTRL_ULS_VALID"
      sgroup "S1_CTRL_ULS_VALID (at 0x1146a)"
        set &access:&cmd_addr %l (0x80146a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x146a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ULS_VALID                                = "
    tree.end
    tree "S1_CTRL_VSET_LLS"
      sgroup "S1_CTRL_VSET_LLS (at 0x1146b)"
        set &access:&cmd_addr %l (0x80146b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x146b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_LLS                                 = "
    tree.end
    tree "S1_CTRL_LLS_VALID"
      sgroup "S1_CTRL_LLS_VALID (at 0x1146c)"
        set &access:&cmd_addr %l (0x80146c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x146c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LLS_VALID                                = "
    tree.end
    tree "S1_CTRL_GPL_HI"
      sgroup "S1_CTRL_GPL_HI (at 0x1146d)"
        set &access:&cmd_addr %l (0x80146d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x146d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_GPL_HI                              = "
    tree.end
    tree "S1_CTRL_GPL_LO"
      sgroup "S1_CTRL_GPL_LO (at 0x1146e)"
        set &access:&cmd_addr %l (0x80146e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x146e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_GPL_LO                              = "
    tree.end
    tree "S1_CTRL_FB_FILT_CFG"
      sgroup "S1_CTRL_FB_FILT_CFG (at 0x1146f)"
        set &access:&cmd_addr %l (0x80146f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x146f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FB_FILT_SERIES                           = " "0 (SERIES_FILTER_UNCONNECTED),1 (SERIES_FILTER_CONNECTED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FB_FILT_CFG                              = " "0 (PWM_COMP_TAIL_CURRENT_2UA),1 (PWM_COMP_TAIL_CURRENT_4UA),2 (PWM_COMP_TAIL_CURRENT_10UA),3 (PWM_COMP_TAIL_CURRENT_20UA)"
    tree.end
    tree "S1_CTRL_CFG_ATEST1"
      sgroup "S1_CTRL_CFG_ATEST1 (at 0x114b0)"
        set &access:&cmd_addr %l (0x8014b00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14b00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_ATEST1                               = " "0 (ATEST1_UNCONNECTED),1 (ATEST1_REFLO),2 (ATEST1_REFMID),3 (ATEST1_REFHI),4 (ATEST1_RBUFF_TERM),5 (ATEST1_IDACREF),6 (ATEST1_DACREF),7 (ATEST1_FB)"
    tree.end
    tree "S1_CTRL_CFG_ATEST2"
      sgroup "S1_CTRL_CFG_ATEST2 (at 0x114b1)"
        set &access:&cmd_addr %l (0x8014b10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14b10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_ATEST2                               = " "0 (ATEST2_UNCONNECTED),1 (ATEST2_VREG),2 (ATEST2_RMT_GND),3 (ATEST2_REF_GND),4 (ATEST2_REFVALL),5 (ATEST2_HOLDVALL),6 (ATEST2_RVDD_CTRL),7 (ATEST2_RVDD)"
    tree.end
    tree "S1_CTRL_CFG_ATEST3"
      sgroup "S1_CTRL_CFG_ATEST3 (at 0x114b2)"
        set &access:&cmd_addr %l (0x8014b20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14b20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_ATEST3                               = " "0 (ATEST3_UNCONNECTED),1 (ATEST3_FAULTREF),2 (ATEST3_REFPK),3 (ATEST3_HOLDPK)"
    tree.end
    tree "S1_CTRL_CFG_ATEST4"
      sgroup "S1_CTRL_CFG_ATEST4 (at 0x114b3)"
        set &access:&cmd_addr %l (0x8014b30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14b30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_ATEST4                               = " "0 (ATEST4_UNCONNECTED),1 (ATEST4_AVDD),2 (ATEST4_1B1U_UNTRIM_DFT),3 (ATEST4_REFCOMM)"
    tree.end
    tree "S1_CTRL_CFG_DTEST1"
      sgroup "S1_CTRL_CFG_DTEST1 (at 0x114b4)"
        set &access:&cmd_addr %l (0x8014b40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14b40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_DTEST1                               = " "0 (DTEST1_UNCONNECTED),1 (DTEST1_PWM_OUT_DFT),2 (DTEST1_PFM_OUT_DFT),3 (DTEST1_GATE_DRV),4 (DTEST1_SMPS_CLK),5 (DTEST1_BIAS_REQ),6 (DTEST1_IDAC_OUT_DFT),7 (DTEST1_MODE_FSM_0)"
    tree.end
    tree "S1_CTRL_CFG_DTEST2"
      sgroup "S1_CTRL_CFG_DTEST2 (at 0x114b5)"
        set &access:&cmd_addr %l (0x8014b50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14b50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_DTEST2                               = " "0 (DTEST2_UNCONNECTED),1 (DTEST2_VREG_OK_COMP),2 (DTEST2_SS_DONE_FLAG),3 (DTEST2_FSM_MODE_1),4 (DTEST2_PFM_ENTRY_TRIG),5 (RESERVED_101),6 (RESERVED_110),7 (RESERVED_111)"
    tree.end
    tree "S1_CTRL_CFG_DTEST3"
      sgroup "S1_CTRL_CFG_DTEST3 (at 0x114b6)"
        set &access:&cmd_addr %l (0x8014b60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14b60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_DTEST3                               = " "0 (DTEST3_UNCONNECTED),1 (DTEST3_VREG_OK_COMP),2 (DTEST3_VREG_FAULT_COMP),3 (FSM_MODE_2),4 (CORROUT_DFT),5 (PFM_EXIT_TRIG),6 (RESERVED_110),7 (RESERVED_111)"
    tree.end
    tree "S1_CTRL_CFG_DTEST4"
      sgroup "S1_CTRL_CFG_DTEST4 (at 0x114b7)"
        set &access:&cmd_addr %l (0x8014b70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14b70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_DTEST4                               = " "0 (DTEST4_UNCONNECTED),1 (DTEST4_SS_DONE_FLAG),2 (DTEST4_VS_DONE_FLAGT),3 (DTEST4_FSM_MODE)"
    tree.end
    tree "S1_CTRL_GANG_CTL1"
      sgroup "S1_CTRL_GANG_CTL1 (at 0x114c0)"
        set &access:&cmd_addr %l (0x8014c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S1_CTRL_GANG_CTL2"
      sgroup "S1_CTRL_GANG_CTL2 (at 0x114c1)"
        set &access:&cmd_addr %l (0x8014c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANG_EN_FALSE),1 (GANG_EN_TRUE)"
    tree.end
    tree "S1_CTRL_SEC_ACCESS"
      sgroup "S1_CTRL_SEC_ACCESS (at 0x114d0)"
        set &access:&cmd_addr %l (0x8014d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S1_CTRL_PERPH_RESET_CTL1"
      sgroup "S1_CTRL_PERPH_RESET_CTL1 (at 0x114d8)"
        set &access:&cmd_addr %l (0x8014d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABL_PRESET_FALSE),1 (ENABL_PRESET_TRUE)"
    tree.end
    tree "S1_CTRL_PERPH_RESET_CTL2"
      sgroup "S1_CTRL_PERPH_RESET_CTL2 (at 0x114d9)"
        set &access:&cmd_addr %l (0x8014d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S1_CTRL_PERPH_RESET_CTL3"
      sgroup "S1_CTRL_PERPH_RESET_CTL3 (at 0x114da)"
        set &access:&cmd_addr %l (0x8014da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S1_CTRL_PERPH_RESET_CTL4"
      sgroup "S1_CTRL_PERPH_RESET_CTL4 (at 0x114db)"
        set &access:&cmd_addr %l (0x8014db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "S1_CTRL_INT_TEST1"
      sgroup "S1_CTRL_INT_TEST1 (at 0x114e0)"
        set &access:&cmd_addr %l (0x8014e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_EN_FALSE),1 (INT_TEST_MODE_EN_TRUE)"
    tree.end
    tree "S1_CTRL_INT_TEST_VAL"
      sgroup "S1_CTRL_INT_TEST_VAL (at 0x114e1)"
        set &access:&cmd_addr %l (0x8014e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT_TEST_VAL                  = " "0 (VREG_FAULT_INT_TEST_VAL_0),1 (VREG_FAULT_INT_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT_TEST_VAL                   = " "0 (LIMIT_ERR_INT_TEST_VAL_0),1 (LIMIT_ERR_INT_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT_TEST_VAL                     = " "0 (VREG_OK_INT_TEST_VAL_0),1 (VREG_OK_INT_TEST_VAL_1)"
    tree.end
    tree "S1_CTRL_MODE_FSM_MASK"
      sgroup "S1_CTRL_MODE_FSM_MASK (at 0x114e2)"
        set &access:&cmd_addr %l (0x8014e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODE_FSM_MASK_EN                         = " "0 (MODE_FSM_MASK_EN_0),1 (MODE_FSM_MASK_EN_1)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MODE_FSM_MASK_VALUE                      = "
    tree.end
    tree "S1_CTRL_GATE_DRV_MUX"
      sgroup "S1_CTRL_GATE_DRV_MUX (at 0x114e3)"
        set &access:&cmd_addr %l (0x8014e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GATE_DRV_MUX1                            = " "0 (GATE_DRV_MUX1_NORMAL_MODE),1 (GATE_DRV_MUX1_DET_BY_MUX2)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GATE_DRV_MUX2                            = " "0 (GATE_DRV_MUX2_PFM_COMP),1 (GATE_DRV_MUX2_DET_BY_MUX3)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   GATE_DRV_MUX3                            = " "0 (GATE_DRV_MUX3_FORCED_TO_1),1 (GATE_DRV_MUX3_SMPS_CLK),2 (GATE_DRV_MUX3_DTEST1),3 (GATE_DRV_MUX3_FORCED_TO_0)"
    tree.end
    tree "S1_CTRL_CORR_DUTY_MUX"
      sgroup "S1_CTRL_CORR_DUTY_MUX (at 0x114e4)"
        set &access:&cmd_addr %l (0x8014e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CORR_DUTY_MUX                            = " "0 (CORR_DUTY_MUX_NORMAL_MODE),1 (CORR_DUTY_MUX_FORCED_TO_1),2 (CORR_DUTY_MUX_FORCED_TO_0),3 (CORR_DUTY_MUX_DTEST2)"
    tree.end
    tree "S1_CTRL_EN_OPTIONS_DFT"
      sgroup "S1_CTRL_EN_OPTIONS_DFT (at 0x114e5)"
        set &access:&cmd_addr %l (0x8014e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SS_EN                                    = " "0 (SOFTSTART_DISABL),1 (SOFTSTART_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CORR_SHIFT_EN                            = " "0 (CORR_SHIFT_DISABL),1 (CORR_SHIFT_ENABL_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SAMPLE_CLK_EN                            = " "0 (SAMPLE_CLK_DISABL),1 (SAMPLE_CLK_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SAMPLE_AMP_TRI                           = " "0 (SAMPLE_AMP_NORMAL_MODE),1 (SAMPLE_AMP_TRI_STATE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   RAMP_EN                                  = " "0 (RAMP_EN_FALSE),1 (RAMP_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COMPENS_EN                               = " "0 (COMPENS_EN_FALSE),1 (COMPENS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SAMPLE_PREBIAS_EN                        = " "0 (SAMPLE_PREBIAS_EN_FALSE),1 (SAMPLE_PREBIAS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GDRV_EN                                  = " "0 (GDRV_EN_FALSE),1 (GDRV_EN_TRUE)"
    tree.end
    tree "S1_CTRL_MAN_CAL_CTL"
      sgroup "S1_CTRL_MAN_CAL_CTL (at 0x114e7)"
        set &access:&cmd_addr %l (0x8014e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MAN_IDAC_CAL_EN                          = " "0 (NORMAL_MODE),1 (MAN_IDAC_BUFFER_CAL_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MAN_CORR_CAL_EN                          = " "0 (NORMAL_MODE),1 (MAN_CORR_BUFFER_CAL_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MAN_PWM_CAL_EN                           = " "0 (NORMAL_MODE),1 (MAN_PWM_COMP_CAL_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MAN_PFM_CAL_EN                           = " "0 (NORMAL_MODE),1 (MAN_PFM_COMP_CAL_EN_TRUE)"
    tree.end
    tree "S1_CTRL_CAL_REQUEST"
      sgroup "S1_CTRL_CAL_REQUEST (at 0x114e8)"
        set &access:&cmd_addr %l (0x8014e80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_REQUEST                              = " "0, 1"
    tree.end
    tree "S1_CTRL_CAL_CTL"
      sgroup "S1_CTRL_CAL_CTL (at 0x114e9)"
        set &access:&cmd_addr %l (0x8014e90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   IDAC_CAL_EN                              = " "0 (IDAC_BUFFER_CAL_DISABL),1 (IDAC_BUFFER_CAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CORR_CAL_EN                              = " "0 (CORR_BUFFER_CAL_DISABL),1 (CORR_BUFFER_CAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PWM_CAL_EN                               = " "0 (PWM_COMP_CAL_DISABL),1 (PWM_COMP_CAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PFM_CAL_EN                               = " "0 (PFM_COMP_CAL_DISABL),1 (PFM_COMP_CAL_ENABL)"
    tree.end
    tree "S1_CTRL_IDAC_CAL_VAL"
      sgroup "S1_CTRL_IDAC_CAL_VAL (at 0x114ea)"
        set &access:&cmd_addr %l (0x8014ea0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14ea0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IDAC_CAL_VAL                             = "
    tree.end
    tree "S1_CTRL_CORR_CAL_VAL"
      sgroup "S1_CTRL_CORR_CAL_VAL (at 0x114eb)"
        set &access:&cmd_addr %l (0x8014eb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14eb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CORR_CAL_VAL                             = "
    tree.end
    tree "S1_CTRL_PWM_CAL_VAL"
      sgroup "S1_CTRL_PWM_CAL_VAL (at 0x114ec)"
        set &access:&cmd_addr %l (0x8014ec0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14ec0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_CAL_VAL                              = "
    tree.end
    tree "S1_CTRL_PFM_CAL_VAL"
      sgroup "S1_CTRL_PFM_CAL_VAL (at 0x114ed)"
        set &access:&cmd_addr %l (0x8014ed0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14ed0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PFM_CAL_VAL                              = "
    tree.end
    tree "S1_CTRL_MPHASE_IDAC"
      sgroup "S1_CTRL_MPHASE_IDAC (at 0x114ee)"
        set &access:&cmd_addr %l (0x8014ee0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14ee0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVR_EN                                   = " "0 (MPHASE_IDAC_OVERRIDE_FALSE),1 (MPHASE_IDAC_OVERRIDE_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   DATA                                     = "
    tree.end
    tree "S1_CTRL_TRIM_NUM"
      sgroup "S1_CTRL_TRIM_NUM (at 0x114f0)"
        set &access:&cmd_addr %l (0x8014f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "S1_CTRL_REFDAC_TRIM"
      sgroup "S1_CTRL_REFDAC_TRIM (at 0x114f1)"
        set &access:&cmd_addr %l (0x8014f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REFDAC_TRIM_EN                           = " "0 (REFDAC_TRIM_EN_FALSE),1 (REFDAC_TRIM_EN_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   REFDAC_TRIM                              = "
    tree.end
    tree "S1_CTRL_IDAC_TRIM"
      sgroup "S1_CTRL_IDAC_TRIM (at 0x114f2)"
        set &access:&cmd_addr %l (0x8014f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IDAC_TRIM                                = "
    tree.end
    tree "S1_CTRL_CORR_TRIM"
      sgroup "S1_CTRL_CORR_TRIM (at 0x114f3)"
        set &access:&cmd_addr %l (0x8014f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CORR_TRIM                                = "
    tree.end
    tree "S1_CTRL_PWM_TRIM"
      sgroup "S1_CTRL_PWM_TRIM (at 0x114f4)"
        set &access:&cmd_addr %l (0x8014f40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PWM_P_TRIM                               = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PWM_N_TRIM                               = "
    tree.end
    tree "S1_CTRL_PFM_TRIM"
      sgroup "S1_CTRL_PFM_TRIM (at 0x114f5)"
        set &access:&cmd_addr %l (0x8014f50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PFM_TRIM                                 = "
    tree.end
    tree "S1_CTRL_RAMP_TRIM"
      sgroup "S1_CTRL_RAMP_TRIM (at 0x114f6)"
        set &access:&cmd_addr %l (0x8014f60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RAMP_TRIM                                = "
    tree.end
  tree.end
tree.end
tree "S1_FREQ"
  tree "S1_FREQ"
    tree "S1_FREQ_REVISION1"
      sgroup "S1_FREQ_REVISION1 (at 0x11600)"
        set &access:&cmd_addr %l (0x8016000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S1_FREQ_REVISION2"
      sgroup "S1_FREQ_REVISION2 (at 0x11601)"
        set &access:&cmd_addr %l (0x8016010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S1_FREQ_PERPH_TYPE"
      sgroup "S1_FREQ_PERPH_TYPE (at 0x11604)"
        set &access:&cmd_addr %l (0x8016040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S1_FREQ_PERPH_SUBTYPE"
      sgroup "S1_FREQ_PERPH_SUBTYPE (at 0x11605)"
        set &access:&cmd_addr %l (0x8016050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S1_FREQ_CLK_ENABLE"
      sgroup "S1_FREQ_CLK_ENABLE (at 0x11646)"
        set &access:&cmd_addr %l (0x8016460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "S1_FREQ_CLK_DIV"
      sgroup "S1_FREQ_CLK_DIV (at 0x11650)"
        set &access:&cmd_addr %l (0x8016500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "S1_FREQ_CLK_PHASE"
      sgroup "S1_FREQ_CLK_PHASE (at 0x11651)"
        set &access:&cmd_addr %l (0x8016510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "S1_FREQ_GANG_CTL1"
      sgroup "S1_FREQ_GANG_CTL1 (at 0x116c0)"
        set &access:&cmd_addr %l (0x8016c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S1_FREQ_GANG_CTL2"
      sgroup "S1_FREQ_GANG_CTL2 (at 0x116c1)"
        set &access:&cmd_addr %l (0x8016c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "S1_FREQ_SEC_ACCESS"
      sgroup "S1_FREQ_SEC_ACCESS (at 0x116d0)"
        set &access:&cmd_addr %l (0x8016d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S1_FREQ_PERPH_RESET_CTL2"
      sgroup "S1_FREQ_PERPH_RESET_CTL2 (at 0x116d9)"
        set &access:&cmd_addr %l (0x8016d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S1_FREQ_PERPH_RESET_CTL3"
      sgroup "S1_FREQ_PERPH_RESET_CTL3 (at 0x116da)"
        set &access:&cmd_addr %l (0x8016da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S1_FREQ_PERPH_RESET_CTL4"
      sgroup "S1_FREQ_PERPH_RESET_CTL4 (at 0x116db)"
        set &access:&cmd_addr %l (0x8016db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "S1_FREQ_TEST1"
      sgroup "S1_FREQ_TEST1 (at 0x116e2)"
        set &access:&cmd_addr %l (0x8016e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "S1_PS"
  tree "S1_PS"
    tree "S1_PS_REVISION1"
      sgroup "S1_PS_REVISION1 (at 0x11500)"
        set &access:&cmd_addr %l (0x8015000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S1_PS_REVISION2"
      sgroup "S1_PS_REVISION2 (at 0x11501)"
        set &access:&cmd_addr %l (0x8015010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S1_PS_REVISION3"
      sgroup "S1_PS_REVISION3 (at 0x11502)"
        set &access:&cmd_addr %l (0x8015020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S1_PS_REVISION4"
      sgroup "S1_PS_REVISION4 (at 0x11503)"
        set &access:&cmd_addr %l (0x8015030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S1_PS_PERPH_TYPE"
      sgroup "S1_PS_PERPH_TYPE (at 0x11504)"
        set &access:&cmd_addr %l (0x8015040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S1_PS_PERPH_SUBTYPE"
      sgroup "S1_PS_PERPH_SUBTYPE (at 0x11505)"
        set &access:&cmd_addr %l (0x8015050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S1_PS_VOLTAGE_CTL1"
      sgroup "S1_PS_VOLTAGE_CTL1 (at 0x11540)"
        set &access:&cmd_addr %l (0x8015400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MV_RANGE                                 = " "0 (LV_RANGE),1 (MV_RANGE)"
    tree.end
    tree "S1_PS_VOLTAGE_CTL2"
      sgroup "S1_PS_VOLTAGE_CTL2 (at 0x11541)"
        set &access:&cmd_addr %l (0x8015410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET                                     = "
    tree.end
    tree "S1_PS_FREQ_CTL"
      sgroup "S1_PS_FREQ_CTL (at 0x11550)"
        set &access:&cmd_addr %l (0x8015500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FREQ_CTL                                 = "
    tree.end
    tree "S1_PS_MULTIPHASE_CTL"
      sgroup "S1_PS_MULTIPHASE_CTL (at 0x11551)"
        set &access:&cmd_addr %l (0x8015510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MULTIPHASE_EN                            = " "0 (SINGLE_PHASE_CONFIG),1 (MULTI_PHASE_CONFIG)"
    tree.end
    tree "S1_PS_PHASE_CTL"
      sgroup "S1_PS_PHASE_CTL (at 0x11552)"
        set &access:&cmd_addr %l (0x8015520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PHASE_BALANCE_EN                         = " "0 (DISABLE_ACTIVE_PHASE_CURRENT_BALANCING),1 (ENABLE_ACTIVE_PHASE_CURRENT_BALANCING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PHASE_STANDBY_MODE                       = " "0 (STANDBY_OFF),1 (WARM_STANDBY)"
    tree.end
    tree "S1_PS_PHASE_ID"
      sgroup "S1_PS_PHASE_ID (at 0x11553)"
        set &access:&cmd_addr %l (0x8015530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_ID                                 = " "0 (PHASE_NUMBER_1),1 (PHASE_NUMBER_2),2 (PHASE_NUMBER_3),3 (PHASE_NUMBER_4)"
    tree.end
    tree "S1_PS_PHASE_CNT"
      sgroup "S1_PS_PHASE_CNT (at 0x11554)"
        set &access:&cmd_addr %l (0x8015540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_CNT                                = " "0 (PHASE_COUNT_1),1 (PHASE_COUNT_2),2 (PHASE_COUNT_4_NOT_3),3 (PHASE_COUNT_4)"
    tree.end
    tree "S1_PS_PWM_CL_CTL"
      sgroup "S1_PS_PWM_CL_CTL (at 0x11560)"
        set &access:&cmd_addr %l (0x8015600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_CL                                   = " "0 (PWM_ILIM_1P0A),1 (PWM_ILIM_1P5A),2 (PWM_ILIM_2P0A),3 (PWM_ILIM_2P5A),4 (PWM_ILIM_3P0A),5 (PWM_ILIM_3P5A),6 (PWM_ILIM_4P0A),7 (PWM_ILIM_4P5A)"
    tree.end
    tree "S1_PS_LPM_CL_CTL"
      sgroup "S1_PS_LPM_CL_CTL (at 0x11561)"
        set &access:&cmd_addr %l (0x8015610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   LPM_CL_FINE                              = " "0 (LPM_CL_FINE_OFF),1 (LPM_CL_FINE_0P167A),2 (LPM_CL_FINE_0P334A),3 (LPM_CL_FINE_0P501A),4 (LPM_CL_FINE_0P668A),5 (LPM_CL_FINE_0P835A),6 (LPM_CL_FINE_1P002A),7 (LPM_CL_FINE_1P169A)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LPM_CL                                   = " "0 (LPM_CL_0P5A),1 (LPM_CL_1P0A),2 (LPM_CL_1P5A),3 (LPM_CL_2P0A),4 (LPM_CL_2P5A),5 (LPM_CL_3P0A),6 (LPM_CL_3P5A),7 (LPM_CL_4P0A)"
    tree.end
    tree "S1_PS_AUTO_CTL"
      sgroup "S1_PS_AUTO_CTL (at 0x11562)"
        set &access:&cmd_addr %l (0x8015620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   LPM_EXIT_CYCLES                          = " "0 (LPM_EXIT_CYCLES_2),1 (LPM_EXIT_CYCLES_4),2 (LPM_EXIT_CYCLES_6),3 (LPM_EXIT_CYCLES_8),4 (LPM_EXIT_CYCLES_12),5 (LPM_EXIT_CYCLES_16),6 (LPM_EXIT_CYCLES_24),7 (LPM_EXIT_CYCLES_32)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LPM_ENTRY_CYCLES                         = " "0 (LPM_ENTRY_CYCLES_1),1 (LPM_ENTRY_CYCLES_5),2 (LPM_ENTRY_CYCLES_9),3 (LPM_ENTRY_CYCLES_13),4 (LPM_ENTRY_CYCLES_17),5 (LPM_ENTRY_CYCLES_21),6 (LPM_ENTRY_CYCLES_25),7 (LPM_ENTRY_CYCLES_29)"
    tree.end
    tree "S1_PS_ZX_ADAPT_CTL"
      sgroup "S1_PS_ZX_ADAPT_CTL (at 0x11563)"
        set &access:&cmd_addr %l (0x8015630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   ZX_SAMPLE_CTL                            = " "0 (OVERRIDE_IADC_WITH_ZEROS_WHEN_TRISTATE_ASSERTED_FOR_ANY_PART_OF_TRISTATE_SAMPLE_WINDOW),1 (OVERRIDE_IADC_WITH_ZEROS_WHEN_TRISTATE_ASSERTED_FOR_FULL_TRISTATE_SAMPLE_WINDOW),2 (reserved),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ZX_UP_CYCLES                             = " "0 (ZX_UP_CYCLES_4),1 (ZX_UP_CYCLES_12),2 (ZX_UP_CYCLES_20),3 (ZX_UP_CYCLES_28)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_DOWN_CYCLES                           = " "0 (ZX_DOWN_CYCLES_4),1 (ZX_DOWN_CYCLES_12),2 (ZX_DOWN_CYCLES_20),3 (ZX_DOWN_CYCLES_28)"
    tree.end
    tree "S1_PS_ZX_ADAPT_VAL"
      sgroup "S1_PS_ZX_ADAPT_VAL (at 0x11564)"
        set &access:&cmd_addr %l (0x8015640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_ADAPT_VAL                             = "
    tree.end
    tree "S1_PS_FSM_MINON_CFG"
      sgroup "S1_PS_FSM_MINON_CFG (at 0x11570)"
        set &access:&cmd_addr %l (0x8015700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CL_EXTEND_BLANK                          = " "0 (CL_EXTEND_BLANK_DISABLED),1 (CL_EXTEND_BLANK_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   N_MIN_ON_TIME                            = " "0 (NMOS_MIN_ON_TIME_ILLEGAL),1 (NMOS_MIN_ON_TIME_10NS),2 (NMOS_MIN_ON_TIME_20NS),3 (NMOS_MIN_ON_TIME_30NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   P_MIN_ON_TIME                            = " "0 (PMOS_MIN_ON_TIME_ILLEGAL),1 (PMOS_MIN_ON_TIME_10NS),2 (PMOS_MIN_ON_TIME_20NS),3 (PMOS_MIN_ON_TIME_30NS)"
    tree.end
    tree "S1_PS_ICOMP_EN_CFG"
      sgroup "S1_PS_ICOMP_EN_CFG (at 0x11571)"
        set &access:&cmd_addr %l (0x8015710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CL_TEST_EN                               = " "0 (CL_TEST_MODE_DISABLED_FOR_NORMAL_OP),1 (CL_TEST_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ADC_TEST_EN                              = " "0 (ADC_TEST_MODE_DISABLED_FOR_NORMAL_OP),1 (ADC_TEST_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_CL                                    = " "0 (CURRENT_LIMIT_DISABLED),1 (CURRENT_LIMIT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   EN_ZX                                    = " "0 (ZX_COMP_DISABLED),1 (ZX_COMP_ENABLED_FOR_PWM_LPM_BURSTS_WARMUP),2 (ILLEGAL),3 (ZX_COMP_ALWAYS_ENABLED)"
    tree.end
    tree "S1_PS_ZX_CAL_CFG"
      sgroup "S1_PS_ZX_CAL_CFG (at 0x11572)"
        set &access:&cmd_addr %l (0x8015720|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15720|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x2--0x7 1 "  [ 7: 2]   ZX_VOS_NOM                               = "
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CAL                                   = " "0 (ZX_CAL_USES_OPT_TRIM_CODE_PLUS_ZX_VOS_NOM),1 (ZX_CAL_USES_ZERO_TRIM_CODE_PLUS_ZX_VOS_NOM),2 (ZX_CAL_USES_POWERON_CAL_PLUS_ZX_VOS_NOM),3 (ZX_CAL_ADAPTIVE_ZX_ENABLED_AND_USES_POWERON_CAL_PLUS_ZX_VOS_NOM)"
    tree.end
    tree "S1_PS_NONOVLAP_CFG"
      sgroup "S1_PS_NONOVLAP_CFG (at 0x11573)"
        set &access:&cmd_addr %l (0x8015730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   NDRV_ON_DEL                              = " "0 (NDRV_ON_DEL_0NS),1 (NDRV_ON_DEL_0P5NS),2 (NDRV_ON_DEL_1NS),3 (NDRV_ON_DEL_2NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PDRV_ON_DEL                              = " "0 (PDRV_ON_DEL_0NS),1 (PDRV_ON_DEL_0P5NS),2 (PDRV_ON_DEL_1NS),3 (PDRV_ON_DEL_2NS)"
    tree.end
    tree "S1_PS_MPHASE_PI_CFG1"
      sgroup "S1_PS_MPHASE_PI_CFG1 (at 0x11574)"
        set &access:&cmd_addr %l (0x8015740|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15740|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   A_COEFFICIENT_LO                         = "
    tree.end
    tree "S1_PS_MPHASE_PI_CFG2"
      sgroup "S1_PS_MPHASE_PI_CFG2 (at 0x11575)"
        set &access:&cmd_addr %l (0x8015750|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15750|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   A_COEFFICIENT_MID                        = "
    tree.end
    tree "S1_PS_MPHASE_PI_CFG3"
      sgroup "S1_PS_MPHASE_PI_CFG3 (at 0x11576)"
        set &access:&cmd_addr %l (0x8015760|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15760|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   A_COEFFICIENT_HI                         = "
    tree.end
    tree "S1_PS_MPHASE_PI_CFG4"
      sgroup "S1_PS_MPHASE_PI_CFG4 (at 0x11577)"
        set &access:&cmd_addr %l (0x8015770|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15770|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   B_COEFFICIENT_LO                         = "
    tree.end
    tree "S1_PS_MPHASE_PI_CFG5"
      sgroup "S1_PS_MPHASE_PI_CFG5 (at 0x11578)"
        set &access:&cmd_addr %l (0x8015780|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15780|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   B_COEFFICIENT_MID                        = "
    tree.end
    tree "S1_PS_MPHASE_PI_CFG6"
      sgroup "S1_PS_MPHASE_PI_CFG6 (at 0x11579)"
        set &access:&cmd_addr %l (0x8015790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   B_COEFFICIENT_HI                         = "
    tree.end
    tree "S1_PS_CAL_FAULT"
      sgroup "S1_PS_CAL_FAULT (at 0x1157a)"
        set &access:&cmd_addr %l (0x80157a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x157a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ZX_CAL_FAULT                             = " "0 (ZX_CAL_FAULT_FALSE),1 (ZX_CAL_FAULT_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_CAL_VAL                               = "
    tree.end
    tree "S1_PS_ADC_OUT"
      sgroup "S1_PS_ADC_OUT (at 0x1157b)"
        set &access:&cmd_addr %l (0x80157b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x157b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   ADC_OUT                                  = "
    tree.end
    tree "S1_PS_MP_IAVG2"
      sgroup "S1_PS_MP_IAVG2 (at 0x1157c)"
        set &access:&cmd_addr %l (0x80157c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x157c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MP_IAVG_0                                = " "0, 1"
    tree.end
    tree "S1_PS_MP_IAVG1"
      sgroup "S1_PS_MP_IAVG1 (at 0x1157d)"
        set &access:&cmd_addr %l (0x80157d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x157d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MP_IAVG_8_1                              = "
    tree.end
    tree "S1_PS_MP_DAC_DATA"
      sgroup "S1_PS_MP_DAC_DATA (at 0x1157e)"
        set &access:&cmd_addr %l (0x80157e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x157e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   MP_DAC_DATA                              = "
    tree.end
    tree "S1_PS_MP_IAVG_DFT"
      sgroup "S1_PS_MP_IAVG_DFT (at 0x1157f)"
        set &access:&cmd_addr %l (0x80157f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x157f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MP_IAVG_DFT                              = " "0 (MP_IAVG_DFT_NOT_FORCED_FOR_NORMAL_OP),1 (MP_IAVG_DFT_FORCED_TO_A5),2 (MP_IAVG_DFT_FORCED_TO_15),3 (MP_IAVG_DFT_FORCED_TO_FF)"
    tree.end
    tree "S1_PS_GANG_CTL1"
      sgroup "S1_PS_GANG_CTL1 (at 0x115c0)"
        set &access:&cmd_addr %l (0x8015c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S1_PS_GANG_CTL2"
      sgroup "S1_PS_GANG_CTL2 (at 0x115c1)"
        set &access:&cmd_addr %l (0x8015c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANG_EN_FALSE),1 (GANG_EN_TRUE)"
    tree.end
    tree "S1_PS_SEC_ACCESS"
      sgroup "S1_PS_SEC_ACCESS (at 0x115d0)"
        set &access:&cmd_addr %l (0x8015d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S1_PS_PERPH_RESET_CTL2"
      sgroup "S1_PS_PERPH_RESET_CTL2 (at 0x115d9)"
        set &access:&cmd_addr %l (0x8015d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S1_PS_PERPH_RESET_CTL3"
      sgroup "S1_PS_PERPH_RESET_CTL3 (at 0x115da)"
        set &access:&cmd_addr %l (0x8015da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S1_PS_PERPH_RESET_CTL4"
      sgroup "S1_PS_PERPH_RESET_CTL4 (at 0x115db)"
        set &access:&cmd_addr %l (0x8015db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "S1_PS_ATEST12"
      sgroup "S1_PS_ATEST12 (at 0x115e2)"
        set &access:&cmd_addr %l (0x8015e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ATEST2                                   = " "0 (ATEST2_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST2_NOT_USED1),2 (ATEST2_NOT_USED2),3 (ILLEGAL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST1                                   = " "0 (ATEST1_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST1_ADC_DAC_OUT),2 (ATEST1_NOT_USED),3 (ILLEGAL)"
    tree.end
    tree "S1_PS_ATEST34"
      sgroup "S1_PS_ATEST34 (at 0x115e3)"
        set &access:&cmd_addr %l (0x8015e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ATEST4                                   = " "0 (ATEST4_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST4_PGND),2 (ATEST4_VDDIN),3 (ILLEGAL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST3                                   = " "0 (ATEST3_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST3_VSW),2 (ATEST3_NOT_USED),3 (ILLEGAL)"
    tree.end
    tree "S1_PS_DTEST12"
      sgroup "S1_PS_DTEST12 (at 0x115e4)"
        set &access:&cmd_addr %l (0x8015e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST1                                   = "
    tree.end
    tree "S1_PS_DTEST43"
      sgroup "S1_PS_DTEST43 (at 0x115e5)"
        set &access:&cmd_addr %l (0x8015e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST4                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST3                                   = "
    tree.end
    tree "S1_PS_MAN_CAL_CTL"
      sgroup "S1_PS_MAN_CAL_CTL (at 0x115e7)"
        set &access:&cmd_addr %l (0x8015e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MAN_ZX_CAL_EN                            = " "0 (MAN_ZX_CAL_EN_FALSE),1 (MAN_ZX_CAL_EN_TRUE)"
    tree.end
    tree "S1_PS_CAL_REQUEST"
      sgroup "S1_PS_CAL_REQUEST (at 0x115e8)"
        set &access:&cmd_addr %l (0x8015e80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_REQUEST                              = " "0 (CAL_REQUEST_FALSE),1 (CAL_REQUEST_TRUE)"
    tree.end
    tree "S1_PS_TRIM_NUM"
      sgroup "S1_PS_TRIM_NUM (at 0x115f0)"
        set &access:&cmd_addr %l (0x8015f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "S1_PS_ZX_TRIM"
      sgroup "S1_PS_ZX_TRIM (at 0x115f1)"
        set &access:&cmd_addr %l (0x8015f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_TRIM                                  = "
    tree.end
    tree "S1_PS_CL_TRIM"
      sgroup "S1_PS_CL_TRIM (at 0x115f2)"
        set &access:&cmd_addr %l (0x8015f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CL_TRIM                                  = " "0 (CL_TRIM_OFF),1 (CL_TRIM_0P167A),2 (CL_TRIM_0P334A),3 (CL_TRIM_0P501A),4 (CL_TRIM_0P668A),5 (CL_TRIM_0P835A),6 (CL_TRIM_1P002A),7 (CL_TRIM_1P169A)"
    tree.end
  tree.end
tree.end
tree "S2_CTRL"
  tree "S2_CTRL"
    tree "S2_CTRL_REVISION1"
      sgroup "S2_CTRL_REVISION1 (at 0x11700)"
        set &access:&cmd_addr %l (0x8017000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S2_CTRL_REVISION2"
      sgroup "S2_CTRL_REVISION2 (at 0x11701)"
        set &access:&cmd_addr %l (0x8017010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S2_CTRL_REVISION3"
      sgroup "S2_CTRL_REVISION3 (at 0x11702)"
        set &access:&cmd_addr %l (0x8017020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S2_CTRL_REVISION4"
      sgroup "S2_CTRL_REVISION4 (at 0x11703)"
        set &access:&cmd_addr %l (0x8017030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S2_CTRL_PERPH_TYPE"
      sgroup "S2_CTRL_PERPH_TYPE (at 0x11704)"
        set &access:&cmd_addr %l (0x8017040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S2_CTRL_PERPH_SUBTYPE"
      sgroup "S2_CTRL_PERPH_SUBTYPE (at 0x11705)"
        set &access:&cmd_addr %l (0x8017050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S2_CTRL_STATUS_1"
      sgroup "S2_CTRL_STATUS_1 (at 0x11708)"
        set &access:&cmd_addr %l (0x8017080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK_FLAG                             = " "0 (VREG_OK_FLAG_FALSE),1 (VREG_OK_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VREG_FAULT_FLAG                          = " "0 (VREG_FAULT_FLAG_FALSE),1 (VREG_FAULT_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FLAG                                 = " "0 (NPM_FLAG_FALSE),1 (NPM_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE_FLAG                        = " "0 (STEPPER_DONE_FLAG_FALSE),1 (STEPPER_DONE_FLAG_TRUE)"
    tree.end
    tree "S2_CTRL_STATUS_2"
      sgroup "S2_CTRL_STATUS_2 (at 0x11709)"
        set &access:&cmd_addr %l (0x8017090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ILS_FLAG                                 = " "0 (ILS_FLAG_FALSE),1 (ILS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ULS_FLAG                                 = " "0 (ULS_FLAG_FALSE),1 (ULS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LLS_FLAG                                 = " "0 (LLS_FLAG_FALSE),1 (LLS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   GPL_HI_FLAG                              = " "0 (GPL_HI_FLAG_FALSE),1 (GPL_HI_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPL_LO_FLAG                              = " "0 (GPL_LO_FLAG_FALSE),1 (GPL_LO_FLAG_TRUE)"
    tree.end
    tree "S2_CTRL_STATUS_3"
      sgroup "S2_CTRL_STATUS_3 (at 0x1170a)"
        set &access:&cmd_addr %l (0x80170a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x170a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IDAC_CAL_FAULT                           = " "0 (IDAC_CAL_FAULT_FALSE),1 (IDAC_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CORR_CAL_FAULT                           = " "0 (CORR_CAL_FAULT_FALSE),1 (CORR_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PWM_CAL_FAULT                            = " "0 (PWM_CAL_FAULT_FALSE),1 (PWM_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PFM_CAL_FAULT                            = " "0 (PFM_CAL_FAULT_FALSE),1 (PFM_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PS_CAL_DONE_FLAG                         = " "0 (PS_CAL_DONE_FLAG_FALSE),1 (PS_CAL_DONE_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CAL_DONE_FLAG                            = " "0 (CTL_CAL_DONE_FLAG_FALSE),1 (CTL_CAL_DONE_FLAG_TRUE)"
    tree.end
    tree "S2_CTRL_STATUS_4"
      sgroup "S2_CTRL_STATUS_4 (at 0x1170b)"
        set &access:&cmd_addr %l (0x80170b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x170b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MODE_FSM_3                               = " "0 (MODE_FSM_3_IS_0),1 (MODE_FSM_3_IS_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MODE_FSM_2                               = " "0 (MODE_FSM_2_IS_0),1 (MODE_FSM_2_IS_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MODE_FSM_1                               = " "0 (MODE_FSM_1_IS_0),1 (MODE_FSM_1_IS_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MODE_FSM_0                               = " "0 (MODE_FSM_0_IS_0),1 (MODE_FSM_0_IS_1)"
    tree.end
    tree "S2_CTRL_INT_RT_STS"
      sgroup "S2_CTRL_INT_RT_STS (at 0x11710)"
        set &access:&cmd_addr %l (0x8017100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_FALSE),1 (VREG_FAULT_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S2_CTRL_INT_SET_TYPE"
      sgroup "S2_CTRL_INT_SET_TYPE (at 0x11711)"
        set &access:&cmd_addr %l (0x8017110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_LEVEL_TRIGGERED),1 (VREG_FAULT_INT_EDGE_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_LEVEL_TRIGGERED),1 (LIMIT_ERR_INT_EDGE_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_LEVEL_TRIGGERED),1 (VREG_OK_INT_EDGE_TRIGGERED)"
    tree.end
    tree "S2_CTRL_INT_POLARITY_HIGH"
      sgroup "S2_CTRL_INT_POLARITY_HIGH (at 0x11712)"
        set &access:&cmd_addr %l (0x8017120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_RISING_EDGE_TRIGGER_DISABL),1 (VREG_FAULT_INT_RISING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_RISING_EDGE_TRIGGER_DISABL),1 (LIMIT_ERR_INT_RISING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_RISING_EDGE_TRIGGER_DISABL),1 (VREG_OK_INT_RISING_EDGE_TRIGGER_ENABL)"
    tree.end
    tree "S2_CTRL_INT_POLARITY_LOW"
      sgroup "S2_CTRL_INT_POLARITY_LOW (at 0x11713)"
        set &access:&cmd_addr %l (0x8017130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_FALLING_EDGE_TRIGGER_DISABL),1 (VREG_FAULT_INT_FALLING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALLING_EDGE_TRIGGER_DISABL),1 (LIMIT_ERR_INT_FALLING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALLING_EDGE_TRIGGER_DISABL),1 (VREG_OK_INT_FALLING_EDGE_TRIGGER_ENABL)"
    tree.end
    tree "S2_CTRL_INT_LATCHED_CLR"
      sgroup "S2_CTRL_INT_LATCHED_CLR (at 0x11714)"
        set &access:&cmd_addr %l (0x8017140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0, 1"
    tree.end
    tree "S2_CTRL_INT_EN_SET"
      sgroup "S2_CTRL_INT_EN_SET (at 0x11715)"
        set &access:&cmd_addr %l (0x8017150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_DISABL),1 (VREG_FAULT_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_DISABL),1 (LIMIT_ERR_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_DISABL),1 (VREG_OK_INT_ENABL)"
    tree.end
    tree "S2_CTRL_INT_EN_CLR"
      sgroup "S2_CTRL_INT_EN_CLR (at 0x11716)"
        set &access:&cmd_addr %l (0x8017160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_DISABL),1 (VREG_FAULT_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_DISABL),1 (LIMIT_ERR_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_DISABL),1 (VREG_OK_INT_ENABL)"
    tree.end
    tree "S2_CTRL_INT_LATCHED_STS"
      sgroup "S2_CTRL_INT_LATCHED_STS (at 0x11718)"
        set &access:&cmd_addr %l (0x8017180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_NOT_TRIGGERED),1 (VREG_FAULT_INT_TRIGGERED_AND_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_NOT_TRIGGERED),1 (LIMIT_ERR_INT_TRIGGERED_AND_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_NOT_TRIGGERED),1 (VREG_OK_INT_TRIGGERED_AND_LATCHED)"
    tree.end
    tree "S2_CTRL_INT_PENDING_STS"
      sgroup "S2_CTRL_INT_PENDING_STS (at 0x11719)"
        set &access:&cmd_addr %l (0x8017190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_NOT_PENDING),1 (VREG_FAULT_INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_NOT_PENDING),1 (LIMIT_ERR_INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_NOT_PENDING),1 (VREG_OK_INT_PENDING)"
    tree.end
    tree "S2_CTRL_INT_MID_SEL"
      sgroup "S2_CTRL_INT_MID_SEL (at 0x1171a)"
        set &access:&cmd_addr %l (0x80171a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x171a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID_0),1 (MID_1),2 (MID_2),3 (MID_3)"
    tree.end
    tree "S2_CTRL_INT_PRIORITY"
      sgroup "S2_CTRL_INT_PRIORITY (at 0x1171b)"
        set &access:&cmd_addr %l (0x80171b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x171b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_0),1 (INT_PRIORITY_1)"
    tree.end
    tree "S2_CTRL_VOLTAGE_CTL1"
      sgroup "S2_CTRL_VOLTAGE_CTL1 (at 0x11740)"
        set &access:&cmd_addr %l (0x8017400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MV_RANGE                                 = " "0 (MV_RANGE_FALSE),1 (MV_RANGE_TRUE)"
    tree.end
    tree "S2_CTRL_VOLTAGE_CTL2"
      sgroup "S2_CTRL_VOLTAGE_CTL2 (at 0x11741)"
        set &access:&cmd_addr %l (0x8017410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET                                     = "
    tree.end
    tree "S2_CTRL_VSET_VALID"
      sgroup "S2_CTRL_VSET_VALID (at 0x11742)"
        set &access:&cmd_addr %l (0x8017420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_VALID                               = "
    tree.end
    tree "S2_CTRL_VOLTAGE_CTL3"
      sgroup "S2_CTRL_VOLTAGE_CTL3 (at 0x11744)"
        set &access:&cmd_addr %l (0x8017440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_VOFFSET_EN                           = " "0 (PFM_VOFFSET_EN_FALSE),1 (PFM_VOFFSET_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_VOFFSET                              = " "0, 1, 2, 3"
    tree.end
    tree "S2_CTRL_MODE_CTL"
      sgroup "S2_CTRL_MODE_CTL (at 0x11745)"
        set &access:&cmd_addr %l (0x8017450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (NPM_NOT_FORCED),1 (NPM_FORCED_IF_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_MODE_FALSE),1 (AUTO_MODE_TRUE)"
    tree.end
    tree "S2_CTRL_EN_CTL"
      sgroup "S2_CTRL_EN_CTL (at 0x11746)"
        set &access:&cmd_addr %l (0x8017460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (FTS_DISABL),1 (FTS_ENABL)"
    tree.end
    tree "S2_CTRL_PD_CTL"
      sgroup "S2_CTRL_PD_CTL (at 0x11748)"
        set &access:&cmd_addr %l (0x8017480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (STRONG_PD_ALWAYS_OFF),1 (STRONG_PD_ON_WHEN_FTS_IS_DISABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   WEAK_PD_EN                               = " "0 (WEAK_PD_DISABL_IN_PMIC_OFF_STATE),1 (SWEAK_PD_ENABL_IN_PMIC_OFF_STATE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   WEAK_PD_PFM                              = " "0 (WEAK_PD_DISABL_IN_PFM),1 (WEAK_PD_ENABL_IN_PFM)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   WEAK_PD_PWM                              = " "0 (WEAK_PD_DISABL_IN_PWM_AND_HCPFM),1 (WEAK_PD_ENABL_IN_PWM_AND_HCPFM)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LEAK_PD_EN                               = " "0 (LEAKAGE_PD_ALWAYS_OFF),1 (LEAKAGE_PD_ALWAYS_ENABL)"
    tree.end
    tree "S2_CTRL_FREQ_CTL"
      sgroup "S2_CTRL_FREQ_CTL (at 0x11750)"
        set &access:&cmd_addr %l (0x8017500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FREQ_CTL                                 = "
    tree.end
    tree "S2_CTRL_MULTIPHASE_CTL"
      sgroup "S2_CTRL_MULTIPHASE_CTL (at 0x11751)"
        set &access:&cmd_addr %l (0x8017510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MULTIPHASE_EN                            = " "0 (SINGLE_PHASE_CONFIG),1 (MULTI_PHASE_CONFIG)"
    tree.end
    tree "S2_CTRL_PHASE_CTL"
      sgroup "S2_CTRL_PHASE_CTL (at 0x11752)"
        set &access:&cmd_addr %l (0x8017520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PHASE_BALANCE_EN                         = " "0 (DISABL_ACTIVE_PHASE_CURRENT_BALANCING),1 (ENABL_ACTIVE_PHASE_CURRENT_BALANCING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PHASE_STANDBY_MODE                       = " "0 (STANDBY_OFF),1 (WARM_STANDBY)"
    tree.end
    tree "S2_CTRL_PHASE_ID"
      sgroup "S2_CTRL_PHASE_ID (at 0x11753)"
        set &access:&cmd_addr %l (0x8017530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_ID                                 = " "0 (PHASE_NUMBER_1),1 (PHASE_NUMBER_2),2 (PHASE_NUMBER_3),3 (PHASE_NUMBER_4)"
    tree.end
    tree "S2_CTRL_PHASE_CNT"
      sgroup "S2_CTRL_PHASE_CNT (at 0x11754)"
        set &access:&cmd_addr %l (0x8017540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_CNT                                = " "0 (PHASE_COUNT_1),1 (PHASE_COUNT_2),2 (PHASE_COUNT_4_NOT_3),3 (PHASE_COUNT_4)"
    tree.end
    tree "S2_CTRL_SPARE"
      sgroup "S2_CTRL_SPARE (at 0x11755)"
        set &access:&cmd_addr %l (0x8017550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0 (SPARE1_BIT_STATE_0),1 (SPARE1_BIT_STATE_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPARE_0                                  = " "0 (SPARE0_BIT_STATE_0),1 (SPARE0_BIT_STATE_1)"
    tree.end
    tree "S2_CTRL_SS_CTL"
      sgroup "S2_CTRL_SS_CTL (at 0x11760)"
        set &access:&cmd_addr %l (0x8017600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   SS_STEP                                  = " "0 (SOFT_START_VSTEP_1_LSB),1 (SOFT_START_VSTEP_2_LSB),2 (SOFT_START_VSTEP_4_LSB),3 (SOFT_START_VSTEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SS_DELAY                                 = " "0 (SOFT_START_TIME_STEP_417NS),1 (SOFT_START_TIME_STEP_833NS),2 (SOFT_START_TIME_STEP_1U67S),3 (SOFT_START_TIME_STEP_3U3S),4 (SOFT_START_TIME_STEP_6U7S),5 (SOFT_START_TIME_STEP_13U3S),6 (SOFT_START_TIME_STEP_26U7S),7 (SOFT_START_TIME_STEP_53U3S)"
    tree.end
    tree "S2_CTRL_VS_CTL"
      sgroup "S2_CTRL_VS_CTL (at 0x11761)"
        set &access:&cmd_addr %l (0x8017610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VS_EN                                    = " "0 (VSTEPPER_DISABL),1 (VSTEPPER_ENABL)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   VS_STEP                                  = " "0 (VSTEPPER_STEP_SIZE_1_LSB),1 (VSTEPPER_STEP_SIZE_2_LSB),2 (VSTEPPER_STEP_SIZE_4_LSB),3 (VSTEPPER_STEP_SIZE_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VS_DELAY                                 = " "0 (VSTEPPER_TIME_STEP_417NS),1 (VSTEPPER_TIME_STEP_833NS),2 (VSTEPPER_TIME_STEP_1U67S),3 (VSTEPPER_TIME_STEP_3U3S),4 (VSTEPPER_TIME_STEP_6U7S),5 (VSTEPPER_TIME_STEP_13U3S),6 (VSTEPPER_TIME_STEP_26U7S),7 (VSTEPPER_TIME_STEP_53U3S)"
    tree.end
    tree "S2_CTRL_CORR_CFG"
      sgroup "S2_CTRL_CORR_CFG (at 0x11762)"
        set &access:&cmd_addr %l (0x8017620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   CORR_MAG_CFG                             = " "0 (DC_ERROR_CORR_MAG_20MV),1 (DC_ERROR_CORR_MAG_30MV),2 (DC_ERROR_CORR_MAG_40MV),3 (DC_ERROR_CORR_MAG_50MV),4 (DC_ERROR_CORR_MAG_60MV),5 (DC_ERROR_CORR_MAG_70MV),6 (DC_ERROR_CORR_MAG_80MV),7 (DC_ERROR_CORR_MAG_90MV)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CORR_FILT_CFG                            = "
    tree.end
    tree "S2_CTRL_RAMP_CFG"
      sgroup "S2_CTRL_RAMP_CFG (at 0x11763)"
        set &access:&cmd_addr %l (0x8017630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   RAMP_COMPENS_CFG                         = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RAMP_CFG                                 = " "0 (RAMP_CFG_20MV),1 (RAMP_CFG_30MV),2 (RAMP_CFG_40MV),3 (RAMP_CFG_50MV),4 (DRAMP_CFG_60MV),5 (DRAMP_CFG_70MV),6 (RAMP_CFG_80MV),7 (DRAMP_CFG_90MV)"
    tree.end
    tree "S2_CTRL_COMPENS_CFG"
      sgroup "S2_CTRL_COMPENS_CFG (at 0x11764)"
        set &access:&cmd_addr %l (0x8017640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   BPHP_CFG                                 = " "0 (BP_HPF_10KHZ),1 (BP_HPF_20KHZ),2 (BP_HPF_40KHZ),3 (BP_HPF_80KHZ)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   BPLP_CFG                                 = " "0 (BP_LPF_200KHZ),1 (BP_LPF_400KHZ),2 (BP_LPF_600KHZ),3 (BP_LPF_800KHZ),4 (BP_LPF_1000KHZ),5 (BP_LPF_1200KHZ),6 (BP_LPF_NOT_SUPPORTED_110),7 (BP_LPF_NOT_SUPPORTED_111)"
    tree.end
    tree "S2_CTRL_CFG_VREG_OK"
      sgroup "S2_CTRL_CFG_VREG_OK (at 0x11765)"
        set &access:&cmd_addr %l (0x8017650|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17650|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_VREG_OK                              = " "0 (VREG_OK_COMP_DISABL),1 (VREG_OK_COMP_ENABL_IN_NPM),2 (VREG_OK_COMP_ENABL_IN_NPM_AND_LPM),3 (ILLEGAL_SETTING)"
    tree.end
    tree "S2_CTRL_CFG_VREG_FAULT"
      sgroup "S2_CTRL_CFG_VREG_FAULT (at 0x11766)"
        set &access:&cmd_addr %l (0x8017660|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17660|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_VREG_FAULT                           = " "0 (VREG_FAULT_FOLDBACK_COMP_DISABL),1 (VREG_FAULT_FOLDBACK_COMP_ENABL_IN_NPM),2 (VREG_FAULT_FOLDBACK_COMP_ENABL_IN_NPM_AND_LPM),3 (ILLEGAL_SETTING)"
    tree.end
    tree "S2_CTRL_CFG_PFM_COMP"
      sgroup "S2_CTRL_CFG_PFM_COMP (at 0x11767)"
        set &access:&cmd_addr %l (0x8017670|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17670|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_HYS                                  = " "0 (PFM_COMPARATOR_HYSTERESIS_5MV),1 (PFM_COMPARATOR_HYSTERESIS_10MV),2 (PFM_COMPARATOR_HYSTERESIS_20MV),3 (PFM_COMPARATOR_HYSTERESIS_40MV)"
    tree.end
    tree "S2_CTRL_UL_LL_CTL"
      sgroup "S2_CTRL_UL_LL_CTL (at 0x11768)"
        set &access:&cmd_addr %l (0x8017680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UL_EN                                    = " "0 (UL_STOP_DISABL),1 (UL_STOP_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LL_EN                                    = " "0 (LL_STOP_DISABL),1 (LL_STOP_ENABL)"
    tree.end
    tree "S2_CTRL_VSET_ULS"
      sgroup "S2_CTRL_VSET_ULS (at 0x11769)"
        set &access:&cmd_addr %l (0x8017690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_ULS                                 = "
    tree.end
    tree "S2_CTRL_ULS_VALID"
      sgroup "S2_CTRL_ULS_VALID (at 0x1176a)"
        set &access:&cmd_addr %l (0x80176a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ULS_VALID                                = "
    tree.end
    tree "S2_CTRL_VSET_LLS"
      sgroup "S2_CTRL_VSET_LLS (at 0x1176b)"
        set &access:&cmd_addr %l (0x80176b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_LLS                                 = "
    tree.end
    tree "S2_CTRL_LLS_VALID"
      sgroup "S2_CTRL_LLS_VALID (at 0x1176c)"
        set &access:&cmd_addr %l (0x80176c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LLS_VALID                                = "
    tree.end
    tree "S2_CTRL_GPL_HI"
      sgroup "S2_CTRL_GPL_HI (at 0x1176d)"
        set &access:&cmd_addr %l (0x80176d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_GPL_HI                              = "
    tree.end
    tree "S2_CTRL_GPL_LO"
      sgroup "S2_CTRL_GPL_LO (at 0x1176e)"
        set &access:&cmd_addr %l (0x80176e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_GPL_LO                              = "
    tree.end
    tree "S2_CTRL_FB_FILT_CFG"
      sgroup "S2_CTRL_FB_FILT_CFG (at 0x1176f)"
        set &access:&cmd_addr %l (0x80176f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FB_FILT_SERIES                           = " "0 (SERIES_FILTER_UNCONNECTED),1 (SERIES_FILTER_CONNECTED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FB_FILT_CFG                              = " "0 (PWM_COMP_TAIL_CURRENT_2UA),1 (PWM_COMP_TAIL_CURRENT_4UA),2 (PWM_COMP_TAIL_CURRENT_10UA),3 (PWM_COMP_TAIL_CURRENT_20UA)"
    tree.end
    tree "S2_CTRL_CFG_ATEST1"
      sgroup "S2_CTRL_CFG_ATEST1 (at 0x117b0)"
        set &access:&cmd_addr %l (0x8017b00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_ATEST1                               = " "0 (ATEST1_UNCONNECTED),1 (ATEST1_REFLO),2 (ATEST1_REFMID),3 (ATEST1_REFHI),4 (ATEST1_RBUFF_TERM),5 (ATEST1_IDACREF),6 (ATEST1_DACREF),7 (ATEST1_FB)"
    tree.end
    tree "S2_CTRL_CFG_ATEST2"
      sgroup "S2_CTRL_CFG_ATEST2 (at 0x117b1)"
        set &access:&cmd_addr %l (0x8017b10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_ATEST2                               = " "0 (ATEST2_UNCONNECTED),1 (ATEST2_VREG),2 (ATEST2_RMT_GND),3 (ATEST2_REF_GND),4 (ATEST2_REFVALL),5 (ATEST2_HOLDVALL),6 (ATEST2_RVDD_CTRL),7 (ATEST2_RVDD)"
    tree.end
    tree "S2_CTRL_CFG_ATEST3"
      sgroup "S2_CTRL_CFG_ATEST3 (at 0x117b2)"
        set &access:&cmd_addr %l (0x8017b20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_ATEST3                               = " "0 (ATEST3_UNCONNECTED),1 (ATEST3_FAULTREF),2 (ATEST3_REFPK),3 (ATEST3_HOLDPK)"
    tree.end
    tree "S2_CTRL_CFG_ATEST4"
      sgroup "S2_CTRL_CFG_ATEST4 (at 0x117b3)"
        set &access:&cmd_addr %l (0x8017b30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_ATEST4                               = " "0 (ATEST4_UNCONNECTED),1 (ATEST4_AVDD),2 (ATEST4_1B1U_UNTRIM_DFT),3 (ATEST4_REFCOMM)"
    tree.end
    tree "S2_CTRL_CFG_DTEST1"
      sgroup "S2_CTRL_CFG_DTEST1 (at 0x117b4)"
        set &access:&cmd_addr %l (0x8017b40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_DTEST1                               = " "0 (DTEST1_UNCONNECTED),1 (DTEST1_PWM_OUT_DFT),2 (DTEST1_PFM_OUT_DFT),3 (DTEST1_GATE_DRV),4 (DTEST1_SMPS_CLK),5 (DTEST1_BIAS_REQ),6 (DTEST1_IDAC_OUT_DFT),7 (DTEST1_MODE_FSM_0)"
    tree.end
    tree "S2_CTRL_CFG_DTEST2"
      sgroup "S2_CTRL_CFG_DTEST2 (at 0x117b5)"
        set &access:&cmd_addr %l (0x8017b50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_DTEST2                               = " "0 (DTEST2_UNCONNECTED),1 (DTEST2_VREG_OK_COMP),2 (DTEST2_SS_DONE_FLAG),3 (DTEST2_FSM_MODE_1),4 (DTEST2_PFM_ENTRY_TRIG),5 (RESERVED_101),6 (RESERVED_110),7 (RESERVED_111)"
    tree.end
    tree "S2_CTRL_CFG_DTEST3"
      sgroup "S2_CTRL_CFG_DTEST3 (at 0x117b6)"
        set &access:&cmd_addr %l (0x8017b60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_DTEST3                               = " "0 (DTEST3_UNCONNECTED),1 (DTEST3_VREG_OK_COMP),2 (DTEST3_VREG_FAULT_COMP),3 (FSM_MODE_2),4 (CORROUT_DFT),5 (PFM_EXIT_TRIG),6 (RESERVED_110),7 (RESERVED_111)"
    tree.end
    tree "S2_CTRL_CFG_DTEST4"
      sgroup "S2_CTRL_CFG_DTEST4 (at 0x117b7)"
        set &access:&cmd_addr %l (0x8017b70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_DTEST4                               = " "0 (DTEST4_UNCONNECTED),1 (DTEST4_SS_DONE_FLAG),2 (DTEST4_VS_DONE_FLAGT),3 (DTEST4_FSM_MODE)"
    tree.end
    tree "S2_CTRL_GANG_CTL1"
      sgroup "S2_CTRL_GANG_CTL1 (at 0x117c0)"
        set &access:&cmd_addr %l (0x8017c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S2_CTRL_GANG_CTL2"
      sgroup "S2_CTRL_GANG_CTL2 (at 0x117c1)"
        set &access:&cmd_addr %l (0x8017c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANG_EN_FALSE),1 (GANG_EN_TRUE)"
    tree.end
    tree "S2_CTRL_SEC_ACCESS"
      sgroup "S2_CTRL_SEC_ACCESS (at 0x117d0)"
        set &access:&cmd_addr %l (0x8017d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S2_CTRL_PERPH_RESET_CTL1"
      sgroup "S2_CTRL_PERPH_RESET_CTL1 (at 0x117d8)"
        set &access:&cmd_addr %l (0x8017d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABL_PRESET_FALSE),1 (ENABL_PRESET_TRUE)"
    tree.end
    tree "S2_CTRL_PERPH_RESET_CTL2"
      sgroup "S2_CTRL_PERPH_RESET_CTL2 (at 0x117d9)"
        set &access:&cmd_addr %l (0x8017d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S2_CTRL_PERPH_RESET_CTL3"
      sgroup "S2_CTRL_PERPH_RESET_CTL3 (at 0x117da)"
        set &access:&cmd_addr %l (0x8017da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S2_CTRL_PERPH_RESET_CTL4"
      sgroup "S2_CTRL_PERPH_RESET_CTL4 (at 0x117db)"
        set &access:&cmd_addr %l (0x8017db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "S2_CTRL_INT_TEST1"
      sgroup "S2_CTRL_INT_TEST1 (at 0x117e0)"
        set &access:&cmd_addr %l (0x8017e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_EN_FALSE),1 (INT_TEST_MODE_EN_TRUE)"
    tree.end
    tree "S2_CTRL_INT_TEST_VAL"
      sgroup "S2_CTRL_INT_TEST_VAL (at 0x117e1)"
        set &access:&cmd_addr %l (0x8017e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT_TEST_VAL                  = " "0 (VREG_FAULT_INT_TEST_VAL_0),1 (VREG_FAULT_INT_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT_TEST_VAL                   = " "0 (LIMIT_ERR_INT_TEST_VAL_0),1 (LIMIT_ERR_INT_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT_TEST_VAL                     = " "0 (VREG_OK_INT_TEST_VAL_0),1 (VREG_OK_INT_TEST_VAL_1)"
    tree.end
    tree "S2_CTRL_MODE_FSM_MASK"
      sgroup "S2_CTRL_MODE_FSM_MASK (at 0x117e2)"
        set &access:&cmd_addr %l (0x8017e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODE_FSM_MASK_EN                         = " "0 (MODE_FSM_MASK_EN_0),1 (MODE_FSM_MASK_EN_1)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MODE_FSM_MASK_VALUE                      = "
    tree.end
    tree "S2_CTRL_GATE_DRV_MUX"
      sgroup "S2_CTRL_GATE_DRV_MUX (at 0x117e3)"
        set &access:&cmd_addr %l (0x8017e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GATE_DRV_MUX1                            = " "0 (GATE_DRV_MUX1_NORMAL_MODE),1 (GATE_DRV_MUX1_DET_BY_MUX2)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GATE_DRV_MUX2                            = " "0 (GATE_DRV_MUX2_PFM_COMP),1 (GATE_DRV_MUX2_DET_BY_MUX3)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   GATE_DRV_MUX3                            = " "0 (GATE_DRV_MUX3_FORCED_TO_1),1 (GATE_DRV_MUX3_SMPS_CLK),2 (GATE_DRV_MUX3_DTEST1),3 (GATE_DRV_MUX3_FORCED_TO_0)"
    tree.end
    tree "S2_CTRL_CORR_DUTY_MUX"
      sgroup "S2_CTRL_CORR_DUTY_MUX (at 0x117e4)"
        set &access:&cmd_addr %l (0x8017e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CORR_DUTY_MUX                            = " "0 (CORR_DUTY_MUX_NORMAL_MODE),1 (CORR_DUTY_MUX_FORCED_TO_1),2 (CORR_DUTY_MUX_FORCED_TO_0),3 (CORR_DUTY_MUX_DTEST2)"
    tree.end
    tree "S2_CTRL_EN_OPTIONS_DFT"
      sgroup "S2_CTRL_EN_OPTIONS_DFT (at 0x117e5)"
        set &access:&cmd_addr %l (0x8017e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SS_EN                                    = " "0 (SOFTSTART_DISABL),1 (SOFTSTART_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CORR_SHIFT_EN                            = " "0 (CORR_SHIFT_DISABL),1 (CORR_SHIFT_ENABL_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SAMPLE_CLK_EN                            = " "0 (SAMPLE_CLK_DISABL),1 (SAMPLE_CLK_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SAMPLE_AMP_TRI                           = " "0 (SAMPLE_AMP_NORMAL_MODE),1 (SAMPLE_AMP_TRI_STATE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   RAMP_EN                                  = " "0 (RAMP_EN_FALSE),1 (RAMP_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COMPENS_EN                               = " "0 (COMPENS_EN_FALSE),1 (COMPENS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SAMPLE_PREBIAS_EN                        = " "0 (SAMPLE_PREBIAS_EN_FALSE),1 (SAMPLE_PREBIAS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GDRV_EN                                  = " "0 (GDRV_EN_FALSE),1 (GDRV_EN_TRUE)"
    tree.end
    tree "S2_CTRL_MAN_CAL_CTL"
      sgroup "S2_CTRL_MAN_CAL_CTL (at 0x117e7)"
        set &access:&cmd_addr %l (0x8017e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MAN_IDAC_CAL_EN                          = " "0 (NORMAL_MODE),1 (MAN_IDAC_BUFFER_CAL_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MAN_CORR_CAL_EN                          = " "0 (NORMAL_MODE),1 (MAN_CORR_BUFFER_CAL_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MAN_PWM_CAL_EN                           = " "0 (NORMAL_MODE),1 (MAN_PWM_COMP_CAL_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MAN_PFM_CAL_EN                           = " "0 (NORMAL_MODE),1 (MAN_PFM_COMP_CAL_EN_TRUE)"
    tree.end
    tree "S2_CTRL_CAL_REQUEST"
      sgroup "S2_CTRL_CAL_REQUEST (at 0x117e8)"
        set &access:&cmd_addr %l (0x8017e80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_REQUEST                              = " "0, 1"
    tree.end
    tree "S2_CTRL_CAL_CTL"
      sgroup "S2_CTRL_CAL_CTL (at 0x117e9)"
        set &access:&cmd_addr %l (0x8017e90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   IDAC_CAL_EN                              = " "0 (IDAC_BUFFER_CAL_DISABL),1 (IDAC_BUFFER_CAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CORR_CAL_EN                              = " "0 (CORR_BUFFER_CAL_DISABL),1 (CORR_BUFFER_CAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PWM_CAL_EN                               = " "0 (PWM_COMP_CAL_DISABL),1 (PWM_COMP_CAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PFM_CAL_EN                               = " "0 (PFM_COMP_CAL_DISABL),1 (PFM_COMP_CAL_ENABL)"
    tree.end
    tree "S2_CTRL_IDAC_CAL_VAL"
      sgroup "S2_CTRL_IDAC_CAL_VAL (at 0x117ea)"
        set &access:&cmd_addr %l (0x8017ea0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ea0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IDAC_CAL_VAL                             = "
    tree.end
    tree "S2_CTRL_CORR_CAL_VAL"
      sgroup "S2_CTRL_CORR_CAL_VAL (at 0x117eb)"
        set &access:&cmd_addr %l (0x8017eb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17eb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CORR_CAL_VAL                             = "
    tree.end
    tree "S2_CTRL_PWM_CAL_VAL"
      sgroup "S2_CTRL_PWM_CAL_VAL (at 0x117ec)"
        set &access:&cmd_addr %l (0x8017ec0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ec0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_CAL_VAL                              = "
    tree.end
    tree "S2_CTRL_PFM_CAL_VAL"
      sgroup "S2_CTRL_PFM_CAL_VAL (at 0x117ed)"
        set &access:&cmd_addr %l (0x8017ed0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ed0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PFM_CAL_VAL                              = "
    tree.end
    tree "S2_CTRL_MPHASE_IDAC"
      sgroup "S2_CTRL_MPHASE_IDAC (at 0x117ee)"
        set &access:&cmd_addr %l (0x8017ee0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ee0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVR_EN                                   = " "0 (MPHASE_IDAC_OVERRIDE_FALSE),1 (MPHASE_IDAC_OVERRIDE_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   DATA                                     = "
    tree.end
    tree "S2_CTRL_TRIM_NUM"
      sgroup "S2_CTRL_TRIM_NUM (at 0x117f0)"
        set &access:&cmd_addr %l (0x8017f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "S2_CTRL_REFDAC_TRIM"
      sgroup "S2_CTRL_REFDAC_TRIM (at 0x117f1)"
        set &access:&cmd_addr %l (0x8017f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REFDAC_TRIM_EN                           = " "0 (REFDAC_TRIM_EN_FALSE),1 (REFDAC_TRIM_EN_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   REFDAC_TRIM                              = "
    tree.end
    tree "S2_CTRL_IDAC_TRIM"
      sgroup "S2_CTRL_IDAC_TRIM (at 0x117f2)"
        set &access:&cmd_addr %l (0x8017f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IDAC_TRIM                                = "
    tree.end
    tree "S2_CTRL_CORR_TRIM"
      sgroup "S2_CTRL_CORR_TRIM (at 0x117f3)"
        set &access:&cmd_addr %l (0x8017f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CORR_TRIM                                = "
    tree.end
    tree "S2_CTRL_PWM_TRIM"
      sgroup "S2_CTRL_PWM_TRIM (at 0x117f4)"
        set &access:&cmd_addr %l (0x8017f40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PWM_P_TRIM                               = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PWM_N_TRIM                               = "
    tree.end
    tree "S2_CTRL_PFM_TRIM"
      sgroup "S2_CTRL_PFM_TRIM (at 0x117f5)"
        set &access:&cmd_addr %l (0x8017f50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PFM_TRIM                                 = "
    tree.end
    tree "S2_CTRL_RAMP_TRIM"
      sgroup "S2_CTRL_RAMP_TRIM (at 0x117f6)"
        set &access:&cmd_addr %l (0x8017f60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RAMP_TRIM                                = "
    tree.end
  tree.end
tree.end
tree "S2_FREQ"
  tree "S2_FREQ"
    tree "S2_FREQ_REVISION1"
      sgroup "S2_FREQ_REVISION1 (at 0x11900)"
        set &access:&cmd_addr %l (0x8019000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S2_FREQ_REVISION2"
      sgroup "S2_FREQ_REVISION2 (at 0x11901)"
        set &access:&cmd_addr %l (0x8019010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S2_FREQ_PERPH_TYPE"
      sgroup "S2_FREQ_PERPH_TYPE (at 0x11904)"
        set &access:&cmd_addr %l (0x8019040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S2_FREQ_PERPH_SUBTYPE"
      sgroup "S2_FREQ_PERPH_SUBTYPE (at 0x11905)"
        set &access:&cmd_addr %l (0x8019050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S2_FREQ_CLK_ENABLE"
      sgroup "S2_FREQ_CLK_ENABLE (at 0x11946)"
        set &access:&cmd_addr %l (0x8019460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "S2_FREQ_CLK_DIV"
      sgroup "S2_FREQ_CLK_DIV (at 0x11950)"
        set &access:&cmd_addr %l (0x8019500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "S2_FREQ_CLK_PHASE"
      sgroup "S2_FREQ_CLK_PHASE (at 0x11951)"
        set &access:&cmd_addr %l (0x8019510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "S2_FREQ_GANG_CTL1"
      sgroup "S2_FREQ_GANG_CTL1 (at 0x119c0)"
        set &access:&cmd_addr %l (0x8019c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S2_FREQ_GANG_CTL2"
      sgroup "S2_FREQ_GANG_CTL2 (at 0x119c1)"
        set &access:&cmd_addr %l (0x8019c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "S2_FREQ_SEC_ACCESS"
      sgroup "S2_FREQ_SEC_ACCESS (at 0x119d0)"
        set &access:&cmd_addr %l (0x8019d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S2_FREQ_PERPH_RESET_CTL2"
      sgroup "S2_FREQ_PERPH_RESET_CTL2 (at 0x119d9)"
        set &access:&cmd_addr %l (0x8019d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S2_FREQ_PERPH_RESET_CTL3"
      sgroup "S2_FREQ_PERPH_RESET_CTL3 (at 0x119da)"
        set &access:&cmd_addr %l (0x8019da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S2_FREQ_PERPH_RESET_CTL4"
      sgroup "S2_FREQ_PERPH_RESET_CTL4 (at 0x119db)"
        set &access:&cmd_addr %l (0x8019db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "S2_FREQ_TEST1"
      sgroup "S2_FREQ_TEST1 (at 0x119e2)"
        set &access:&cmd_addr %l (0x8019e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "S2_PS"
  tree "S2_PS"
    tree "S2_PS_REVISION1"
      sgroup "S2_PS_REVISION1 (at 0x11800)"
        set &access:&cmd_addr %l (0x8018000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S2_PS_REVISION2"
      sgroup "S2_PS_REVISION2 (at 0x11801)"
        set &access:&cmd_addr %l (0x8018010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S2_PS_REVISION3"
      sgroup "S2_PS_REVISION3 (at 0x11802)"
        set &access:&cmd_addr %l (0x8018020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S2_PS_REVISION4"
      sgroup "S2_PS_REVISION4 (at 0x11803)"
        set &access:&cmd_addr %l (0x8018030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S2_PS_PERPH_TYPE"
      sgroup "S2_PS_PERPH_TYPE (at 0x11804)"
        set &access:&cmd_addr %l (0x8018040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S2_PS_PERPH_SUBTYPE"
      sgroup "S2_PS_PERPH_SUBTYPE (at 0x11805)"
        set &access:&cmd_addr %l (0x8018050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S2_PS_VOLTAGE_CTL1"
      sgroup "S2_PS_VOLTAGE_CTL1 (at 0x11840)"
        set &access:&cmd_addr %l (0x8018400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MV_RANGE                                 = " "0 (LV_RANGE),1 (MV_RANGE)"
    tree.end
    tree "S2_PS_VOLTAGE_CTL2"
      sgroup "S2_PS_VOLTAGE_CTL2 (at 0x11841)"
        set &access:&cmd_addr %l (0x8018410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET                                     = "
    tree.end
    tree "S2_PS_FREQ_CTL"
      sgroup "S2_PS_FREQ_CTL (at 0x11850)"
        set &access:&cmd_addr %l (0x8018500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FREQ_CTL                                 = "
    tree.end
    tree "S2_PS_MULTIPHASE_CTL"
      sgroup "S2_PS_MULTIPHASE_CTL (at 0x11851)"
        set &access:&cmd_addr %l (0x8018510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MULTIPHASE_EN                            = " "0 (SINGLE_PHASE_CONFIG),1 (MULTI_PHASE_CONFIG)"
    tree.end
    tree "S2_PS_PHASE_CTL"
      sgroup "S2_PS_PHASE_CTL (at 0x11852)"
        set &access:&cmd_addr %l (0x8018520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PHASE_BALANCE_EN                         = " "0 (DISABLE_ACTIVE_PHASE_CURRENT_BALANCING),1 (ENABLE_ACTIVE_PHASE_CURRENT_BALANCING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PHASE_STANDBY_MODE                       = " "0 (STANDBY_OFF),1 (WARM_STANDBY)"
    tree.end
    tree "S2_PS_PHASE_ID"
      sgroup "S2_PS_PHASE_ID (at 0x11853)"
        set &access:&cmd_addr %l (0x8018530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_ID                                 = " "0 (PHASE_NUMBER_1),1 (PHASE_NUMBER_2),2 (PHASE_NUMBER_3),3 (PHASE_NUMBER_4)"
    tree.end
    tree "S2_PS_PHASE_CNT"
      sgroup "S2_PS_PHASE_CNT (at 0x11854)"
        set &access:&cmd_addr %l (0x8018540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_CNT                                = " "0 (PHASE_COUNT_1),1 (PHASE_COUNT_2),2 (PHASE_COUNT_4_NOT_3),3 (PHASE_COUNT_4)"
    tree.end
    tree "S2_PS_PWM_CL_CTL"
      sgroup "S2_PS_PWM_CL_CTL (at 0x11860)"
        set &access:&cmd_addr %l (0x8018600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_CL                                   = " "0 (PWM_ILIM_1P0A),1 (PWM_ILIM_1P5A),2 (PWM_ILIM_2P0A),3 (PWM_ILIM_2P5A),4 (PWM_ILIM_3P0A),5 (PWM_ILIM_3P5A),6 (PWM_ILIM_4P0A),7 (PWM_ILIM_4P5A)"
    tree.end
    tree "S2_PS_LPM_CL_CTL"
      sgroup "S2_PS_LPM_CL_CTL (at 0x11861)"
        set &access:&cmd_addr %l (0x8018610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   LPM_CL_FINE                              = " "0 (LPM_CL_FINE_OFF),1 (LPM_CL_FINE_0P167A),2 (LPM_CL_FINE_0P334A),3 (LPM_CL_FINE_0P501A),4 (LPM_CL_FINE_0P668A),5 (LPM_CL_FINE_0P835A),6 (LPM_CL_FINE_1P002A),7 (LPM_CL_FINE_1P169A)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LPM_CL                                   = " "0 (LPM_CL_0P5A),1 (LPM_CL_1P0A),2 (LPM_CL_1P5A),3 (LPM_CL_2P0A),4 (LPM_CL_2P5A),5 (LPM_CL_3P0A),6 (LPM_CL_3P5A),7 (LPM_CL_4P0A)"
    tree.end
    tree "S2_PS_AUTO_CTL"
      sgroup "S2_PS_AUTO_CTL (at 0x11862)"
        set &access:&cmd_addr %l (0x8018620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   LPM_EXIT_CYCLES                          = " "0 (LPM_EXIT_CYCLES_2),1 (LPM_EXIT_CYCLES_4),2 (LPM_EXIT_CYCLES_6),3 (LPM_EXIT_CYCLES_8),4 (LPM_EXIT_CYCLES_12),5 (LPM_EXIT_CYCLES_16),6 (LPM_EXIT_CYCLES_24),7 (LPM_EXIT_CYCLES_32)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LPM_ENTRY_CYCLES                         = " "0 (LPM_ENTRY_CYCLES_1),1 (LPM_ENTRY_CYCLES_5),2 (LPM_ENTRY_CYCLES_9),3 (LPM_ENTRY_CYCLES_13),4 (LPM_ENTRY_CYCLES_17),5 (LPM_ENTRY_CYCLES_21),6 (LPM_ENTRY_CYCLES_25),7 (LPM_ENTRY_CYCLES_29)"
    tree.end
    tree "S2_PS_ZX_ADAPT_CTL"
      sgroup "S2_PS_ZX_ADAPT_CTL (at 0x11863)"
        set &access:&cmd_addr %l (0x8018630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   ZX_SAMPLE_CTL                            = " "0 (OVERRIDE_IADC_WITH_ZEROS_WHEN_TRISTATE_ASSERTED_FOR_ANY_PART_OF_TRISTATE_SAMPLE_WINDOW),1 (OVERRIDE_IADC_WITH_ZEROS_WHEN_TRISTATE_ASSERTED_FOR_FULL_TRISTATE_SAMPLE_WINDOW),2 (reserved),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ZX_UP_CYCLES                             = " "0 (ZX_UP_CYCLES_4),1 (ZX_UP_CYCLES_12),2 (ZX_UP_CYCLES_20),3 (ZX_UP_CYCLES_28)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_DOWN_CYCLES                           = " "0 (ZX_DOWN_CYCLES_4),1 (ZX_DOWN_CYCLES_12),2 (ZX_DOWN_CYCLES_20),3 (ZX_DOWN_CYCLES_28)"
    tree.end
    tree "S2_PS_ZX_ADAPT_VAL"
      sgroup "S2_PS_ZX_ADAPT_VAL (at 0x11864)"
        set &access:&cmd_addr %l (0x8018640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_ADAPT_VAL                             = "
    tree.end
    tree "S2_PS_FSM_MINON_CFG"
      sgroup "S2_PS_FSM_MINON_CFG (at 0x11870)"
        set &access:&cmd_addr %l (0x8018700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CL_EXTEND_BLANK                          = " "0 (CL_EXTEND_BLANK_DISABLED),1 (CL_EXTEND_BLANK_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   N_MIN_ON_TIME                            = " "0 (NMOS_MIN_ON_TIME_ILLEGAL),1 (NMOS_MIN_ON_TIME_10NS),2 (NMOS_MIN_ON_TIME_20NS),3 (NMOS_MIN_ON_TIME_30NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   P_MIN_ON_TIME                            = " "0 (PMOS_MIN_ON_TIME_ILLEGAL),1 (PMOS_MIN_ON_TIME_10NS),2 (PMOS_MIN_ON_TIME_20NS),3 (PMOS_MIN_ON_TIME_30NS)"
    tree.end
    tree "S2_PS_ICOMP_EN_CFG"
      sgroup "S2_PS_ICOMP_EN_CFG (at 0x11871)"
        set &access:&cmd_addr %l (0x8018710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CL_TEST_EN                               = " "0 (CL_TEST_MODE_DISABLED_FOR_NORMAL_OP),1 (CL_TEST_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ADC_TEST_EN                              = " "0 (ADC_TEST_MODE_DISABLED_FOR_NORMAL_OP),1 (ADC_TEST_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_CL                                    = " "0 (CURRENT_LIMIT_DISABLED),1 (CURRENT_LIMIT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   EN_ZX                                    = " "0 (ZX_COMP_DISABLED),1 (ZX_COMP_ENABLED_FOR_PWM_LPM_BURSTS_WARMUP),2 (ILLEGAL),3 (ZX_COMP_ALWAYS_ENABLED)"
    tree.end
    tree "S2_PS_ZX_CAL_CFG"
      sgroup "S2_PS_ZX_CAL_CFG (at 0x11872)"
        set &access:&cmd_addr %l (0x8018720|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18720|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x2--0x7 1 "  [ 7: 2]   ZX_VOS_NOM                               = "
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CAL                                   = " "0 (ZX_CAL_USES_OPT_TRIM_CODE_PLUS_ZX_VOS_NOM),1 (ZX_CAL_USES_ZERO_TRIM_CODE_PLUS_ZX_VOS_NOM),2 (ZX_CAL_USES_POWERON_CAL_PLUS_ZX_VOS_NOM),3 (ZX_CAL_ADAPTIVE_ZX_ENABLED_AND_USES_POWERON_CAL_PLUS_ZX_VOS_NOM)"
    tree.end
    tree "S2_PS_NONOVLAP_CFG"
      sgroup "S2_PS_NONOVLAP_CFG (at 0x11873)"
        set &access:&cmd_addr %l (0x8018730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   NDRV_ON_DEL                              = " "0 (NDRV_ON_DEL_0NS),1 (NDRV_ON_DEL_0P5NS),2 (NDRV_ON_DEL_1NS),3 (NDRV_ON_DEL_2NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PDRV_ON_DEL                              = " "0 (PDRV_ON_DEL_0NS),1 (PDRV_ON_DEL_0P5NS),2 (PDRV_ON_DEL_1NS),3 (PDRV_ON_DEL_2NS)"
    tree.end
    tree "S2_PS_MPHASE_PI_CFG1"
      sgroup "S2_PS_MPHASE_PI_CFG1 (at 0x11874)"
        set &access:&cmd_addr %l (0x8018740|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18740|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   A_COEFFICIENT_LO                         = "
    tree.end
    tree "S2_PS_MPHASE_PI_CFG2"
      sgroup "S2_PS_MPHASE_PI_CFG2 (at 0x11875)"
        set &access:&cmd_addr %l (0x8018750|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18750|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   A_COEFFICIENT_MID                        = "
    tree.end
    tree "S2_PS_MPHASE_PI_CFG3"
      sgroup "S2_PS_MPHASE_PI_CFG3 (at 0x11876)"
        set &access:&cmd_addr %l (0x8018760|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18760|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   A_COEFFICIENT_HI                         = "
    tree.end
    tree "S2_PS_MPHASE_PI_CFG4"
      sgroup "S2_PS_MPHASE_PI_CFG4 (at 0x11877)"
        set &access:&cmd_addr %l (0x8018770|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18770|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   B_COEFFICIENT_LO                         = "
    tree.end
    tree "S2_PS_MPHASE_PI_CFG5"
      sgroup "S2_PS_MPHASE_PI_CFG5 (at 0x11878)"
        set &access:&cmd_addr %l (0x8018780|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18780|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   B_COEFFICIENT_MID                        = "
    tree.end
    tree "S2_PS_MPHASE_PI_CFG6"
      sgroup "S2_PS_MPHASE_PI_CFG6 (at 0x11879)"
        set &access:&cmd_addr %l (0x8018790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   B_COEFFICIENT_HI                         = "
    tree.end
    tree "S2_PS_CAL_FAULT"
      sgroup "S2_PS_CAL_FAULT (at 0x1187a)"
        set &access:&cmd_addr %l (0x80187a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ZX_CAL_FAULT                             = " "0 (ZX_CAL_FAULT_FALSE),1 (ZX_CAL_FAULT_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_CAL_VAL                               = "
    tree.end
    tree "S2_PS_ADC_OUT"
      sgroup "S2_PS_ADC_OUT (at 0x1187b)"
        set &access:&cmd_addr %l (0x80187b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   ADC_OUT                                  = "
    tree.end
    tree "S2_PS_MP_IAVG2"
      sgroup "S2_PS_MP_IAVG2 (at 0x1187c)"
        set &access:&cmd_addr %l (0x80187c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MP_IAVG_0                                = " "0, 1"
    tree.end
    tree "S2_PS_MP_IAVG1"
      sgroup "S2_PS_MP_IAVG1 (at 0x1187d)"
        set &access:&cmd_addr %l (0x80187d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MP_IAVG_8_1                              = "
    tree.end
    tree "S2_PS_MP_DAC_DATA"
      sgroup "S2_PS_MP_DAC_DATA (at 0x1187e)"
        set &access:&cmd_addr %l (0x80187e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   MP_DAC_DATA                              = "
    tree.end
    tree "S2_PS_MP_IAVG_DFT"
      sgroup "S2_PS_MP_IAVG_DFT (at 0x1187f)"
        set &access:&cmd_addr %l (0x80187f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MP_IAVG_DFT                              = " "0 (MP_IAVG_DFT_NOT_FORCED_FOR_NORMAL_OP),1 (MP_IAVG_DFT_FORCED_TO_A5),2 (MP_IAVG_DFT_FORCED_TO_15),3 (MP_IAVG_DFT_FORCED_TO_FF)"
    tree.end
    tree "S2_PS_GANG_CTL1"
      sgroup "S2_PS_GANG_CTL1 (at 0x118c0)"
        set &access:&cmd_addr %l (0x8018c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S2_PS_GANG_CTL2"
      sgroup "S2_PS_GANG_CTL2 (at 0x118c1)"
        set &access:&cmd_addr %l (0x8018c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANG_EN_FALSE),1 (GANG_EN_TRUE)"
    tree.end
    tree "S2_PS_SEC_ACCESS"
      sgroup "S2_PS_SEC_ACCESS (at 0x118d0)"
        set &access:&cmd_addr %l (0x8018d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S2_PS_PERPH_RESET_CTL2"
      sgroup "S2_PS_PERPH_RESET_CTL2 (at 0x118d9)"
        set &access:&cmd_addr %l (0x8018d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S2_PS_PERPH_RESET_CTL3"
      sgroup "S2_PS_PERPH_RESET_CTL3 (at 0x118da)"
        set &access:&cmd_addr %l (0x8018da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S2_PS_PERPH_RESET_CTL4"
      sgroup "S2_PS_PERPH_RESET_CTL4 (at 0x118db)"
        set &access:&cmd_addr %l (0x8018db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "S2_PS_ATEST12"
      sgroup "S2_PS_ATEST12 (at 0x118e2)"
        set &access:&cmd_addr %l (0x8018e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ATEST2                                   = " "0 (ATEST2_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST2_NOT_USED1),2 (ATEST2_NOT_USED2),3 (ILLEGAL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST1                                   = " "0 (ATEST1_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST1_ADC_DAC_OUT),2 (ATEST1_NOT_USED),3 (ILLEGAL)"
    tree.end
    tree "S2_PS_ATEST34"
      sgroup "S2_PS_ATEST34 (at 0x118e3)"
        set &access:&cmd_addr %l (0x8018e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ATEST4                                   = " "0 (ATEST4_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST4_PGND),2 (ATEST4_VDDIN),3 (ILLEGAL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST3                                   = " "0 (ATEST3_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST3_VSW),2 (ATEST3_NOT_USED),3 (ILLEGAL)"
    tree.end
    tree "S2_PS_DTEST12"
      sgroup "S2_PS_DTEST12 (at 0x118e4)"
        set &access:&cmd_addr %l (0x8018e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST1                                   = "
    tree.end
    tree "S2_PS_DTEST43"
      sgroup "S2_PS_DTEST43 (at 0x118e5)"
        set &access:&cmd_addr %l (0x8018e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST4                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST3                                   = "
    tree.end
    tree "S2_PS_MAN_CAL_CTL"
      sgroup "S2_PS_MAN_CAL_CTL (at 0x118e7)"
        set &access:&cmd_addr %l (0x8018e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MAN_ZX_CAL_EN                            = " "0 (MAN_ZX_CAL_EN_FALSE),1 (MAN_ZX_CAL_EN_TRUE)"
    tree.end
    tree "S2_PS_CAL_REQUEST"
      sgroup "S2_PS_CAL_REQUEST (at 0x118e8)"
        set &access:&cmd_addr %l (0x8018e80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_REQUEST                              = " "0 (CAL_REQUEST_FALSE),1 (CAL_REQUEST_TRUE)"
    tree.end
    tree "S2_PS_TRIM_NUM"
      sgroup "S2_PS_TRIM_NUM (at 0x118f0)"
        set &access:&cmd_addr %l (0x8018f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "S2_PS_ZX_TRIM"
      sgroup "S2_PS_ZX_TRIM (at 0x118f1)"
        set &access:&cmd_addr %l (0x8018f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_TRIM                                  = "
    tree.end
    tree "S2_PS_CL_TRIM"
      sgroup "S2_PS_CL_TRIM (at 0x118f2)"
        set &access:&cmd_addr %l (0x8018f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CL_TRIM                                  = " "0 (CL_TRIM_OFF),1 (CL_TRIM_0P167A),2 (CL_TRIM_0P334A),3 (CL_TRIM_0P501A),4 (CL_TRIM_0P668A),5 (CL_TRIM_0P835A),6 (CL_TRIM_1P002A),7 (CL_TRIM_1P169A)"
    tree.end
  tree.end
tree.end
tree "S3_CTRL"
  tree "S3_CTRL"
    tree "S3_CTRL_REVISION1"
      sgroup "S3_CTRL_REVISION1 (at 0x11a00)"
        set &access:&cmd_addr %l (0x801a000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S3_CTRL_REVISION2"
      sgroup "S3_CTRL_REVISION2 (at 0x11a01)"
        set &access:&cmd_addr %l (0x801a010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S3_CTRL_REVISION3"
      sgroup "S3_CTRL_REVISION3 (at 0x11a02)"
        set &access:&cmd_addr %l (0x801a020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S3_CTRL_REVISION4"
      sgroup "S3_CTRL_REVISION4 (at 0x11a03)"
        set &access:&cmd_addr %l (0x801a030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S3_CTRL_PERPH_TYPE"
      sgroup "S3_CTRL_PERPH_TYPE (at 0x11a04)"
        set &access:&cmd_addr %l (0x801a040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S3_CTRL_PERPH_SUBTYPE"
      sgroup "S3_CTRL_PERPH_SUBTYPE (at 0x11a05)"
        set &access:&cmd_addr %l (0x801a050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S3_CTRL_STATUS"
      sgroup "S3_CTRL_STATUS (at 0x11a08)"
        set &access:&cmd_addr %l (0x801a080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (VREG_OK_FALSE),1 (VREG_OK_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS                                      = " "0 (ILEGAL_LIMIT_STOP_FALSE),1 (ILEGAL_LIMIT_STOP_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE                               = " "0 (UL_INT_FALSE),1 (UL_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE                               = " "0 (LL_INT_FALSE),1 (LL_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PS_TRUE                                  = " "0 (PS_FALSE),1 (PS_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NPM_VREGOK_FALSE),1 (NPM_VREGOK_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE                             = " "0 (STEPPER_DONE_FALSE),1 (STEPPER_DONE_TRUE)"
    tree.end
    tree "S3_CTRL_INT_RT_STS"
      sgroup "S3_CTRL_INT_RT_STS (at 0x11a10)"
        set &access:&cmd_addr %l (0x801a100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_SET_TYPE"
      sgroup "S3_CTRL_INT_SET_TYPE (at 0x11a11)"
        set &access:&cmd_addr %l (0x801a110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_POLARITY_HIGH"
      sgroup "S3_CTRL_INT_POLARITY_HIGH (at 0x11a12)"
        set &access:&cmd_addr %l (0x801a120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_POLARITY_LOW"
      sgroup "S3_CTRL_INT_POLARITY_LOW (at 0x11a13)"
        set &access:&cmd_addr %l (0x801a130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_LATCHED_CLR"
      sgroup "S3_CTRL_INT_LATCHED_CLR (at 0x11a14)"
        set &access:&cmd_addr %l (0x801a140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_EN_SET"
      sgroup "S3_CTRL_INT_EN_SET (at 0x11a15)"
        set &access:&cmd_addr %l (0x801a150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_EN_CLR"
      sgroup "S3_CTRL_INT_EN_CLR (at 0x11a16)"
        set &access:&cmd_addr %l (0x801a160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_LATCHED_STS"
      sgroup "S3_CTRL_INT_LATCHED_STS (at 0x11a18)"
        set &access:&cmd_addr %l (0x801a180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_PENDING_STS"
      sgroup "S3_CTRL_INT_PENDING_STS (at 0x11a19)"
        set &access:&cmd_addr %l (0x801a190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_MID_SEL"
      sgroup "S3_CTRL_INT_MID_SEL (at 0x11a1a)"
        set &access:&cmd_addr %l (0x801a1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_FALSE),1 (INT_MID_TRUE),2 (reserved),3 (reserved)"
    tree.end
    tree "S3_CTRL_INT_PRIORITY"
      sgroup "S3_CTRL_INT_PRIORITY (at 0x11a1b)"
        set &access:&cmd_addr %l (0x801a1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_FALSE),1 (INT_PRIORITY_TRUE)"
    tree.end
    tree "S3_CTRL_VOLTAGE_CTL1"
      sgroup "S3_CTRL_VOLTAGE_CTL1 (at 0x11a40)"
        set &access:&cmd_addr %l (0x801a400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RANGE                                    = " "0 (RANGE_HV_FALSE),1 (RANGE_HV_TRUE)"
    tree.end
    tree "S3_CTRL_VOLTAGE_CTL2"
      sgroup "S3_CTRL_VOLTAGE_CTL2 (at 0x11a41)"
        set &access:&cmd_addr %l (0x801a410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S3_CTRL_PFM_CTL"
      sgroup "S3_CTRL_PFM_CTL (at 0x11a44)"
        set &access:&cmd_addr %l (0x801a440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_VOLT_CTL                             = " "0 (PFM_VOLT_BOOST),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFM_IBOOST                               = " "0 (PFM_IBOOST_FALSE),1 (PFM_IBOOST_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PFM_TYPE_I                               = " "0 (PFM_ADVANCED),1 (PFM_LEGACY)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PFM_COMP_HYST                            = " "0 (PFM_HYST_3MV),1 (PFM_HYST_6MV)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PFM_COMP_PLS_FLTR                        = " "0 (PFM_COMP_PLS_FLTR_100NS),1 (PFM_COMP_PLS_FLTR_250NS)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PFM_IPLIM_CTRL                           = " "0 (PFM_IPLIM_CTRL_FALSE),1 (PFM_IPLIM_CTRL_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_IPLIM_DLY                            = " "0 (PFM_IPLIM_CTRL_75NS),1 (PFM_IPLIMI_CTRL_150NS),2 (PFM_IPLIM_CTRL_300NS),3 (PFM_IPLIM_CTRL_600NS)"
    tree.end
    tree "S3_CTRL_MODE_CTL"
      sgroup "S3_CTRL_MODE_CTL (at 0x11a45)"
        set &access:&cmd_addr %l (0x801a450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PWM                                      = " "0 (PWM_NO_FORCE),1 (PWM_FORCE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_FALSE),1 (AUTO_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HWEN3                             = " "0 (FOLLOW_HWEN3_FALSE),1 (FOLLOW_HWEN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HWEN2                             = " "0 (FOLLOW_HWEN2_FALSE),1 (FOLLOW_HWEN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HWEN1                             = " "0 (FOLLOW_HWEN1_FALSE),1 (FOLLOW_HWEN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HWEN0                             = " "0 (FOLLOW_HWEN0_FALSE),1 (FOLLOW_HWEN0_TRUE)"
    tree.end
    tree "S3_CTRL_EN_CTL"
      sgroup "S3_CTRL_EN_CTL (at 0x11a46)"
        set &access:&cmd_addr %l (0x801a460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (BUCK_ENABLE_FALSE),1 (BUCK_ENABLE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HWEN3                             = " "0 (FOLLOW_HWEN3_FALSE),1 (FOLLOW_HWEN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HWEN2                             = " "0 (FOLLOW_HWEN2_FALSE),1 (FOLLOW_HWEN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HWEN1                             = " "0 (FOLLOW_HWEN1_FALSE),1 (FOLLOW_HWEN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HWEN0                             = " "0 (FOLLOW_HWEN0_FALSE),1 (FOLLOW_HWEN0_TRUE)"
    tree.end
    tree "S3_CTRL_PD_CTL"
      sgroup "S3_CTRL_PD_CTL (at 0x11a48)"
        set &access:&cmd_addr %l (0x801a480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PD_ENABLE_FALSE),1 (PD_ENABLE_TRUE)"
    tree.end
    tree "S3_CTRL_COMP_CAP_CTL"
      sgroup "S3_CTRL_COMP_CAP_CTL (at 0x11a51)"
        set &access:&cmd_addr %l (0x801a510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   POLE2_CTRL                               = " "0 (CP_CAP_0PF),1 (CP_CAP_1PF)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CZ_CTRL                                  = " "0 (CZ_CAP_30PF),1 (CZ_CAP_40PF),2 (CZ_CAP_50PF),3 (CZ_CAP_60PF)"
    tree.end
    tree "S3_CTRL_GM_CTL"
      sgroup "S3_CTRL_GM_CTL (at 0x11a52)"
        set &access:&cmd_addr %l (0x801a520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   GM_CTL                                   = "
    tree.end
    tree "S3_CTRL_RZ_CTL"
      sgroup "S3_CTRL_RZ_CTL (at 0x11a53)"
        set &access:&cmd_addr %l (0x801a530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RZ_CTL                                   = "
    tree.end
    tree "S3_CTRL_ISNS_CTRL"
      sgroup "S3_CTRL_ISNS_CTRL (at 0x11a55)"
        set &access:&cmd_addr %l (0x801a550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SA_COMP_CAP                              = " "0 (SA_COMP_CAP_100FF),1 (SA_COMP_CAP_200FF)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_RES_IOS                             = " "0 (ISNS_RES_IOS_8KOHMS_24UA),1 (ISNS_RES_IOS_16KOHMS_12UA)"
    tree.end
    tree "S3_CTRL_SAW_CTL"
      sgroup "S3_CTRL_SAW_CTL (at 0x11a56)"
        set &access:&cmd_addr %l (0x801a560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CURRENT_CTRL                             = " "0 (SAW_CURRENT_CTRL_1UA),1 (SAW_CURRENT_CTRL_2UA)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NSAW_CTRL                                = " "0 (NSAW_CTRL_4X),1 (NSAW_CTRL_8X),2 (NSAW_CTRL_12X),3 (NSAW_CTRL_16X),4 (NSAW_CTRL_20X),5 (NSAW_CTRL_24X),6 (NSAW_CTRL_28X),7 (NSAW_CTRL_32X)"
    tree.end
    tree "S3_CTRL_DMAX_CTL"
      sgroup "S3_CTRL_DMAX_CTL (at 0x11a58)"
        set &access:&cmd_addr %l (0x801a580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DMAX_EN                                  = " "0 (DMAX_EN_FALSE),1 (DMAX_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DMAX_TIME_SEL                            = " "0 (DMAX_TIME_SEL_20NS),1 (DMAX_TIME_SEL_10NS)"
    tree.end
    tree "S3_CTRL_PULSE_SKIP_CTL"
      sgroup "S3_CTRL_PULSE_SKIP_CTL (at 0x11a59)"
        set &access:&cmd_addr %l (0x801a590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PS_EN                                    = " "0 (PS_EN_FALSE),1 (PS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PS_TIME_HYST                             = " "0 (PS_TIME_HYST_2CYCLE),1 (PS_TIME_HYST_4CYCLE),2 (PS_TIME_HYST_8CYCLE),3 (PS_TIME_HYST_16CYLE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PSKIP_EXIT_SEL                           = " "0 (PSKIP_EXIT_SEL_ERR_AMP),1 (PSKIP_EXIT_VDIP_COMP)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PS_METHOD                                = " "0 (PS_METHOD_ILOAD),1 (PS_METHOD_ERR_AMP)"
    tree.end
    tree "S3_CTRL_PULSE_SKIP_THRES"
      sgroup "S3_CTRL_PULSE_SKIP_THRES (at 0x11a5a)"
        set &access:&cmd_addr %l (0x801a5a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a5a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x6 1 "  [ 6: 3]   PS_VRST                                  = "
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PS_VSET                                  = " "0 (PS_VSET_VRSET_450MV_ILOAD_THRESH_25MA),1 (PS_VSET_VRSET_475MV_ILOAD_THRESH_37P5MA),2 (PS_VSET_VRSET_500MV_ILOAD_THRESH_50MA),3 (PS_VSET_VRSET_525MV_ILOAD_THRESH_62P5MA),4 (PS_VSET_VRSET_550MV_ILOAD_THRESH_75MA),5 (PS_VSET_VRSET_575MV_ILOAD_THRESH_87P5MA),6 (PS_VSET_VRSET_600MV_ILOAD_THRESH_100MA),7 (PS_VSET_VRSET_625MV_ILOAD_THRESH_112P5MA)"
    tree.end
    tree "S3_CTRL_AUTO_MODE_CTL"
      sgroup "S3_CTRL_AUTO_MODE_CTL (at 0x11a5b)"
        set &access:&cmd_addr %l (0x801a5b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a5b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PWM_PFM_SEL                              = " "0 (PWM_PFM_SEL_PS_COMP),1 (PWM_PFM_SEL_INZERO)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PFM_PWM_SEL                              = " "0 (PFM_PWM_SEL_RESERVED),1 (PFM_PWM_SEL_VDIP_COMP),2 (PFM_PWM_SEL_IPLIM_CNTR),3 (PFM_PWM_SEL_VDIP_COMP_OR_IPLIM_CNTR)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MODE_SEL_DLY                             = " "0 (MODE_SEL_DLY_4CYCLES),1 (MODE_SEL_DLY_8CYCLES),2 (MODE_SEL_DLY_16CYCLES),3 (MODE_SEL_DLY_16CYCLES_ALSO)"
    tree.end
    tree "S3_CTRL_INZERO_COUNT_CTL"
      sgroup "S3_CTRL_INZERO_COUNT_CTL (at 0x11a5c)"
        set &access:&cmd_addr %l (0x801a5c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a5c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   WINDOW_WIDTH                             = " "0 (WINDOW_WIDTH_1_COUNT),1 (WINDOW_WIDTH_2_COUNT),2 (WINDOW_WIDTH_4_COUNT),3 (WINDOW_WIDTH_8_COUNT),4 (WINDOW_WIDTH_16_COUNT),5 (WINDOW_WIDTH_32_COUNT),6 (WINDOW_WIDTH_64_COUNT),7 (WINDOW_WIDTH_128_COUNT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   THRESHOLD                                = "
    tree.end
    tree "S3_CTRL_PFM_COUNT_CTL"
      sgroup "S3_CTRL_PFM_COUNT_CTL (at 0x11a5d)"
        set &access:&cmd_addr %l (0x801a5d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a5d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   WINDOW_WIDTH                             = " "0 (WINDOW_WIDTH_1_COUNT),1 (WINDOW_WIDTH_2_COUNT),2 (WINDOW_WIDTH_4_COUNT),3 (WINDOW_WIDTH_8_COUNT),4 (WINDOW_WIDTH_16_COUNT),5 (WINDOW_WIDTH_32_COUNT),6 (WINDOW_WIDTH_64_COUNT),7 (WINDOW_WIDTH_128_COUNT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   THRESHOLD                                = "
    tree.end
    tree "S3_CTRL_PS_VGA_CTL"
      sgroup "S3_CTRL_PS_VGA_CTL (at 0x11a5e)"
        set &access:&cmd_addr %l (0x801a5e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a5e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VGA_GAIN                                 = "
    tree.end
    tree "S3_CTRL_STEPPER_SS_CTL"
      sgroup "S3_CTRL_STEPPER_SS_CTL (at 0x11a60)"
        set &access:&cmd_addr %l (0x801a600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STEPPER_EN                               = " "0 (STEPPER_EN_FALSE),1 (STEPPER_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   STEP                                     = " "0 (STEP_1_LSB),1 (STEP_2_LSB),2 (STEP_4_LSB),3 (STEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DELAY                                    = " "0 (DELAY_20_CLK_CYCLES),1 (DELAY_40_CLK_CYCLES),2 (DELAY_80_CLK_CYCLES),3 (DELAY_160_CLK_CYCLES),4 (DELAY_320_CLK_CYCLES),5 (DELAY_640_CLK_CYLES),6 (DELAY_1280_CLK_CYCLES),7 (DELAY_2560_CLK_CYCLES)"
    tree.end
    tree "S3_CTRL_STEPPER_VS_CTL"
      sgroup "S3_CTRL_STEPPER_VS_CTL (at 0x11a61)"
        set &access:&cmd_addr %l (0x801a610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STEPPER_EN                               = " "0 (STEPPER_EN_FALSE),1 (STEPPER_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   STEP                                     = " "0 (STEP_1_LSB),1 (STEP_2_LSB),2 (STEP_4_LSB),3 (STEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DELAY                                    = " "0 (DELAY_20_CLK_CYCLES),1 (DELAY_40_CLK_CYCLES),2 (DELAY_80_CLK_CYCLES),3 (DELAY_160_CLK_CYCLES),4 (DELAY_320_CLK_CYCLES),5 (DELAY_640_CLK_CYLES),6 (DELAY_1280_CLK_CYCLES),7 (DELAY_2560_CLK_CYCLES)"
    tree.end
    tree "S3_CTRL_FT_CTL"
      sgroup "S3_CTRL_FT_CTL (at 0x11a62)"
        set &access:&cmd_addr %l (0x801a620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FT_EN                                    = " "0 (FT_EN_FALSE),1 (FT_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   GM_BOOST                                 = " "0 (GM_BOOST_FALSE),1 (GM_BOOST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   NL_DEAD_ZONE                             = " "0 (NL_DEAD_ZONE_0A),1 (NL_DEAD_ZONE_0P125A),2 (NL_DEAD_ZONE_0P25A),3 (NL_DEAD_ZONE_0P375A),4 (NL_DEAD_ZONE_0P5A),5 (NL_DEAD_ZONE_0P625A),6 (NL_DEAD_ZONE_0P75A),7 (NL_DEAD_ZONE_0P875A)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NL_CUR_CTL                               = " "0 (NL_CUR_CTL_0A),1 (NL_CUR_CTL_0P125A),2 (NL_CUR_CTL_0P25A),3 (NL_CUR_CTL_0P375A),4 (NL_CUR_CTL_0P5A),5 (NL_CUR_CTL_0P625A),6 (NL_CUR_CTL_0P75A),7 (NL_CUR_CTL_0P875A)"
    tree.end
    tree "S3_CTRL_QMODE_SHADOW"
      sgroup "S3_CTRL_QMODE_SHADOW (at 0x11a63)"
        set &access:&cmd_addr %l (0x801a630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FOLLOW_QM                                = " "0 (FOLLOW_QM_FALSE),1 (FOLLOW_QM_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   QMODE_PS_METHOD                          = " "0 (QMODE_PS_METHOD_ILOAD),1 (QMODE_PS_METHOD_ERRAMP)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   QMODE_PS_VRST                            = "
    tree.end
    tree "S3_CTRL_UL_LL_CTRL"
      sgroup "S3_CTRL_UL_LL_CTRL (at 0x11a68)"
        set &access:&cmd_addr %l (0x801a680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UL_INT_EN                                = " "0 (UL_INT_EN_FALSE),1 (UL_INT_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LL_INT_EN                                = " "0 (LL_INT_EN_FALSE),1 (LL_INT_EN_TRUE)"
    tree.end
    tree "S3_CTRL_UL_VOLTAGE"
      sgroup "S3_CTRL_UL_VOLTAGE (at 0x11a69)"
        set &access:&cmd_addr %l (0x801a690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S3_CTRL_LL_VOLTAGE"
      sgroup "S3_CTRL_LL_VOLTAGE (at 0x11a6b)"
        set &access:&cmd_addr %l (0x801a6b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a6b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S3_CTRL_CTLR_MISC"
      sgroup "S3_CTRL_CTLR_MISC (at 0x11a7a)"
        set &access:&cmd_addr %l (0x801a7a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a7a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SPARE_7                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SPARE_6                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SPARE_5                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SPARE_4                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPARE_3                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SPARE_2                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPARE_0                                  = " "0, 1"
    tree.end
    tree "S3_CTRL_SEC_ACCESS"
      sgroup "S3_CTRL_SEC_ACCESS (at 0x11ad0)"
        set &access:&cmd_addr %l (0x801ad00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ad00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S3_CTRL_PERPH_RESET_CTL1"
      sgroup "S3_CTRL_PERPH_RESET_CTL1 (at 0x11ad8)"
        set &access:&cmd_addr %l (0x801ad80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ad80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "S3_CTRL_PERPH_RESET_CTL2"
      sgroup "S3_CTRL_PERPH_RESET_CTL2 (at 0x11ad9)"
        set &access:&cmd_addr %l (0x801ad90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ad90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S3_CTRL_PERPH_RESET_CTL3"
      sgroup "S3_CTRL_PERPH_RESET_CTL3 (at 0x11ada)"
        set &access:&cmd_addr %l (0x801ada0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ada0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S3_CTRL_PERPH_RESET_CTL4"
      sgroup "S3_CTRL_PERPH_RESET_CTL4 (at 0x11adb)"
        set &access:&cmd_addr %l (0x801adb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1adb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_ACTIVE_FALSE),1 (LOCAL_SOFT_RESET_ACTIVE_TRUE)"
    tree.end
    tree "S3_CTRL_INT_TEST1"
      sgroup "S3_CTRL_INT_TEST1 (at 0x11ae0)"
        set &access:&cmd_addr %l (0x801ae00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_EN_FALSE),1 (INT_TEST_MODE_EN_TRUE)"
    tree.end
    tree "S3_CTRL_INT_TEST_VAL"
      sgroup "S3_CTRL_INT_TEST_VAL (at 0x11ae1)"
        set &access:&cmd_addr %l (0x801ae10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT_TEST_VAL                   = " "0 (LIMIT_ERR_INT_TEST_VAL_ACTIVE_FALSE),1 (LIMIT_ERR_INT_TEST_VAL_ACTIVE_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT_TEST_VAL                     = " "0, 1"
    tree.end
    tree "S3_CTRL_CTLR_TEST"
      sgroup "S3_CTRL_CTLR_TEST (at 0x11ae2)"
        set &access:&cmd_addr %l (0x801ae20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_SEL_ATEST1_NORMAL_ATEST2_NORMAL),1 (ATEST_SEL_ATEST1_VREF_LOCAL_BUFFER_ATEST2_AVSS),2 (ATEST_SEL_ATEST1_LOOP_FILTER_ATEST2_AVSS),3 (ATEST_SEL_ATEST1_VREF_OUT_ATEST2_AVSS_CLEAN),4 (ATEST_SEL_ATEST1_V_SAWTOOTH_ATEST2_AVDD),5 (ATEST_SEL_ATEST1_PULSE_SKIP_VGA_OUT_ATEST2_VREF_PULSE_SKIP_RESET),6 (ATEST_SEL_ATEST1_SLOPE_COMP_OUT_ATEST2_VREF_PULSE_SKIP_SET),7 (ATEST_SEL_ATEST1_RES_DIV_OUT_ATEST2_BUCK_FB_PAD)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DTEST_SEL                                = " "0 (DTEST_SEL_DTEST1_NORMAL_DTEST2_NORMAL),1 (DTEST_SEL_DTEST1_PWM_CLOCK_DTEST2_CLK_1P2M),2 (DTEST_SEL_DTEST1_PWM_COMP_DTEST2_DVSS),3 (DTEST_SEL_DTEST1_PULSE_SKIP_COMP_DTEST2_IPLIMIT_COMP_PFM),4 (DTEST_SEL_DTEST1_PFM_COMP_DTEST2_AUTOPFM_COUNT_DONE),5 (DTEST_SEL_DTEST1_MODE_DTEST2_INZ_COUNT_DONE),6 (DTEST_SEL_DTEST1_PULSE_SKIP_ENTER_DTEST2_PULSE_SKIP_EXIT),7 (DTEST_SEL_DTEST1_PFM_COMP_DTEST2_VDIP_COMP)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TRIM_CALIB_EN                            = " "0 (TRIM_CALIB_EN_FALSE),1 (TRIM_CALIB_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OPEN_LOOP_TEST_EN                        = " "0 (OPEN_LOOP_TEST_EN_FALSE),1 (OPEN_LOOP_TEST_EN_TRUE)"
    tree.end
    tree "S3_CTRL_TRIM_NUM"
      sgroup "S3_CTRL_TRIM_NUM (at 0x11af0)"
        set &access:&cmd_addr %l (0x801af00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1af00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "S3_CTRL_CTL_TRIM1"
      sgroup "S3_CTRL_CTL_TRIM1 (at 0x11af1)"
        set &access:&cmd_addr %l (0x801af10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1af10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ERR_AMP_TRIM                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RES_DIV_TRIM                             = "
    tree.end
    tree "S3_CTRL_CTL_TRIM2"
      sgroup "S3_CTRL_CTL_TRIM2 (at 0x11af2)"
        set &access:&cmd_addr %l (0x801af20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1af20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PFM_COMP_TRIM                            = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VDIP_COMP_TRIM                           = "
    tree.end
    tree "S3_CTRL_CTL_TRIM3"
      sgroup "S3_CTRL_CTL_TRIM3 (at 0x11af3)"
        set &access:&cmd_addr %l (0x801af30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1af30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   VGA_PS_TRIM                              = "
    tree.end
    tree "S3_CTRL_CTL_TRIM4"
      sgroup "S3_CTRL_CTL_TRIM4 (at 0x11af4)"
        set &access:&cmd_addr %l (0x801af40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1af40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PULL_DOWN_TRIM                           = " "0 (ACTIVE_PD_OFF),1 (ACTIVE_PD_ON)"
    tree.end
  tree.end
tree.end
tree "S3_FREQ"
  tree "S3_FREQ"
    tree "S3_FREQ_REVISION1"
      sgroup "S3_FREQ_REVISION1 (at 0x11c00)"
        set &access:&cmd_addr %l (0x801c000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S3_FREQ_REVISION2"
      sgroup "S3_FREQ_REVISION2 (at 0x11c01)"
        set &access:&cmd_addr %l (0x801c010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S3_FREQ_PERPH_TYPE"
      sgroup "S3_FREQ_PERPH_TYPE (at 0x11c04)"
        set &access:&cmd_addr %l (0x801c040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S3_FREQ_PERPH_SUBTYPE"
      sgroup "S3_FREQ_PERPH_SUBTYPE (at 0x11c05)"
        set &access:&cmd_addr %l (0x801c050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S3_FREQ_CLK_ENABLE"
      sgroup "S3_FREQ_CLK_ENABLE (at 0x11c46)"
        set &access:&cmd_addr %l (0x801c460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "S3_FREQ_CLK_DIV"
      sgroup "S3_FREQ_CLK_DIV (at 0x11c50)"
        set &access:&cmd_addr %l (0x801c500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "S3_FREQ_CLK_PHASE"
      sgroup "S3_FREQ_CLK_PHASE (at 0x11c51)"
        set &access:&cmd_addr %l (0x801c510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "S3_FREQ_GANG_CTL1"
      sgroup "S3_FREQ_GANG_CTL1 (at 0x11cc0)"
        set &access:&cmd_addr %l (0x801cc00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cc00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S3_FREQ_GANG_CTL2"
      sgroup "S3_FREQ_GANG_CTL2 (at 0x11cc1)"
        set &access:&cmd_addr %l (0x801cc10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cc10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "S3_FREQ_SEC_ACCESS"
      sgroup "S3_FREQ_SEC_ACCESS (at 0x11cd0)"
        set &access:&cmd_addr %l (0x801cd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S3_FREQ_PERPH_RESET_CTL2"
      sgroup "S3_FREQ_PERPH_RESET_CTL2 (at 0x11cd9)"
        set &access:&cmd_addr %l (0x801cd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S3_FREQ_PERPH_RESET_CTL3"
      sgroup "S3_FREQ_PERPH_RESET_CTL3 (at 0x11cda)"
        set &access:&cmd_addr %l (0x801cda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S3_FREQ_PERPH_RESET_CTL4"
      sgroup "S3_FREQ_PERPH_RESET_CTL4 (at 0x11cdb)"
        set &access:&cmd_addr %l (0x801cdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "S3_FREQ_TEST1"
      sgroup "S3_FREQ_TEST1 (at 0x11ce2)"
        set &access:&cmd_addr %l (0x801ce20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ce20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "S3_PS"
  tree "S3_PS"
    tree "S3_PS_REVISION1"
      sgroup "S3_PS_REVISION1 (at 0x11b00)"
        set &access:&cmd_addr %l (0x801b000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S3_PS_REVISION2"
      sgroup "S3_PS_REVISION2 (at 0x11b01)"
        set &access:&cmd_addr %l (0x801b010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S3_PS_REVISION3"
      sgroup "S3_PS_REVISION3 (at 0x11b02)"
        set &access:&cmd_addr %l (0x801b020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S3_PS_REVISION4"
      sgroup "S3_PS_REVISION4 (at 0x11b03)"
        set &access:&cmd_addr %l (0x801b030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S3_PS_PERPH_TYPE"
      sgroup "S3_PS_PERPH_TYPE (at 0x11b04)"
        set &access:&cmd_addr %l (0x801b040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S3_PS_PERPH_SUBTYPE"
      sgroup "S3_PS_PERPH_SUBTYPE (at 0x11b05)"
        set &access:&cmd_addr %l (0x801b050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S3_PS_PWM_CURRENT_LIM_CTL"
      sgroup "S3_PS_PWM_CURRENT_LIM_CTL (at 0x11b4a)"
        set &access:&cmd_addr %l (0x801b4a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b4a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_EN_FALSE),1 (CURRENT_LIM_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   CURRENT_LIM_AUTOINT_SEL                  = " "0 (CURRENT_LIM_AUTOINT_SEL_2X_2700MA_3X_3500MA),1 (CURRENT_LIM_AUTOINT_SEL_2X_2400MA_3X_3100MA),2 (CURRENT_LIM_AUTOINT_SEL_2X_2100MA_3X_2700MA),3 (CURRENT_LIM_AUTOINT_SEL_2X_1800MA_3X_2300MA),4 (CURRENT_LIM_AUTOINT_SEL_2X_1500MA_3X_1900MA),5 (CURRENT_LIM_AUTOINT_SEL_2X_1200MA_3X_1500MA),6 (CURRENT_LIM_AUTOINT_SEL_2X_900MA_3X_1100MA),7 (CURRENT_LIM_AUTOINT_SEL_2X_600MA_3X_700MA)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_LIM_PWM_SEL                      = " "0 (CURRENT_LIM_PWM_SEL_2X_2700MA_3X_3500MA),1 (CURRENT_LIM_PWM_SEL_2X_2400MA_3X_3100MA),2 (CURRENT_LIM_PWM_SEL_2X_2100MA_3X_2700MA),3 (CURRENT_LIM_PWM_SEL_2X_1800MA_3X_2300MA),4 (CURRENT_LIM_PWM_SEL_2X_1500MA_3X_1900MA),5 (CURRENT_LIM_PWM_SEL_2X_1200MA_3X_1500MA),6 (CURRENT_LIM_PWM_SEL_2X_900MA_3X_1100MA),7 (CURRENT_LIM_PWM_SEL_2X_600MA_3X_700MA)"
    tree.end
    tree "S3_PS_PFM_CURRENT_LIM_CTL"
      sgroup "S3_PS_PFM_CURRENT_LIM_CTL (at 0x11b4b)"
        set &access:&cmd_addr %l (0x801b4b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b4b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_EN_FALSE),1 (CURRENT_LIM_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_LIM_SEL                          = " "0 (CURRENT_LIM_SEL_600MA),1 (CURRENT_LIM_SEL_540MA),2 (CURRENT_LIM_SEL_480MA),3 (CURRENT_LIM_SEL_420MA),4 (CURRENT_LIM_SEL_360MA),5 (CURRENT_LIM_SEL_300MA),6 (CURRENT_LIM_SEL_240MA),7 (CURRENT_LIM_SEL_180MA)"
    tree.end
    tree "S3_PS_SOFT_START_CTL"
      sgroup "S3_PS_SOFT_START_CTL (at 0x11b4c)"
        set &access:&cmd_addr %l (0x801b4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START_ILIM_STEP_EN                  = " "0 (SOFT_START_ILIM_STEP_EN_FALSE),1 (SOFT_START_ILIM_STEP_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SOFT_START_MODE_SEL                      = " "0 (SOFT_START_MODE_SEL_FAST),1 (SOFT_START_MODE_SEL_NORMAL)"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   SOFT_START_ILIM_SEL                      = " "0 (SOFT_START_ILIM_SEL_400MA),1 (SOFT_START_ILIM_SEL_600MA),2 (SOFT_START_ILIM_SEL_800MA),3 (SOFT_START_ILIM_SEL_1000MA)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT_START_ILIM_STEP_DLY                 = " "0 (SOFT_START_ILIM_STEP_DLY_FAST_20US_NORMAL_40US),1 (SOFT_START_ILIM_STEP_DLY_FAST_40US_NORMAL_80US)"
    tree.end
    tree "S3_PS_SWITCH_SIZE_CTL"
      sgroup "S3_PS_SWITCH_SIZE_CTL (at 0x11b70)"
        set &access:&cmd_addr %l (0x801b700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   P_SWITCH_SIZE                            = " "0 (P_SWITCH_SIZE_1_DIV_8),1 (P_SWITCH_SIZE_1_DIV_4),2 (P_SWITCH_SIZE_1_DIV_2),3 (P_SWITCH_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   N_SWITCH_SIZE                            = " "0 (N_SWITCH_SIZE_1_DIV_8),1 (N_SWITCH_SIZE_1_DIV_4),2 (N_SWITCH_SIZE_1_DIV_2),3 (N_SWITCH_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   P_OFF_DRIVER_SIZE                        = " "0 (P_OFF_DRIVER_SIZE_1_DIV_2),1 (P_OFF_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   P_ON_DRIVER_SIZE                         = " "0 (P_ON_DRIVER_SIZE_1_DIV_2),1 (P_ON_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   N_ON_DRIVER_SIZE                         = " "0 (N_ON_DRIVER_SIZE_1_DIV_2),1 (N_ON_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   N_OFF_DRIVER_SIZE                        = " "0 (N_OFF_DRIVER_SIZE_1_DIV_2),1 (N_OFF_DRIVER_SIZE_1_DIV_1)"
    tree.end
    tree "S3_PS_DEAD_TIME_CTRL1"
      sgroup "S3_PS_DEAD_TIME_CTRL1 (at 0x11b71)"
        set &access:&cmd_addr %l (0x801b710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   DIG_DEADTIME_CTRL                        = " "0 (DIG_DEADTIME_CTRL_DISABLE),1 (DIG_DEADTIME_CTRL_1_NS),2 (DIG_DEADTIME_CTRL_1P5_NS),3 (DIG_DEADTIME_CTRL_2P5_NS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ANA_DEADTIME_CTRL                        = " "0 (ANA_DEADTIME_CTRL_DISABLE),1 (ANA_DEADTIME_CTRL_ENABLE)"
    tree.end
    tree "S3_PS_DEAD_TIME_CTRL2"
      sgroup "S3_PS_DEAD_TIME_CTRL2 (at 0x11b72)"
        set &access:&cmd_addr %l (0x801b720|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b720|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PSW_DEAD_TIME                         = " "0 (EN_PSW_DEAD_TIME_DISABLE),1 (EN_PSW_DEAD_TIME_ENABLE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   EN_NSW_DEAD_TIME                         = " "0 (EN_NSW_DEAD_TIME_DISABLE),1 (EN_NSW_DEAD_TIME_ENABLE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   NSW_DEAD_TIME                            = " "0 (NSW_DEAD_TIME_1P5_NS),1 (NSW_DEAD_TIME_2P4_NS),2 (NSW_DEAD_TIME_3P3_NS),3 (NSW_DEAD_TIME_4P4_NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PSW_DEAD_TIME                            = " "0 (PSW_DEAD_TIME_2P0_NS),1 (PSW_DEAD_TIME_2P4_NS),2 (PSW_DEAD_TIME_3P2_NS),3 (PSW_DEAD_TIME_4P4_NS)"
    tree.end
    tree "S3_PS_BLNK_TIME_CTL"
      sgroup "S3_PS_BLNK_TIME_CTL (at 0x11b73)"
        set &access:&cmd_addr %l (0x801b730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   MIN_PON                                  = " "0 (MIN_PON_DISABLED),1 (MIN_PON_15NS_OR_25NS),2 (MIN_PON_40NS_OR_50NS),3 (MIN_PON_60NS_OR_70NS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_BLNK_TIME                           = " "0 (ISNS_BLNK_TIME_15NS),1 (ISNS_BLNK_TIME_25NS)"
    tree.end
    tree "S3_PS_INZERO_CTL"
      sgroup "S3_PS_INZERO_CTL (at 0x11b74)"
        set &access:&cmd_addr %l (0x801b740|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b740|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INZERO_EN                                = " "0 (INZERO_EN_FALSE),1 (INZERO_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   INZERO_OFFSET                            = " "0 (INZERO_OFFSET_NO_OFFSET),1 (INZERO_OFFSET_NEG_3MV),2 (INZERO_OFFSET_POS_1P5MV),3 (INZERO_OFFSET_POS_3MV)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   INZERO_FORCE                             = " "0 (INZERO_FORCE_DISABLE),1 (INZERO_FORCE_ENABLE)"
    tree.end
    tree "S3_PS_DIG_FSM_CTL"
      sgroup "S3_PS_DIG_FSM_CTL (at 0x11b75)"
        set &access:&cmd_addr %l (0x801b750|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b750|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FSM_SEL                                  = " "0 (FSM_SEL_FMS2),1 (FSM_SEL_FMS1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FSM_CTL4                                 = " "0 (FSM_CTL4_DISABLE_PULSE_FILTER_COMP1),1 (FSM_CTL4_ENABLE_PULSE_FILTER_COMP1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FSM_CTL3                                 = " "0 (FSM_CTL3_DISABLE_PULSE_FILTER_COMP1),1 (FSM_CTL3_ENABLE_PULSE_FILTER_COMP1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FSM_CTL2                                 = " "0 (FSM_CTL2_DISABLE_PULSE_FILTER_COMP2),1 (FSM_CTL2_ENABLE_PULSE_FILTER_COMP2)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FSM_CTL1                                 = " "0 (FSM_CTL1_DISABLE_PULSE_FILTER_INZERO_PS_COMP),1 (FMS_CTL1_ENABLE_PULSE_FILTER_INZERO_PS_COMP)"
    tree.end
    tree "S3_PS_PWR_STG_MISC"
      sgroup "S3_PS_PWR_STG_MISC (at 0x11b79)"
        set &access:&cmd_addr %l (0x801b790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SPARE_7                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SPARE_6                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SPARE_5                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SPARE_4                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPARE_3                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SPARE_2                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_RATIO                               = " "0 (ISNS_RATIO_54P4K),1 (ISNS_RATIO_27P2K)"
    tree.end
    tree "S3_PS_SEC_ACCESS"
      sgroup "S3_PS_SEC_ACCESS (at 0x11bd0)"
        set &access:&cmd_addr %l (0x801bd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S3_PS_PERPH_RESET_CTL2"
      sgroup "S3_PS_PERPH_RESET_CTL2 (at 0x11bd9)"
        set &access:&cmd_addr %l (0x801bd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S3_PS_PERPH_RESET_CTL3"
      sgroup "S3_PS_PERPH_RESET_CTL3 (at 0x11bda)"
        set &access:&cmd_addr %l (0x801bda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S3_PS_PERPH_RESET_CTL4"
      sgroup "S3_PS_PERPH_RESET_CTL4 (at 0x11bdb)"
        set &access:&cmd_addr %l (0x801bdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "S3_PS_FORCE_FET_TEST"
      sgroup "S3_PS_FORCE_FET_TEST (at 0x11be3)"
        set &access:&cmd_addr %l (0x801be30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   KELVIN_SENSING_TEST_EN                   = " "0 (KELVIN_SENSING_TEST_NMOS_RON),1 (KELVIN_SENSING_TEST_PMOS_RON)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FORCE_PFET_NFET                          = " "0 (FORCE_PFET_NFET_NORMAL),1 (FORCE_PFET_NFET_NMOS_ON_PMOS_OFF),2 (FORCE_PFET_NFET_PMOS_ON_NMOS_OFF),3 (FORCE_BOTH_PMOS_NMOS_OFF)"
    tree.end
    tree "S3_PS_PWR_STG_TEST"
      sgroup "S3_PS_PWR_STG_TEST (at 0x11be4)"
        set &access:&cmd_addr %l (0x801be40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_SEL_ATEST1_NORMAL_ATEST2_NORMAL),1 (ATEST_SEL_ATEST1_RESERVED1_ATEST2_RESERVED1),2 (ATEST_SEL_ATEST1_RESERVED2_ATEST2_RESERVED2),3 (ATEST_SEL_ATEST1_RESERVED3_ATEST2_RESERVED3),4 (ATEST_SEL_ATEST1_RESERVED4_ATEST2_RESERVED4),5 (ATEST_SEL_ATEST1_RESERVED5_ATEST2_RESERVED5),6 (ATEST_SEL_ATEST1_KELVIN_SENSE1_ATEST2_KELVIN_SENSE2),7 (ATEST_SEL_ATEST1_RESERVED7_ATEST2_RESERVED7)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DTEST_SEL                                = " "0 (DTEST_SEL_DTEST1_NORMAL_DTEST2_NORMAL),1 (DTEST_SEL_DTEST1_END_MIN_PON_DTEST2_FSM_STATE_0),2 (DTEST_SEL_DTEST1_IPLIMIT_TIMER1_DTEST2_FSM_STATE_1),3 (DTEST_SEL_DTEST1_IPLIMIT_TIMER2_DTEST2_FSM_STATE_2),4 (DTEST_SEL_DTEST1_INZERO_COMP_NMOS_DTEST2_FSM_STATE_3),5 (DTEST_SEL_DTEST1_IPLIMIT_COMP_PMOS_DTEST2_FSM_STATE_4),6 (DTEST_SEL_DTEST1_PMOS_DRIVE_SIGNAL_DTEST2_PGATE_BLANKING_PMOS),7 (DTEST_SEL_DTEST1_NMOS_DRIVE_SIGNAL_DTEST2_INZERO_COMP_EXTEND)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TRIM_CALIB_EN                            = " "0 (TRIM_CALIB_EN_FALSE),1 (TRIM_CALIB_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OPEN_LOOP_TEST_EN                        = " "0 (OPEN_LOOP_TEST_EN_FALSE),1 (OPEN_LOOP_TEST_EN_TRUE)"
    tree.end
    tree "S3_PS_TRIM_NUM"
      sgroup "S3_PS_TRIM_NUM (at 0x11bf0)"
        set &access:&cmd_addr %l (0x801bf00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bf00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "S3_PS_PS_TRIM1"
      sgroup "S3_PS_PS_TRIM1 (at 0x11bf1)"
        set &access:&cmd_addr %l (0x801bf10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bf10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   IPLIM_TRIM                               = " "0, 1, 2, 3"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   INZERO_TRIM                              = "
    tree.end
    tree "S3_PS_PS_TRIM2"
      sgroup "S3_PS_PS_TRIM2 (at 0x11bf2)"
        set &access:&cmd_addr %l (0x801bf20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bf20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START_ILIM_STEP_DLY_TRIM            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SOFT_START_MODE_SEL_TRIM                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SOFT_START_IPLIM_STEP_EN_TRIM            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   SOFT_START_IPLIM_TRIM                    = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   IPLIM_TRIM_OPT                           = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "S4_CTRL"
  tree "S4_CTRL"
    tree "S4_CTRL_REVISION1"
      sgroup "S4_CTRL_REVISION1 (at 0x11d00)"
        set &access:&cmd_addr %l (0x801d000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S4_CTRL_REVISION2"
      sgroup "S4_CTRL_REVISION2 (at 0x11d01)"
        set &access:&cmd_addr %l (0x801d010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S4_CTRL_REVISION3"
      sgroup "S4_CTRL_REVISION3 (at 0x11d02)"
        set &access:&cmd_addr %l (0x801d020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S4_CTRL_REVISION4"
      sgroup "S4_CTRL_REVISION4 (at 0x11d03)"
        set &access:&cmd_addr %l (0x801d030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S4_CTRL_PERPH_TYPE"
      sgroup "S4_CTRL_PERPH_TYPE (at 0x11d04)"
        set &access:&cmd_addr %l (0x801d040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S4_CTRL_PERPH_SUBTYPE"
      sgroup "S4_CTRL_PERPH_SUBTYPE (at 0x11d05)"
        set &access:&cmd_addr %l (0x801d050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S4_CTRL_STATUS"
      sgroup "S4_CTRL_STATUS (at 0x11d08)"
        set &access:&cmd_addr %l (0x801d080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (VREG_OK_FALSE),1 (VREG_OK_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS                                      = " "0 (ILEGAL_LIMIT_STOP_FALSE),1 (ILEGAL_LIMIT_STOP_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE                               = " "0 (UL_INT_FALSE),1 (UL_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE                               = " "0 (LL_INT_FALSE),1 (LL_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PS_TRUE                                  = " "0 (PS_FALSE),1 (PS_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NPM_VREGOK_FALSE),1 (NPM_VREGOK_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE                             = " "0 (STEPPER_DONE_FALSE),1 (STEPPER_DONE_TRUE)"
    tree.end
    tree "S4_CTRL_INT_RT_STS"
      sgroup "S4_CTRL_INT_RT_STS (at 0x11d10)"
        set &access:&cmd_addr %l (0x801d100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S4_CTRL_INT_SET_TYPE"
      sgroup "S4_CTRL_INT_SET_TYPE (at 0x11d11)"
        set &access:&cmd_addr %l (0x801d110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S4_CTRL_INT_POLARITY_HIGH"
      sgroup "S4_CTRL_INT_POLARITY_HIGH (at 0x11d12)"
        set &access:&cmd_addr %l (0x801d120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S4_CTRL_INT_POLARITY_LOW"
      sgroup "S4_CTRL_INT_POLARITY_LOW (at 0x11d13)"
        set &access:&cmd_addr %l (0x801d130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S4_CTRL_INT_LATCHED_CLR"
      sgroup "S4_CTRL_INT_LATCHED_CLR (at 0x11d14)"
        set &access:&cmd_addr %l (0x801d140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S4_CTRL_INT_EN_SET"
      sgroup "S4_CTRL_INT_EN_SET (at 0x11d15)"
        set &access:&cmd_addr %l (0x801d150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S4_CTRL_INT_EN_CLR"
      sgroup "S4_CTRL_INT_EN_CLR (at 0x11d16)"
        set &access:&cmd_addr %l (0x801d160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S4_CTRL_INT_LATCHED_STS"
      sgroup "S4_CTRL_INT_LATCHED_STS (at 0x11d18)"
        set &access:&cmd_addr %l (0x801d180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S4_CTRL_INT_PENDING_STS"
      sgroup "S4_CTRL_INT_PENDING_STS (at 0x11d19)"
        set &access:&cmd_addr %l (0x801d190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S4_CTRL_INT_MID_SEL"
      sgroup "S4_CTRL_INT_MID_SEL (at 0x11d1a)"
        set &access:&cmd_addr %l (0x801d1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_FALSE),1 (INT_MID_TRUE),2 (reserved),3 (reserved)"
    tree.end
    tree "S4_CTRL_INT_PRIORITY"
      sgroup "S4_CTRL_INT_PRIORITY (at 0x11d1b)"
        set &access:&cmd_addr %l (0x801d1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_FALSE),1 (INT_PRIORITY_TRUE)"
    tree.end
    tree "S4_CTRL_VOLTAGE_CTL1"
      sgroup "S4_CTRL_VOLTAGE_CTL1 (at 0x11d40)"
        set &access:&cmd_addr %l (0x801d400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RANGE                                    = " "0 (RANGE_HV_FALSE),1 (RANGE_HV_TRUE)"
    tree.end
    tree "S4_CTRL_VOLTAGE_CTL2"
      sgroup "S4_CTRL_VOLTAGE_CTL2 (at 0x11d41)"
        set &access:&cmd_addr %l (0x801d410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S4_CTRL_PFM_CTL"
      sgroup "S4_CTRL_PFM_CTL (at 0x11d44)"
        set &access:&cmd_addr %l (0x801d440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_VOLT_CTL                             = " "0 (PFM_VOLT_BOOST),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFM_IBOOST                               = " "0 (PFM_IBOOST_FALSE),1 (PFM_IBOOST_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PFM_TYPE_I                               = " "0 (PFM_ADVANCED),1 (PFM_LEGACY)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PFM_COMP_HYST                            = " "0 (PFM_HYST_3MV),1 (PFM_HYST_6MV)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PFM_COMP_PLS_FLTR                        = " "0 (PFM_COMP_PLS_FLTR_100NS),1 (PFM_COMP_PLS_FLTR_250NS)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PFM_IPLIM_CTRL                           = " "0 (PFM_IPLIM_CTRL_FALSE),1 (PFM_IPLIM_CTRL_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_IPLIM_DLY                            = " "0 (PFM_IPLIM_CTRL_75NS),1 (PFM_IPLIMI_CTRL_150NS),2 (PFM_IPLIM_CTRL_300NS),3 (PFM_IPLIM_CTRL_600NS)"
    tree.end
    tree "S4_CTRL_MODE_CTL"
      sgroup "S4_CTRL_MODE_CTL (at 0x11d45)"
        set &access:&cmd_addr %l (0x801d450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PWM                                      = " "0 (PWM_NO_FORCE),1 (PWM_FORCE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_FALSE),1 (AUTO_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HWEN3                             = " "0 (FOLLOW_HWEN3_FALSE),1 (FOLLOW_HWEN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HWEN2                             = " "0 (FOLLOW_HWEN2_FALSE),1 (FOLLOW_HWEN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HWEN1                             = " "0 (FOLLOW_HWEN1_FALSE),1 (FOLLOW_HWEN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HWEN0                             = " "0 (FOLLOW_HWEN0_FALSE),1 (FOLLOW_HWEN0_TRUE)"
    tree.end
    tree "S4_CTRL_EN_CTL"
      sgroup "S4_CTRL_EN_CTL (at 0x11d46)"
        set &access:&cmd_addr %l (0x801d460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (BUCK_ENABLE_FALSE),1 (BUCK_ENABLE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HWEN3                             = " "0 (FOLLOW_HWEN3_FALSE),1 (FOLLOW_HWEN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HWEN2                             = " "0 (FOLLOW_HWEN2_FALSE),1 (FOLLOW_HWEN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HWEN1                             = " "0 (FOLLOW_HWEN1_FALSE),1 (FOLLOW_HWEN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HWEN0                             = " "0 (FOLLOW_HWEN0_FALSE),1 (FOLLOW_HWEN0_TRUE)"
    tree.end
    tree "S4_CTRL_PD_CTL"
      sgroup "S4_CTRL_PD_CTL (at 0x11d48)"
        set &access:&cmd_addr %l (0x801d480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PD_ENABLE_FALSE),1 (PD_ENABLE_TRUE)"
    tree.end
    tree "S4_CTRL_COMP_CAP_CTL"
      sgroup "S4_CTRL_COMP_CAP_CTL (at 0x11d51)"
        set &access:&cmd_addr %l (0x801d510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   POLE2_CTRL                               = " "0 (CP_CAP_0PF),1 (CP_CAP_1PF)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CZ_CTRL                                  = " "0 (CZ_CAP_30PF),1 (CZ_CAP_40PF),2 (CZ_CAP_50PF),3 (CZ_CAP_60PF)"
    tree.end
    tree "S4_CTRL_GM_CTL"
      sgroup "S4_CTRL_GM_CTL (at 0x11d52)"
        set &access:&cmd_addr %l (0x801d520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   GM_CTL                                   = "
    tree.end
    tree "S4_CTRL_RZ_CTL"
      sgroup "S4_CTRL_RZ_CTL (at 0x11d53)"
        set &access:&cmd_addr %l (0x801d530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RZ_CTL                                   = "
    tree.end
    tree "S4_CTRL_ISNS_CTRL"
      sgroup "S4_CTRL_ISNS_CTRL (at 0x11d55)"
        set &access:&cmd_addr %l (0x801d550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SA_COMP_CAP                              = " "0 (SA_COMP_CAP_100FF),1 (SA_COMP_CAP_200FF)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_RES_IOS                             = " "0 (ISNS_RES_IOS_8KOHMS_24UA),1 (ISNS_RES_IOS_16KOHMS_12UA)"
    tree.end
    tree "S4_CTRL_SAW_CTL"
      sgroup "S4_CTRL_SAW_CTL (at 0x11d56)"
        set &access:&cmd_addr %l (0x801d560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CURRENT_CTRL                             = " "0 (SAW_CURRENT_CTRL_1UA),1 (SAW_CURRENT_CTRL_2UA)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NSAW_CTRL                                = " "0 (NSAW_CTRL_4X),1 (NSAW_CTRL_8X),2 (NSAW_CTRL_12X),3 (NSAW_CTRL_16X),4 (NSAW_CTRL_20X),5 (NSAW_CTRL_24X),6 (NSAW_CTRL_28X),7 (NSAW_CTRL_32X)"
    tree.end
    tree "S4_CTRL_DMAX_CTL"
      sgroup "S4_CTRL_DMAX_CTL (at 0x11d58)"
        set &access:&cmd_addr %l (0x801d580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DMAX_EN                                  = " "0 (DMAX_EN_FALSE),1 (DMAX_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DMAX_TIME_SEL                            = " "0 (DMAX_TIME_SEL_20NS),1 (DMAX_TIME_SEL_10NS)"
    tree.end
    tree "S4_CTRL_PULSE_SKIP_CTL"
      sgroup "S4_CTRL_PULSE_SKIP_CTL (at 0x11d59)"
        set &access:&cmd_addr %l (0x801d590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PS_EN                                    = " "0 (PS_EN_FALSE),1 (PS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PS_TIME_HYST                             = " "0 (PS_TIME_HYST_2CYCLE),1 (PS_TIME_HYST_4CYCLE),2 (PS_TIME_HYST_8CYCLE),3 (PS_TIME_HYST_16CYLE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PSKIP_EXIT_SEL                           = " "0 (PSKIP_EXIT_SEL_ERR_AMP),1 (PSKIP_EXIT_VDIP_COMP)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PS_METHOD                                = " "0 (PS_METHOD_ILOAD),1 (PS_METHOD_ERR_AMP)"
    tree.end
    tree "S4_CTRL_PULSE_SKIP_THRES"
      sgroup "S4_CTRL_PULSE_SKIP_THRES (at 0x11d5a)"
        set &access:&cmd_addr %l (0x801d5a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d5a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x6 1 "  [ 6: 3]   PS_VRST                                  = "
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PS_VSET                                  = " "0 (PS_VSET_VRSET_450MV_ILOAD_THRESH_25MA),1 (PS_VSET_VRSET_475MV_ILOAD_THRESH_37P5MA),2 (PS_VSET_VRSET_500MV_ILOAD_THRESH_50MA),3 (PS_VSET_VRSET_525MV_ILOAD_THRESH_62P5MA),4 (PS_VSET_VRSET_550MV_ILOAD_THRESH_75MA),5 (PS_VSET_VRSET_575MV_ILOAD_THRESH_87P5MA),6 (PS_VSET_VRSET_600MV_ILOAD_THRESH_100MA),7 (PS_VSET_VRSET_625MV_ILOAD_THRESH_112P5MA)"
    tree.end
    tree "S4_CTRL_AUTO_MODE_CTL"
      sgroup "S4_CTRL_AUTO_MODE_CTL (at 0x11d5b)"
        set &access:&cmd_addr %l (0x801d5b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d5b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PWM_PFM_SEL                              = " "0 (PWM_PFM_SEL_PS_COMP),1 (PWM_PFM_SEL_INZERO)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PFM_PWM_SEL                              = " "0 (PFM_PWM_SEL_RESERVED),1 (PFM_PWM_SEL_VDIP_COMP),2 (PFM_PWM_SEL_IPLIM_CNTR),3 (PFM_PWM_SEL_VDIP_COMP_OR_IPLIM_CNTR)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MODE_SEL_DLY                             = " "0 (MODE_SEL_DLY_4CYCLES),1 (MODE_SEL_DLY_8CYCLES),2 (MODE_SEL_DLY_16CYCLES),3 (MODE_SEL_DLY_16CYCLES_ALSO)"
    tree.end
    tree "S4_CTRL_INZERO_COUNT_CTL"
      sgroup "S4_CTRL_INZERO_COUNT_CTL (at 0x11d5c)"
        set &access:&cmd_addr %l (0x801d5c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d5c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   WINDOW_WIDTH                             = " "0 (WINDOW_WIDTH_1_COUNT),1 (WINDOW_WIDTH_2_COUNT),2 (WINDOW_WIDTH_4_COUNT),3 (WINDOW_WIDTH_8_COUNT),4 (WINDOW_WIDTH_16_COUNT),5 (WINDOW_WIDTH_32_COUNT),6 (WINDOW_WIDTH_64_COUNT),7 (WINDOW_WIDTH_128_COUNT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   THRESHOLD                                = "
    tree.end
    tree "S4_CTRL_PFM_COUNT_CTL"
      sgroup "S4_CTRL_PFM_COUNT_CTL (at 0x11d5d)"
        set &access:&cmd_addr %l (0x801d5d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d5d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   WINDOW_WIDTH                             = " "0 (WINDOW_WIDTH_1_COUNT),1 (WINDOW_WIDTH_2_COUNT),2 (WINDOW_WIDTH_4_COUNT),3 (WINDOW_WIDTH_8_COUNT),4 (WINDOW_WIDTH_16_COUNT),5 (WINDOW_WIDTH_32_COUNT),6 (WINDOW_WIDTH_64_COUNT),7 (WINDOW_WIDTH_128_COUNT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   THRESHOLD                                = "
    tree.end
    tree "S4_CTRL_PS_VGA_CTL"
      sgroup "S4_CTRL_PS_VGA_CTL (at 0x11d5e)"
        set &access:&cmd_addr %l (0x801d5e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d5e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VGA_GAIN                                 = "
    tree.end
    tree "S4_CTRL_STEPPER_SS_CTL"
      sgroup "S4_CTRL_STEPPER_SS_CTL (at 0x11d60)"
        set &access:&cmd_addr %l (0x801d600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STEPPER_EN                               = " "0 (STEPPER_EN_FALSE),1 (STEPPER_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   STEP                                     = " "0 (STEP_1_LSB),1 (STEP_2_LSB),2 (STEP_4_LSB),3 (STEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DELAY                                    = " "0 (DELAY_20_CLK_CYCLES),1 (DELAY_40_CLK_CYCLES),2 (DELAY_80_CLK_CYCLES),3 (DELAY_160_CLK_CYCLES),4 (DELAY_320_CLK_CYCLES),5 (DELAY_640_CLK_CYLES),6 (DELAY_1280_CLK_CYCLES),7 (DELAY_2560_CLK_CYCLES)"
    tree.end
    tree "S4_CTRL_STEPPER_VS_CTL"
      sgroup "S4_CTRL_STEPPER_VS_CTL (at 0x11d61)"
        set &access:&cmd_addr %l (0x801d610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STEPPER_EN                               = " "0 (STEPPER_EN_FALSE),1 (STEPPER_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   STEP                                     = " "0 (STEP_1_LSB),1 (STEP_2_LSB),2 (STEP_4_LSB),3 (STEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DELAY                                    = " "0 (DELAY_20_CLK_CYCLES),1 (DELAY_40_CLK_CYCLES),2 (DELAY_80_CLK_CYCLES),3 (DELAY_160_CLK_CYCLES),4 (DELAY_320_CLK_CYCLES),5 (DELAY_640_CLK_CYLES),6 (DELAY_1280_CLK_CYCLES),7 (DELAY_2560_CLK_CYCLES)"
    tree.end
    tree "S4_CTRL_FT_CTL"
      sgroup "S4_CTRL_FT_CTL (at 0x11d62)"
        set &access:&cmd_addr %l (0x801d620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FT_EN                                    = " "0 (FT_EN_FALSE),1 (FT_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   GM_BOOST                                 = " "0 (GM_BOOST_FALSE),1 (GM_BOOST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   NL_DEAD_ZONE                             = " "0 (NL_DEAD_ZONE_0A),1 (NL_DEAD_ZONE_0P125A),2 (NL_DEAD_ZONE_0P25A),3 (NL_DEAD_ZONE_0P375A),4 (NL_DEAD_ZONE_0P5A),5 (NL_DEAD_ZONE_0P625A),6 (NL_DEAD_ZONE_0P75A),7 (NL_DEAD_ZONE_0P875A)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NL_CUR_CTL                               = " "0 (NL_CUR_CTL_0A),1 (NL_CUR_CTL_0P125A),2 (NL_CUR_CTL_0P25A),3 (NL_CUR_CTL_0P375A),4 (NL_CUR_CTL_0P5A),5 (NL_CUR_CTL_0P625A),6 (NL_CUR_CTL_0P75A),7 (NL_CUR_CTL_0P875A)"
    tree.end
    tree "S4_CTRL_QMODE_SHADOW"
      sgroup "S4_CTRL_QMODE_SHADOW (at 0x11d63)"
        set &access:&cmd_addr %l (0x801d630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FOLLOW_QM                                = " "0 (FOLLOW_QM_FALSE),1 (FOLLOW_QM_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   QMODE_PS_METHOD                          = " "0 (QMODE_PS_METHOD_ILOAD),1 (QMODE_PS_METHOD_ERRAMP)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   QMODE_PS_VRST                            = "
    tree.end
    tree "S4_CTRL_UL_LL_CTRL"
      sgroup "S4_CTRL_UL_LL_CTRL (at 0x11d68)"
        set &access:&cmd_addr %l (0x801d680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UL_INT_EN                                = " "0 (UL_INT_EN_FALSE),1 (UL_INT_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LL_INT_EN                                = " "0 (LL_INT_EN_FALSE),1 (LL_INT_EN_TRUE)"
    tree.end
    tree "S4_CTRL_UL_VOLTAGE"
      sgroup "S4_CTRL_UL_VOLTAGE (at 0x11d69)"
        set &access:&cmd_addr %l (0x801d690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S4_CTRL_LL_VOLTAGE"
      sgroup "S4_CTRL_LL_VOLTAGE (at 0x11d6b)"
        set &access:&cmd_addr %l (0x801d6b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d6b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S4_CTRL_CTLR_MISC"
      sgroup "S4_CTRL_CTLR_MISC (at 0x11d7a)"
        set &access:&cmd_addr %l (0x801d7a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d7a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SPARE_7                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SPARE_6                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SPARE_5                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SPARE_4                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPARE_3                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SPARE_2                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPARE_0                                  = " "0, 1"
    tree.end
    tree "S4_CTRL_SEC_ACCESS"
      sgroup "S4_CTRL_SEC_ACCESS (at 0x11dd0)"
        set &access:&cmd_addr %l (0x801dd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1dd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S4_CTRL_PERPH_RESET_CTL1"
      sgroup "S4_CTRL_PERPH_RESET_CTL1 (at 0x11dd8)"
        set &access:&cmd_addr %l (0x801dd80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1dd80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "S4_CTRL_PERPH_RESET_CTL2"
      sgroup "S4_CTRL_PERPH_RESET_CTL2 (at 0x11dd9)"
        set &access:&cmd_addr %l (0x801dd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1dd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S4_CTRL_PERPH_RESET_CTL3"
      sgroup "S4_CTRL_PERPH_RESET_CTL3 (at 0x11dda)"
        set &access:&cmd_addr %l (0x801dda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1dda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S4_CTRL_PERPH_RESET_CTL4"
      sgroup "S4_CTRL_PERPH_RESET_CTL4 (at 0x11ddb)"
        set &access:&cmd_addr %l (0x801ddb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ddb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_ACTIVE_FALSE),1 (LOCAL_SOFT_RESET_ACTIVE_TRUE)"
    tree.end
    tree "S4_CTRL_INT_TEST1"
      sgroup "S4_CTRL_INT_TEST1 (at 0x11de0)"
        set &access:&cmd_addr %l (0x801de00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1de00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_EN_FALSE),1 (INT_TEST_MODE_EN_TRUE)"
    tree.end
    tree "S4_CTRL_INT_TEST_VAL"
      sgroup "S4_CTRL_INT_TEST_VAL (at 0x11de1)"
        set &access:&cmd_addr %l (0x801de10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1de10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT_TEST_VAL                   = " "0 (LIMIT_ERR_INT_TEST_VAL_ACTIVE_FALSE),1 (LIMIT_ERR_INT_TEST_VAL_ACTIVE_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT_TEST_VAL                     = " "0, 1"
    tree.end
    tree "S4_CTRL_CTLR_TEST"
      sgroup "S4_CTRL_CTLR_TEST (at 0x11de2)"
        set &access:&cmd_addr %l (0x801de20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1de20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_SEL_ATEST1_NORMAL_ATEST2_NORMAL),1 (ATEST_SEL_ATEST1_VREF_LOCAL_BUFFER_ATEST2_AVSS),2 (ATEST_SEL_ATEST1_LOOP_FILTER_ATEST2_AVSS),3 (ATEST_SEL_ATEST1_VREF_OUT_ATEST2_AVSS_CLEAN),4 (ATEST_SEL_ATEST1_V_SAWTOOTH_ATEST2_AVDD),5 (ATEST_SEL_ATEST1_PULSE_SKIP_VGA_OUT_ATEST2_VREF_PULSE_SKIP_RESET),6 (ATEST_SEL_ATEST1_SLOPE_COMP_OUT_ATEST2_VREF_PULSE_SKIP_SET),7 (ATEST_SEL_ATEST1_RES_DIV_OUT_ATEST2_BUCK_FB_PAD)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DTEST_SEL                                = " "0 (DTEST_SEL_DTEST1_NORMAL_DTEST2_NORMAL),1 (DTEST_SEL_DTEST1_PWM_CLOCK_DTEST2_CLK_1P2M),2 (DTEST_SEL_DTEST1_PWM_COMP_DTEST2_DVSS),3 (DTEST_SEL_DTEST1_PULSE_SKIP_COMP_DTEST2_IPLIMIT_COMP_PFM),4 (DTEST_SEL_DTEST1_PFM_COMP_DTEST2_AUTOPFM_COUNT_DONE),5 (DTEST_SEL_DTEST1_MODE_DTEST2_INZ_COUNT_DONE),6 (DTEST_SEL_DTEST1_PULSE_SKIP_ENTER_DTEST2_PULSE_SKIP_EXIT),7 (DTEST_SEL_DTEST1_PFM_COMP_DTEST2_VDIP_COMP)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TRIM_CALIB_EN                            = " "0 (TRIM_CALIB_EN_FALSE),1 (TRIM_CALIB_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OPEN_LOOP_TEST_EN                        = " "0 (OPEN_LOOP_TEST_EN_FALSE),1 (OPEN_LOOP_TEST_EN_TRUE)"
    tree.end
    tree "S4_CTRL_TRIM_NUM"
      sgroup "S4_CTRL_TRIM_NUM (at 0x11df0)"
        set &access:&cmd_addr %l (0x801df00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1df00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "S4_CTRL_CTL_TRIM1"
      sgroup "S4_CTRL_CTL_TRIM1 (at 0x11df1)"
        set &access:&cmd_addr %l (0x801df10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1df10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ERR_AMP_TRIM                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RES_DIV_TRIM                             = "
    tree.end
    tree "S4_CTRL_CTL_TRIM2"
      sgroup "S4_CTRL_CTL_TRIM2 (at 0x11df2)"
        set &access:&cmd_addr %l (0x801df20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1df20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PFM_COMP_TRIM                            = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VDIP_COMP_TRIM                           = "
    tree.end
    tree "S4_CTRL_CTL_TRIM3"
      sgroup "S4_CTRL_CTL_TRIM3 (at 0x11df3)"
        set &access:&cmd_addr %l (0x801df30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1df30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   VGA_PS_TRIM                              = "
    tree.end
    tree "S4_CTRL_CTL_TRIM4"
      sgroup "S4_CTRL_CTL_TRIM4 (at 0x11df4)"
        set &access:&cmd_addr %l (0x801df40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1df40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PULL_DOWN_TRIM                           = " "0 (ACTIVE_PD_OFF),1 (ACTIVE_PD_ON)"
    tree.end
  tree.end
tree.end
tree "S4_FREQ"
  tree "S4_FREQ"
    tree "S4_FREQ_REVISION1"
      sgroup "S4_FREQ_REVISION1 (at 0x11f00)"
        set &access:&cmd_addr %l (0x801f000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S4_FREQ_REVISION2"
      sgroup "S4_FREQ_REVISION2 (at 0x11f01)"
        set &access:&cmd_addr %l (0x801f010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S4_FREQ_PERPH_TYPE"
      sgroup "S4_FREQ_PERPH_TYPE (at 0x11f04)"
        set &access:&cmd_addr %l (0x801f040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S4_FREQ_PERPH_SUBTYPE"
      sgroup "S4_FREQ_PERPH_SUBTYPE (at 0x11f05)"
        set &access:&cmd_addr %l (0x801f050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S4_FREQ_CLK_ENABLE"
      sgroup "S4_FREQ_CLK_ENABLE (at 0x11f46)"
        set &access:&cmd_addr %l (0x801f460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "S4_FREQ_CLK_DIV"
      sgroup "S4_FREQ_CLK_DIV (at 0x11f50)"
        set &access:&cmd_addr %l (0x801f500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "S4_FREQ_CLK_PHASE"
      sgroup "S4_FREQ_CLK_PHASE (at 0x11f51)"
        set &access:&cmd_addr %l (0x801f510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "S4_FREQ_GANG_CTL1"
      sgroup "S4_FREQ_GANG_CTL1 (at 0x11fc0)"
        set &access:&cmd_addr %l (0x801fc00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fc00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S4_FREQ_GANG_CTL2"
      sgroup "S4_FREQ_GANG_CTL2 (at 0x11fc1)"
        set &access:&cmd_addr %l (0x801fc10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fc10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "S4_FREQ_SEC_ACCESS"
      sgroup "S4_FREQ_SEC_ACCESS (at 0x11fd0)"
        set &access:&cmd_addr %l (0x801fd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S4_FREQ_PERPH_RESET_CTL2"
      sgroup "S4_FREQ_PERPH_RESET_CTL2 (at 0x11fd9)"
        set &access:&cmd_addr %l (0x801fd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S4_FREQ_PERPH_RESET_CTL3"
      sgroup "S4_FREQ_PERPH_RESET_CTL3 (at 0x11fda)"
        set &access:&cmd_addr %l (0x801fda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S4_FREQ_PERPH_RESET_CTL4"
      sgroup "S4_FREQ_PERPH_RESET_CTL4 (at 0x11fdb)"
        set &access:&cmd_addr %l (0x801fdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "S4_FREQ_TEST1"
      sgroup "S4_FREQ_TEST1 (at 0x11fe2)"
        set &access:&cmd_addr %l (0x801fe20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fe20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "S4_PS"
  tree "S4_PS"
    tree "S4_PS_REVISION1"
      sgroup "S4_PS_REVISION1 (at 0x11e00)"
        set &access:&cmd_addr %l (0x801e000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S4_PS_REVISION2"
      sgroup "S4_PS_REVISION2 (at 0x11e01)"
        set &access:&cmd_addr %l (0x801e010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S4_PS_REVISION3"
      sgroup "S4_PS_REVISION3 (at 0x11e02)"
        set &access:&cmd_addr %l (0x801e020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S4_PS_REVISION4"
      sgroup "S4_PS_REVISION4 (at 0x11e03)"
        set &access:&cmd_addr %l (0x801e030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S4_PS_PERPH_TYPE"
      sgroup "S4_PS_PERPH_TYPE (at 0x11e04)"
        set &access:&cmd_addr %l (0x801e040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S4_PS_PERPH_SUBTYPE"
      sgroup "S4_PS_PERPH_SUBTYPE (at 0x11e05)"
        set &access:&cmd_addr %l (0x801e050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S4_PS_PWM_CURRENT_LIM_CTL"
      sgroup "S4_PS_PWM_CURRENT_LIM_CTL (at 0x11e4a)"
        set &access:&cmd_addr %l (0x801e4a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e4a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_EN_FALSE),1 (CURRENT_LIM_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   CURRENT_LIM_AUTOINT_SEL                  = " "0 (CURRENT_LIM_AUTOINT_SEL_2X_2700MA_3X_3500MA),1 (CURRENT_LIM_AUTOINT_SEL_2X_2400MA_3X_3100MA),2 (CURRENT_LIM_AUTOINT_SEL_2X_2100MA_3X_2700MA),3 (CURRENT_LIM_AUTOINT_SEL_2X_1800MA_3X_2300MA),4 (CURRENT_LIM_AUTOINT_SEL_2X_1500MA_3X_1900MA),5 (CURRENT_LIM_AUTOINT_SEL_2X_1200MA_3X_1500MA),6 (CURRENT_LIM_AUTOINT_SEL_2X_900MA_3X_1100MA),7 (CURRENT_LIM_AUTOINT_SEL_2X_600MA_3X_700MA)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_LIM_PWM_SEL                      = " "0 (CURRENT_LIM_PWM_SEL_2X_2700MA_3X_3500MA),1 (CURRENT_LIM_PWM_SEL_2X_2400MA_3X_3100MA),2 (CURRENT_LIM_PWM_SEL_2X_2100MA_3X_2700MA),3 (CURRENT_LIM_PWM_SEL_2X_1800MA_3X_2300MA),4 (CURRENT_LIM_PWM_SEL_2X_1500MA_3X_1900MA),5 (CURRENT_LIM_PWM_SEL_2X_1200MA_3X_1500MA),6 (CURRENT_LIM_PWM_SEL_2X_900MA_3X_1100MA),7 (CURRENT_LIM_PWM_SEL_2X_600MA_3X_700MA)"
    tree.end
    tree "S4_PS_PFM_CURRENT_LIM_CTL"
      sgroup "S4_PS_PFM_CURRENT_LIM_CTL (at 0x11e4b)"
        set &access:&cmd_addr %l (0x801e4b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e4b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_EN_FALSE),1 (CURRENT_LIM_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_LIM_SEL                          = " "0 (CURRENT_LIM_SEL_600MA),1 (CURRENT_LIM_SEL_540MA),2 (CURRENT_LIM_SEL_480MA),3 (CURRENT_LIM_SEL_420MA),4 (CURRENT_LIM_SEL_360MA),5 (CURRENT_LIM_SEL_300MA),6 (CURRENT_LIM_SEL_240MA),7 (CURRENT_LIM_SEL_180MA)"
    tree.end
    tree "S4_PS_SOFT_START_CTL"
      sgroup "S4_PS_SOFT_START_CTL (at 0x11e4c)"
        set &access:&cmd_addr %l (0x801e4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START_ILIM_STEP_EN                  = " "0 (SOFT_START_ILIM_STEP_EN_FALSE),1 (SOFT_START_ILIM_STEP_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SOFT_START_MODE_SEL                      = " "0 (SOFT_START_MODE_SEL_FAST),1 (SOFT_START_MODE_SEL_NORMAL)"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   SOFT_START_ILIM_SEL                      = " "0 (SOFT_START_ILIM_SEL_400MA),1 (SOFT_START_ILIM_SEL_600MA),2 (SOFT_START_ILIM_SEL_800MA),3 (SOFT_START_ILIM_SEL_1000MA)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT_START_ILIM_STEP_DLY                 = " "0 (SOFT_START_ILIM_STEP_DLY_FAST_20US_NORMAL_40US),1 (SOFT_START_ILIM_STEP_DLY_FAST_40US_NORMAL_80US)"
    tree.end
    tree "S4_PS_SWITCH_SIZE_CTL"
      sgroup "S4_PS_SWITCH_SIZE_CTL (at 0x11e70)"
        set &access:&cmd_addr %l (0x801e700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   P_SWITCH_SIZE                            = " "0 (P_SWITCH_SIZE_1_DIV_8),1 (P_SWITCH_SIZE_1_DIV_4),2 (P_SWITCH_SIZE_1_DIV_2),3 (P_SWITCH_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   N_SWITCH_SIZE                            = " "0 (N_SWITCH_SIZE_1_DIV_8),1 (N_SWITCH_SIZE_1_DIV_4),2 (N_SWITCH_SIZE_1_DIV_2),3 (N_SWITCH_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   P_OFF_DRIVER_SIZE                        = " "0 (P_OFF_DRIVER_SIZE_1_DIV_2),1 (P_OFF_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   P_ON_DRIVER_SIZE                         = " "0 (P_ON_DRIVER_SIZE_1_DIV_2),1 (P_ON_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   N_ON_DRIVER_SIZE                         = " "0 (N_ON_DRIVER_SIZE_1_DIV_2),1 (N_ON_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   N_OFF_DRIVER_SIZE                        = " "0 (N_OFF_DRIVER_SIZE_1_DIV_2),1 (N_OFF_DRIVER_SIZE_1_DIV_1)"
    tree.end
    tree "S4_PS_DEAD_TIME_CTRL1"
      sgroup "S4_PS_DEAD_TIME_CTRL1 (at 0x11e71)"
        set &access:&cmd_addr %l (0x801e710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   DIG_DEADTIME_CTRL                        = " "0 (DIG_DEADTIME_CTRL_DISABLE),1 (DIG_DEADTIME_CTRL_1_NS),2 (DIG_DEADTIME_CTRL_1P5_NS),3 (DIG_DEADTIME_CTRL_2P5_NS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ANA_DEADTIME_CTRL                        = " "0 (ANA_DEADTIME_CTRL_DISABLE),1 (ANA_DEADTIME_CTRL_ENABLE)"
    tree.end
    tree "S4_PS_DEAD_TIME_CTRL2"
      sgroup "S4_PS_DEAD_TIME_CTRL2 (at 0x11e72)"
        set &access:&cmd_addr %l (0x801e720|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e720|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PSW_DEAD_TIME                         = " "0 (EN_PSW_DEAD_TIME_DISABLE),1 (EN_PSW_DEAD_TIME_ENABLE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   EN_NSW_DEAD_TIME                         = " "0 (EN_NSW_DEAD_TIME_DISABLE),1 (EN_NSW_DEAD_TIME_ENABLE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   NSW_DEAD_TIME                            = " "0 (NSW_DEAD_TIME_1P5_NS),1 (NSW_DEAD_TIME_2P4_NS),2 (NSW_DEAD_TIME_3P3_NS),3 (NSW_DEAD_TIME_4P4_NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PSW_DEAD_TIME                            = " "0 (PSW_DEAD_TIME_2P0_NS),1 (PSW_DEAD_TIME_2P4_NS),2 (PSW_DEAD_TIME_3P2_NS),3 (PSW_DEAD_TIME_4P4_NS)"
    tree.end
    tree "S4_PS_BLNK_TIME_CTL"
      sgroup "S4_PS_BLNK_TIME_CTL (at 0x11e73)"
        set &access:&cmd_addr %l (0x801e730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   MIN_PON                                  = " "0 (MIN_PON_DISABLED),1 (MIN_PON_15NS_OR_25NS),2 (MIN_PON_40NS_OR_50NS),3 (MIN_PON_60NS_OR_70NS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_BLNK_TIME                           = " "0 (ISNS_BLNK_TIME_15NS),1 (ISNS_BLNK_TIME_25NS)"
    tree.end
    tree "S4_PS_INZERO_CTL"
      sgroup "S4_PS_INZERO_CTL (at 0x11e74)"
        set &access:&cmd_addr %l (0x801e740|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e740|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INZERO_EN                                = " "0 (INZERO_EN_FALSE),1 (INZERO_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   INZERO_OFFSET                            = " "0 (INZERO_OFFSET_NO_OFFSET),1 (INZERO_OFFSET_NEG_3MV),2 (INZERO_OFFSET_POS_1P5MV),3 (INZERO_OFFSET_POS_3MV)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   INZERO_FORCE                             = " "0 (INZERO_FORCE_DISABLE),1 (INZERO_FORCE_ENABLE)"
    tree.end
    tree "S4_PS_DIG_FSM_CTL"
      sgroup "S4_PS_DIG_FSM_CTL (at 0x11e75)"
        set &access:&cmd_addr %l (0x801e750|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e750|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FSM_SEL                                  = " "0 (FSM_SEL_FMS2),1 (FSM_SEL_FMS1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FSM_CTL4                                 = " "0 (FSM_CTL4_DISABLE_PULSE_FILTER_COMP1),1 (FSM_CTL4_ENABLE_PULSE_FILTER_COMP1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FSM_CTL3                                 = " "0 (FSM_CTL3_DISABLE_PULSE_FILTER_COMP1),1 (FSM_CTL3_ENABLE_PULSE_FILTER_COMP1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FSM_CTL2                                 = " "0 (FSM_CTL2_DISABLE_PULSE_FILTER_COMP2),1 (FSM_CTL2_ENABLE_PULSE_FILTER_COMP2)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FSM_CTL1                                 = " "0 (FSM_CTL1_DISABLE_PULSE_FILTER_INZERO_PS_COMP),1 (FMS_CTL1_ENABLE_PULSE_FILTER_INZERO_PS_COMP)"
    tree.end
    tree "S4_PS_PWR_STG_MISC"
      sgroup "S4_PS_PWR_STG_MISC (at 0x11e79)"
        set &access:&cmd_addr %l (0x801e790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1e790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SPARE_7                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SPARE_6                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SPARE_5                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SPARE_4                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPARE_3                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SPARE_2                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_RATIO                               = " "0 (ISNS_RATIO_54P4K),1 (ISNS_RATIO_27P2K)"
    tree.end
    tree "S4_PS_SEC_ACCESS"
      sgroup "S4_PS_SEC_ACCESS (at 0x11ed0)"
        set &access:&cmd_addr %l (0x801ed00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ed00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S4_PS_PERPH_RESET_CTL2"
      sgroup "S4_PS_PERPH_RESET_CTL2 (at 0x11ed9)"
        set &access:&cmd_addr %l (0x801ed90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ed90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S4_PS_PERPH_RESET_CTL3"
      sgroup "S4_PS_PERPH_RESET_CTL3 (at 0x11eda)"
        set &access:&cmd_addr %l (0x801eda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1eda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S4_PS_PERPH_RESET_CTL4"
      sgroup "S4_PS_PERPH_RESET_CTL4 (at 0x11edb)"
        set &access:&cmd_addr %l (0x801edb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1edb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "S4_PS_FORCE_FET_TEST"
      sgroup "S4_PS_FORCE_FET_TEST (at 0x11ee3)"
        set &access:&cmd_addr %l (0x801ee30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ee30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   KELVIN_SENSING_TEST_EN                   = " "0 (KELVIN_SENSING_TEST_NMOS_RON),1 (KELVIN_SENSING_TEST_PMOS_RON)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FORCE_PFET_NFET                          = " "0 (FORCE_PFET_NFET_NORMAL),1 (FORCE_PFET_NFET_NMOS_ON_PMOS_OFF),2 (FORCE_PFET_NFET_PMOS_ON_NMOS_OFF),3 (FORCE_BOTH_PMOS_NMOS_OFF)"
    tree.end
    tree "S4_PS_PWR_STG_TEST"
      sgroup "S4_PS_PWR_STG_TEST (at 0x11ee4)"
        set &access:&cmd_addr %l (0x801ee40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ee40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_SEL_ATEST1_NORMAL_ATEST2_NORMAL),1 (ATEST_SEL_ATEST1_RESERVED1_ATEST2_RESERVED1),2 (ATEST_SEL_ATEST1_RESERVED2_ATEST2_RESERVED2),3 (ATEST_SEL_ATEST1_RESERVED3_ATEST2_RESERVED3),4 (ATEST_SEL_ATEST1_RESERVED4_ATEST2_RESERVED4),5 (ATEST_SEL_ATEST1_RESERVED5_ATEST2_RESERVED5),6 (ATEST_SEL_ATEST1_KELVIN_SENSE1_ATEST2_KELVIN_SENSE2),7 (ATEST_SEL_ATEST1_RESERVED7_ATEST2_RESERVED7)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DTEST_SEL                                = " "0 (DTEST_SEL_DTEST1_NORMAL_DTEST2_NORMAL),1 (DTEST_SEL_DTEST1_END_MIN_PON_DTEST2_FSM_STATE_0),2 (DTEST_SEL_DTEST1_IPLIMIT_TIMER1_DTEST2_FSM_STATE_1),3 (DTEST_SEL_DTEST1_IPLIMIT_TIMER2_DTEST2_FSM_STATE_2),4 (DTEST_SEL_DTEST1_INZERO_COMP_NMOS_DTEST2_FSM_STATE_3),5 (DTEST_SEL_DTEST1_IPLIMIT_COMP_PMOS_DTEST2_FSM_STATE_4),6 (DTEST_SEL_DTEST1_PMOS_DRIVE_SIGNAL_DTEST2_PGATE_BLANKING_PMOS),7 (DTEST_SEL_DTEST1_NMOS_DRIVE_SIGNAL_DTEST2_INZERO_COMP_EXTEND)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TRIM_CALIB_EN                            = " "0 (TRIM_CALIB_EN_FALSE),1 (TRIM_CALIB_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OPEN_LOOP_TEST_EN                        = " "0 (OPEN_LOOP_TEST_EN_FALSE),1 (OPEN_LOOP_TEST_EN_TRUE)"
    tree.end
    tree "S4_PS_TRIM_NUM"
      sgroup "S4_PS_TRIM_NUM (at 0x11ef0)"
        set &access:&cmd_addr %l (0x801ef00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ef00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "S4_PS_PS_TRIM1"
      sgroup "S4_PS_PS_TRIM1 (at 0x11ef1)"
        set &access:&cmd_addr %l (0x801ef10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ef10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   IPLIM_TRIM                               = " "0, 1, 2, 3"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   INZERO_TRIM                              = "
    tree.end
    tree "S4_PS_PS_TRIM2"
      sgroup "S4_PS_PS_TRIM2 (at 0x11ef2)"
        set &access:&cmd_addr %l (0x801ef20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ef20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START_ILIM_STEP_DLY_TRIM            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SOFT_START_MODE_SEL_TRIM                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SOFT_START_IPLIM_STEP_EN_TRIM            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   SOFT_START_IPLIM_TRIM                    = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   IPLIM_TRIM_OPT                           = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "S5_CTRL"
  tree "S5_CTRL"
    tree "S5_CTRL_REVISION1"
      sgroup "S5_CTRL_REVISION1 (at 0x12000)"
        set &access:&cmd_addr %l (0x8020000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S5_CTRL_REVISION2"
      sgroup "S5_CTRL_REVISION2 (at 0x12001)"
        set &access:&cmd_addr %l (0x8020010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S5_CTRL_REVISION3"
      sgroup "S5_CTRL_REVISION3 (at 0x12002)"
        set &access:&cmd_addr %l (0x8020020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S5_CTRL_REVISION4"
      sgroup "S5_CTRL_REVISION4 (at 0x12003)"
        set &access:&cmd_addr %l (0x8020030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S5_CTRL_PERPH_TYPE"
      sgroup "S5_CTRL_PERPH_TYPE (at 0x12004)"
        set &access:&cmd_addr %l (0x8020040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S5_CTRL_PERPH_SUBTYPE"
      sgroup "S5_CTRL_PERPH_SUBTYPE (at 0x12005)"
        set &access:&cmd_addr %l (0x8020050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S5_CTRL_STATUS"
      sgroup "S5_CTRL_STATUS (at 0x12008)"
        set &access:&cmd_addr %l (0x8020080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (VREG_OK_FALSE),1 (VREG_OK_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS                                      = " "0 (ILEGAL_LIMIT_STOP_FALSE),1 (ILEGAL_LIMIT_STOP_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE                               = " "0 (UL_INT_FALSE),1 (UL_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE                               = " "0 (LL_INT_FALSE),1 (LL_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PS_TRUE                                  = " "0 (PS_FALSE),1 (PS_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NPM_VREGOK_FALSE),1 (NPM_VREGOK_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE                             = " "0 (STEPPER_DONE_FALSE),1 (STEPPER_DONE_TRUE)"
    tree.end
    tree "S5_CTRL_INT_RT_STS"
      sgroup "S5_CTRL_INT_RT_STS (at 0x12010)"
        set &access:&cmd_addr %l (0x8020100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S5_CTRL_INT_SET_TYPE"
      sgroup "S5_CTRL_INT_SET_TYPE (at 0x12011)"
        set &access:&cmd_addr %l (0x8020110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S5_CTRL_INT_POLARITY_HIGH"
      sgroup "S5_CTRL_INT_POLARITY_HIGH (at 0x12012)"
        set &access:&cmd_addr %l (0x8020120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S5_CTRL_INT_POLARITY_LOW"
      sgroup "S5_CTRL_INT_POLARITY_LOW (at 0x12013)"
        set &access:&cmd_addr %l (0x8020130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S5_CTRL_INT_LATCHED_CLR"
      sgroup "S5_CTRL_INT_LATCHED_CLR (at 0x12014)"
        set &access:&cmd_addr %l (0x8020140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S5_CTRL_INT_EN_SET"
      sgroup "S5_CTRL_INT_EN_SET (at 0x12015)"
        set &access:&cmd_addr %l (0x8020150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S5_CTRL_INT_EN_CLR"
      sgroup "S5_CTRL_INT_EN_CLR (at 0x12016)"
        set &access:&cmd_addr %l (0x8020160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S5_CTRL_INT_LATCHED_STS"
      sgroup "S5_CTRL_INT_LATCHED_STS (at 0x12018)"
        set &access:&cmd_addr %l (0x8020180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S5_CTRL_INT_PENDING_STS"
      sgroup "S5_CTRL_INT_PENDING_STS (at 0x12019)"
        set &access:&cmd_addr %l (0x8020190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S5_CTRL_INT_MID_SEL"
      sgroup "S5_CTRL_INT_MID_SEL (at 0x1201a)"
        set &access:&cmd_addr %l (0x80201a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x201a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_FALSE),1 (INT_MID_TRUE),2 (reserved),3 (reserved)"
    tree.end
    tree "S5_CTRL_INT_PRIORITY"
      sgroup "S5_CTRL_INT_PRIORITY (at 0x1201b)"
        set &access:&cmd_addr %l (0x80201b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x201b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_FALSE),1 (INT_PRIORITY_TRUE)"
    tree.end
    tree "S5_CTRL_VOLTAGE_CTL1"
      sgroup "S5_CTRL_VOLTAGE_CTL1 (at 0x12040)"
        set &access:&cmd_addr %l (0x8020400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RANGE                                    = " "0 (RANGE_HV_FALSE),1 (RANGE_HV_TRUE)"
    tree.end
    tree "S5_CTRL_VOLTAGE_CTL2"
      sgroup "S5_CTRL_VOLTAGE_CTL2 (at 0x12041)"
        set &access:&cmd_addr %l (0x8020410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S5_CTRL_PFM_CTL"
      sgroup "S5_CTRL_PFM_CTL (at 0x12044)"
        set &access:&cmd_addr %l (0x8020440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_VOLT_CTL                             = " "0 (PFM_VOLT_BOOST),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFM_IBOOST                               = " "0 (PFM_IBOOST_FALSE),1 (PFM_IBOOST_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PFM_TYPE_I                               = " "0 (PFM_ADVANCED),1 (PFM_LEGACY)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PFM_COMP_HYST                            = " "0 (PFM_HYST_3MV),1 (PFM_HYST_6MV)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PFM_COMP_PLS_FLTR                        = " "0 (PFM_COMP_PLS_FLTR_100NS),1 (PFM_COMP_PLS_FLTR_250NS)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PFM_IPLIM_CTRL                           = " "0 (PFM_IPLIM_CTRL_FALSE),1 (PFM_IPLIM_CTRL_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_IPLIM_DLY                            = " "0 (PFM_IPLIM_CTRL_75NS),1 (PFM_IPLIMI_CTRL_150NS),2 (PFM_IPLIM_CTRL_300NS),3 (PFM_IPLIM_CTRL_600NS)"
    tree.end
    tree "S5_CTRL_MODE_CTL"
      sgroup "S5_CTRL_MODE_CTL (at 0x12045)"
        set &access:&cmd_addr %l (0x8020450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PWM                                      = " "0 (PWM_NO_FORCE),1 (PWM_FORCE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_FALSE),1 (AUTO_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HWEN3                             = " "0 (FOLLOW_HWEN3_FALSE),1 (FOLLOW_HWEN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HWEN2                             = " "0 (FOLLOW_HWEN2_FALSE),1 (FOLLOW_HWEN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HWEN1                             = " "0 (FOLLOW_HWEN1_FALSE),1 (FOLLOW_HWEN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HWEN0                             = " "0 (FOLLOW_HWEN0_FALSE),1 (FOLLOW_HWEN0_TRUE)"
    tree.end
    tree "S5_CTRL_EN_CTL"
      sgroup "S5_CTRL_EN_CTL (at 0x12046)"
        set &access:&cmd_addr %l (0x8020460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (BUCK_ENABLE_FALSE),1 (BUCK_ENABLE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HWEN3                             = " "0 (FOLLOW_HWEN3_FALSE),1 (FOLLOW_HWEN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HWEN2                             = " "0 (FOLLOW_HWEN2_FALSE),1 (FOLLOW_HWEN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HWEN1                             = " "0 (FOLLOW_HWEN1_FALSE),1 (FOLLOW_HWEN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HWEN0                             = " "0 (FOLLOW_HWEN0_FALSE),1 (FOLLOW_HWEN0_TRUE)"
    tree.end
    tree "S5_CTRL_PD_CTL"
      sgroup "S5_CTRL_PD_CTL (at 0x12048)"
        set &access:&cmd_addr %l (0x8020480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PD_ENABLE_FALSE),1 (PD_ENABLE_TRUE)"
    tree.end
    tree "S5_CTRL_COMP_CAP_CTL"
      sgroup "S5_CTRL_COMP_CAP_CTL (at 0x12051)"
        set &access:&cmd_addr %l (0x8020510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   POLE2_CTRL                               = " "0 (CP_CAP_0PF),1 (CP_CAP_1PF)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CZ_CTRL                                  = " "0 (CZ_CAP_30PF),1 (CZ_CAP_40PF),2 (CZ_CAP_50PF),3 (CZ_CAP_60PF)"
    tree.end
    tree "S5_CTRL_GM_CTL"
      sgroup "S5_CTRL_GM_CTL (at 0x12052)"
        set &access:&cmd_addr %l (0x8020520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   GM_CTL                                   = "
    tree.end
    tree "S5_CTRL_RZ_CTL"
      sgroup "S5_CTRL_RZ_CTL (at 0x12053)"
        set &access:&cmd_addr %l (0x8020530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RZ_CTL                                   = "
    tree.end
    tree "S5_CTRL_ISNS_CTRL"
      sgroup "S5_CTRL_ISNS_CTRL (at 0x12055)"
        set &access:&cmd_addr %l (0x8020550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SA_COMP_CAP                              = " "0 (SA_COMP_CAP_100FF),1 (SA_COMP_CAP_200FF)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_RES_IOS                             = " "0 (ISNS_RES_IOS_8KOHMS_24UA),1 (ISNS_RES_IOS_16KOHMS_12UA)"
    tree.end
    tree "S5_CTRL_SAW_CTL"
      sgroup "S5_CTRL_SAW_CTL (at 0x12056)"
        set &access:&cmd_addr %l (0x8020560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CURRENT_CTRL                             = " "0 (SAW_CURRENT_CTRL_1UA),1 (SAW_CURRENT_CTRL_2UA)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NSAW_CTRL                                = " "0 (NSAW_CTRL_4X),1 (NSAW_CTRL_8X),2 (NSAW_CTRL_12X),3 (NSAW_CTRL_16X),4 (NSAW_CTRL_20X),5 (NSAW_CTRL_24X),6 (NSAW_CTRL_28X),7 (NSAW_CTRL_32X)"
    tree.end
    tree "S5_CTRL_DMAX_CTL"
      sgroup "S5_CTRL_DMAX_CTL (at 0x12058)"
        set &access:&cmd_addr %l (0x8020580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DMAX_EN                                  = " "0 (DMAX_EN_FALSE),1 (DMAX_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DMAX_TIME_SEL                            = " "0 (DMAX_TIME_SEL_20NS),1 (DMAX_TIME_SEL_10NS)"
    tree.end
    tree "S5_CTRL_PULSE_SKIP_CTL"
      sgroup "S5_CTRL_PULSE_SKIP_CTL (at 0x12059)"
        set &access:&cmd_addr %l (0x8020590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PS_EN                                    = " "0 (PS_EN_FALSE),1 (PS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PS_TIME_HYST                             = " "0 (PS_TIME_HYST_2CYCLE),1 (PS_TIME_HYST_4CYCLE),2 (PS_TIME_HYST_8CYCLE),3 (PS_TIME_HYST_16CYLE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PSKIP_EXIT_SEL                           = " "0 (PSKIP_EXIT_SEL_ERR_AMP),1 (PSKIP_EXIT_VDIP_COMP)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PS_METHOD                                = " "0 (PS_METHOD_ILOAD),1 (PS_METHOD_ERR_AMP)"
    tree.end
    tree "S5_CTRL_PULSE_SKIP_THRES"
      sgroup "S5_CTRL_PULSE_SKIP_THRES (at 0x1205a)"
        set &access:&cmd_addr %l (0x80205a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x205a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x6 1 "  [ 6: 3]   PS_VRST                                  = "
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PS_VSET                                  = " "0 (PS_VSET_VRSET_450MV_ILOAD_THRESH_25MA),1 (PS_VSET_VRSET_475MV_ILOAD_THRESH_37P5MA),2 (PS_VSET_VRSET_500MV_ILOAD_THRESH_50MA),3 (PS_VSET_VRSET_525MV_ILOAD_THRESH_62P5MA),4 (PS_VSET_VRSET_550MV_ILOAD_THRESH_75MA),5 (PS_VSET_VRSET_575MV_ILOAD_THRESH_87P5MA),6 (PS_VSET_VRSET_600MV_ILOAD_THRESH_100MA),7 (PS_VSET_VRSET_625MV_ILOAD_THRESH_112P5MA)"
    tree.end
    tree "S5_CTRL_AUTO_MODE_CTL"
      sgroup "S5_CTRL_AUTO_MODE_CTL (at 0x1205b)"
        set &access:&cmd_addr %l (0x80205b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x205b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PWM_PFM_SEL                              = " "0 (PWM_PFM_SEL_PS_COMP),1 (PWM_PFM_SEL_INZERO)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PFM_PWM_SEL                              = " "0 (PFM_PWM_SEL_RESERVED),1 (PFM_PWM_SEL_VDIP_COMP),2 (PFM_PWM_SEL_IPLIM_CNTR),3 (PFM_PWM_SEL_VDIP_COMP_OR_IPLIM_CNTR)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MODE_SEL_DLY                             = " "0 (MODE_SEL_DLY_4CYCLES),1 (MODE_SEL_DLY_8CYCLES),2 (MODE_SEL_DLY_16CYCLES),3 (MODE_SEL_DLY_16CYCLES_ALSO)"
    tree.end
    tree "S5_CTRL_INZERO_COUNT_CTL"
      sgroup "S5_CTRL_INZERO_COUNT_CTL (at 0x1205c)"
        set &access:&cmd_addr %l (0x80205c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x205c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   WINDOW_WIDTH                             = " "0 (WINDOW_WIDTH_1_COUNT),1 (WINDOW_WIDTH_2_COUNT),2 (WINDOW_WIDTH_4_COUNT),3 (WINDOW_WIDTH_8_COUNT),4 (WINDOW_WIDTH_16_COUNT),5 (WINDOW_WIDTH_32_COUNT),6 (WINDOW_WIDTH_64_COUNT),7 (WINDOW_WIDTH_128_COUNT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   THRESHOLD                                = "
    tree.end
    tree "S5_CTRL_PFM_COUNT_CTL"
      sgroup "S5_CTRL_PFM_COUNT_CTL (at 0x1205d)"
        set &access:&cmd_addr %l (0x80205d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x205d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   WINDOW_WIDTH                             = " "0 (WINDOW_WIDTH_1_COUNT),1 (WINDOW_WIDTH_2_COUNT),2 (WINDOW_WIDTH_4_COUNT),3 (WINDOW_WIDTH_8_COUNT),4 (WINDOW_WIDTH_16_COUNT),5 (WINDOW_WIDTH_32_COUNT),6 (WINDOW_WIDTH_64_COUNT),7 (WINDOW_WIDTH_128_COUNT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   THRESHOLD                                = "
    tree.end
    tree "S5_CTRL_PS_VGA_CTL"
      sgroup "S5_CTRL_PS_VGA_CTL (at 0x1205e)"
        set &access:&cmd_addr %l (0x80205e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x205e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VGA_GAIN                                 = "
    tree.end
    tree "S5_CTRL_STEPPER_SS_CTL"
      sgroup "S5_CTRL_STEPPER_SS_CTL (at 0x12060)"
        set &access:&cmd_addr %l (0x8020600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STEPPER_EN                               = " "0 (STEPPER_EN_FALSE),1 (STEPPER_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   STEP                                     = " "0 (STEP_1_LSB),1 (STEP_2_LSB),2 (STEP_4_LSB),3 (STEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DELAY                                    = " "0 (DELAY_20_CLK_CYCLES),1 (DELAY_40_CLK_CYCLES),2 (DELAY_80_CLK_CYCLES),3 (DELAY_160_CLK_CYCLES),4 (DELAY_320_CLK_CYCLES),5 (DELAY_640_CLK_CYLES),6 (DELAY_1280_CLK_CYCLES),7 (DELAY_2560_CLK_CYCLES)"
    tree.end
    tree "S5_CTRL_STEPPER_VS_CTL"
      sgroup "S5_CTRL_STEPPER_VS_CTL (at 0x12061)"
        set &access:&cmd_addr %l (0x8020610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STEPPER_EN                               = " "0 (STEPPER_EN_FALSE),1 (STEPPER_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   STEP                                     = " "0 (STEP_1_LSB),1 (STEP_2_LSB),2 (STEP_4_LSB),3 (STEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DELAY                                    = " "0 (DELAY_20_CLK_CYCLES),1 (DELAY_40_CLK_CYCLES),2 (DELAY_80_CLK_CYCLES),3 (DELAY_160_CLK_CYCLES),4 (DELAY_320_CLK_CYCLES),5 (DELAY_640_CLK_CYLES),6 (DELAY_1280_CLK_CYCLES),7 (DELAY_2560_CLK_CYCLES)"
    tree.end
    tree "S5_CTRL_FT_CTL"
      sgroup "S5_CTRL_FT_CTL (at 0x12062)"
        set &access:&cmd_addr %l (0x8020620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FT_EN                                    = " "0 (FT_EN_FALSE),1 (FT_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   GM_BOOST                                 = " "0 (GM_BOOST_FALSE),1 (GM_BOOST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   NL_DEAD_ZONE                             = " "0 (NL_DEAD_ZONE_0A),1 (NL_DEAD_ZONE_0P125A),2 (NL_DEAD_ZONE_0P25A),3 (NL_DEAD_ZONE_0P375A),4 (NL_DEAD_ZONE_0P5A),5 (NL_DEAD_ZONE_0P625A),6 (NL_DEAD_ZONE_0P75A),7 (NL_DEAD_ZONE_0P875A)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NL_CUR_CTL                               = " "0 (NL_CUR_CTL_0A),1 (NL_CUR_CTL_0P125A),2 (NL_CUR_CTL_0P25A),3 (NL_CUR_CTL_0P375A),4 (NL_CUR_CTL_0P5A),5 (NL_CUR_CTL_0P625A),6 (NL_CUR_CTL_0P75A),7 (NL_CUR_CTL_0P875A)"
    tree.end
    tree "S5_CTRL_QMODE_SHADOW"
      sgroup "S5_CTRL_QMODE_SHADOW (at 0x12063)"
        set &access:&cmd_addr %l (0x8020630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FOLLOW_QM                                = " "0 (FOLLOW_QM_FALSE),1 (FOLLOW_QM_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   QMODE_PS_METHOD                          = " "0 (QMODE_PS_METHOD_ILOAD),1 (QMODE_PS_METHOD_ERRAMP)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   QMODE_PS_VRST                            = "
    tree.end
    tree "S5_CTRL_UL_LL_CTRL"
      sgroup "S5_CTRL_UL_LL_CTRL (at 0x12068)"
        set &access:&cmd_addr %l (0x8020680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UL_INT_EN                                = " "0 (UL_INT_EN_FALSE),1 (UL_INT_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LL_INT_EN                                = " "0 (LL_INT_EN_FALSE),1 (LL_INT_EN_TRUE)"
    tree.end
    tree "S5_CTRL_UL_VOLTAGE"
      sgroup "S5_CTRL_UL_VOLTAGE (at 0x12069)"
        set &access:&cmd_addr %l (0x8020690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S5_CTRL_LL_VOLTAGE"
      sgroup "S5_CTRL_LL_VOLTAGE (at 0x1206b)"
        set &access:&cmd_addr %l (0x80206b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x206b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S5_CTRL_CTLR_MISC"
      sgroup "S5_CTRL_CTLR_MISC (at 0x1207a)"
        set &access:&cmd_addr %l (0x80207a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x207a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SPARE_7                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SPARE_6                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SPARE_5                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SPARE_4                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPARE_3                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SPARE_2                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPARE_0                                  = " "0, 1"
    tree.end
    tree "S5_CTRL_SEC_ACCESS"
      sgroup "S5_CTRL_SEC_ACCESS (at 0x120d0)"
        set &access:&cmd_addr %l (0x8020d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S5_CTRL_PERPH_RESET_CTL1"
      sgroup "S5_CTRL_PERPH_RESET_CTL1 (at 0x120d8)"
        set &access:&cmd_addr %l (0x8020d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "S5_CTRL_PERPH_RESET_CTL2"
      sgroup "S5_CTRL_PERPH_RESET_CTL2 (at 0x120d9)"
        set &access:&cmd_addr %l (0x8020d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S5_CTRL_PERPH_RESET_CTL3"
      sgroup "S5_CTRL_PERPH_RESET_CTL3 (at 0x120da)"
        set &access:&cmd_addr %l (0x8020da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S5_CTRL_PERPH_RESET_CTL4"
      sgroup "S5_CTRL_PERPH_RESET_CTL4 (at 0x120db)"
        set &access:&cmd_addr %l (0x8020db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_ACTIVE_FALSE),1 (LOCAL_SOFT_RESET_ACTIVE_TRUE)"
    tree.end
    tree "S5_CTRL_INT_TEST1"
      sgroup "S5_CTRL_INT_TEST1 (at 0x120e0)"
        set &access:&cmd_addr %l (0x8020e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_EN_FALSE),1 (INT_TEST_MODE_EN_TRUE)"
    tree.end
    tree "S5_CTRL_INT_TEST_VAL"
      sgroup "S5_CTRL_INT_TEST_VAL (at 0x120e1)"
        set &access:&cmd_addr %l (0x8020e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT_TEST_VAL                   = " "0 (LIMIT_ERR_INT_TEST_VAL_ACTIVE_FALSE),1 (LIMIT_ERR_INT_TEST_VAL_ACTIVE_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT_TEST_VAL                     = " "0, 1"
    tree.end
    tree "S5_CTRL_CTLR_TEST"
      sgroup "S5_CTRL_CTLR_TEST (at 0x120e2)"
        set &access:&cmd_addr %l (0x8020e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_SEL_ATEST1_NORMAL_ATEST2_NORMAL),1 (ATEST_SEL_ATEST1_VREF_LOCAL_BUFFER_ATEST2_AVSS),2 (ATEST_SEL_ATEST1_LOOP_FILTER_ATEST2_AVSS),3 (ATEST_SEL_ATEST1_VREF_OUT_ATEST2_AVSS_CLEAN),4 (ATEST_SEL_ATEST1_V_SAWTOOTH_ATEST2_AVDD),5 (ATEST_SEL_ATEST1_PULSE_SKIP_VGA_OUT_ATEST2_VREF_PULSE_SKIP_RESET),6 (ATEST_SEL_ATEST1_SLOPE_COMP_OUT_ATEST2_VREF_PULSE_SKIP_SET),7 (ATEST_SEL_ATEST1_RES_DIV_OUT_ATEST2_BUCK_FB_PAD)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DTEST_SEL                                = " "0 (DTEST_SEL_DTEST1_NORMAL_DTEST2_NORMAL),1 (DTEST_SEL_DTEST1_PWM_CLOCK_DTEST2_CLK_1P2M),2 (DTEST_SEL_DTEST1_PWM_COMP_DTEST2_DVSS),3 (DTEST_SEL_DTEST1_PULSE_SKIP_COMP_DTEST2_IPLIMIT_COMP_PFM),4 (DTEST_SEL_DTEST1_PFM_COMP_DTEST2_AUTOPFM_COUNT_DONE),5 (DTEST_SEL_DTEST1_MODE_DTEST2_INZ_COUNT_DONE),6 (DTEST_SEL_DTEST1_PULSE_SKIP_ENTER_DTEST2_PULSE_SKIP_EXIT),7 (DTEST_SEL_DTEST1_PFM_COMP_DTEST2_VDIP_COMP)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TRIM_CALIB_EN                            = " "0 (TRIM_CALIB_EN_FALSE),1 (TRIM_CALIB_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OPEN_LOOP_TEST_EN                        = " "0 (OPEN_LOOP_TEST_EN_FALSE),1 (OPEN_LOOP_TEST_EN_TRUE)"
    tree.end
    tree "S5_CTRL_TRIM_NUM"
      sgroup "S5_CTRL_TRIM_NUM (at 0x120f0)"
        set &access:&cmd_addr %l (0x8020f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "S5_CTRL_CTL_TRIM1"
      sgroup "S5_CTRL_CTL_TRIM1 (at 0x120f1)"
        set &access:&cmd_addr %l (0x8020f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ERR_AMP_TRIM                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RES_DIV_TRIM                             = "
    tree.end
    tree "S5_CTRL_CTL_TRIM2"
      sgroup "S5_CTRL_CTL_TRIM2 (at 0x120f2)"
        set &access:&cmd_addr %l (0x8020f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PFM_COMP_TRIM                            = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VDIP_COMP_TRIM                           = "
    tree.end
    tree "S5_CTRL_CTL_TRIM3"
      sgroup "S5_CTRL_CTL_TRIM3 (at 0x120f3)"
        set &access:&cmd_addr %l (0x8020f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   VGA_PS_TRIM                              = "
    tree.end
    tree "S5_CTRL_CTL_TRIM4"
      sgroup "S5_CTRL_CTL_TRIM4 (at 0x120f4)"
        set &access:&cmd_addr %l (0x8020f40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x20f40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PULL_DOWN_TRIM                           = " "0 (ACTIVE_PD_OFF),1 (ACTIVE_PD_ON)"
    tree.end
  tree.end
tree.end
tree "S5_FREQ"
  tree "S5_FREQ"
    tree "S5_FREQ_REVISION1"
      sgroup "S5_FREQ_REVISION1 (at 0x12200)"
        set &access:&cmd_addr %l (0x8022000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S5_FREQ_REVISION2"
      sgroup "S5_FREQ_REVISION2 (at 0x12201)"
        set &access:&cmd_addr %l (0x8022010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S5_FREQ_PERPH_TYPE"
      sgroup "S5_FREQ_PERPH_TYPE (at 0x12204)"
        set &access:&cmd_addr %l (0x8022040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S5_FREQ_PERPH_SUBTYPE"
      sgroup "S5_FREQ_PERPH_SUBTYPE (at 0x12205)"
        set &access:&cmd_addr %l (0x8022050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S5_FREQ_CLK_ENABLE"
      sgroup "S5_FREQ_CLK_ENABLE (at 0x12246)"
        set &access:&cmd_addr %l (0x8022460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "S5_FREQ_CLK_DIV"
      sgroup "S5_FREQ_CLK_DIV (at 0x12250)"
        set &access:&cmd_addr %l (0x8022500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "S5_FREQ_CLK_PHASE"
      sgroup "S5_FREQ_CLK_PHASE (at 0x12251)"
        set &access:&cmd_addr %l (0x8022510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "S5_FREQ_GANG_CTL1"
      sgroup "S5_FREQ_GANG_CTL1 (at 0x122c0)"
        set &access:&cmd_addr %l (0x8022c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S5_FREQ_GANG_CTL2"
      sgroup "S5_FREQ_GANG_CTL2 (at 0x122c1)"
        set &access:&cmd_addr %l (0x8022c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "S5_FREQ_SEC_ACCESS"
      sgroup "S5_FREQ_SEC_ACCESS (at 0x122d0)"
        set &access:&cmd_addr %l (0x8022d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S5_FREQ_PERPH_RESET_CTL2"
      sgroup "S5_FREQ_PERPH_RESET_CTL2 (at 0x122d9)"
        set &access:&cmd_addr %l (0x8022d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S5_FREQ_PERPH_RESET_CTL3"
      sgroup "S5_FREQ_PERPH_RESET_CTL3 (at 0x122da)"
        set &access:&cmd_addr %l (0x8022da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S5_FREQ_PERPH_RESET_CTL4"
      sgroup "S5_FREQ_PERPH_RESET_CTL4 (at 0x122db)"
        set &access:&cmd_addr %l (0x8022db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "S5_FREQ_TEST1"
      sgroup "S5_FREQ_TEST1 (at 0x122e2)"
        set &access:&cmd_addr %l (0x8022e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x22e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "S5_PS"
  tree "S5_PS"
    tree "S5_PS_REVISION1"
      sgroup "S5_PS_REVISION1 (at 0x12100)"
        set &access:&cmd_addr %l (0x8021000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S5_PS_REVISION2"
      sgroup "S5_PS_REVISION2 (at 0x12101)"
        set &access:&cmd_addr %l (0x8021010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S5_PS_REVISION3"
      sgroup "S5_PS_REVISION3 (at 0x12102)"
        set &access:&cmd_addr %l (0x8021020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S5_PS_REVISION4"
      sgroup "S5_PS_REVISION4 (at 0x12103)"
        set &access:&cmd_addr %l (0x8021030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S5_PS_PERPH_TYPE"
      sgroup "S5_PS_PERPH_TYPE (at 0x12104)"
        set &access:&cmd_addr %l (0x8021040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S5_PS_PERPH_SUBTYPE"
      sgroup "S5_PS_PERPH_SUBTYPE (at 0x12105)"
        set &access:&cmd_addr %l (0x8021050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S5_PS_PWM_CURRENT_LIM_CTL"
      sgroup "S5_PS_PWM_CURRENT_LIM_CTL (at 0x1214a)"
        set &access:&cmd_addr %l (0x80214a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x214a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_EN_FALSE),1 (CURRENT_LIM_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   CURRENT_LIM_AUTOINT_SEL                  = " "0 (CURRENT_LIM_AUTOINT_SEL_2X_2700MA_3X_3500MA),1 (CURRENT_LIM_AUTOINT_SEL_2X_2400MA_3X_3100MA),2 (CURRENT_LIM_AUTOINT_SEL_2X_2100MA_3X_2700MA),3 (CURRENT_LIM_AUTOINT_SEL_2X_1800MA_3X_2300MA),4 (CURRENT_LIM_AUTOINT_SEL_2X_1500MA_3X_1900MA),5 (CURRENT_LIM_AUTOINT_SEL_2X_1200MA_3X_1500MA),6 (CURRENT_LIM_AUTOINT_SEL_2X_900MA_3X_1100MA),7 (CURRENT_LIM_AUTOINT_SEL_2X_600MA_3X_700MA)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_LIM_PWM_SEL                      = " "0 (CURRENT_LIM_PWM_SEL_2X_2700MA_3X_3500MA),1 (CURRENT_LIM_PWM_SEL_2X_2400MA_3X_3100MA),2 (CURRENT_LIM_PWM_SEL_2X_2100MA_3X_2700MA),3 (CURRENT_LIM_PWM_SEL_2X_1800MA_3X_2300MA),4 (CURRENT_LIM_PWM_SEL_2X_1500MA_3X_1900MA),5 (CURRENT_LIM_PWM_SEL_2X_1200MA_3X_1500MA),6 (CURRENT_LIM_PWM_SEL_2X_900MA_3X_1100MA),7 (CURRENT_LIM_PWM_SEL_2X_600MA_3X_700MA)"
    tree.end
    tree "S5_PS_PFM_CURRENT_LIM_CTL"
      sgroup "S5_PS_PFM_CURRENT_LIM_CTL (at 0x1214b)"
        set &access:&cmd_addr %l (0x80214b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x214b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_EN_FALSE),1 (CURRENT_LIM_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_LIM_SEL                          = " "0 (CURRENT_LIM_SEL_600MA),1 (CURRENT_LIM_SEL_540MA),2 (CURRENT_LIM_SEL_480MA),3 (CURRENT_LIM_SEL_420MA),4 (CURRENT_LIM_SEL_360MA),5 (CURRENT_LIM_SEL_300MA),6 (CURRENT_LIM_SEL_240MA),7 (CURRENT_LIM_SEL_180MA)"
    tree.end
    tree "S5_PS_SOFT_START_CTL"
      sgroup "S5_PS_SOFT_START_CTL (at 0x1214c)"
        set &access:&cmd_addr %l (0x80214c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x214c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START_ILIM_STEP_EN                  = " "0 (SOFT_START_ILIM_STEP_EN_FALSE),1 (SOFT_START_ILIM_STEP_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SOFT_START_MODE_SEL                      = " "0 (SOFT_START_MODE_SEL_FAST),1 (SOFT_START_MODE_SEL_NORMAL)"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   SOFT_START_ILIM_SEL                      = " "0 (SOFT_START_ILIM_SEL_400MA),1 (SOFT_START_ILIM_SEL_600MA),2 (SOFT_START_ILIM_SEL_800MA),3 (SOFT_START_ILIM_SEL_1000MA)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT_START_ILIM_STEP_DLY                 = " "0 (SOFT_START_ILIM_STEP_DLY_FAST_20US_NORMAL_40US),1 (SOFT_START_ILIM_STEP_DLY_FAST_40US_NORMAL_80US)"
    tree.end
    tree "S5_PS_SWITCH_SIZE_CTL"
      sgroup "S5_PS_SWITCH_SIZE_CTL (at 0x12170)"
        set &access:&cmd_addr %l (0x8021700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   P_SWITCH_SIZE                            = " "0 (P_SWITCH_SIZE_1_DIV_8),1 (P_SWITCH_SIZE_1_DIV_4),2 (P_SWITCH_SIZE_1_DIV_2),3 (P_SWITCH_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   N_SWITCH_SIZE                            = " "0 (N_SWITCH_SIZE_1_DIV_8),1 (N_SWITCH_SIZE_1_DIV_4),2 (N_SWITCH_SIZE_1_DIV_2),3 (N_SWITCH_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   P_OFF_DRIVER_SIZE                        = " "0 (P_OFF_DRIVER_SIZE_1_DIV_2),1 (P_OFF_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   P_ON_DRIVER_SIZE                         = " "0 (P_ON_DRIVER_SIZE_1_DIV_2),1 (P_ON_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   N_ON_DRIVER_SIZE                         = " "0 (N_ON_DRIVER_SIZE_1_DIV_2),1 (N_ON_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   N_OFF_DRIVER_SIZE                        = " "0 (N_OFF_DRIVER_SIZE_1_DIV_2),1 (N_OFF_DRIVER_SIZE_1_DIV_1)"
    tree.end
    tree "S5_PS_DEAD_TIME_CTRL1"
      sgroup "S5_PS_DEAD_TIME_CTRL1 (at 0x12171)"
        set &access:&cmd_addr %l (0x8021710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   DIG_DEADTIME_CTRL                        = " "0 (DIG_DEADTIME_CTRL_DISABLE),1 (DIG_DEADTIME_CTRL_1_NS),2 (DIG_DEADTIME_CTRL_1P5_NS),3 (DIG_DEADTIME_CTRL_2P5_NS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ANA_DEADTIME_CTRL                        = " "0 (ANA_DEADTIME_CTRL_DISABLE),1 (ANA_DEADTIME_CTRL_ENABLE)"
    tree.end
    tree "S5_PS_DEAD_TIME_CTRL2"
      sgroup "S5_PS_DEAD_TIME_CTRL2 (at 0x12172)"
        set &access:&cmd_addr %l (0x8021720|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21720|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PSW_DEAD_TIME                         = " "0 (EN_PSW_DEAD_TIME_DISABLE),1 (EN_PSW_DEAD_TIME_ENABLE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   EN_NSW_DEAD_TIME                         = " "0 (EN_NSW_DEAD_TIME_DISABLE),1 (EN_NSW_DEAD_TIME_ENABLE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   NSW_DEAD_TIME                            = " "0 (NSW_DEAD_TIME_1P5_NS),1 (NSW_DEAD_TIME_2P4_NS),2 (NSW_DEAD_TIME_3P3_NS),3 (NSW_DEAD_TIME_4P4_NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PSW_DEAD_TIME                            = " "0 (PSW_DEAD_TIME_2P0_NS),1 (PSW_DEAD_TIME_2P4_NS),2 (PSW_DEAD_TIME_3P2_NS),3 (PSW_DEAD_TIME_4P4_NS)"
    tree.end
    tree "S5_PS_BLNK_TIME_CTL"
      sgroup "S5_PS_BLNK_TIME_CTL (at 0x12173)"
        set &access:&cmd_addr %l (0x8021730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   MIN_PON                                  = " "0 (MIN_PON_DISABLED),1 (MIN_PON_15NS_OR_25NS),2 (MIN_PON_40NS_OR_50NS),3 (MIN_PON_60NS_OR_70NS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_BLNK_TIME                           = " "0 (ISNS_BLNK_TIME_15NS),1 (ISNS_BLNK_TIME_25NS)"
    tree.end
    tree "S5_PS_INZERO_CTL"
      sgroup "S5_PS_INZERO_CTL (at 0x12174)"
        set &access:&cmd_addr %l (0x8021740|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21740|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INZERO_EN                                = " "0 (INZERO_EN_FALSE),1 (INZERO_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   INZERO_OFFSET                            = " "0 (INZERO_OFFSET_NO_OFFSET),1 (INZERO_OFFSET_NEG_3MV),2 (INZERO_OFFSET_POS_1P5MV),3 (INZERO_OFFSET_POS_3MV)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   INZERO_FORCE                             = " "0 (INZERO_FORCE_DISABLE),1 (INZERO_FORCE_ENABLE)"
    tree.end
    tree "S5_PS_DIG_FSM_CTL"
      sgroup "S5_PS_DIG_FSM_CTL (at 0x12175)"
        set &access:&cmd_addr %l (0x8021750|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21750|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FSM_SEL                                  = " "0 (FSM_SEL_FMS2),1 (FSM_SEL_FMS1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FSM_CTL4                                 = " "0 (FSM_CTL4_DISABLE_PULSE_FILTER_COMP1),1 (FSM_CTL4_ENABLE_PULSE_FILTER_COMP1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FSM_CTL3                                 = " "0 (FSM_CTL3_DISABLE_PULSE_FILTER_COMP1),1 (FSM_CTL3_ENABLE_PULSE_FILTER_COMP1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FSM_CTL2                                 = " "0 (FSM_CTL2_DISABLE_PULSE_FILTER_COMP2),1 (FSM_CTL2_ENABLE_PULSE_FILTER_COMP2)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FSM_CTL1                                 = " "0 (FSM_CTL1_DISABLE_PULSE_FILTER_INZERO_PS_COMP),1 (FMS_CTL1_ENABLE_PULSE_FILTER_INZERO_PS_COMP)"
    tree.end
    tree "S5_PS_PWR_STG_MISC"
      sgroup "S5_PS_PWR_STG_MISC (at 0x12179)"
        set &access:&cmd_addr %l (0x8021790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SPARE_7                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SPARE_6                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SPARE_5                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SPARE_4                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPARE_3                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SPARE_2                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_RATIO                               = " "0 (ISNS_RATIO_54P4K),1 (ISNS_RATIO_27P2K)"
    tree.end
    tree "S5_PS_SEC_ACCESS"
      sgroup "S5_PS_SEC_ACCESS (at 0x121d0)"
        set &access:&cmd_addr %l (0x8021d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S5_PS_PERPH_RESET_CTL2"
      sgroup "S5_PS_PERPH_RESET_CTL2 (at 0x121d9)"
        set &access:&cmd_addr %l (0x8021d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S5_PS_PERPH_RESET_CTL3"
      sgroup "S5_PS_PERPH_RESET_CTL3 (at 0x121da)"
        set &access:&cmd_addr %l (0x8021da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S5_PS_PERPH_RESET_CTL4"
      sgroup "S5_PS_PERPH_RESET_CTL4 (at 0x121db)"
        set &access:&cmd_addr %l (0x8021db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "S5_PS_FORCE_FET_TEST"
      sgroup "S5_PS_FORCE_FET_TEST (at 0x121e3)"
        set &access:&cmd_addr %l (0x8021e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   KELVIN_SENSING_TEST_EN                   = " "0 (KELVIN_SENSING_TEST_NMOS_RON),1 (KELVIN_SENSING_TEST_PMOS_RON)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FORCE_PFET_NFET                          = " "0 (FORCE_PFET_NFET_NORMAL),1 (FORCE_PFET_NFET_NMOS_ON_PMOS_OFF),2 (FORCE_PFET_NFET_PMOS_ON_NMOS_OFF),3 (FORCE_BOTH_PMOS_NMOS_OFF)"
    tree.end
    tree "S5_PS_PWR_STG_TEST"
      sgroup "S5_PS_PWR_STG_TEST (at 0x121e4)"
        set &access:&cmd_addr %l (0x8021e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_SEL_ATEST1_NORMAL_ATEST2_NORMAL),1 (ATEST_SEL_ATEST1_RESERVED1_ATEST2_RESERVED1),2 (ATEST_SEL_ATEST1_RESERVED2_ATEST2_RESERVED2),3 (ATEST_SEL_ATEST1_RESERVED3_ATEST2_RESERVED3),4 (ATEST_SEL_ATEST1_RESERVED4_ATEST2_RESERVED4),5 (ATEST_SEL_ATEST1_RESERVED5_ATEST2_RESERVED5),6 (ATEST_SEL_ATEST1_KELVIN_SENSE1_ATEST2_KELVIN_SENSE2),7 (ATEST_SEL_ATEST1_RESERVED7_ATEST2_RESERVED7)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DTEST_SEL                                = " "0 (DTEST_SEL_DTEST1_NORMAL_DTEST2_NORMAL),1 (DTEST_SEL_DTEST1_END_MIN_PON_DTEST2_FSM_STATE_0),2 (DTEST_SEL_DTEST1_IPLIMIT_TIMER1_DTEST2_FSM_STATE_1),3 (DTEST_SEL_DTEST1_IPLIMIT_TIMER2_DTEST2_FSM_STATE_2),4 (DTEST_SEL_DTEST1_INZERO_COMP_NMOS_DTEST2_FSM_STATE_3),5 (DTEST_SEL_DTEST1_IPLIMIT_COMP_PMOS_DTEST2_FSM_STATE_4),6 (DTEST_SEL_DTEST1_PMOS_DRIVE_SIGNAL_DTEST2_PGATE_BLANKING_PMOS),7 (DTEST_SEL_DTEST1_NMOS_DRIVE_SIGNAL_DTEST2_INZERO_COMP_EXTEND)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TRIM_CALIB_EN                            = " "0 (TRIM_CALIB_EN_FALSE),1 (TRIM_CALIB_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OPEN_LOOP_TEST_EN                        = " "0 (OPEN_LOOP_TEST_EN_FALSE),1 (OPEN_LOOP_TEST_EN_TRUE)"
    tree.end
    tree "S5_PS_TRIM_NUM"
      sgroup "S5_PS_TRIM_NUM (at 0x121f0)"
        set &access:&cmd_addr %l (0x8021f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "S5_PS_PS_TRIM1"
      sgroup "S5_PS_PS_TRIM1 (at 0x121f1)"
        set &access:&cmd_addr %l (0x8021f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   IPLIM_TRIM                               = " "0, 1, 2, 3"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   INZERO_TRIM                              = "
    tree.end
    tree "S5_PS_PS_TRIM2"
      sgroup "S5_PS_PS_TRIM2 (at 0x121f2)"
        set &access:&cmd_addr %l (0x8021f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x21f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START_ILIM_STEP_DLY_TRIM            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SOFT_START_MODE_SEL_TRIM                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SOFT_START_IPLIM_STEP_EN_TRIM            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   SOFT_START_IPLIM_TRIM                    = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   IPLIM_TRIM_OPT                           = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "SLEEP_CLK1"
  tree "SLEEP_CLK1"
    tree "SLEEP_CLK1_REVISION1"
      sgroup "SLEEP_CLK1_REVISION1 (at 0x5a00)"
        set &access:&cmd_addr %l (0x805a000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "SLEEP_CLK1_REVISION2"
      sgroup "SLEEP_CLK1_REVISION2 (at 0x5a01)"
        set &access:&cmd_addr %l (0x805a010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "SLEEP_CLK1_PERPH_TYPE"
      sgroup "SLEEP_CLK1_PERPH_TYPE (at 0x5a04)"
        set &access:&cmd_addr %l (0x805a040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SLEEP_CLK1_PERPH_SUBTYPE"
      sgroup "SLEEP_CLK1_PERPH_SUBTYPE (at 0x5a05)"
        set &access:&cmd_addr %l (0x805a050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SLEEP_CLK1_STATUS1"
      sgroup "SLEEP_CLK1_STATUS1 (at 0x5a08)"
        set &access:&cmd_addr %l (0x805a080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SLP_CLK_OK                               = " "0 (SLP_CLK_BUFFER_OFF),1 (SLP_CLK_BUFFER_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SLP_CLK_SOURCE                           = " "0 (XO_32K),1 (EXT_32K),2 (CALRC),3 (LFRC),4 (RC19M_DIV),5 (XO19M_DIV),6 (RESERVED),7 (reserved)"
    tree.end
    tree "SLEEP_CLK1_INT_RT_STS"
      sgroup "SLEEP_CLK1_INT_RT_STS (at 0x5a10)"
        set &access:&cmd_addr %l (0x805a100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_RT_STS                    = " "0 (XO32K_NOT_HALT),1 (XO32K_HALT)"
    tree.end
    tree "SLEEP_CLK1_INT_SET_TYPE"
      sgroup "SLEEP_CLK1_INT_SET_TYPE (at 0x5a11)"
        set &access:&cmd_addr %l (0x805a110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_TYPE                      = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "SLEEP_CLK1_INT_POLARITY_HIGH"
      sgroup "SLEEP_CLK1_INT_POLARITY_HIGH (at 0x5a12)"
        set &access:&cmd_addr %l (0x805a120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_HIGH                      = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "SLEEP_CLK1_INT_POLARITY_LOW"
      sgroup "SLEEP_CLK1_INT_POLARITY_LOW (at 0x5a13)"
        set &access:&cmd_addr %l (0x805a130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_LOW                       = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "SLEEP_CLK1_INT_LATCHED_CLR"
      sgroup "SLEEP_CLK1_INT_LATCHED_CLR (at 0x5a14)"
        set &access:&cmd_addr %l (0x805a140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_LATCHED_CLR               = " "0, 1"
    tree.end
    tree "SLEEP_CLK1_INT_EN_SET"
      sgroup "SLEEP_CLK1_INT_EN_SET (at 0x5a15)"
        set &access:&cmd_addr %l (0x805a150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_EN_SET                    = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SLEEP_CLK1_INT_EN_CLR"
      sgroup "SLEEP_CLK1_INT_EN_CLR (at 0x5a16)"
        set &access:&cmd_addr %l (0x805a160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_EN_CLR                    = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SLEEP_CLK1_INT_LATCHED_STS"
      sgroup "SLEEP_CLK1_INT_LATCHED_STS (at 0x5a18)"
        set &access:&cmd_addr %l (0x805a180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_LATCHED_STS               = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "SLEEP_CLK1_INT_PENDING_STS"
      sgroup "SLEEP_CLK1_INT_PENDING_STS (at 0x5a19)"
        set &access:&cmd_addr %l (0x805a190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_PENDING_STS               = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "SLEEP_CLK1_INT_MID_SEL"
      sgroup "SLEEP_CLK1_INT_MID_SEL (at 0x5a1a)"
        set &access:&cmd_addr %l (0x805a1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "SLEEP_CLK1_INT_PRIORITY"
      sgroup "SLEEP_CLK1_INT_PRIORITY (at 0x5a1b)"
        set &access:&cmd_addr %l (0x805a1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "SLEEP_CLK1_DRV_CTL1"
      sgroup "SLEEP_CLK1_DRV_CTL1 (at 0x5a44)"
        set &access:&cmd_addr %l (0x805a440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUT_DRV                                  = " "0 (ONE_X),1 (TWO_X),2 (THREE_X),3 (FOUR_X)"
    tree.end
    tree "SLEEP_CLK1_HALT_CTL"
      sgroup "SLEEP_CLK1_HALT_CTL (at 0x5a45)"
        set &access:&cmd_addr %l (0x805a450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   XO32K_HALT_EN                            = " "0 (XO32K_HALT_DISABLED),1 (XO32K_HALT_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FORCE_XO32K_OSC_HALT                     = " "0 (XO32K_HALT_NOT_FORCED),1 (XO32K_HALT_FORCED)"
    tree.end
    tree "SLEEP_CLK1_EN_CTL"
      sgroup "SLEEP_CLK1_EN_CTL (at 0x5a46)"
        set &access:&cmd_addr %l (0x805a460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SLP_CLK_PAD_EN                           = " "0 (SLP_CLK_BUF_DISABLED),1 (SLP_CLK_BUF_ENABLED)"
    tree.end
    tree "SLEEP_CLK1_SMPL_CTL1"
      sgroup "SLEEP_CLK1_SMPL_CTL1 (at 0x5a48)"
        set &access:&cmd_addr %l (0x805a480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SMPL_EN                                  = " "0 (SMPL_DISABLE),1 (SMPL_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_SEL                              = " "0 (SHUTDOWN2_RB_TRIGGER),1 (PON_RB_TRIGGER)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SMPL_DELAY                               = " "0 (HALF_SEC),1 (ONE_SEC),2 (ONEANDHALF_SEC),3 (TWO_SEC)"
    tree.end
    tree "SLEEP_CLK1_SLPSRC_CTL1"
      sgroup "SLEEP_CLK1_SLPSRC_CTL1 (at 0x5a49)"
        set &access:&cmd_addr %l (0x805a490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   XO32K_EN                                 = " "0 (XO32K_DISABLED),1 (XO32K_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_OSC_SEL2I                          = " "0 (NORMAL_CURRENT),1 (MORE_CURRENT)"
    tree.end
    tree "SLEEP_CLK1_LFRC_CTL"
      sgroup "SLEEP_CLK1_LFRC_CTL (at 0x5a57)"
        set &access:&cmd_addr %l (0x805a570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   CLKS_XVDD_BLEED                          = " "0 (NA_0),1 (NA_200),2 (reserved),3 (NA_600),4 (reserved),5 (reserved),6 (reserved),7 (NA_1600)"
    tree.end
    tree "SLEEP_CLK1_CAL_RC1"
      sgroup "SLEEP_CLK1_CAL_RC1 (at 0x5a58)"
        set &access:&cmd_addr %l (0x805a580|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a580|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CAL_FREQ_RTC_DEFAULT                     = "
    tree.end
    tree "SLEEP_CLK1_CAL_RC2"
      sgroup "SLEEP_CLK1_CAL_RC2 (at 0x5a59)"
        set &access:&cmd_addr %l (0x805a590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DRIFT_LMT_RTC                            = "
    tree.end
    tree "SLEEP_CLK1_CAL_RC3"
      sgroup "SLEEP_CLK1_CAL_RC3 (at 0x5a5a)"
        set &access:&cmd_addr %l (0x805a5a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a5a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LFRC_DRIFT_DET_EN_BATT                   = " "0 (DRIFT_DET_DISABLED),1 (DRIFT_DET_ENABLED)"
    tree.end
    tree "SLEEP_CLK1_CAL_RC4"
      sgroup "SLEEP_CLK1_CAL_RC4 (at 0x5a5b)"
        set &access:&cmd_addr %l (0x805a5b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a5b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CALRC_EN                                 = " "0 (CALRC_DISABLED),1 (CALRC_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   COINCELL_GOOD                            = " "0 (WEAK_COINCAP),1 (STRONG_COINCAP)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LFRC_DRIFT_DET_EN_COIN                   = " "0 (DRIFT_DET_DISABLED),1 (DRIFT_DET_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CALRC_DTEST_EN                           = " "0 (NORMAL),1 (CALRC_STATE_ON_DTEST)"
    tree.end
    tree "SLEEP_CLK1_CAL_RC5"
      sgroup "SLEEP_CLK1_CAL_RC5 (at 0x5a5c)"
        set &access:&cmd_addr %l (0x805a5c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5a5c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   MIN_XO_COUNT_LMT                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MAX_XO_COUNT_LMT                         = "
    tree.end
    tree "SLEEP_CLK1_SEC_ACCESS"
      sgroup "SLEEP_CLK1_SEC_ACCESS (at 0x5ad0)"
        set &access:&cmd_addr %l (0x805ad00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ad00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SLEEP_CLK1_PERPH_RESET_CTL1"
      sgroup "SLEEP_CLK1_PERPH_RESET_CTL1 (at 0x5ad8)"
        set &access:&cmd_addr %l (0x805ad80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ad80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "SLEEP_CLK1_PERPH_RESET_CTL2"
      sgroup "SLEEP_CLK1_PERPH_RESET_CTL2 (at 0x5ad9)"
        set &access:&cmd_addr %l (0x805ad90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ad90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "SLEEP_CLK1_PERPH_RESET_CTL3"
      sgroup "SLEEP_CLK1_PERPH_RESET_CTL3 (at 0x5ada)"
        set &access:&cmd_addr %l (0x805ada0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ada0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SLEEP_CLK1_PERPH_RESET_CTL4"
      sgroup "SLEEP_CLK1_PERPH_RESET_CTL4 (at 0x5adb)"
        set &access:&cmd_addr %l (0x805adb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5adb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "SLEEP_CLK1_PERPH_RESET_CTL5"
      sgroup "SLEEP_CLK1_PERPH_RESET_CTL5 (at 0x5adc)"
        set &access:&cmd_addr %l (0x805adc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5adc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SLEEP_CLK1_PERPH_RESET_CTL6"
      sgroup "SLEEP_CLK1_PERPH_RESET_CTL6 (at 0x5add)"
        set &access:&cmd_addr %l (0x805add0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5add0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "SLEEP_CLK1_INT_TEST1"
      sgroup "SLEEP_CLK1_INT_TEST1 (at 0x5ae0)"
        set &access:&cmd_addr %l (0x805ae00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ae00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_DIS),1 (INT_TEST_EN)"
    tree.end
    tree "SLEEP_CLK1_INT_TEST_VAL"
      sgroup "SLEEP_CLK1_INT_TEST_VAL (at 0x5ae1)"
        set &access:&cmd_addr %l (0x805ae10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ae10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_HALT_DET_TEST_VAL                  = " "0 (INT_TEST_OUT_0),1 (INT_TEST_OUT_1)"
    tree.end
    tree "SLEEP_CLK1_TEST1"
      sgroup "SLEEP_CLK1_TEST1 (at 0x5ae2)"
        set &access:&cmd_addr %l (0x805ae20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5ae20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SMPL_TRIGGER_SEL                         = " "0 (HIZ),1 (CONNECT_TO_DTEST)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CXVDD_ATEST_EN                           = " "0 (HIZ),1 (CONNECT_TO_ATEST)"
    tree.end
  tree.end
tree.end
tree "SMBBP_BAT_IF"
  tree "SMBBP_BAT_IF"
    tree "SMBBP_BAT_IF_PERPH_TYPE"
      sgroup "SMBBP_BAT_IF_PERPH_TYPE (at 0x1204)"
        set &access:&cmd_addr %l (0x8012040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBBP_BAT_IF_PERPH_SUBTYPE"
      sgroup "SMBBP_BAT_IF_PERPH_SUBTYPE (at 0x1205)"
        set &access:&cmd_addr %l (0x8012050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBBP_BAT_IF_BAT_PRES_STATUS"
      sgroup "SMBBP_BAT_IF_BAT_PRES_STATUS (at 0x1208)"
        set &access:&cmd_addr %l (0x8012080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_PRES                                 = " "0 (BATTERY_GONE),1 (BATTERY_PRESENT)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_REMOVED_OFFMODE                      = " "0 (BATTERY_NEVER_REMOVED),1 (BATTERY_WAS_REMOVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_THM_PRES                             = " "0 (BAT_THM_GONE),1 (BAT_THM_PRESENT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_ID_PRES                              = " "0 (BAT_ID_GONE),1 (BAT_ID_PRESENT)"
    tree.end
    tree "SMBBP_BAT_IF_BAT_TEMP_STATUS"
      sgroup "SMBBP_BAT_IF_BAT_TEMP_STATUS (at 0x1209)"
        set &access:&cmd_addr %l (0x8012090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   BAT_TEMP                                 = " "0 (BAT_TEMP_TOO_COLD),1 (BAT_TEMP_TOO_HOT),2 (BAT_TEMP_OK),3 (reserved)"
    tree.end
    tree "SMBBP_BAT_IF_VREF_BAT_THM_STATUS"
      sgroup "SMBBP_BAT_IF_VREF_BAT_THM_STATUS (at 0x120a)"
        set &access:&cmd_addr %l (0x80120a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x120a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREF_BAT_THM_ON                          = " "0 (VREF_BAT_THM_OFF),1 (VREF_BAT_THM_ON)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SOURCE_AVDD                              = " "0 (NO),1 (YES)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SOURCE_VADC                              = " "0 (NO),1 (YES)"
    tree.end
    tree "SMBBP_BAT_IF_BAT_FET_STATUS"
      sgroup "SMBBP_BAT_IF_BAT_FET_STATUS (at 0x120b)"
        set &access:&cmd_addr %l (0x80120b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x120b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_FET_ON                               = " "0 (BAT_FET_OFF),1 (BAT_FET_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BAT_FET_CP_MODE                          = " "0 (BFCP_OFF),1 (BFCP_ON_LPM),2 (BFCP_ON_NPM),3 (BFCP_ON_HPM)"
    tree.end
    tree "SMBBP_BAT_IF_VCP_STATUS"
      sgroup "SMBBP_BAT_IF_VCP_STATUS (at 0x120c)"
        set &access:&cmd_addr %l (0x80120c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x120c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VCP_ON                                   = " "0 (VCP_OFF),1 (VCP_ON)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VCP_DET_COMP                             = " "0 (VCP_NOT_NEEDED),1 (VCP_NEEDED)"
    tree.end
    tree "SMBBP_BAT_IF_INT_RT_STS"
      sgroup "SMBBP_BAT_IF_INT_RT_STS (at 0x1210)"
        set &access:&cmd_addr %l (0x8012100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_RT_STS                            = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_RT_STS                        = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_RT_STS                       = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_PRES_RT_STS                          = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
    tree.end
    tree "SMBBP_BAT_IF_INT_SET_TYPE"
      sgroup "SMBBP_BAT_IF_INT_SET_TYPE (at 0x1211)"
        set &access:&cmd_addr %l (0x8012110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_SET_TYPE                          = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_SET_TYPE                      = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_SET_TYPE                     = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_PRES_SET_TYPE                        = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "SMBBP_BAT_IF_INT_POLARITY_HIGH"
      sgroup "SMBBP_BAT_IF_INT_POLARITY_HIGH (at 0x1212)"
        set &access:&cmd_addr %l (0x8012120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_POLARITY_HIGH                     = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_POLARITY_HIGH                 = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_POLARITY_HIGH                = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_PRES_POLARITY_HIGH                   = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_BAT_IF_INT_POLARITY_LOW"
      sgroup "SMBBP_BAT_IF_INT_POLARITY_LOW (at 0x1213)"
        set &access:&cmd_addr %l (0x8012130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_POLARITY_LOW                      = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_POLARITY_LOW                  = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_POLARITY_LOW                 = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_PRES_POLARITY_LOW                    = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_BAT_IF_INT_LATCHED_CLR"
      sgroup "SMBBP_BAT_IF_INT_LATCHED_CLR (at 0x1214)"
        set &access:&cmd_addr %l (0x8012140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_LATCHED_CLR                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_LATCHED_CLR                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_PRES_LATCHED_CLR                     = " "0, 1"
    tree.end
    tree "SMBBP_BAT_IF_INT_EN_SET"
      sgroup "SMBBP_BAT_IF_INT_EN_SET (at 0x1215)"
        set &access:&cmd_addr %l (0x8012150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_EN_SET                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_PRES_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_BAT_IF_INT_EN_CLR"
      sgroup "SMBBP_BAT_IF_INT_EN_CLR (at 0x1216)"
        set &access:&cmd_addr %l (0x8012160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_EN_CLR                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_PRES_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_BAT_IF_INT_LATCHED_STS"
      sgroup "SMBBP_BAT_IF_INT_LATCHED_STS (at 0x1218)"
        set &access:&cmd_addr %l (0x8012180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_LATCHED_STS                   = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_PRES_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
    tree.end
    tree "SMBBP_BAT_IF_INT_PENDING_STS"
      sgroup "SMBBP_BAT_IF_INT_PENDING_STS (at 0x1219)"
        set &access:&cmd_addr %l (0x8012190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_PENDING_STS                   = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_PRES_PENDING_STS                     = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
    tree.end
    tree "SMBBP_BAT_IF_INT_MID_SEL"
      sgroup "SMBBP_BAT_IF_INT_MID_SEL (at 0x121a)"
        set &access:&cmd_addr %l (0x80121a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x121a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "SMBBP_BAT_IF_INT_PRIORITY"
      sgroup "SMBBP_BAT_IF_INT_PRIORITY (at 0x121b)"
        set &access:&cmd_addr %l (0x80121b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x121b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "SMBBP_BAT_IF_VCP"
      sgroup "SMBBP_BAT_IF_VCP (at 0x1247)"
        set &access:&cmd_addr %l (0x8012470|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12470|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN                                       = " "0 (VCP_DISABLED),1 (VCP_ENABLED)"
    tree.end
    tree "SMBBP_BAT_IF_BPD_CTRL"
      sgroup "SMBBP_BAT_IF_BPD_CTRL (at 0x1248)"
        set &access:&cmd_addr %l (0x8012480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BPD_OFFMODE_EN                           = " "0 (BPD_OFFMODE_DISABLED),1 (BPD_OFFMODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BATID_BATTHM_B_SEL                       = " "0 (BAT_THM),1 (BAT_ID)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_THM_EN                               = " "0 (BPD_BAT_THM_DISABLED),1 (BPD_BAT_THM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_ID_EN                                = " "0 (BPD_BAT_ID_DISABLED),1 (BPD_BAT_ID_ENABLED)"
    tree.end
    tree "SMBBP_BAT_IF_BTC_CTRL"
      sgroup "SMBBP_BAT_IF_BTC_CTRL (at 0x1249)"
        set &access:&cmd_addr %l (0x8012490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TEMP_COMP_EN                         = " "0 (BTC_DISABLED),1 (BTC_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_COLD_THD                        = " "0 (COLD_THD_70_PCT),1 (COLD_THD_80_PCT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_TEMP_HOT_THD                         = " "0 (HOT_THD_25_PCT),1 (HOT_THD_35_PCT)"
    tree.end
    tree "SMBBP_BAT_IF_VREF_BAT_THM_CTRL"
      sgroup "SMBBP_BAT_IF_VREF_BAT_THM_CTRL (at 0x124a)"
        set &access:&cmd_addr %l (0x80124a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x124a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   EN                                       = " "0 (VREF_BAT_THM_DISABLED),1 (reserved),2 (VREF_BAT_THM_ENABLED_FSM),3 (VREF_BAT_THM_FORCED_ON)"
    tree.end
    tree "SMBBP_BAT_IF_VBAT_DISCHG"
      sgroup "SMBBP_BAT_IF_VBAT_DISCHG (at 0x124e)"
        set &access:&cmd_addr %l (0x80124e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x124e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (PM8026_ONLY_VBAT_DISCHG_DISABLED),1 (PM8026_ONLY_VBAT_DISCHG_ENABLED)"
    tree.end
    tree "SMBBP_BAT_IF_BAT_REMOVED_OFFMODE"
      sgroup "SMBBP_BAT_IF_BAT_REMOVED_OFFMODE (at 0x124f)"
        set &access:&cmd_addr %l (0x80124f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x124f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CLR                                      = " "0, 1"
    tree.end
    tree "SMBBP_BAT_IF_BATFET_CTRL1"
      sgroup "SMBBP_BAT_IF_BATFET_CTRL1 (at 0x1290)"
        set &access:&cmd_addr %l (0x8012900|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12900|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CNST_RDS_EN                              = " "0 (CNST_RDS_DISABLED),1 (CNST_RDS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   INTEG_COMP_EN                            = " "0 (INTEG_COMP_DISABLED),1 (INTEG_COMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   RDS_BIAS_CTRL                            = " "0 (RDS_BIAS_4UA),1 (RDS_BIAS_6UA),2 (RDS_BIAS_8UA),3 (RDS_BIAS_10UA)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CP_BIAS                                  = " "0 (CP_BIAS_0UA),1 (CP_BIAS_0P1UA),2 (CP_BIAS_1P1UA),3 (CP_BIAS_2P1UA)"
    tree.end
    tree "SMBBP_BAT_IF_BATFET_CTRL2"
      sgroup "SMBBP_BAT_IF_BATFET_CTRL2 (at 0x1291)"
        set &access:&cmd_addr %l (0x8012910|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12910|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TEMP_COMP_EN                             = " "0 (TEMP_COMP_DISABLED),1 (TEMP_COMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   TEMP_CTRL                                = " "0 (TEMP_COMP_1X),1 (TEMP_COMP_2X),2 (TEMP_COMP_3X),3 (TEMP_COMP_4X)"
    tree.end
    tree "SMBBP_BAT_IF_BATFET_CTRL3"
      sgroup "SMBBP_BAT_IF_BATFET_CTRL3 (at 0x1292)"
        set &access:&cmd_addr %l (0x8012920|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12920|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BF_PDRV                                  = " "0 (PFET_50OHM),1 (PFET_10OHM)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VG_DISCHG_LNG_DLY                        = " "0 (VG_DISCHG_1US),1 (VG_DISCHG_10US)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CP_VGS_SEL                               = " "0 (BFCP_VGS_5P5V),1 (BFCP_VGS_6P0V),2 (BFCP_VGS_6P5V),3 (BFCP_VGS_7P0V)"
    tree.end
    tree "SMBBP_BAT_IF_BATFET_CTRL4"
      sgroup "SMBBP_BAT_IF_BATFET_CTRL4 (at 0x1293)"
        set &access:&cmd_addr %l (0x8012930|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12930|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATFET_SLEEP_ULTRA_LOW_POWER_ENABLE      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATFET_SLEEP_BMS_SNS_NPM_ENABLE          = " "0, 1"
    tree.end
    tree "SMBBP_BAT_IF_BFCP_CLK_CTRL1"
      sgroup "SMBBP_BAT_IF_BFCP_CLK_CTRL1 (at 0x1294)"
        set &access:&cmd_addr %l (0x8012940|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12940|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   HP_CLK_SEL                               = " "0 (HPM_CLK_1P2MHZ),1 (HPM_CLK_19P2MHZ)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   HP_CP_CTRL                               = " "0 (HPM_CLK_DIV_1),1 (HPM_CLK_DIV_2),2 (HPM_CLK_DIV_4),3 (HPM_CLK_DIV_8)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NP_CLK_SEL                               = " "0 (NPM_CLK_1P2MHZ),1 (NPM_CLK_19P2MHZ)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   NP_CP_CTRL                               = " "0 (NPM_CLK_DIV_1),1 (NPM_CLK_DIV_2),2 (NPM_CLK_DIV_4),3 (NPM_CLK_DIV_8)"
    tree.end
    tree "SMBBP_BAT_IF_BFCP_CLK_CTRL2"
      sgroup "SMBBP_BAT_IF_BFCP_CLK_CTRL2 (at 0x1295)"
        set &access:&cmd_addr %l (0x8012950|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12950|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LP_CLK_SEL                               = " "0 (LPM_CLK_1P2MHZ),1 (LPM_CLK_32KHZ)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INTEG_CLK_CTRL                           = " "0 (CLK_100KHZ),1 (CLK_50KHZ),2 (CLK_25KHZ),3 (CLK_12P5KHZ)"
    tree.end
    tree "SMBBP_BAT_IF_NFC_OFFMODE"
      sgroup "SMBBP_BAT_IF_NFC_OFFMODE (at 0x1296)"
        set &access:&cmd_addr %l (0x8012960|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12960|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (N_BFET_OFF_DURING_PMIC_OFF),1 (N_BFET_ON_DURING_PMIC_OFF)"
    tree.end
    tree "SMBBP_BAT_IF_SEC_ACCESS"
      sgroup "SMBBP_BAT_IF_SEC_ACCESS (at 0x12d0)"
        set &access:&cmd_addr %l (0x8012d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBBP_BAT_IF_PERPH_RESET_CTL2"
      sgroup "SMBBP_BAT_IF_PERPH_RESET_CTL2 (at 0x12d9)"
        set &access:&cmd_addr %l (0x8012d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_BAT_IF_PERPH_RESET_CTL3"
      sgroup "SMBBP_BAT_IF_PERPH_RESET_CTL3 (at 0x12da)"
        set &access:&cmd_addr %l (0x8012da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBBP_BAT_IF_PERPH_RESET_CTL4"
      sgroup "SMBBP_BAT_IF_PERPH_RESET_CTL4 (at 0x12db)"
        set &access:&cmd_addr %l (0x8012db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_BAT_IF_PERPH_RESET_CTL5"
      sgroup "SMBBP_BAT_IF_PERPH_RESET_CTL5 (at 0x12dc)"
        set &access:&cmd_addr %l (0x8012dc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12dc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_BAT_IF_PERPH_RESET_CTL6"
      sgroup "SMBBP_BAT_IF_PERPH_RESET_CTL6 (at 0x12dd)"
        set &access:&cmd_addr %l (0x8012dd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12dd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_BAT_IF_BAT_IF_SPARE"
      sgroup "SMBBP_BAT_IF_BAT_IF_SPARE (at 0x12df)"
        set &access:&cmd_addr %l (0x8012df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBBP_BAT_IF_INT_TEST1"
      sgroup "SMBBP_BAT_IF_INT_TEST1 (at 0x12e0)"
        set &access:&cmd_addr %l (0x8012e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "SMBBP_BAT_IF_INT_TEST_VAL"
      sgroup "SMBBP_BAT_IF_INT_TEST_VAL (at 0x12e1)"
        set &access:&cmd_addr %l (0x8012e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_ON_INT_VAL                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_FET_ON_INT_VAL                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_TEMP_OK_INT_VAL                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BATT_PRES_INT_VAL                        = " "0, 1"
    tree.end
    tree "SMBBP_BAT_IF_BAT_IF_TEST1"
      sgroup "SMBBP_BAT_IF_BAT_IF_TEST1 (at 0x12e2)"
        set &access:&cmd_addr %l (0x8012e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BPD_OFFMODE_SPEEDUP                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   ATEST                                    = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   DTEST                                    = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RDS_TEST                                 = " "0 (RDS_TEST_DISABLED_FULL_BATFET),1 (RDS_TEST_ENABLED_1_10TH_BATFET)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HP_CLK_TM                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VCP_OFF_BLANK_EN                         = " "0, 1"
    tree.end
    tree "SMBBP_BAT_IF_BAT_IF_TEST2"
      sgroup "SMBBP_BAT_IF_BAT_IF_TEST2 (at 0x12e3)"
        set &access:&cmd_addr %l (0x8012e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   FORCE_BAT_FET                            = " "0 (NO_FORCE_FSM_CONTROL),1 (reserved),2 (FORCE_OFF),3 (FORCE_ON)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   FORCE_PW_EN                              = " "0 (NO_FORCE_FSM_CONTROL),1 (reserved),2 (FORCE_P_BFET_OFF),3 (FORCE_P_BFET_ON)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   FORCE_CP_PM                              = " "0 (NO_FORCE_FSM_CONTROL),1 (FORCE_LPM),2 (FORCE_NPM),3 (FORCE_HPM)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FORCE_CP_EN                              = " "0 (NO_FORCE_FSM_CONTROL),1 (reserved),2 (FORCE_OFF),3 (FORCE_ON)"
    tree.end
    tree "SMBBP_BAT_IF_BAT_IF_TEST3"
      sgroup "SMBBP_BAT_IF_BAT_IF_TEST3 (at 0x12e4)"
        set &access:&cmd_addr %l (0x8012e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   FORCE_VCP_EN                             = " "0 (NO_FORCE_FSM_CONTROL),1 (reserved),2 (FORCE_OFF),3 (FORCE_ON)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   FORCE_VCP_DET                            = " "0 (NO_FORCE_FSM_CONTROL),1 (reserved),2 (FORCE_LOW),3 (FORCE_HIGH)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCP_DET_EN_MASK                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VPH_PWR_OK_FORCE                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BMS_SIGN_VCP_TERM_EN                     = " "0, 1"
    tree.end
    tree "SMBBP_BAT_IF_COMP_OVR0"
      sgroup "SMBBP_BAT_IF_COMP_OVR0 (at 0x12e5)"
        set &access:&cmd_addr %l (0x8012e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   VCP_DET                                  = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   BAT_TOO_COLD                             = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   BAT_TOO_HOT                              = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BAT_GONE                                 = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "SMBBP_BAT_IF_COMP_OVR1"
      sgroup "SMBBP_BAT_IF_COMP_OVR1 (at 0x12e6)"
        set &access:&cmd_addr %l (0x8012e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   BPD_OFFMODE_COMP                         = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VREG_XOADC                               = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "SMBBP_BAT_IF_BAT_IF_COMP_OVR_GLOBAL"
      sgroup "SMBBP_BAT_IF_BAT_IF_COMP_OVR_GLOBAL (at 0x12e7)"
        set &access:&cmd_addr %l (0x8012e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BYP_EN                                   = " "0 (GLOBAL_BYPASS_DISABLED),1 (ALL_COMPARATORS_BYPASSED)"
    tree.end
    tree "SMBBP_BAT_IF_BF_TRIM_NUM"
      sgroup "SMBBP_BAT_IF_BF_TRIM_NUM (at 0x12f0)"
        set &access:&cmd_addr %l (0x8012f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "SMBBP_BAT_IF_TRIM_CNST_RDS"
      sgroup "SMBBP_BAT_IF_TRIM_CNST_RDS (at 0x12f1)"
        set &access:&cmd_addr %l (0x8012f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   CNST_RDS_TRIM                            = "
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SEG_CTRL_TRIM                            = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "SMBBP_BOOST"
  tree "SMBBP_BOOST"
    tree "SMBBP_BOOST_PERPH_TYPE"
      sgroup "SMBBP_BOOST_PERPH_TYPE (at 0x1504)"
        set &access:&cmd_addr %l (0x8015040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBBP_BOOST_PERPH_SUBTYPE"
      sgroup "SMBBP_BOOST_PERPH_SUBTYPE (at 0x1505)"
        set &access:&cmd_addr %l (0x8015050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBBP_BOOST_STATUS"
      sgroup "SMBBP_BOOST_STATUS (at 0x1508)"
        set &access:&cmd_addr %l (0x8015080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BOOST_PWR_OK                             = " "0 (BOOST_PWR_NOK),1 (BOOST_PWR_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ISL_DETECTED                             = " "0 (BOOST_VSET_LL_UL_NOK),1 (BOOST_VSET_LL_UL_OK)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (BOOST_VSET_UL_NOK),1 (BOOST_VSET_UL_OK)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (BOOST_VSET_LL_NOK),1 (BOOST_VSET_LL_OK)"
    tree.end
    tree "SMBBP_BOOST_INT_RT_STS"
      sgroup "SMBBP_BOOST_INT_RT_STS (at 0x1510)"
        set &access:&cmd_addr %l (0x8015100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_OK_RT_STS                      = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
    tree.end
    tree "SMBBP_BOOST_INT_SET_TYPE"
      sgroup "SMBBP_BOOST_INT_SET_TYPE (at 0x1511)"
        set &access:&cmd_addr %l (0x8015110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_OK_TYPE                        = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "SMBBP_BOOST_INT_POLARITY_HIGH"
      sgroup "SMBBP_BOOST_INT_POLARITY_HIGH (at 0x1512)"
        set &access:&cmd_addr %l (0x8015120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_OK_HIGH                        = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_BOOST_INT_POLARITY_LOW"
      sgroup "SMBBP_BOOST_INT_POLARITY_LOW (at 0x1513)"
        set &access:&cmd_addr %l (0x8015130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_OK_LOW                         = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_BOOST_INT_LATCHED_CLR"
      sgroup "SMBBP_BOOST_INT_LATCHED_CLR (at 0x1514)"
        set &access:&cmd_addr %l (0x8015140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_OK_LATCHED_CLR                 = " "0, 1"
    tree.end
    tree "SMBBP_BOOST_INT_EN_SET"
      sgroup "SMBBP_BOOST_INT_EN_SET (at 0x1515)"
        set &access:&cmd_addr %l (0x8015150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_OK_EN_SET                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_BOOST_INT_EN_CLR"
      sgroup "SMBBP_BOOST_INT_EN_CLR (at 0x1516)"
        set &access:&cmd_addr %l (0x8015160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_OK_EN_CLR                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_BOOST_INT_LATCHED_STS"
      sgroup "SMBBP_BOOST_INT_LATCHED_STS (at 0x1518)"
        set &access:&cmd_addr %l (0x8015180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_OK_LATCHED_STS                 = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
    tree.end
    tree "SMBBP_BOOST_INT_PENDING_STS"
      sgroup "SMBBP_BOOST_INT_PENDING_STS (at 0x1519)"
        set &access:&cmd_addr %l (0x8015190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_OK_PENDING_STS                 = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
    tree.end
    tree "SMBBP_BOOST_INT_MID_SEL"
      sgroup "SMBBP_BOOST_INT_MID_SEL (at 0x151a)"
        set &access:&cmd_addr %l (0x80151a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x151a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "SMBBP_BOOST_INT_PRIORITY"
      sgroup "SMBBP_BOOST_INT_PRIORITY (at 0x151b)"
        set &access:&cmd_addr %l (0x80151b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x151b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "SMBBP_BOOST_BOOST_VSET"
      sgroup "SMBBP_BOOST_BOOST_VSET (at 0x1541)"
        set &access:&cmd_addr %l (0x8015410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   BOOST_VSET                               = "
    tree.end
    tree "SMBBP_BOOST_ADAPTIVE_BOOST_MODE"
      sgroup "SMBBP_BOOST_ADAPTIVE_BOOST_MODE (at 0x1544)"
        set &access:&cmd_addr %l (0x8015440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADAPTIVE_BOOST_MODE_EN                   = " "0 (BOOST_ADAPTIVE_MODE_DISABLED),1 (BOOST_ADAPTIVE_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_ABM                            = " "0 (IGNORE_HW_ABM),1 (FOLLOW_HW_ABM)"
    tree.end
    tree "SMBBP_BOOST_BOOST_PASS_MODE"
      sgroup "SMBBP_BOOST_BOOST_PASS_MODE (at 0x1545)"
        set &access:&cmd_addr %l (0x8015450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_BOOST_PASS_MODE                       = " "0 (BOOST_PASS_MODE_DISABLED),1 (BOOST_PASS_MODE_ENABLED)"
    tree.end
    tree "SMBBP_BOOST_ENABLE_CONTROL"
      sgroup "SMBBP_BOOST_ENABLE_CONTROL (at 0x1546)"
        set &access:&cmd_addr %l (0x8015460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BOOST_PWR_EN                             = " "0 (BOOST_NOT_FORCED_ON),1 (BOOST_FORCED_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN                             = " "0 (IGNORE_HW_EN),1 (FOLLOW_HW_EN)"
    tree.end
    tree "SMBBP_BOOST_BOOST_SOFT_START"
      sgroup "SMBBP_BOOST_BOOST_SOFT_START (at 0x154c)"
        set &access:&cmd_addr %l (0x80154c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x154c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_BOOST_SOFT_START                      = " "0 (BOOST_SOFT_START_DISABLED),1 (BOOST_SOFT_START_ENABLED)"
    tree.end
    tree "SMBBP_BOOST_AUTO_BOOST_MODE"
      sgroup "SMBBP_BOOST_AUTO_BOOST_MODE (at 0x154d)"
        set &access:&cmd_addr %l (0x80154d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x154d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (BOOST_AUTO_MODE_DISABLED),1 (BOOST_AUTO_MODE_ENABLED)"
    tree.end
    tree "SMBBP_BOOST_BOOST_VSET_UL"
      sgroup "SMBBP_BOOST_BOOST_VSET_UL (at 0x1569)"
        set &access:&cmd_addr %l (0x8015690|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15690|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   BOOST_VSET_UL                            = "
    tree.end
    tree "SMBBP_BOOST_BOOST_VSET_LL"
      sgroup "SMBBP_BOOST_BOOST_VSET_LL (at 0x156b)"
        set &access:&cmd_addr %l (0x80156b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x156b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   BOOST_VSET_LL                            = "
    tree.end
    tree "SMBBP_BOOST_BOOST_OVP_SEL"
      sgroup "SMBBP_BOOST_BOOST_OVP_SEL (at 0x1570)"
        set &access:&cmd_addr %l (0x8015700|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15700|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   BOOST_OVP_SEL                            = "
    tree.end
    tree "SMBBP_BOOST_BOOST_GM_CTRL"
      sgroup "SMBBP_BOOST_BOOST_GM_CTRL (at 0x1572)"
        set &access:&cmd_addr %l (0x8015720|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15720|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   BOOST_GM_CTRL                            = "
    tree.end
    tree "SMBBP_BOOST_BOOST_RZERO_CTRL"
      sgroup "SMBBP_BOOST_BOOST_RZERO_CTRL (at 0x1573)"
        set &access:&cmd_addr %l (0x8015730|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15730|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   BOOST_RZERO_CTRL                         = "
    tree.end
    tree "SMBBP_BOOST_BOOST_CZERO_CTRL"
      sgroup "SMBBP_BOOST_BOOST_CZERO_CTRL (at 0x1574)"
        set &access:&cmd_addr %l (0x8015740|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15740|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BOOST_CZERO_CTRL                         = " "0 (C1_50PF),1 (C1_60PF),2 (C1_70PF),3 (C1_80PF)"
    tree.end
    tree "SMBBP_BOOST_BOOST_HIPOLE_CTRL"
      sgroup "SMBBP_BOOST_BOOST_HIPOLE_CTRL (at 0x1575)"
        set &access:&cmd_addr %l (0x8015750|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15750|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BOOST_HIPOLE_CTRL                        = " "0 (C1_0PF),1 (C1_1PF),2 (C1_2PF),3 (C1_3PF)"
    tree.end
    tree "SMBBP_BOOST_BOOST_MAX_DUTY"
      sgroup "SMBBP_BOOST_BOOST_MAX_DUTY (at 0x1576)"
        set &access:&cmd_addr %l (0x8015760|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15760|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BOOST_MAX_DUTY                           = " "0 (DMAX_92P_3P2MHZ_25NS),1 (DMAX_84P_3P2MHZ_50NS),2 (DMAX_68P_3P2MHZ_100NS),3 (DMAX_52P_3P2MHZ_150NS)"
    tree.end
    tree "SMBBP_BOOST_BOOST_SLOPE_COMP"
      sgroup "SMBBP_BOOST_BOOST_SLOPE_COMP (at 0x1577)"
        set &access:&cmd_addr %l (0x8015770|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15770|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BOOST_SLOPE_COMP                         = " "0 (SLOPE_COMP_320KV_S),1 (SLOPE_COMP_640KV_S),2 (SLOPE_COMP_960KV_S),3 (SLOPE_COMP_1300KV_S)"
    tree.end
    tree "SMBBP_BOOST_BOOST_ILIM"
      sgroup "SMBBP_BOOST_BOOST_ILIM (at 0x1578)"
        set &access:&cmd_addr %l (0x8015780|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15780|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   BOOST_ILIM                               = " "0 (INLIMIT_4P5A),1 (INLIMIT_4P0A),2 (INLIMIT_3P5A),3 (INLIMIT_3P0A),4 (INLIMIT_2P5A),5 (INLIMIT_2P0A),6 (INLIMIT_1P5A),7 (INLIMIT_1P0A)"
    tree.end
    tree "SMBBP_BOOST_IPZ_EN"
      sgroup "SMBBP_BOOST_IPZ_EN (at 0x1579)"
        set &access:&cmd_addr %l (0x8015790|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15790|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_IPZ_COMP                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "SMBBP_BOOST_SEC_ACCESS"
      sgroup "SMBBP_BOOST_SEC_ACCESS (at 0x15d0)"
        set &access:&cmd_addr %l (0x8015d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBBP_BOOST_PERPH_RESET_CTL2"
      sgroup "SMBBP_BOOST_PERPH_RESET_CTL2 (at 0x15d9)"
        set &access:&cmd_addr %l (0x8015d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_BOOST_PERPH_RESET_CTL3"
      sgroup "SMBBP_BOOST_PERPH_RESET_CTL3 (at 0x15da)"
        set &access:&cmd_addr %l (0x8015da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBBP_BOOST_PERPH_RESET_CTL4"
      sgroup "SMBBP_BOOST_PERPH_RESET_CTL4 (at 0x15db)"
        set &access:&cmd_addr %l (0x8015db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_BOOST_BOOST_SPARE"
      sgroup "SMBBP_BOOST_BOOST_SPARE (at 0x15df)"
        set &access:&cmd_addr %l (0x8015df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBBP_BOOST_INT_TEST1"
      sgroup "SMBBP_BOOST_INT_TEST1 (at 0x15e0)"
        set &access:&cmd_addr %l (0x8015e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "SMBBP_BOOST_INT_TEST_VAL"
      sgroup "SMBBP_BOOST_INT_TEST_VAL (at 0x15e1)"
        set &access:&cmd_addr %l (0x8015e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOOST_PWR_TEST_VAL                       = " "0, 1"
    tree.end
    tree "SMBBP_BOOST_DTEST"
      sgroup "SMBBP_BOOST_DTEST (at 0x15e2)"
        set &access:&cmd_addr %l (0x8015e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST1_OUT_SEL                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST2_OUT_SEL                           = " "0, 1"
    tree.end
    tree "SMBBP_BOOST_ATEST"
      sgroup "SMBBP_BOOST_ATEST (at 0x15e3)"
        set &access:&cmd_addr %l (0x8015e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SEL                                      = " "0, 1, 2, 3"
    tree.end
    tree "SMBBP_BOOST_BOOST_COMP_OVR_GLOBAL"
      sgroup "SMBBP_BOOST_BOOST_COMP_OVR_GLOBAL (at 0x15e4)"
        set &access:&cmd_addr %l (0x8015e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BYP_EN                                   = " "0 (GLOBAL_BYPASS_DISABLED),1 (ALL_COMPARATORS_BYPASSED)"
    tree.end
    tree "SMBBP_BOOST_COMPARATOR_OVRIDE_1"
      sgroup "SMBBP_BOOST_COMPARATOR_OVRIDE_1 (at 0x15e5)"
        set &access:&cmd_addr %l (0x8015e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   BST_PWR_OK_COMP                          = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BST_OVP_COMP                             = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
  tree.end
tree.end
tree "SMBBP_BUCK"
  tree "SMBBP_BUCK"
    tree "SMBBP_BUCK_PERPH_TYPE"
      sgroup "SMBBP_BUCK_PERPH_TYPE (at 0x1104)"
        set &access:&cmd_addr %l (0x8011040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBBP_BUCK_PERPH_SUBTYPE"
      sgroup "SMBBP_BUCK_PERPH_SUBTYPE (at 0x1105)"
        set &access:&cmd_addr %l (0x8011050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBBP_BUCK_BUCK_OK"
      sgroup "SMBBP_BUCK_BUCK_OK (at 0x1108)"
        set &access:&cmd_addr %l (0x8011080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STS                                      = " "0 (BUCK_VREG_NOK),1 (BUCK_VREG_OK)"
    tree.end
    tree "SMBBP_BUCK_INT_RT_STS"
      sgroup "SMBBP_BUCK_INT_RT_STS (at 0x1110)"
        set &access:&cmd_addr %l (0x8011100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_RT_STS                          = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_RT_STS                         = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_RT_STS                         = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_RT_STS                         = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_RT_STS                          = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_RT_STS                           = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_RT_STS                           = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
    tree.end
    tree "SMBBP_BUCK_INT_SET_TYPE"
      sgroup "SMBBP_BUCK_INT_SET_TYPE (at 0x1111)"
        set &access:&cmd_addr %l (0x8011110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_POLARITY_SET_TYPE               = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_POLARITY_SET_TYPE              = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_POLARITY_SET_TYPE              = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_POLARITY_SET_TYPE              = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_POLARITY_SET_TYPE               = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_POLARITY_SET_TYPE                = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_POLARITY_SET_TYPE                = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "SMBBP_BUCK_INT_POLARITY_HIGH"
      sgroup "SMBBP_BUCK_INT_POLARITY_HIGH (at 0x1112)"
        set &access:&cmd_addr %l (0x8011120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_POLARITY_HIGH                   = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_POLARITY_HIGH                  = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_POLARITY_HIGH                  = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_POLARITY_HIGH                  = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_POLARITY_HIGH                   = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_POLARITY_HIGH                    = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_POLARITY_HIGH                    = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_BUCK_INT_POLARITY_LOW"
      sgroup "SMBBP_BUCK_INT_POLARITY_LOW (at 0x1113)"
        set &access:&cmd_addr %l (0x8011130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_POLARITY_LOW                    = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_POLARITY_LOW                   = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_POLARITY_LOW                   = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_POLARITY_LOW                   = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_POLARITY_LOW                    = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_POLARITY_LOW                     = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_POLARITY_LOW                     = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_BUCK_INT_LATCHED_CLR"
      sgroup "SMBBP_BUCK_INT_LATCHED_CLR (at 0x1114)"
        set &access:&cmd_addr %l (0x8011140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_LATCHED_CLR                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "SMBBP_BUCK_INT_EN_SET"
      sgroup "SMBBP_BUCK_INT_EN_SET (at 0x1115)"
        set &access:&cmd_addr %l (0x8011150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_BUCK_INT_EN_CLR"
      sgroup "SMBBP_BUCK_INT_EN_CLR (at 0x1116)"
        set &access:&cmd_addr %l (0x8011160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_BUCK_INT_LATCHED_STS"
      sgroup "SMBBP_BUCK_INT_LATCHED_STS (at 0x1118)"
        set &access:&cmd_addr %l (0x8011180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
    tree.end
    tree "SMBBP_BUCK_INT_PENDING_STS"
      sgroup "SMBBP_BUCK_INT_PENDING_STS (at 0x1119)"
        set &access:&cmd_addr %l (0x8011190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_STS                             = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_STS                            = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_STS                            = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_STS                            = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_STS                             = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_STS                              = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_STS                              = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
    tree.end
    tree "SMBBP_BUCK_INT_MID_SEL"
      sgroup "SMBBP_BUCK_INT_MID_SEL (at 0x111a)"
        set &access:&cmd_addr %l (0x80111a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x111a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "SMBBP_BUCK_INT_PRIORITY"
      sgroup "SMBBP_BUCK_INT_PRIORITY (at 0x111b)"
        set &access:&cmd_addr %l (0x80111b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x111b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "SMBBP_BUCK_ENABLE_CONTROL"
      sgroup "SMBBP_BUCK_ENABLE_CONTROL (at 0x1146)"
        set &access:&cmd_addr %l (0x8011460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BUCK_EN                                  = " "0 (BUCK_NOT_FORCED_ON),1 (BUCK_FORCED_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN                             = " "0 (IGNORE_HW_EN),1 (FOLLOW_HW_EN)"
    tree.end
    tree "SMBBP_BUCK_VDD_LOOP_GM_CTRL"
      sgroup "SMBBP_BUCK_VDD_LOOP_GM_CTRL (at 0x1160)"
        set &access:&cmd_addr %l (0x8011600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VDD_LOOP_GM_CTRL                         = "
    tree.end
    tree "SMBBP_BUCK_VCHG_LOOP_GM_CTRL"
      sgroup "SMBBP_BUCK_VCHG_LOOP_GM_CTRL (at 0x1161)"
        set &access:&cmd_addr %l (0x8011610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VCHG_LOOP_GM_CTRL                        = "
    tree.end
    tree "SMBBP_BUCK_IBAT_LOOP_GM_CTRL"
      sgroup "SMBBP_BUCK_IBAT_LOOP_GM_CTRL (at 0x1162)"
        set &access:&cmd_addr %l (0x8011620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   IBAT_LOOP_GM_CTRL                        = "
    tree.end
    tree "SMBBP_BUCK_ICHG_LOOP_GM_CTRL"
      sgroup "SMBBP_BUCK_ICHG_LOOP_GM_CTRL (at 0x1163)"
        set &access:&cmd_addr %l (0x8011630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ICHG_LOOP_GM_CTRL                        = "
    tree.end
    tree "SMBBP_BUCK_VDD_LOOP_COMP_RES"
      sgroup "SMBBP_BUCK_VDD_LOOP_COMP_RES (at 0x1164)"
        set &access:&cmd_addr %l (0x8011640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VDD_LOOP_COMP_RES                        = "
    tree.end
    tree "SMBBP_BUCK_VCHG_LOOP_COMP_RES"
      sgroup "SMBBP_BUCK_VCHG_LOOP_COMP_RES (at 0x1165)"
        set &access:&cmd_addr %l (0x8011650|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11650|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VCHG_LOOP_COMP_RES                       = "
    tree.end
    tree "SMBBP_BUCK_SAWTOOH_SLOPE_GAIN"
      sgroup "SMBBP_BUCK_SAWTOOH_SLOPE_GAIN (at 0x1168)"
        set &access:&cmd_addr %l (0x8011680|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11680|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SAWTOOH_SLOPE_GAIN                       = " "0 (SLOPE_GAIN_320KV_S),1 (SLOPE_GAIN_640KV_S),2 (SLOPE_GAIN_960KV_S),3 (SLOPE_GAIN_1300KV_S)"
    tree.end
    tree "SMBBP_BUCK_PULSE_SKIPPING_COMP_EN"
      sgroup "SMBBP_BUCK_PULSE_SKIPPING_COMP_EN (at 0x116a)"
        set &access:&cmd_addr %l (0x80116a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x116a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PULSE_SKIPPING_COMP_EN                   = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "SMBBP_BUCK_ZERO_COMPCAP_CTRL"
      sgroup "SMBBP_BUCK_ZERO_COMPCAP_CTRL (at 0x116b)"
        set &access:&cmd_addr %l (0x80116b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x116b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   ZERO_COMP_CAP_VCHG                       = " "0 (C1_50PF),1 (C1_60PF),2 (C1_70PF),3 (C1_80PF)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZERO_COMP_CAP_VDD                        = " "0 (C1_50PF),1 (C1_60PF),2 (C1_70PF),3 (C1_80PF)"
    tree.end
    tree "SMBBP_BUCK_HIGH_POLE_COMPCAP_CTRL"
      sgroup "SMBBP_BUCK_HIGH_POLE_COMPCAP_CTRL (at 0x116c)"
        set &access:&cmd_addr %l (0x80116c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x116c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   HIGH_POLE_COMPCAP_VCHG                   = " "0 (C1_0PF),1 (C1_1PF),2 (C1_2PF),3 (C1_3PF)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   HIGH_POLE_COMPCAP_VDD                    = " "0 (C1_0PF),1 (C1_1PF),2 (C1_2PF),3 (C1_3PF)"
    tree.end
    tree "SMBBP_BUCK_ILIMIT_CTRL"
      sgroup "SMBBP_BUCK_ILIMIT_CTRL (at 0x116e)"
        set &access:&cmd_addr %l (0x80116e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x116e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   IPLIMIT_EN                               = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   IPLIMIT_SEL                              = " "0 (IPLIMIT_4P5A),1 (IPLIMIT_4P0A),2 (IPLIMIT_3P5A),3 (IPLIMIT_3P0A),4 (IPLIMIT_2P5A),5 (IPLIMIT_2P0A),6 (IPLIMIT_1P5A),7 (IPLIMIT_1P0A)"
    tree.end
    tree "SMBBP_BUCK_MIN_PON"
      sgroup "SMBBP_BUCK_MIN_PON (at 0x1171)"
        set &access:&cmd_addr %l (0x8011710|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11710|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SEL                                      = " "0 (MIN_PON_25NS),1 (MIN_PON_37P5NS),2 (MIN_PON_50NS),3 (MIN_PON_100NS)"
    tree.end
    tree "SMBBP_BUCK_SLEW_RATE_CONTROL"
      sgroup "SMBBP_BUCK_SLEW_RATE_CONTROL (at 0x1172)"
        set &access:&cmd_addr %l (0x8011720|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11720|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PDRV                                     = " "0 (SLEW_RATE_20NS),1 (SLEW_RATE_15NS),2 (SLEW_RATE_10NS),3 (SLEW_RATE_5NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   NDRV                                     = " "0 (SLEW_RATE_20NS),1 (SLEW_RATE_15NS),2 (SLEW_RATE_10NS),3 (SLEW_RATE_5NS)"
    tree.end
    tree "SMBBP_BUCK_PSTG_CONTROL"
      sgroup "SMBBP_BUCK_PSTG_CONTROL (at 0x1173)"
        set &access:&cmd_addr %l (0x8011730|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11730|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_BUCK_BCK_VBAT_REG_MODE"
      sgroup "SMBBP_BUCK_BCK_VBAT_REG_MODE (at 0x1174)"
        set &access:&cmd_addr %l (0x8011740|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11740|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEL                                      = " "0 (BUCK_REGULATE_VPH_PWR_SNS),1 (BUCK_REGULATE_VBAT_SNS)"
    tree.end
    tree "SMBBP_BUCK_VCHG_DISCHG"
      sgroup "SMBBP_BUCK_VCHG_DISCHG (at 0x1176)"
        set &access:&cmd_addr %l (0x8011760|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11760|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN                                       = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "SMBBP_BUCK_VCHG_OV"
      sgroup "SMBBP_BUCK_VCHG_OV (at 0x1177)"
        set &access:&cmd_addr %l (0x8011770|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11770|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_BUCK_SWITCHOVER"
      sgroup "SMBBP_BUCK_SWITCHOVER (at 0x1178)"
        set &access:&cmd_addr %l (0x8011780|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11780|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   TD1_SEL                                  = " "0 (PM8026_ONLY_T_0US),1 (PM8026_ONLY_T_30US),2 (PM8026_ONLY_T_60US),3 (PM8026_ONLY_T_120US)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   TD2_SEL                                  = " "0 (PM8026_ONLY_T_0US),1 (PM8026_ONLY_T_30US),2 (PM8026_ONLY_T_60US),3 (PM8026_ONLY_T_120US)"
    tree.end
    tree "SMBBP_BUCK_SEC_ACCESS"
      sgroup "SMBBP_BUCK_SEC_ACCESS (at 0x11d0)"
        set &access:&cmd_addr %l (0x8011d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBBP_BUCK_PERPH_RESET_CTL2"
      sgroup "SMBBP_BUCK_PERPH_RESET_CTL2 (at 0x11d9)"
        set &access:&cmd_addr %l (0x8011d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_BUCK_PERPH_RESET_CTL3"
      sgroup "SMBBP_BUCK_PERPH_RESET_CTL3 (at 0x11da)"
        set &access:&cmd_addr %l (0x8011da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBBP_BUCK_PERPH_RESET_CTL4"
      sgroup "SMBBP_BUCK_PERPH_RESET_CTL4 (at 0x11db)"
        set &access:&cmd_addr %l (0x8011db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_BUCK_BUCK_SPARE"
      sgroup "SMBBP_BUCK_BUCK_SPARE (at 0x11df)"
        set &access:&cmd_addr %l (0x8011df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBBP_BUCK_INT_TEST1"
      sgroup "SMBBP_BUCK_INT_TEST1 (at 0x11e0)"
        set &access:&cmd_addr %l (0x8011e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "SMBBP_BUCK_INT_TEST_VAL"
      sgroup "SMBBP_BUCK_INT_TEST_VAL (at 0x11e1)"
        set &access:&cmd_addr %l (0x8011e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDD_LOOP_INT_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_LOOP_INT_VAL                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ICHG_LOOP_INT_VAL                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VCHG_LOOP_INT_VAL                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERTEMP_INT_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_OV_INT_VAL                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_OV_INT_VAL                          = " "0, 1"
    tree.end
    tree "SMBBP_BUCK_TRIM_CAL_TEST"
      sgroup "SMBBP_BUCK_TRIM_CAL_TEST (at 0x11e2)"
        set &access:&cmd_addr %l (0x8011e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ICHG_EA_TRIM_EN                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ICHG_EA_TRIM_CAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VCHG_EA_TRIM_EN                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VCHG_EA_TRIM_CAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   IBAT_EA_TRIM_EN                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   IBAT_EA_TRIM_CAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VDD_EA_TRIM_EN                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VDD_EA_TRIM_CAL                          = " "0, 1"
    tree.end
    tree "SMBBP_BUCK_TRIM_CAL_TEST2"
      sgroup "SMBBP_BUCK_TRIM_CAL_TEST2 (at 0x11e3)"
        set &access:&cmd_addr %l (0x8011e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IBAT_DAC_TRIM_CAL                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   IBAT_SNS_TRIM_CAL                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   REFBUF_OPAMP_TRIM_EN                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   REFBUF_OPAMP_TRIM_CAL                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VDD_DETECTOR_TRIM_EN                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VDD_DETECTOR_TRIM_CAL                    = " "0, 1"
    tree.end
    tree "SMBBP_BUCK_TEST_ATEST"
      sgroup "SMBBP_BUCK_TEST_ATEST (at 0x11e4)"
        set &access:&cmd_addr %l (0x8011e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST_SEL                                = "
    tree.end
    tree "SMBBP_BUCK_TEST_EN_SMBC_LOOP"
      sgroup "SMBBP_BUCK_TEST_EN_SMBC_LOOP (at 0x11e5)"
        set &access:&cmd_addr %l (0x8011e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SMBC_BUCK_ENABLE                         = " "0 (SMBC_BUCK_CTRL_NOT_FORCED_ON),1 (SMBC_BUCK_CTRL_FORCED_ON)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   IBAT_LOOP_DISABLE                        = " "0 (IBAT_LOOP_ENABLED),1 (IBAT_LOOP_DISABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ICHG_LOOP_DISABLE                        = " "0 (ICHG_LOOP_ENABLED),1 (ICHG_LOOP_DISABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VCHG_LOOP_DISABLE                        = " "0 (VCHG_LOOP_ENABLED),1 (VCHG_LOOP_DISABLED)"
    tree.end
    tree "SMBBP_BUCK_TEST_SMBC_MODES"
      sgroup "SMBBP_BUCK_TEST_SMBC_MODES (at 0x11e6)"
        set &access:&cmd_addr %l (0x8011e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   BUCK_MAX_DUTY                            = " "0 (DMAX_100P_3P2MHZ_0NS),1 (DMAX_92P_3P2MHZ_25NS),2 (DMAX_84P_3P2MHZ_50NS),3 (DMAX_68P_3P2MHZ_100NS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SLOPE_COMP_DIS                           = " "0 (SLOPE_COMP_ENABLED),1 (SLOPE_COMP_DISABLED)"
    tree.end
    tree "SMBBP_BUCK_TEMP_TEST"
      sgroup "SMBBP_BUCK_TEMP_TEST (at 0x11e7)"
        set &access:&cmd_addr %l (0x8011e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TL_DIS_MODE                              = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TEMP_TEST                                = "
    tree.end
    tree "SMBBP_BUCK_DTEST_CTRL"
      sgroup "SMBBP_BUCK_DTEST_CTRL (at 0x11e8)"
        set &access:&cmd_addr %l (0x8011e80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_BUCK_VPH_OK_THR_TST"
      sgroup "SMBBP_BUCK_VPH_OK_THR_TST (at 0x11e9)"
        set &access:&cmd_addr %l (0x8011e90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VPH_OK_THR                               = " "0 (INVERT_COMP_OUTPUT),1 (OVERRIDE_TO_0),2 (OVERRIDE_TO_1),3 (reserved)"
    tree.end
    tree "SMBBP_BUCK_BUCK_COMP_OVR_GLOBAL"
      sgroup "SMBBP_BUCK_BUCK_COMP_OVR_GLOBAL (at 0x11ea)"
        set &access:&cmd_addr %l (0x8011ea0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ea0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BYP_EN                                   = " "0 (GLOBAL_BYPASS_DISABLED),1 (ALL_COMPARATORS_BYPASSED)"
    tree.end
    tree "SMBBP_BUCK_COMPARATOR_OVRIDE_1"
      sgroup "SMBBP_BUCK_COMPARATOR_OVRIDE_1 (at 0x11eb)"
        set &access:&cmd_addr %l (0x8011eb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11eb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   ICHG_END_CMP_OVRD                        = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   BUCK_TEMP2HI_CMP_OVRD                    = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   BUCK_IUSB_LOOP_CMP_OVRD                  = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BUCK_IBAT_LOOP_CMP_OVRD                  = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "SMBBP_BUCK_COMPARATOR_OVRIDE_2"
      sgroup "SMBBP_BUCK_COMPARATOR_OVRIDE_2 (at 0x11ec)"
        set &access:&cmd_addr %l (0x8011ec0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ec0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   VREG_OV_CMP_OVRD                         = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   BUCK_VIN_LOOP_CMP_OVRD                   = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   BUCK_VDD_LOOP_CMP_OVRD                   = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BUCK_VREG_OK_CMP_OVRD                    = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "SMBBP_BUCK_COMPARATOR_OVRIDE_3"
      sgroup "SMBBP_BUCK_COMPARATOR_OVRIDE_3 (at 0x11ed)"
        set &access:&cmd_addr %l (0x8011ed0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ed0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   IOVP_LO_CMP_OVRD                         = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ICHG_END_VCP_CMP_OVRD                    = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VPH_OK_CMP_OVRD                          = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "SMBBP_BUCK_TEST_DRIVER_OVERLAP"
      sgroup "SMBBP_BUCK_TEST_DRIVER_OVERLAP (at 0x11ee)"
        set &access:&cmd_addr %l (0x8011ee0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ee0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_INZERO_COMP2                          = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_INZERO_COMP                           = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "SMBBP_BUCK_ASYNC_FSM_TST"
      sgroup "SMBBP_BUCK_ASYNC_FSM_TST (at 0x11ef)"
        set &access:&cmd_addr %l (0x8011ef0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ef0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST                                    = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TEST_SM_TM                               = "
    tree.end
    tree "SMBBP_BUCK_BUCK_TRIM_NUM"
      sgroup "SMBBP_BUCK_BUCK_TRIM_NUM (at 0x11f0)"
        set &access:&cmd_addr %l (0x8011f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "SMBBP_BUCK_BUCK_CTRL_TRIM1"
      sgroup "SMBBP_BUCK_BUCK_CTRL_TRIM1 (at 0x11f1)"
        set &access:&cmd_addr %l (0x8011f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   VDD_EA_OFFSET_TRIM                       = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VCHG_EA_OFFSET_TRIM                      = "
    tree.end
    tree "SMBBP_BUCK_BUCK_CTRL_TRIM2"
      sgroup "SMBBP_BUCK_BUCK_CTRL_TRIM2 (at 0x11f2)"
        set &access:&cmd_addr %l (0x8011f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   IBAT_EA_OFFSET_TRIM                      = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ICHG_EA_OFFSET_TRIM                      = "
    tree.end
    tree "SMBBP_BUCK_BUCK_CTRL_TRIM3"
      sgroup "SMBBP_BUCK_BUCK_CTRL_TRIM3 (at 0x11f3)"
        set &access:&cmd_addr %l (0x8011f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IBAT_SNS_OFFSET_TRIM                     = "
    tree.end
    tree "SMBBP_BUCK_BUCK_CTRL_TRIM4"
      sgroup "SMBBP_BUCK_BUCK_CTRL_TRIM4 (at 0x11f4)"
        set &access:&cmd_addr %l (0x8011f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   REFBUF_OFFSET_TRIM                       = "
    tree.end
    tree "SMBBP_BUCK_BUCK_CTRL_TRIM5"
      sgroup "SMBBP_BUCK_BUCK_CTRL_TRIM5 (at 0x11f5)"
        set &access:&cmd_addr %l (0x8011f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CHG_ITRKL_TRIM                           = "
    tree.end
    tree "SMBBP_BUCK_BUCK_CTRL_TRIM6"
      sgroup "SMBBP_BUCK_BUCK_CTRL_TRIM6 (at 0x11f6)"
        set &access:&cmd_addr %l (0x8011f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   INZ_VOS_ADJ_TRIM                         = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_BLANKING_SEL                          = " "0, 1, 2, 3"
    tree.end
    tree "SMBBP_BUCK_BUCK_CTRL_TRIM7"
      sgroup "SMBBP_BUCK_BUCK_CTRL_TRIM7 (at 0x11f7)"
        set &access:&cmd_addr %l (0x8011f70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   CHG_TTRIM                                = "
    tree.end
    tree "SMBBP_BUCK_IBAT_DAC_TRIM"
      sgroup "SMBBP_BUCK_IBAT_DAC_TRIM (at 0x11f8)"
        set &access:&cmd_addr %l (0x8011f80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   IBAT_DAC_TRIM                            = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "SMBBP_BUCK_VDET_TRIM_SEL"
      sgroup "SMBBP_BUCK_VDET_TRIM_SEL (at 0x11f9)"
        set &access:&cmd_addr %l (0x8011f90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   VDET1_TRIM_SEL                           = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VDET0_TRIM_SEL                           = "
    tree.end
    tree "SMBBP_BUCK_IBAT_GAIN"
      sgroup "SMBBP_BUCK_IBAT_GAIN (at 0x11fa)"
        set &access:&cmd_addr %l (0x8011fa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11fa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM                                     = "
    tree.end
  tree.end
tree.end
tree "SMBBP_CHGR"
  tree "SMBBP_CHGR"
    tree "SMBBP_CHGR_PERPH_TYPE"
      sgroup "SMBBP_CHGR_PERPH_TYPE (at 0x1004)"
        set &access:&cmd_addr %l (0x8010040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBBP_CHGR_PERPH_SUBTYPE"
      sgroup "SMBBP_CHGR_PERPH_SUBTYPE (at 0x1005)"
        set &access:&cmd_addr %l (0x8010050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBBP_CHGR_CHG_OPTION"
      sgroup "SMBBP_CHGR_CHG_OPTION (at 0x1008)"
        set &access:&cmd_addr %l (0x8010080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PIN                                      = " "0 (EXT_CHARGER),1 (PMIC_CHARGER)"
    tree.end
    tree "SMBBP_CHGR_ATC_STATUS"
      sgroup "SMBBP_CHGR_ATC_STATUS (at 0x100a)"
        set &access:&cmd_addr %l (0x80100a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x100a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ATC_DONE                                 = " "0 (ATC_NOT_DONE),1 (ATC_DONE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ATC_FAILED                               = " "0 (ATC_NOT_FAILED),1 (ATC_FAILED)"
    tree.end
    tree "SMBBP_CHGR_VBAT_STATUS"
      sgroup "SMBBP_CHGR_VBAT_STATUS (at 0x100b)"
        set &access:&cmd_addr %l (0x80100b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x100b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ABOVE_VBATDET_HI                         = " "0 (BELOW_VBATDET_HI),1 (ABOVE_VBATDET_HI)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ABOVE_VBATDET_LO                         = " "0 (BELOW_VBATDET_LO),1 (ABOVE_VBATDET_LO)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ABOVE_VFAULT                             = " "0 (BELOW_VTRKL_FAULT),1 (ABOVE_VTRKL_FAULT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ABOVE_VBAT_WEAK                          = " "0 (BELOW_VBAT_WEAK),1 (ABOVE_VBAT_WEAK)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ABOVE_VBAT_TRKL                          = " "0 (BELOW_VBAT_TRKL),1 (ABOVE_VBAT_TRKL)"
    tree.end
    tree "SMBBP_CHGR_IBAT_BMS"
      sgroup "SMBBP_CHGR_IBAT_BMS (at 0x100c)"
        set &access:&cmd_addr %l (0x80100c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x100c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "SMBBP_CHGR_IBAT_STS"
      sgroup "SMBBP_CHGR_IBAT_STS (at 0x100d)"
        set &access:&cmd_addr %l (0x80100d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x100d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BMS_SIGN                                 = " "0 (POSITIVE_BATTERY_DISCHARGING),1 (NEGATIVE_BATTERY_CHARGING)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   IBAT_TERM_COMP                           = " "0 (IBAT_ABOVE_THRESHOLD_NOK_TO_TERM),1 (IBAT_BELOW_THRESHOLD_OK_TO_TERM)"
    tree.end
    tree "SMBBP_CHGR_INT_RT_STS"
      sgroup "SMBBP_CHGR_INT_RT_STS (at 0x1010)"
        set &access:&cmd_addr %l (0x8010100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_RT_STS                          = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_RT_STS                        = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_RT_STS                       = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_RT_STS                       = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_RT_STS                      = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_RT_STS                           = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_RT_STS                       = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_RT_STS                       = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
    tree.end
    tree "SMBBP_CHGR_INT_SET_TYPE"
      sgroup "SMBBP_CHGR_INT_SET_TYPE (at 0x1011)"
        set &access:&cmd_addr %l (0x8010110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_SET_TYPE                        = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_SET_TYPE                      = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_SET_TYPE                     = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_SET_TYPE                     = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_SET_TYPE                    = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_SET_TYPE                         = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_SET_TYPE                     = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_SET_TYPE                     = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "SMBBP_CHGR_INT_POLARITY_HIGH"
      sgroup "SMBBP_CHGR_INT_POLARITY_HIGH (at 0x1012)"
        set &access:&cmd_addr %l (0x8010120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_POLARITY_HIGH                   = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_POLARITY_HIGH                 = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_POLARITY_HIGH                = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_POLARITY_HIGH                = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_POLARITY_HIGH               = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_POLARITY_HIGH                    = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_POLARITY_HIGH                = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_POLARITY_HIGH                = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_CHGR_INT_POLARITY_LOW"
      sgroup "SMBBP_CHGR_INT_POLARITY_LOW (at 0x1013)"
        set &access:&cmd_addr %l (0x8010130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_POLARITY_LOW                    = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_POLARITY_LOW                  = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_POLARITY_LOW                 = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_POLARITY_LOW                 = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_POLARITY_LOW                = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_POLARITY_LOW                     = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_POLARITY_LOW                 = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_POLARITY_LOW                 = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_CHGR_INT_LATCHED_CLR"
      sgroup "SMBBP_CHGR_INT_LATCHED_CLR (at 0x1014)"
        set &access:&cmd_addr %l (0x8010140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_LATCHED_CLR                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_LATCHED_CLR                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_LATCHED_CLR                  = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_INT_EN_SET"
      sgroup "SMBBP_CHGR_INT_EN_SET (at 0x1015)"
        set &access:&cmd_addr %l (0x8010150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_EN_SET                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_EN_SET                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_CHGR_INT_EN_CLR"
      sgroup "SMBBP_CHGR_INT_EN_CLR (at 0x1016)"
        set &access:&cmd_addr %l (0x8010160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_EN_CLR                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_EN_CLR                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_CHGR_INT_LATCHED_STS"
      sgroup "SMBBP_CHGR_INT_LATCHED_STS (at 0x1018)"
        set &access:&cmd_addr %l (0x8010180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_LATCHED_STS                   = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_LATCHED_STS                 = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
    tree.end
    tree "SMBBP_CHGR_INT_PENDING_STS"
      sgroup "SMBBP_CHGR_INT_PENDING_STS (at 0x1019)"
        set &access:&cmd_addr %l (0x8010190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_PENDING_STS                     = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_PENDING_STS                   = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_PENDING_STS                 = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
    tree.end
    tree "SMBBP_CHGR_INT_MID_SEL"
      sgroup "SMBBP_CHGR_INT_MID_SEL (at 0x101a)"
        set &access:&cmd_addr %l (0x80101a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x101a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "SMBBP_CHGR_INT_PRIORITY"
      sgroup "SMBBP_CHGR_INT_PRIORITY (at 0x101b)"
        set &access:&cmd_addr %l (0x80101b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x101b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "SMBBP_CHGR_VDD_MAX"
      sgroup "SMBBP_CHGR_VDD_MAX (at 0x1040)"
        set &access:&cmd_addr %l (0x8010400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_VDD_SAFE"
      sgroup "SMBBP_CHGR_VDD_SAFE (at 0x1041)"
        set &access:&cmd_addr %l (0x8010410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_VDD_MAX_STEP"
      sgroup "SMBBP_CHGR_VDD_MAX_STEP (at 0x1042)"
        set &access:&cmd_addr %l (0x8010420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BYP                                      = " "0 (STEPPER_IN_USE),1 (STEPPER_BYPASSED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   STEP_SEL                                 = " "0 (PER_STEP_1_LSB),1 (PER_STEP_2_LSB),2 (PER_STEP_3_LSB),3 (PER_STEP_4_LSB)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DLY_SEL                                  = " "0 (PER_STEP_4_CLOCKS),1 (PER_STEP_8_CLOCKS),2 (PER_STEP_12_CLOCKS),3 (PER_STEP_16_CLOCKS),4 (PER_STEP_20_CLOCKS),5 (PER_STEP_24_CLOCKS),6 (PER_STEP_32_CLOCKS),7 (PER_STEP_64_CLOCKS)"
    tree.end
    tree "SMBBP_CHGR_VDDMAX_GSM_ADJ"
      sgroup "SMBBP_CHGR_VDDMAX_GSM_ADJ (at 0x1043)"
        set &access:&cmd_addr %l (0x8010430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (FEATURE_DISABLED),1 (FEATURE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   MUX_SEL                                  = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_IBAT_MAX"
      sgroup "SMBBP_CHGR_IBAT_MAX (at 0x1044)"
        set &access:&cmd_addr %l (0x8010440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_IBAT_SAFE"
      sgroup "SMBBP_CHGR_IBAT_SAFE (at 0x1045)"
        set &access:&cmd_addr %l (0x8010450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_IBAT_MAX_STEP"
      sgroup "SMBBP_CHGR_IBAT_MAX_STEP (at 0x1046)"
        set &access:&cmd_addr %l (0x8010460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BYP                                      = " "0 (STEPPER_IN_USE),1 (STEPPER_BYPASSED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   STEP_SEL                                 = " "0 (PER_STEP_1_LSB),1 (PER_STEP_2_LSB),2 (PER_STEP_3_LSB),3 (PER_STEP_4_LSB)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DLY_SEL                                  = " "0 (PER_STEP_4_CLOCKS),1 (PER_STEP_8_CLOCKS),2 (PER_STEP_12_CLOCKS),3 (PER_STEP_16_CLOCKS),4 (PER_STEP_20_CLOCKS),5 (PER_STEP_24_CLOCKS),6 (PER_STEP_32_CLOCKS),7 (PER_STEP_64_CLOCKS)"
    tree.end
    tree "SMBBP_CHGR_VIN_MIN"
      sgroup "SMBBP_CHGR_VIN_MIN (at 0x1047)"
        set &access:&cmd_addr %l (0x8010470|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10470|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_VIN_MIN_STEP"
      sgroup "SMBBP_CHGR_VIN_MIN_STEP (at 0x1048)"
        set &access:&cmd_addr %l (0x8010480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BYP                                      = " "0 (STEPPER_IN_USE),1 (STEPPER_BYPASSED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   STEP_SEL                                 = " "0 (PER_STEP_1_LSB),1 (PER_STEP_2_LSB),2 (PER_STEP_3_LSB),3 (PER_STEP_4_LSB)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DLY_SEL                                  = " "0 (PER_STEP_4_CLOCKS),1 (PER_STEP_8_CLOCKS),2 (PER_STEP_12_CLOCKS),3 (PER_STEP_16_CLOCKS),4 (PER_STEP_20_CLOCKS),5 (PER_STEP_24_CLOCKS),6 (PER_STEP_32_CLOCKS),7 (PER_STEP_64_CLOCKS)"
    tree.end
    tree "SMBBP_CHGR_CHG_CTRL"
      sgroup "SMBBP_CHGR_CHG_CTRL (at 0x1049)"
        set &access:&cmd_addr %l (0x8010490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_EN                                   = " "0 (CHG_DISABLED),1 (CHG_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_PAUSE                                = " "0 (CHG_NOT_PAUSED),1 (CHG_PAUSED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ON_BAT_FORCE                             = " "0 (NOT_FORCED_ON_BAT),1 (FORCED_ON_BAT)"
    tree.end
    tree "SMBBP_CHGR_CHG_FAILED"
      sgroup "SMBBP_CHGR_CHG_FAILED (at 0x104a)"
        set &access:&cmd_addr %l (0x80104a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x104a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLR                                      = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_ATC_CTRL"
      sgroup "SMBBP_CHGR_ATC_CTRL (at 0x104b)"
        set &access:&cmd_addr %l (0x80104b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x104b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ATC_FORCE                                = " "0 (ATC_NOT_FORCED),1 (ATC_FORCED)"
    tree.end
    tree "SMBBP_CHGR_ATC_FAILED"
      sgroup "SMBBP_CHGR_ATC_FAILED (at 0x104c)"
        set &access:&cmd_addr %l (0x80104c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x104c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLR                                      = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_LED"
      sgroup "SMBBP_CHGR_LED (at 0x104d)"
        set &access:&cmd_addr %l (0x80104d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x104d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CTRL                                     = " "0, 1, 2, 3"
    tree.end
    tree "SMBBP_CHGR_VBAT_TRKL"
      sgroup "SMBBP_CHGR_VBAT_TRKL (at 0x1050)"
        set &access:&cmd_addr %l (0x8010500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_VBAT_WEAK"
      sgroup "SMBBP_CHGR_VBAT_WEAK (at 0x1052)"
        set &access:&cmd_addr %l (0x8010520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_IBAT_ATC_A"
      sgroup "SMBBP_CHGR_IBAT_ATC_A (at 0x1054)"
        set &access:&cmd_addr %l (0x8010540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_IBAT_ATC_B"
      sgroup "SMBBP_CHGR_IBAT_ATC_B (at 0x1055)"
        set &access:&cmd_addr %l (0x8010550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_IBAT_TERM_CHGR"
      sgroup "SMBBP_CHGR_IBAT_TERM_CHGR (at 0x105b)"
        set &access:&cmd_addr %l (0x80105b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x105b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   IEOC_SEL                                 = " "0 (ANALOG_EOC),1 (DIGITAL_EOC)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COMP_EN                                  = " "0 (IBAT_TERM_COMP_DISABLED),1 (IBAT_TERM_COMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   THR_SEL                                  = " "0 (IBAT_TERM_AEOC_80MA),1 (IBAT_TERM_AEOC_120MA),2 (IBAT_TERM_AEOC_160MA),3 (IBAT_TERM_AEOC_200MA)"
    tree.end
    tree "SMBBP_CHGR_IBAT_TERM_BMS"
      sgroup "SMBBP_CHGR_IBAT_TERM_BMS (at 0x105c)"
        set &access:&cmd_addr %l (0x80105c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x105c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   THR                                      = "
    tree.end
    tree "SMBBP_CHGR_VBAT_DET"
      sgroup "SMBBP_CHGR_VBAT_DET (at 0x105d)"
        set &access:&cmd_addr %l (0x80105d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x105d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LO_THR                                   = "
    tree.end
    tree "SMBBP_CHGR_TTRKL_MAX_EN"
      sgroup "SMBBP_CHGR_TTRKL_MAX_EN (at 0x105e)"
        set &access:&cmd_addr %l (0x80105e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x105e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (TTRKL_MAX_DISABLED),1 (TTRKL_MAX_ENABLED)"
    tree.end
    tree "SMBBP_CHGR_TTRKL_MAX"
      sgroup "SMBBP_CHGR_TTRKL_MAX (at 0x105f)"
        set &access:&cmd_addr %l (0x80105f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x105f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_TCHG_MAX_EN"
      sgroup "SMBBP_CHGR_TCHG_MAX_EN (at 0x1060)"
        set &access:&cmd_addr %l (0x8010600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (TCHG_MAX_DISABLED),1 (TCHG_MAX_ENABLED)"
    tree.end
    tree "SMBBP_CHGR_TCHG_MAX"
      sgroup "SMBBP_CHGR_TCHG_MAX (at 0x1061)"
        set &access:&cmd_addr %l (0x8010610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_CHG_WDOG_TIME"
      sgroup "SMBBP_CHGR_CHG_WDOG_TIME (at 0x1062)"
        set &access:&cmd_addr %l (0x8010620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SEL                                      = "
    tree.end
    tree "SMBBP_CHGR_CHG_WDOG_DLY"
      sgroup "SMBBP_CHGR_CHG_WDOG_DLY (at 0x1063)"
        set &access:&cmd_addr %l (0x8010630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   SEL                                      = " "0 (CHG_WDOG_DLY_0SEC),1 (CHG_WDOG_DLY_1SEC),2 (CHG_WDOG_DLY_2SEC),3 (CHG_WDOG_DLY_3SEC),4 (CHG_WDOG_DLY_4SEC),5 (CHG_WDOG_DLY_5SEC),6 (CHG_WDOG_DLY_6SEC),7 (CHG_WDOG_DLY_7SEC)"
    tree.end
    tree "SMBBP_CHGR_CHG_WDOG_PET"
      sgroup "SMBBP_CHGR_CHG_WDOG_PET (at 0x1064)"
        set &access:&cmd_addr %l (0x8010640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PET                                      = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_CHG_WDOG_EN"
      sgroup "SMBBP_CHGR_CHG_WDOG_EN (at 0x1065)"
        set &access:&cmd_addr %l (0x8010650|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10650|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (CHG_WDOG_DISABLED),1 (CHG_WDOG_ENABLED)"
    tree.end
    tree "SMBBP_CHGR_CHG_TEMP_THRESH"
      sgroup "SMBBP_CHGR_CHG_TEMP_THRESH (at 0x1066)"
        set &access:&cmd_addr %l (0x8010660|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10660|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CHG_TEMP_STOP                            = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CHG_TEMP_RESUME                          = "
    tree.end
    tree "SMBBP_CHGR_IR_DROP_COMPEN"
      sgroup "SMBBP_CHGR_IR_DROP_COMPEN (at 0x1067)"
        set &access:&cmd_addr %l (0x8010670|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10670|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (IR_DROP_COMP_DISABLED),1 (IR_DROP_COMP_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RES                                      = "
    tree.end
    tree "SMBBP_CHGR_VDD_MAX_COMPEN"
      sgroup "SMBBP_CHGR_VDD_MAX_COMPEN (at 0x1068)"
        set &access:&cmd_addr %l (0x8010680|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10680|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "SMBBP_CHGR_VBAT_DET_EN"
      sgroup "SMBBP_CHGR_VBAT_DET_EN (at 0x1069)"
        set &access:&cmd_addr %l (0x8010690|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10690|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VBAT_DET_HI_LO_CTRL                      = " "0, 1, 2, 3"
    tree.end
    tree "SMBBP_CHGR_SEC_ACCESS"
      sgroup "SMBBP_CHGR_SEC_ACCESS (at 0x10d0)"
        set &access:&cmd_addr %l (0x8010d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBBP_CHGR_PERPH_RESET_CTL2"
      sgroup "SMBBP_CHGR_PERPH_RESET_CTL2 (at 0x10d9)"
        set &access:&cmd_addr %l (0x8010d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_PERPH_RESET_CTL3"
      sgroup "SMBBP_CHGR_PERPH_RESET_CTL3 (at 0x10da)"
        set &access:&cmd_addr %l (0x8010da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_PERPH_RESET_CTL4"
      sgroup "SMBBP_CHGR_PERPH_RESET_CTL4 (at 0x10db)"
        set &access:&cmd_addr %l (0x8010db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_CHGR_PERPH_RESET_CTL5"
      sgroup "SMBBP_CHGR_PERPH_RESET_CTL5 (at 0x10dc)"
        set &access:&cmd_addr %l (0x8010dc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10dc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_PERPH_RESET_CTL6"
      sgroup "SMBBP_CHGR_PERPH_RESET_CTL6 (at 0x10dd)"
        set &access:&cmd_addr %l (0x8010dd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10dd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_CHGR_CHGR_SPARE"
      sgroup "SMBBP_CHGR_CHGR_SPARE (at 0x10df)"
        set &access:&cmd_addr %l (0x8010df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBBP_CHGR_INT_TEST1"
      sgroup "SMBBP_CHGR_INT_TEST1 (at 0x10e0)"
        set &access:&cmd_addr %l (0x8010e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "SMBBP_CHGR_INT_TEST_VAL"
      sgroup "SMBBP_CHGR_INT_TEST_VAL (at 0x10e1)"
        set &access:&cmd_addr %l (0x8010e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_DONE_INT_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_FAILED_INT_VAL                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FAST_CHG_ON_INT_VAL                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRKL_CHG_ON_INT_VAL                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STATE_CHANGE_INT_VAL                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGWDOG_INT_VAL                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_DET_HI_INT_VAL                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VBAT_DET_LO_INT_VAL                      = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_TRKL_CHG_TEST"
      sgroup "SMBBP_CHGR_TRKL_CHG_TEST (at 0x10e2)"
        set &access:&cmd_addr %l (0x8010e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHG_TRICKLE_FORCE                        = " "0 (NO_CHG_TRICKLE_FORCE),1 (CHG_TRICKLE_FORCED_ON)"
    tree.end
    tree "SMBBP_CHGR_TRICKLE_CLAMP"
      sgroup "SMBBP_CHGR_TRICKLE_CLAMP (at 0x10e3)"
        set &access:&cmd_addr %l (0x8010e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN                                       = " "0 (TRICKLE_CLAMP_DISABLED),1 (TRICKLE_CLAMP_ENABLED)"
    tree.end
    tree "SMBBP_CHGR_FSM_STATE_CAPTURE"
      sgroup "SMBBP_CHGR_FSM_STATE_CAPTURE (at 0x10e6)"
        set &access:&cmd_addr %l (0x8010e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FSM_STATE_CAPTURE                        = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_FSM_STATE_STS"
      sgroup "SMBBP_CHGR_FSM_STATE_STS (at 0x10e7)"
        set &access:&cmd_addr %l (0x8010e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   FSM_STATE_STS                            = "
    tree.end
    tree "SMBBP_CHGR_FSM_STATE_TEST"
      sgroup "SMBBP_CHGR_FSM_STATE_TEST (at 0x10e8)"
        set &access:&cmd_addr %l (0x8010e80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FSM_WRITE_STATE_DWELL                    = " "0 (FSM_FUNCTION_NORMALLY),1 (FSM_STAY_IN_WRITE_STATE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   FSM_WRITE_STATE                          = "
    tree.end
    tree "SMBBP_CHGR_FSM_STATE_WRITE"
      sgroup "SMBBP_CHGR_FSM_STATE_WRITE (at 0x10e9)"
        set &access:&cmd_addr %l (0x8010e90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN                                       = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_DTEST_CTRL1"
      sgroup "SMBBP_CHGR_DTEST_CTRL1 (at 0x10ea)"
        set &access:&cmd_addr %l (0x8010ea0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10ea0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_CTRL1                              = "
    tree.end
    tree "SMBBP_CHGR_TIMER_SPEEDUP"
      sgroup "SMBBP_CHGR_TIMER_SPEEDUP (at 0x10ec)"
        set &access:&cmd_addr %l (0x8010ec0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10ec0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TIMER_SPEED_UP                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TIMER_RESET                              = " "0, 1"
    tree.end
    tree "SMBBP_CHGR_COMP_OVR0"
      sgroup "SMBBP_CHGR_COMP_OVR0 (at 0x10ed)"
        set &access:&cmd_addr %l (0x8010ed0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10ed0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   VBAT_VERY_LOW                            = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   VTRKL_FAULT                              = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CHG_OPTION                               = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "SMBBP_CHGR_COMP_OVR1"
      sgroup "SMBBP_CHGR_COMP_OVR1 (at 0x10ee)"
        set &access:&cmd_addr %l (0x8010ee0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10ee0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   VBAT_WEAK                                = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   VBAT_DET_HI                              = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VBAT_DET_LO                              = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "SMBBP_CHGR_CHGR_COMP_OVR_GLOBAL"
      sgroup "SMBBP_CHGR_CHGR_COMP_OVR_GLOBAL (at 0x10ef)"
        set &access:&cmd_addr %l (0x8010ef0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10ef0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BYP_EN                                   = " "0 (GLOBAL_BYPASS_DISABLED),1 (ALL_COMPARATORS_BYPASSED)"
    tree.end
  tree.end
tree.end
tree "SMBBP_FREQ"
  tree "SMBBP_FREQ"
    tree "SMBBP_FREQ_REVISION1"
      sgroup "SMBBP_FREQ_REVISION1 (at 0x1700)"
        set &access:&cmd_addr %l (0x8017000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "SMBBP_FREQ_REVISION2"
      sgroup "SMBBP_FREQ_REVISION2 (at 0x1701)"
        set &access:&cmd_addr %l (0x8017010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "SMBBP_FREQ_PERPH_TYPE"
      sgroup "SMBBP_FREQ_PERPH_TYPE (at 0x1704)"
        set &access:&cmd_addr %l (0x8017040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBBP_FREQ_PERPH_SUBTYPE"
      sgroup "SMBBP_FREQ_PERPH_SUBTYPE (at 0x1705)"
        set &access:&cmd_addr %l (0x8017050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBBP_FREQ_CLK_ENABLE"
      sgroup "SMBBP_FREQ_CLK_ENABLE (at 0x1746)"
        set &access:&cmd_addr %l (0x8017460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "SMBBP_FREQ_CLK_DIV"
      sgroup "SMBBP_FREQ_CLK_DIV (at 0x1750)"
        set &access:&cmd_addr %l (0x8017500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "SMBBP_FREQ_CLK_PHASE"
      sgroup "SMBBP_FREQ_CLK_PHASE (at 0x1751)"
        set &access:&cmd_addr %l (0x8017510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "SMBBP_FREQ_GANG_CTL1"
      sgroup "SMBBP_FREQ_GANG_CTL1 (at 0x17c0)"
        set &access:&cmd_addr %l (0x8017c00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17c00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "SMBBP_FREQ_GANG_CTL2"
      sgroup "SMBBP_FREQ_GANG_CTL2 (at 0x17c1)"
        set &access:&cmd_addr %l (0x8017c10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17c10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "SMBBP_FREQ_SEC_ACCESS"
      sgroup "SMBBP_FREQ_SEC_ACCESS (at 0x17d0)"
        set &access:&cmd_addr %l (0x8017d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBBP_FREQ_PERPH_RESET_CTL2"
      sgroup "SMBBP_FREQ_PERPH_RESET_CTL2 (at 0x17d9)"
        set &access:&cmd_addr %l (0x8017d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "SMBBP_FREQ_PERPH_RESET_CTL3"
      sgroup "SMBBP_FREQ_PERPH_RESET_CTL3 (at 0x17da)"
        set &access:&cmd_addr %l (0x8017da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "SMBBP_FREQ_PERPH_RESET_CTL4"
      sgroup "SMBBP_FREQ_PERPH_RESET_CTL4 (at 0x17db)"
        set &access:&cmd_addr %l (0x8017db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_FREQ_TEST1"
      sgroup "SMBBP_FREQ_TEST1 (at 0x17e2)"
        set &access:&cmd_addr %l (0x8017e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "SMBBP_MISC"
  tree "SMBBP_MISC"
    tree "SMBBP_MISC_REVISION1"
      sgroup "SMBBP_MISC_REVISION1 (at 0x1600)"
        set &access:&cmd_addr %l (0x8016000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "SMBBP_MISC_REVISION2"
      sgroup "SMBBP_MISC_REVISION2 (at 0x1601)"
        set &access:&cmd_addr %l (0x8016010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "SMBBP_MISC_REVISION3"
      sgroup "SMBBP_MISC_REVISION3 (at 0x1602)"
        set &access:&cmd_addr %l (0x8016020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "SMBBP_MISC_REVISION4"
      sgroup "SMBBP_MISC_REVISION4 (at 0x1603)"
        set &access:&cmd_addr %l (0x8016030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "SMBBP_MISC_PERPH_TYPE"
      sgroup "SMBBP_MISC_PERPH_TYPE (at 0x1604)"
        set &access:&cmd_addr %l (0x8016040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBBP_MISC_PERPH_SUBTYPE"
      sgroup "SMBBP_MISC_PERPH_SUBTYPE (at 0x1605)"
        set &access:&cmd_addr %l (0x8016050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBBP_MISC_INT_RT_STS"
      sgroup "SMBBP_MISC_INT_RT_STS (at 0x1610)"
        set &access:&cmd_addr %l (0x8016100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_STS                          = " "0 (PM8026_ONLY_INT_RT_STS_LOW),1 (PM8026_ONLY_INT_RT_STS_HIGH)"
    tree.end
    tree "SMBBP_MISC_INT_SET_TYPE"
      sgroup "SMBBP_MISC_INT_SET_TYPE (at 0x1611)"
        set &access:&cmd_addr %l (0x8016110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_TYPE                         = " "0 (PM8026_ONLY_LEVEL),1 (PM8026_ONLY_EDGE)"
    tree.end
    tree "SMBBP_MISC_INT_POLARITY_HIGH"
      sgroup "SMBBP_MISC_INT_POLARITY_HIGH (at 0x1612)"
        set &access:&cmd_addr %l (0x8016120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_POLARITY_HIGH                = " "0 (PM8026_ONLY_HIGH_RISING_TRIGGER_DISABLED),1 (PM8026_ONLY_HIGH_RISING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_MISC_INT_POLARITY_LOW"
      sgroup "SMBBP_MISC_INT_POLARITY_LOW (at 0x1613)"
        set &access:&cmd_addr %l (0x8016130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_POLARITY_LOW                 = " "0 (PM8026_ONLY_LOW_FALLING_TRIGGER_DISABLED),1 (PM8026_ONLY_LOW_FALLING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_MISC_INT_LATCHED_CLR"
      sgroup "SMBBP_MISC_INT_LATCHED_CLR (at 0x1614)"
        set &access:&cmd_addr %l (0x8016140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_CLR                          = " "0, 1"
    tree.end
    tree "SMBBP_MISC_INT_EN_SET"
      sgroup "SMBBP_MISC_INT_EN_SET (at 0x1615)"
        set &access:&cmd_addr %l (0x8016150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_EN_SET                       = " "0 (PM8026_ONLY_INT_DISABLED),1 (PM8026_ONLY_INT_ENABLED)"
    tree.end
    tree "SMBBP_MISC_INT_EN_CLR"
      sgroup "SMBBP_MISC_INT_EN_CLR (at 0x1616)"
        set &access:&cmd_addr %l (0x8016160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_EN_CLR                       = " "0 (PM8026_ONLY_INT_DISABLED),1 (PM8026_ONLY_INT_ENABLED)"
    tree.end
    tree "SMBBP_MISC_INT_LATCHED_STS"
      sgroup "SMBBP_MISC_INT_LATCHED_STS (at 0x1618)"
        set &access:&cmd_addr %l (0x8016180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_LATCHED_STS                  = " "0 (PM8026_ONLY_NO_INT_LATCHED),1 (PM8026_ONLY_INT_LATCHED)"
    tree.end
    tree "SMBBP_MISC_INT_PENDING_STS"
      sgroup "SMBBP_MISC_INT_PENDING_STS (at 0x1619)"
        set &access:&cmd_addr %l (0x8016190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_PENDING_STS                  = " "0 (PM8026_ONLY_NO_INT_PENDING),1 (PM8026_ONLY_INT_PENDING)"
    tree.end
    tree "SMBBP_MISC_INT_MID_SEL"
      sgroup "SMBBP_MISC_INT_MID_SEL (at 0x161a)"
        set &access:&cmd_addr %l (0x80161a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x161a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "SMBBP_MISC_INT_PRIORITY"
      sgroup "SMBBP_MISC_INT_PRIORITY (at 0x161b)"
        set &access:&cmd_addr %l (0x80161b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x161b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_PRIORITY                     = " "0 (PM8026_ONLY_SR),1 (PM8026_ONLY_A)"
    tree.end
    tree "SMBBP_MISC_LOW_POWER_MODE"
      sgroup "SMBBP_MISC_LOW_POWER_MODE (at 0x1640)"
        set &access:&cmd_addr %l (0x8016400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN                                       = " "0 (DIG_LPM_DISABLED),1 (DIG_LPM_ENABLED)"
    tree.end
    tree "SMBBP_MISC_BOOT"
      sgroup "SMBBP_MISC_BOOT (at 0x1641)"
        set &access:&cmd_addr %l (0x8016410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BOOT_TIMER_EN                            = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ADAPTIVE_BOOT_DIS                        = " "0 (ENABLED),1 (DISABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ADAPTIVE_BOOT_TYPE                       = " "0 (INCREASE_VBAT_WEAK_100MV),1 (INCREASE_VBAT_WEAK_TO_3V4)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BOOT_TIMER                               = " "0 (T_30S),1 (T_60S),2 (T_90S),3 (T_120S)"
    tree.end
    tree "SMBBP_MISC_BOOT_DONE"
      sgroup "SMBBP_MISC_BOOT_DONE (at 0x1642)"
        set &access:&cmd_addr %l (0x8016420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DONE                                     = " "0 (BOOT_NOT_DONE),1 (BOOT_DONE)"
    tree.end
    tree "SMBBP_MISC_VBAT_BOOT_THRES"
      sgroup "SMBBP_MISC_VBAT_BOOT_THRES (at 0x1643)"
        set &access:&cmd_addr %l (0x8016430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   STS                                      = "
    tree.end
    tree "SMBBP_MISC_TFT_WDOG"
      sgroup "SMBBP_MISC_TFT_WDOG (at 0x1644)"
        set &access:&cmd_addr %l (0x8016440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PET                                      = " "0, 1"
    tree.end
    tree "SMBBP_MISC_TFT"
      sgroup "SMBBP_MISC_TFT (at 0x1645)"
        set &access:&cmd_addr %l (0x8016450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   WDOG_EN                                  = " "0 (PM8026_ONLY_TFT_WDOG_DISABLED),1 (PM8026_ONLY_TFT_WDOG_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   WDOG_DLY                                 = " "0 (PM8026_ONLY_TFT_WDOG_DLY_RSVD),1 (PM8026_ONLY_TFT_WDOG_DLY_2S),2 (PM8026_ONLY_TFT_WDOG_DLY_4S),3 (PM8026_ONLY_TFT_WDOG_DLY_6S)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   WDOG_TIME                                = " "0 (PM8026_ONLY_TFT_WDOG_TIME_30S),1 (PM8026_ONLY_TFT_WDOG_TIME_60S),2 (PM8026_ONLY_TFT_WDOG_TIME_90S),3 (PM8026_ONLY_TFT_WDOG_TIME_120S)"
    tree.end
    tree "SMBBP_MISC_TFT_MODE_TYPE"
      sgroup "SMBBP_MISC_TFT_MODE_TYPE (at 0x1646)"
        set &access:&cmd_addr %l (0x8016460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SEL                                      = " "0 (PM8026_ONLY_POFF_AFTER_TFT),1 (PM8026_ONLY_WR_AFTER_TFT)"
    tree.end
    tree "SMBBP_MISC_TFT_MODE"
      sgroup "SMBBP_MISC_TFT_MODE (at 0x1647)"
        set &access:&cmd_addr %l (0x8016470|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16470|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CMD                                      = " "0 (PM8026_ONLY_NORMAL_OPERATION),1 (PM8026_ONLY_FORCE_ENTER_TFT)"
    tree.end
    tree "SMBBP_MISC_VPH_DISCHG_LD"
      sgroup "SMBBP_MISC_VPH_DISCHG_LD (at 0x1648)"
        set &access:&cmd_addr %l (0x8016480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_TFT_MODE                              = " "0 (PM8026_ONLY_VPH_DISCHG_LD_DISABLED_TFT),1 (PM8026_ONLY_VPH_DISCHG_LD_ENABLED_TFT)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_NORMAL_PWROFF                         = " "0 (VPH_DISCHG_LD_DISABLED_NORMAL_POFF_WR),1 (VPH_DISCHG_LD_ENABLED_NORMAL_POFF_WR)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   TIME_SEL                                 = " "0 (T_25MS),1 (T_50MS),2 (T_75MS),3 (T_100MS),4 (T_250MS),5 (T_500MS),6 (T_750MS),7 (T_1000MS)"
    tree.end
    tree "SMBBP_MISC_RAW_XVDD_RB_SCRATCH"
      sgroup "SMBBP_MISC_RAW_XVDD_RB_SCRATCH (at 0x16cd)"
        set &access:&cmd_addr %l (0x8016cd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16cd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   REG                                      = "
    tree.end
    tree "SMBBP_MISC_RAW_DVDD_RB_SCRATCH"
      sgroup "SMBBP_MISC_RAW_DVDD_RB_SCRATCH (at 0x16ce)"
        set &access:&cmd_addr %l (0x8016ce0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16ce0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   REG                                      = "
    tree.end
    tree "SMBBP_MISC_SEC_ACCESS"
      sgroup "SMBBP_MISC_SEC_ACCESS (at 0x16d0)"
        set &access:&cmd_addr %l (0x8016d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBBP_MISC_SMBB_MISC_SPARE"
      sgroup "SMBBP_MISC_SMBB_MISC_SPARE (at 0x16d7)"
        set &access:&cmd_addr %l (0x8016d70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16d70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBBP_MISC_PERPH_RESET_CTL2"
      sgroup "SMBBP_MISC_PERPH_RESET_CTL2 (at 0x16d9)"
        set &access:&cmd_addr %l (0x8016d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_MISC_PERPH_RESET_CTL3"
      sgroup "SMBBP_MISC_PERPH_RESET_CTL3 (at 0x16da)"
        set &access:&cmd_addr %l (0x8016da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBBP_MISC_PERPH_RESET_CTL4"
      sgroup "SMBBP_MISC_PERPH_RESET_CTL4 (at 0x16db)"
        set &access:&cmd_addr %l (0x8016db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_MISC_PERPH_RESET_CTL5"
      sgroup "SMBBP_MISC_PERPH_RESET_CTL5 (at 0x16dc)"
        set &access:&cmd_addr %l (0x8016dc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16dc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_MISC_PERPH_RESET_CTL6"
      sgroup "SMBBP_MISC_PERPH_RESET_CTL6 (at 0x16dd)"
        set &access:&cmd_addr %l (0x8016dd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16dd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_MISC_PERPH_RESET_CTL7"
      sgroup "SMBBP_MISC_PERPH_RESET_CTL7 (at 0x16de)"
        set &access:&cmd_addr %l (0x8016de0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16de0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_MISC_PERPH_RESET_CTL8"
      sgroup "SMBBP_MISC_PERPH_RESET_CTL8 (at 0x16df)"
        set &access:&cmd_addr %l (0x8016df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_MISC_INT_TEST1"
      sgroup "SMBBP_MISC_INT_TEST1 (at 0x16e0)"
        set &access:&cmd_addr %l (0x8016e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "SMBBP_MISC_INT_TEST_VAL"
      sgroup "SMBBP_MISC_INT_TEST_VAL (at 0x16e1)"
        set &access:&cmd_addr %l (0x8016e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TFTWDOG_INT_VAL                          = " "0, 1"
    tree.end
    tree "SMBBP_MISC_CLOCK_TEST_SLEEP"
      sgroup "SMBBP_MISC_CLOCK_TEST_SLEEP (at 0x16e2)"
        set &access:&cmd_addr %l (0x8016e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LPM_GLOBAL_TIMESCALE_EN                  = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CLK_MODE                                 = " "0 (SLP_CLK_SWITCH_HW_CNTRLED),1 (SLP_CLK_SWITCH_SW_CNTRLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   REQ_19P2M                                = " "0 (CLK_19P2M_NOT_REQED),1 (CLK_19P2M_REQED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   REQ_32K                                  = " "0 (CLK_32K_NOT_REQED),1 (CLK_32K_REQED)"
    tree.end
    tree "SMBBP_MISC_TFT_TEST"
      sgroup "SMBBP_MISC_TFT_TEST (at 0x16e3)"
        set &access:&cmd_addr %l (0x8016e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   WDOG_SPEEDUP                             = " "0 (PM8026_ONLY_TFT_WDOG_SPEEDUP_DISABLED),1 (PM8026_ONLY_TFT_WDOG_SPEEDUP_ENABLED)"
    tree.end
    tree "SMBBP_MISC_VPH_DISCHG_LD_TST"
      sgroup "SMBBP_MISC_VPH_DISCHG_LD_TST (at 0x16e4)"
        set &access:&cmd_addr %l (0x8016e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FORCE_ON                                 = " "0 (NOT_FORCED_ON),1 (FORCED_ON)"
    tree.end
  tree.end
tree.end
tree "SMBBP_USB_CHGPTH"
  tree "SMBBP_USB_CHGPTH"
    tree "SMBBP_USB_CHGPTH_PERPH_TYPE"
      sgroup "SMBBP_USB_CHGPTH_PERPH_TYPE (at 0x1304)"
        set &access:&cmd_addr %l (0x8013040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBBP_USB_CHGPTH_PERPH_SUBTYPE"
      sgroup "SMBBP_USB_CHGPTH_PERPH_SUBTYPE (at 0x1305)"
        set &access:&cmd_addr %l (0x8013050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBBP_USB_CHGPTH_PWR_PTH_STS"
      sgroup "SMBBP_USB_CHGPTH_PWR_PTH_STS (at 0x1308)"
        set &access:&cmd_addr %l (0x8013080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   POWER_PATH                               = " "0 (NOT_USED),1 (POWERED_FROM_BATTERY),2 (POWERED_FROM_USB_CHARGER),3 (reserved)"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_CHG_PTH_STS"
      sgroup "SMBBP_USB_CHGPTH_USB_CHG_PTH_STS (at 0x1309)"
        set &access:&cmd_addr %l (0x8013090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   USB_VALID                                = " "0 (UNDER_VOLTAGE),1 (OVER_VOLTAGE),2 (IN_VALID_RANGE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   USB_COARSE_DET                           = " "0 (BELOW_COARSE_DET_THR),1 (ABOVE_COARSE_DET_THR)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TOP_OVP_FET_ON                           = " "0 (OFF),1 (ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BOTTOM_B2B_FETS_ON                       = " "0 (OFF),1 (ON)"
    tree.end
    tree "SMBBP_USB_CHGPTH_CHG_GONE_INT"
      sgroup "SMBBP_USB_CHGPTH_CHG_GONE_INT (at 0x130a)"
        set &access:&cmd_addr %l (0x80130a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STS                                      = " "0 (VCHG_LESS_THAN_VBAT),1 (REV_BST_DETECTED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_AICL_STS"
      sgroup "SMBBP_USB_CHGPTH_AICL_STS (at 0x130c)"
        set &access:&cmd_addr %l (0x80130c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   AICL_FSM                                 = " "0 (INITIAL),1 (WAIT),2 (STEP_UP),3 (IDLE),4 (STEP_DOWN),5 (reserved),6 (reserved),7 (DONE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   I_AUTO_EQ_I_TGT                          = " "0 (I_AUTO_NEQ_I_TGT),1 (I_AUTO_EQ_I_TGT)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   I_TGT_EQ_I_MAX                           = " "0 (I_TGT_NEQ_I_MAX),1 (I_TGT_EQ_I_MAX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   T_DLY_IDLE_EXP                           = " "0 (T_N_EXP),1 (T_EXP)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VCHG_UV                                  = " "0 (VCHG_N_UV),1 (VCHG_UV)"
    tree.end
    tree "SMBBP_USB_CHGPTH_AICL_I_AUTO"
      sgroup "SMBBP_USB_CHGPTH_AICL_I_AUTO (at 0x130d)"
        set &access:&cmd_addr %l (0x80130d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   STS                                      = "
    tree.end
    tree "SMBBP_USB_CHGPTH_AICL_I_TGT"
      sgroup "SMBBP_USB_CHGPTH_AICL_I_TGT (at 0x130e)"
        set &access:&cmd_addr %l (0x80130e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   STS                                      = "
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_RT_STS"
      sgroup "SMBBP_USB_CHGPTH_INT_RT_STS (at 0x1310)"
        set &access:&cmd_addr %l (0x8013100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_RT_STS                           = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_RT_STS                          = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_RT_STS                       = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_RT_STS                    = " "0 (INT_RT_STS_LOW),1 (INT_RT_STS_HIGH)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_SET_TYPE"
      sgroup "SMBBP_USB_CHGPTH_INT_SET_TYPE (at 0x1311)"
        set &access:&cmd_addr %l (0x8013110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_TYPE                             = " "0 (PM8026_ONLY_LEVEL),1 (PM8026_ONLY_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_TYPE                            = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_TYPE                         = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_TYPE                      = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_POLARITY_HIGH"
      sgroup "SMBBP_USB_CHGPTH_INT_POLARITY_HIGH (at 0x1312)"
        set &access:&cmd_addr %l (0x8013120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_HIGH                             = " "0 (PM8026_ONLY_HIGH_RISING_TRIGGER_DISABLED),1 (PM8026_ONLY_HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_HIGH                            = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_HIGH                         = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_HIGH                      = " "0 (HIGH_RISING_TRIGGER_DISABLED),1 (HIGH_RISING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_POLARITY_LOW"
      sgroup "SMBBP_USB_CHGPTH_INT_POLARITY_LOW (at 0x1313)"
        set &access:&cmd_addr %l (0x8013130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_LOW                              = " "0 (PM8026_ONLY_LOW_FALLING_TRIGGER_DISABLED),1 (PM8026_ONLY_LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_LOW                             = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_LOW                          = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_LOW                       = " "0 (LOW_FALLING_TRIGGER_DISABLED),1 (LOW_FALLING_TRIGGER_ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_LATCHED_CLR"
      sgroup "SMBBP_USB_CHGPTH_INT_LATCHED_CLR (at 0x1314)"
        set &access:&cmd_addr %l (0x8013140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_CLR                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_LATCHED_CLR               = " "0, 1"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_EN_SET"
      sgroup "SMBBP_USB_CHGPTH_INT_EN_SET (at 0x1315)"
        set &access:&cmd_addr %l (0x8013150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_EN_SET                           = " "0 (PM8026_ONLY_INT_DISABLED),1 (PM8026_ONLY_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_EN_SET                    = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_EN_CLR"
      sgroup "SMBBP_USB_CHGPTH_INT_EN_CLR (at 0x1316)"
        set &access:&cmd_addr %l (0x8013160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_EN_CLR                           = " "0 (PM8026_ONLY_INT_DISABLED),1 (PM8026_ONLY_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_EN_CLR                    = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_LATCHED_STS"
      sgroup "SMBBP_USB_CHGPTH_INT_LATCHED_STS (at 0x1318)"
        set &access:&cmd_addr %l (0x8013180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_LATCHED_STS                      = " "0 (PM8026_ONLY_NO_INT_LATCHED),1 (PM8026_ONLY_INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_LATCHED_STS               = " "0 (NO_INT_LATCHED),1 (INT_LATCHED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_PENDING_STS"
      sgroup "SMBBP_USB_CHGPTH_INT_PENDING_STS (at 0x1319)"
        set &access:&cmd_addr %l (0x8013190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_STS                              = " "0 (PM8026_ONLY_NO_INT_PENDING),1 (PM8026_ONLY_INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_STS                             = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_STS                          = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_STS                       = " "0 (NO_INT_PENDING),1 (INT_PENDING)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_MID_SEL"
      sgroup "SMBBP_USB_CHGPTH_INT_MID_SEL (at 0x131a)"
        set &access:&cmd_addr %l (0x80131a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x131a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_PRIORITY"
      sgroup "SMBBP_USB_CHGPTH_INT_PRIORITY (at 0x131b)"
        set &access:&cmd_addr %l (0x80131b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x131b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "SMBBP_USB_CHGPTH_CHG_PTH_CTL"
      sgroup "SMBBP_USB_CHGPTH_CHG_PTH_CTL (at 0x1340)"
        set &access:&cmd_addr %l (0x8013400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_PTH_PRIORITY_SEL                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CHG_PTH_SWITCH_TIME                      = " "0 (T_60US),1 (T_80US),2 (T_100US),3 (T_120US)"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_CTL"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_CTL (at 0x1342)"
        set &access:&cmd_addr %l (0x8013420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   USB_OVP_THR                              = " "0 (PM8026_OVP_5P5V_ALSO_PM8110_OVP_5P5V),1 (PM8026_OVP_6V_ALSO_PM8110_OVP_6V),2 (PM8026_OVP_6P5V_ALSO_PM8110_OVP_6P5V),3 (PM8026_OVP_7V_ALSO_PM8110_OVP_7V),4 (PM8026_OVP_9P5V_ALSO_PM8110_OVP_5P5V),5 (PM8026_OVP_10V_ALSO_PM8110_OVP_6V),6 (PM8026_OVP_10P5V_ALSO_PM8110_OVP_6P5V),7 (PM8026_OVP_11V_ALSO_PM8110_OVP_7V)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   USB_UVD_THR                              = " "0 (RISING_4P25V_FALLING_4P05V),1 (RISING_4P35V_FALLING_4P15V),2 (RISING_4P45V_FALLING_4P25V),3 (RISING_4P55V_FALLING_4P35V)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   USB_VALID_DEB                            = " "0 (DEB_0MS),1 (DEB_5MS),2 (DEB_10MS),3 (DEB_20MS)"
    tree.end
    tree "SMBBP_USB_CHGPTH_IUSB_MAX_EN"
      sgroup "SMBBP_USB_CHGPTH_IUSB_MAX_EN (at 0x1343)"
        set &access:&cmd_addr %l (0x8013430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_IUSB_MAX"
      sgroup "SMBBP_USB_CHGPTH_IUSB_MAX (at 0x1344)"
        set &access:&cmd_addr %l (0x8013440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IUSB_MAX                                 = "
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_SUSP"
      sgroup "SMBBP_USB_CHGPTH_USB_SUSP (at 0x1347)"
        set &access:&cmd_addr %l (0x8013470|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13470|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USB_SUSPEND                              = " "0 (USB_NOT_SUSPENDED),1 (USB_SUSPENDED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OTG_CTL"
      sgroup "SMBBP_USB_CHGPTH_USB_OTG_CTL (at 0x1348)"
        set &access:&cmd_addr %l (0x8013480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USB_OTG_EN                               = " "0 (PM8026_ONLY_USB_OTG_DISABLED),1 (PM8026_ONLY_USB_OTG_ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_ENUM_TIMER_STOP"
      sgroup "SMBBP_USB_CHGPTH_ENUM_TIMER_STOP (at 0x134e)"
        set &access:&cmd_addr %l (0x80134e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x134e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STOP                                     = " "0 (ENUM_TIMER_STOP),1 (reserved)"
    tree.end
    tree "SMBBP_USB_CHGPTH_ENUM_TIMER"
      sgroup "SMBBP_USB_CHGPTH_ENUM_TIMER (at 0x134f)"
        set &access:&cmd_addr %l (0x80134f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x134f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SEL                                      = " "0 (ENUM_TIMER_10S),1 (ENUM_TIMER_20S),2 (ENUM_TIMER_30S),3 (ENUM_TIMER_60S)"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_FORCE"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_FORCE (at 0x1350)"
        set &access:&cmd_addr %l (0x8013500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   USB_OVP_FORCE                            = " "0 (NO_FORCE),1 (reserved),2 (FORCE_OFF),3 (FORCE_ON)"
    tree.end
    tree "SMBBP_USB_CHGPTH_FLCB_IUSB_MAX_LIM"
      sgroup "SMBBP_USB_CHGPTH_FLCB_IUSB_MAX_LIM (at 0x1351)"
        set &access:&cmd_addr %l (0x8013510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (FLCB_IUSB_MAX_LIM_IGNORED),1 (FLCB_IUSB_MAX_LIM_RESPECTED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_OCP_THR"
      sgroup "SMBBP_USB_CHGPTH_OCP_THR (at 0x1352)"
        set &access:&cmd_addr %l (0x8013520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SEL                                      = " "0 (OCP_THR_200MA),1 (OCP_THR_500MA),2 (OCP_THR_900MA),3 (OCP_THR_RSVD)"
    tree.end
    tree "SMBBP_USB_CHGPTH_OCP_CLR"
      sgroup "SMBBP_USB_CHGPTH_OCP_CLR (at 0x1353)"
        set &access:&cmd_addr %l (0x8013530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULSE                                    = " "0 (OCP_LATCH_NOT_CLEARED),1 (OCP_LATCH_CLEARED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_OCP_SW"
      sgroup "SMBBP_USB_CHGPTH_OCP_SW (at 0x1354)"
        set &access:&cmd_addr %l (0x8013540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CTRL                                     = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_AICL_CTL"
      sgroup "SMBBP_USB_CHGPTH_AICL_CTL (at 0x1360)"
        set &access:&cmd_addr %l (0x8013600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   AICL_EN                                  = " "0 (AICL_DISABLED),1 (AICL_ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_AICL_DLY"
      sgroup "SMBBP_USB_CHGPTH_AICL_DLY (at 0x1361)"
        set &access:&cmd_addr %l (0x8013610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   T_DLY_IDLE                               = " "0 (T_10MS),1 (T_20MS),2 (T_50MS),3 (T_100MS)"
    tree.end
    tree "SMBBP_USB_CHGPTH_AICL_DEB"
      sgroup "SMBBP_USB_CHGPTH_AICL_DEB (at 0x1362)"
        set &access:&cmd_addr %l (0x8013620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   VCHG_UV_RISING_DEB                       = " "0 (T_1MS),1 (T_5MS),2 (T_10MS),3 (T_20MS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VCHG_UV_FALLING_DEB                      = " "0 (T_1MS),1 (T_5MS),2 (T_10MS),3 (T_20MS)"
    tree.end
    tree "SMBBP_USB_CHGPTH_AICL_VCHG_UV_CTL"
      sgroup "SMBBP_USB_CHGPTH_AICL_VCHG_UV_CTL (at 0x1363)"
        set &access:&cmd_addr %l (0x8013630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   AICL_VCHG_UV_SRC                         = " "0 (AICL_VCHG_UV),1 (BUCK_VIN_LOOP)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   AICL_VCHG_UV_HYST                        = " "0 (UV_HYST_25MV),1 (UV_HYST_50MV)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   AICL_VCHG_UV_PROG                        = " "0 (VCHG_UV_4P2V),1 (VCHG_UV_4P3V),2 (VCHG_UV_4P4V),3 (VCHG_UV_4P5V)"
    tree.end
    tree "SMBBP_USB_CHGPTH_SEC_ACCESS"
      sgroup "SMBBP_USB_CHGPTH_SEC_ACCESS (at 0x13d0)"
        set &access:&cmd_addr %l (0x8013d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBBP_USB_CHGPTH_PERPH_RESET_CTL2"
      sgroup "SMBBP_USB_CHGPTH_PERPH_RESET_CTL2 (at 0x13d9)"
        set &access:&cmd_addr %l (0x8013d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_USB_CHGPTH_PERPH_RESET_CTL3"
      sgroup "SMBBP_USB_CHGPTH_PERPH_RESET_CTL3 (at 0x13da)"
        set &access:&cmd_addr %l (0x8013da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBBP_USB_CHGPTH_PERPH_RESET_CTL4"
      sgroup "SMBBP_USB_CHGPTH_PERPH_RESET_CTL4 (at 0x13db)"
        set &access:&cmd_addr %l (0x8013db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_PERPH_RESET_CTL5"
      sgroup "SMBBP_USB_CHGPTH_PERPH_RESET_CTL5 (at 0x13dc)"
        set &access:&cmd_addr %l (0x8013dc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13dc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBBP_USB_CHGPTH_PERPH_RESET_CTL6"
      sgroup "SMBBP_USB_CHGPTH_PERPH_RESET_CTL6 (at 0x13dd)"
        set &access:&cmd_addr %l (0x8013dd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13dd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_SPARE"
      sgroup "SMBBP_USB_CHGPTH_USB_SPARE (at 0x13df)"
        set &access:&cmd_addr %l (0x8013df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_TEST1"
      sgroup "SMBBP_USB_CHGPTH_INT_TEST1 (at 0x13e0)"
        set &access:&cmd_addr %l (0x8013e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_INT_TEST_VAL"
      sgroup "SMBBP_USB_CHGPTH_INT_TEST_VAL (at 0x13e1)"
        set &access:&cmd_addr %l (0x8013e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USB_OCP_INT_VAL                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_INT_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_VALID_INT_VAL                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COARSE_DET_USB_INT_VAL                   = " "0, 1"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_TST0"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_TST0 (at 0x13e2)"
        set &access:&cmd_addr %l (0x8013e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_VREG2P4V                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OVP_DTEST1_OUT_SEL_USB                   = " "0, 1, 2, 3"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_TST1"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_TST1 (at 0x13e3)"
        set &access:&cmd_addr %l (0x8013e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   OVP_DTEST2_OUT_SEL_USB                   = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OVP_DTEST3_OUT_SEL_USB                   = " "0, 1, 2, 3"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_TST2"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_TST2 (at 0x13e4)"
        set &access:&cmd_addr %l (0x8013e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   USBIN_LLIMIT_FALLHYS                     = " "0 (T_HYS_0US),1 (T_HYS_1US),2 (T_HYS_2US),3 (T_HYS_3US)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OVP_DTEST4_OUT_SEL_USB                   = " "0, 1, 2, 3"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_TST3"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_TST3 (at 0x13e5)"
        set &access:&cmd_addr %l (0x8013e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_USBISNS_ATEST                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USB_OVP_ISNS_TRIM_EN                     = " "0, 1"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_TST4"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_TST4 (at 0x13e6)"
        set &access:&cmd_addr %l (0x8013e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OTG_DTEST_IN_SEL_USB                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OVP_DTEST_IN_SEL_USB                     = " "0, 1"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_TST5"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_TST5 (at 0x13e7)"
        set &access:&cmd_addr %l (0x8013e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHG_GONE_CHG_OK_EN                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   USBIN_ULIMIT_FALLHYS                     = " "0 (T_HYS_400NS),1 (T_HYS_600NS),2 (T_HYS_800NS),3 (T_HYS_1US)"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_TST6"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_TST6 (at 0x13e8)"
        set &access:&cmd_addr %l (0x8013e80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   USB_BBM_RISEHYS                          = " "0 (T_HYS_0US),1 (T_HYS_2US),2 (T_HYS_4US),3 (T_HYS_8US)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   USB_BBM_FALLHYS                          = " "0 (T_HYS_0US),1 (T_HYS_0P5US),2 (T_HYS_1US),3 (T_HYS_2US)"
    tree.end
    tree "SMBBP_USB_CHGPTH_COMP_OVR0"
      sgroup "SMBBP_USB_CHGPTH_COMP_OVR0 (at 0x13e9)"
        set &access:&cmd_addr %l (0x8013e90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   USB_OCP                                  = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   COARSE_DET_USBIN                         = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   USB_BBM                                  = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "SMBBP_USB_CHGPTH_COMP_OVR1"
      sgroup "SMBBP_USB_CHGPTH_COMP_OVR1 (at 0x13ea)"
        set &access:&cmd_addr %l (0x8013ea0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13ea0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   AICL_VCHG_UV                             = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   CHG_GONE                                 = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   USBIN_ULIMIT_OK                          = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   USBIN_LLIMIT_OK                          = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_COMP_OVR_GLOBAL"
      sgroup "SMBBP_USB_CHGPTH_USB_COMP_OVR_GLOBAL (at 0x13eb)"
        set &access:&cmd_addr %l (0x8013eb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13eb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BYP_EN                                   = " "0 (GLOBAL_BYPASS_DISABLED),1 (ALL_COMPARATORS_BYPASSED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_ENUM_TIMER_EN"
      sgroup "SMBBP_USB_CHGPTH_ENUM_TIMER_EN (at 0x13ec)"
        set &access:&cmd_addr %l (0x8013ec0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13ec0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "SMBBP_USB_CHGPTH_CHG_GONE_REV_BST"
      sgroup "SMBBP_USB_CHGPTH_CHG_GONE_REV_BST (at 0x13ed)"
        set &access:&cmd_addr %l (0x8013ed0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13ed0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DET_EN                                   = " "0 (REV_BST_DET_DOES_NOT_TRIGGER_CHG_GONE),1 (REV_BST_DET_TRIGGERS_CHG_GONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BCK_EN_MASK                              = " "0 (REV_BST_DET_DOES_NOT_DISABLE_BUCK),1 (REV_BST_DET_DOES_DISABLE_BUCK)"
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_TRIM_NUM"
      sgroup "SMBBP_USB_CHGPTH_USB_TRIM_NUM (at 0x13f0)"
        set &access:&cmd_addr %l (0x8013f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_OVP_TRIM"
      sgroup "SMBBP_USB_CHGPTH_USB_OVP_TRIM (at 0x13f1)"
        set &access:&cmd_addr %l (0x8013f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   TRIM_POL                                 = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_VOFFSET_ADJ                         = "
    tree.end
    tree "SMBBP_USB_CHGPTH_USB_ICHG_GAIN"
      sgroup "SMBBP_USB_CHGPTH_USB_ICHG_GAIN (at 0x13f2)"
        set &access:&cmd_addr %l (0x8013f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM                                     = "
    tree.end
  tree.end
tree.end
tree "SPMI"
  tree "SPMI"
    tree "SPMI_REVISION1"
      sgroup "SPMI_REVISION1 (at 0x600)"
        set &access:&cmd_addr %l (0x8006000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "SPMI_REVISION2"
      sgroup "SPMI_REVISION2 (at 0x601)"
        set &access:&cmd_addr %l (0x8006010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "SPMI_REVISION3"
      sgroup "SPMI_REVISION3 (at 0x602)"
        set &access:&cmd_addr %l (0x8006020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "SPMI_REVISION4"
      sgroup "SPMI_REVISION4 (at 0x603)"
        set &access:&cmd_addr %l (0x8006030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "SPMI_PERPH_TYPE"
      sgroup "SPMI_PERPH_TYPE (at 0x604)"
        set &access:&cmd_addr %l (0x8006040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SPMI_PERPH_SUBTYPE"
      sgroup "SPMI_PERPH_SUBTYPE (at 0x605)"
        set &access:&cmd_addr %l (0x8006050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SPMI_ERROR_SYNDROME"
      sgroup "SPMI_ERROR_SYNDROME (at 0x608)"
        set &access:&cmd_addr %l (0x8006080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERROR_SYNDROME                           = "
    tree.end
    tree "SPMI_ERROR_DATA"
      sgroup "SPMI_ERROR_DATA (at 0x60b)"
        set &access:&cmd_addr %l (0x80060b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERROR_DATA                               = "
    tree.end
    tree "SPMI_ERROR_ADDR_LO"
      sgroup "SPMI_ERROR_ADDR_LO (at 0x60c)"
        set &access:&cmd_addr %l (0x80060c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERROR_ADDR_LO                            = "
    tree.end
    tree "SPMI_ERROR_ADDR_MD"
      sgroup "SPMI_ERROR_ADDR_MD (at 0x60d)"
        set &access:&cmd_addr %l (0x80060d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERROR_ADDR_MD                            = "
    tree.end
    tree "SPMI_ERROR_ADDR_HI"
      sgroup "SPMI_ERROR_ADDR_HI (at 0x60e)"
        set &access:&cmd_addr %l (0x80060e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ERROR_ADDR_HI                            = "
    tree.end
    tree "SPMI_INT_RT_STS"
      sgroup "SPMI_INT_RT_STS (at 0x610)"
        set &access:&cmd_addr %l (0x8006100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_RT_STS                          = " "0, 1"
    tree.end
    tree "SPMI_INT_SET_TYPE"
      sgroup "SPMI_INT_SET_TYPE (at 0x611)"
        set &access:&cmd_addr %l (0x8006110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_TYPE                            = " "0, 1"
    tree.end
    tree "SPMI_INT_POLARITY_HIGH"
      sgroup "SPMI_INT_POLARITY_HIGH (at 0x612)"
        set &access:&cmd_addr %l (0x8006120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_HIGH                            = " "0, 1"
    tree.end
    tree "SPMI_INT_POLARITY_LOW"
      sgroup "SPMI_INT_POLARITY_LOW (at 0x613)"
        set &access:&cmd_addr %l (0x8006130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_LOW                             = " "0, 1"
    tree.end
    tree "SPMI_INT_LATCHED_CLR"
      sgroup "SPMI_INT_LATCHED_CLR (at 0x614)"
        set &access:&cmd_addr %l (0x8006140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_LATCHED_CLR                     = " "0, 1"
    tree.end
    tree "SPMI_INT_EN_SET"
      sgroup "SPMI_INT_EN_SET (at 0x615)"
        set &access:&cmd_addr %l (0x8006150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_EN_SET                          = " "0, 1"
    tree.end
    tree "SPMI_INT_EN_CLR"
      sgroup "SPMI_INT_EN_CLR (at 0x616)"
        set &access:&cmd_addr %l (0x8006160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_EN_CLR                          = " "0, 1"
    tree.end
    tree "SPMI_INT_LATCHED_STS"
      sgroup "SPMI_INT_LATCHED_STS (at 0x618)"
        set &access:&cmd_addr %l (0x8006180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_LATCHED_STS                     = " "0, 1"
    tree.end
    tree "SPMI_INT_PENDING_STS"
      sgroup "SPMI_INT_PENDING_STS (at 0x619)"
        set &access:&cmd_addr %l (0x8006190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_PENDING_STS                     = " "0, 1"
    tree.end
    tree "SPMI_INT_MID_SEL"
      sgroup "SPMI_INT_MID_SEL (at 0x61a)"
        set &access:&cmd_addr %l (0x80061a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "SPMI_INT_PRIORITY"
      sgroup "SPMI_INT_PRIORITY (at 0x61b)"
        set &access:&cmd_addr %l (0x80061b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "SPMI_SPMI_BUF_CFG"
      sgroup "SPMI_SPMI_BUF_CFG (at 0x640)"
        set &access:&cmd_addr %l (0x8006400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BUFFER_STRENGTH                          = " "0 (LOW10PF),1 (MID20PF),2 (HIGH40PF),3 (VERYHIGH50PF)"
    tree.end
    tree "SPMI_SEC_ACCESS"
      sgroup "SPMI_SEC_ACCESS (at 0x6d0)"
        set &access:&cmd_addr %l (0x8006d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SPMI_PERPH_RESET_CTL2"
      sgroup "SPMI_PERPH_RESET_CTL2 (at 0x6d9)"
        set &access:&cmd_addr %l (0x8006d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "SPMI_PERPH_RESET_CTL3"
      sgroup "SPMI_PERPH_RESET_CTL3 (at 0x6da)"
        set &access:&cmd_addr %l (0x8006da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "SPMI_PERPH_RESET_CTL4"
      sgroup "SPMI_PERPH_RESET_CTL4 (at 0x6db)"
        set &access:&cmd_addr %l (0x8006db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SPMI_INT_TEST1"
      sgroup "SPMI_INT_TEST1 (at 0x6e0)"
        set &access:&cmd_addr %l (0x8006e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "SPMI_INT_TEST_VAL"
      sgroup "SPMI_INT_TEST_VAL (at 0x6e1)"
        set &access:&cmd_addr %l (0x8006e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_TEST_VAL                        = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "SPMI_TEST1"
      sgroup "SPMI_TEST1 (at 0x6e2)"
        set &access:&cmd_addr %l (0x8006e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST_EN                                 = "
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPMI_DTEST_BYP                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST_SEL                                = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "SPMI_OPTIONS"
  tree "SPMI_OPTIONS"
    tree "SPMI_OPTIONS_SPMI_ON"
      sgroup "SPMI_OPTIONS_SPMI_ON (at 0x20643)"
        set &access:&cmd_addr %l (0x8006430|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6430|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_ON                                  = " "0 (SPMI_IS_OFF),1 (SPMI_IS_ON)"
    tree.end
    tree "SPMI_OPTIONS_SPMI_SLAVE_ID0"
      sgroup "SPMI_OPTIONS_SPMI_SLAVE_ID0 (at 0x20644)"
        set &access:&cmd_addr %l (0x8006440|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6440|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SPMI_SLAVE_ID0                           = "
    tree.end
    tree "SPMI_OPTIONS_SPMI_SLAVE_ID1"
      sgroup "SPMI_OPTIONS_SPMI_SLAVE_ID1 (at 0x20645)"
        set &access:&cmd_addr %l (0x8006450|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6450|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SPMI_SLAVE_ID1                           = "
    tree.end
    tree "SPMI_OPTIONS_SPMI_GROUP_ID0"
      sgroup "SPMI_OPTIONS_SPMI_GROUP_ID0 (at 0x20646)"
        set &access:&cmd_addr %l (0x8006460|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6460|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SPMI_GROUP_ID0                           = "
    tree.end
    tree "SPMI_OPTIONS_SPMI_GROUP_ID1"
      sgroup "SPMI_OPTIONS_SPMI_GROUP_ID1 (at 0x20647)"
        set &access:&cmd_addr %l (0x8006470|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6470|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SPMI_GROUP_ID1                           = "
    tree.end
  tree.end
tree.end
tree "TEMP_ALARM"
  tree "TEMP_ALARM"
    tree "TEMP_ALARM_REVISION1"
      sgroup "TEMP_ALARM_REVISION1 (at 0x2400)"
        set &access:&cmd_addr %l (0x8024000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "TEMP_ALARM_REVISION2"
      sgroup "TEMP_ALARM_REVISION2 (at 0x2401)"
        set &access:&cmd_addr %l (0x8024010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "TEMP_ALARM_REVISION3"
      sgroup "TEMP_ALARM_REVISION3 (at 0x2402)"
        set &access:&cmd_addr %l (0x8024020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "TEMP_ALARM_REVISION4"
      sgroup "TEMP_ALARM_REVISION4 (at 0x2403)"
        set &access:&cmd_addr %l (0x8024030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "TEMP_ALARM_PERPH_TYPE"
      sgroup "TEMP_ALARM_PERPH_TYPE (at 0x2404)"
        set &access:&cmd_addr %l (0x8024040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "TEMP_ALARM_PERPH_SUBTYPE"
      sgroup "TEMP_ALARM_PERPH_SUBTYPE (at 0x2405)"
        set &access:&cmd_addr %l (0x8024050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "TEMP_ALARM_STATUS1"
      sgroup "TEMP_ALARM_STATUS1 (at 0x2408)"
        set &access:&cmd_addr %l (0x8024080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TEMP_ALARM_OK                            = " "0 (TEMP_ALARM_DISABLED),1 (TEMP_ALARM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ST3_SHUTDOWN_STS                         = " "0 (NO_EVENT),1 (ST3_EVENT_OCCURRED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ST2_SHUTDOWN_STS                         = " "0 (NO_EVENT),1 (ST2_EVENT_OCCURRED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TEMP_ALARM_FSM_STATE                     = " "0 (STAGE_0),1 (STAGE_1),2 (STAGE_2),3 (STAGE_3)"
    tree.end
    tree "TEMP_ALARM_INT_RT_STS"
      sgroup "TEMP_ALARM_INT_RT_STS (at 0x2410)"
        set &access:&cmd_addr %l (0x8024100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_RT_STS                        = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "TEMP_ALARM_INT_SET_TYPE"
      sgroup "TEMP_ALARM_INT_SET_TYPE (at 0x2411)"
        set &access:&cmd_addr %l (0x8024110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_TYPE                          = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "TEMP_ALARM_INT_POLARITY_HIGH"
      sgroup "TEMP_ALARM_INT_POLARITY_HIGH (at 0x2412)"
        set &access:&cmd_addr %l (0x8024120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_HIGH                          = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "TEMP_ALARM_INT_POLARITY_LOW"
      sgroup "TEMP_ALARM_INT_POLARITY_LOW (at 0x2413)"
        set &access:&cmd_addr %l (0x8024130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_LOW                           = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "TEMP_ALARM_INT_LATCHED_CLR"
      sgroup "TEMP_ALARM_INT_LATCHED_CLR (at 0x2414)"
        set &access:&cmd_addr %l (0x8024140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_LATCHED_CLR                   = " "0, 1"
    tree.end
    tree "TEMP_ALARM_INT_EN_SET"
      sgroup "TEMP_ALARM_INT_EN_SET (at 0x2415)"
        set &access:&cmd_addr %l (0x8024150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_EN_SET                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "TEMP_ALARM_INT_EN_CLR"
      sgroup "TEMP_ALARM_INT_EN_CLR (at 0x2416)"
        set &access:&cmd_addr %l (0x8024160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_EN_CLR                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "TEMP_ALARM_INT_LATCHED_STS"
      sgroup "TEMP_ALARM_INT_LATCHED_STS (at 0x2418)"
        set &access:&cmd_addr %l (0x8024180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_LATCHED_STS                   = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "TEMP_ALARM_INT_PENDING_STS"
      sgroup "TEMP_ALARM_INT_PENDING_STS (at 0x2419)"
        set &access:&cmd_addr %l (0x8024190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_PENDING_STS                   = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "TEMP_ALARM_INT_MID_SEL"
      sgroup "TEMP_ALARM_INT_MID_SEL (at 0x241a)"
        set &access:&cmd_addr %l (0x80241a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x241a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "TEMP_ALARM_INT_PRIORITY"
      sgroup "TEMP_ALARM_INT_PRIORITY (at 0x241b)"
        set &access:&cmd_addr %l (0x80241b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x241b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "TEMP_ALARM_SHUTDOWN_CTL1"
      sgroup "TEMP_ALARM_SHUTDOWN_CTL1 (at 0x2440)"
        set &access:&cmd_addr %l (0x8024400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVRD_ST3_EN                              = " "0 (NO_OVERRIDE),1 (OVERTEMP_SHUTDOWN_BLOCKED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVRD_ST2_EN                              = " "0 (NO_OVERRIDE),1 (OVERTEMP_SHUTDOWN_BLOCKED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TEMP_THRESH_CNTRL                        = " "0 (THRESH_105C_125C_145C),1 (THRESH_110C_130C_150C),2 (THRESH_115C_135C_155C),3 (THRESH_120C_140C_160C)"
    tree.end
    tree "TEMP_ALARM_SHUTDOWN_CTL2"
      sgroup "TEMP_ALARM_SHUTDOWN_CTL2 (at 0x2442)"
        set &access:&cmd_addr %l (0x8024420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ST3_SHUTDOWN_CLR                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ST2_SHUTDOWN_CLR                         = " "0, 1"
    tree.end
    tree "TEMP_ALARM_EN_CTL1"
      sgroup "TEMP_ALARM_EN_CTL1 (at 0x2446)"
        set &access:&cmd_addr %l (0x8024460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TEMP_ALARM_EN                            = " "0 (TEMP_ALARM_DISABLED),1 (TEMP_ALARM_FORCED_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_TEMP_ALARM_HW_EN                  = " "0 (TEMP_ALARM_DISABLED),1 (TEMP_ALARM_FOLLOWS_HW_EN)"
    tree.end
    tree "TEMP_ALARM_SEC_ACCESS"
      sgroup "TEMP_ALARM_SEC_ACCESS (at 0x24d0)"
        set &access:&cmd_addr %l (0x8024d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "TEMP_ALARM_PERPH_RESET_CTL1"
      sgroup "TEMP_ALARM_PERPH_RESET_CTL1 (at 0x24d8)"
        set &access:&cmd_addr %l (0x8024d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "TEMP_ALARM_PERPH_RESET_CTL2"
      sgroup "TEMP_ALARM_PERPH_RESET_CTL2 (at 0x24d9)"
        set &access:&cmd_addr %l (0x8024d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "TEMP_ALARM_PERPH_RESET_CTL3"
      sgroup "TEMP_ALARM_PERPH_RESET_CTL3 (at 0x24da)"
        set &access:&cmd_addr %l (0x8024da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "TEMP_ALARM_PERPH_RESET_CTL4"
      sgroup "TEMP_ALARM_PERPH_RESET_CTL4 (at 0x24db)"
        set &access:&cmd_addr %l (0x8024db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "TEMP_ALARM_INT_TEST1"
      sgroup "TEMP_ALARM_INT_TEST1 (at 0x24e0)"
        set &access:&cmd_addr %l (0x8024e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "TEMP_ALARM_INT_TEST_VAL"
      sgroup "TEMP_ALARM_INT_TEST_VAL (at 0x24e1)"
        set &access:&cmd_addr %l (0x8024e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEMP_ALARM_STS_TEST_VAL                  = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "TEMP_ALARM_TEST1"
      sgroup "TEMP_ALARM_TEST1 (at 0x24e2)"
        set &access:&cmd_addr %l (0x8024e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST_STAT                               = " "0 (TRISTATE),1 (DTEST1_UPR_STAT_I_DTEST2_LWR_STAT_I)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ATEST_BUF_VTEMP                          = " "0 (USE_INTERNAL_VTEMP),1 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST2                                   = " "0 (OFF),1 (ATEST_VTEMP_BUF),2 (ATEST_UPR_DAC),3 (ATEST_LWR_DAC)"
    tree.end
    tree "TEMP_ALARM_TEST2"
      sgroup "TEMP_ALARM_TEST2 (at 0x24e3)"
        set &access:&cmd_addr %l (0x8024e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ATEST_VTEMP                              = " "0 (BUFFERED),1 (UNBUFFERED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST_STAT                               = " "0 (TRISTATE),1 (DTEST2_DTEST1_TEMP_STATUS)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ATEST_THRESHOLD                          = " "0 (NORMAL_OPERATION),1 (USE_ATEST_FOR_THRESHOLDS)"
    tree.end
    tree "TEMP_ALARM_TRIM_NUM"
      sgroup "TEMP_ALARM_TRIM_NUM (at 0x24f0)"
        set &access:&cmd_addr %l (0x8024f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "TEMP_ALARM_TRIM_OFFSET"
      sgroup "TEMP_ALARM_TRIM_OFFSET (at 0x24f1)"
        set &access:&cmd_addr %l (0x8024f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x24f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   OFFSET                                   = "
    tree.end
  tree.end
tree.end
tree "TRIM"
  tree "TRIM"
    tree "TRIM_REVISION1"
      sgroup "TRIM_REVISION1 (at 0xfe00)"
        set &access:&cmd_addr %l (0x80fe000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "TRIM_REVISION2"
      sgroup "TRIM_REVISION2 (at 0xfe01)"
        set &access:&cmd_addr %l (0x80fe010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "TRIM_REVISION3"
      sgroup "TRIM_REVISION3 (at 0xfe02)"
        set &access:&cmd_addr %l (0x80fe020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "TRIM_REVISION4"
      sgroup "TRIM_REVISION4 (at 0xfe03)"
        set &access:&cmd_addr %l (0x80fe030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "TRIM_PERPH_TYPE"
      sgroup "TRIM_PERPH_TYPE (at 0xfe04)"
        set &access:&cmd_addr %l (0x80fe040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "TRIM_PERPH_SUBTYPE"
      sgroup "TRIM_PERPH_SUBTYPE (at 0xfe05)"
        set &access:&cmd_addr %l (0x80fe050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "TRIM_TRIM_REG_INIT_STATUS"
      sgroup "TRIM_TRIM_REG_INIT_STATUS (at 0xfe08)"
        set &access:&cmd_addr %l (0x80fe080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRIM_OTP_NOT_PROG                        = " "0 (OTP_PROGRAMMED),1 (OTP_NOT_PROGRAMMED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SW_TRIM_REG_INIT_EXEC                    = " "0 (TRIM_NOT_RUN),1 (TRIM_COMPLETED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SW_TRIM_REG_INIT_ON                      = " "0 (TRIM_IDLE),1 (TRIM_ACTIVE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HW_TRIM_REG_INIT_EXEC                    = " "0 (TRIM_NOT_RUN),1 (TRIM_COMPLETED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HW_TRIM_REG_INIT_ON                      = " "0 (TRIM_IDLE),1 (TRIM_ACTIVE)"
    tree.end
    tree "TRIM_OTP_PROG_STATUS"
      sgroup "TRIM_OTP_PROG_STATUS (at 0xfe09)"
        set &access:&cmd_addr %l (0x80fe090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TRIM_OTP_ALREADY_PROG                    = " "0 (NO_ERROR),1 (DOUBLE_PROGRAMMING_DETECTED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OTP_PROG_EXEC                            = " "0 (PROGRAMMING_NOT_RUN),1 (PROGRAMMING_COMPLETED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TRIM_OTP_PROG_ON                         = " "0 (PROGRAMMING_IDLE),1 (PROGRAMMING_ACTIVE)"
    tree.end
    tree "TRIM_OTP_NUM_TRIM_REG_LSB"
      sgroup "TRIM_OTP_NUM_TRIM_REG_LSB (at 0xfe0a)"
        set &access:&cmd_addr %l (0x80fe0a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe0a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OTP_HA_LSB_DATA                          = "
    tree.end
    tree "TRIM_OTP_NUM_TRIM_REG_MSB"
      sgroup "TRIM_OTP_NUM_TRIM_REG_MSB (at 0xfe0b)"
        set &access:&cmd_addr %l (0x80fe0b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe0b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OTP_HA_MSB_DATA                          = "
    tree.end
    tree "TRIM_SEC_ACCESS"
      sgroup "TRIM_SEC_ACCESS (at 0xfed0)"
        set &access:&cmd_addr %l (0x80fed00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfed00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "TRIM_PERPH_RESET_CTL2"
      sgroup "TRIM_PERPH_RESET_CTL2 (at 0xfed9)"
        set &access:&cmd_addr %l (0x80fed90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfed90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RESET                 = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "TRIM_PERPH_RESET_CTL3"
      sgroup "TRIM_PERPH_RESET_CTL3 (at 0xfeda)"
        set &access:&cmd_addr %l (0x80feda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfeda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "TRIM_PERPH_RESET_CTL4"
      sgroup "TRIM_PERPH_RESET_CTL4 (at 0xfedb)"
        set &access:&cmd_addr %l (0x80fedb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfedb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "TRIM_TRIM_OTP_CFG1"
      sgroup "TRIM_TRIM_OTP_CFG1 (at 0xfee0)"
        set &access:&cmd_addr %l (0x80fee00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TRIM_VPP_SEL                             = " "0 (DVDD),1 (VPP_EXT)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TRIM_PPROG                               = " "0 (OTP_PROGRAMMING_DISABLED),1 (OTP_PROGRAMMING_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TRIM_PTM                                 = " "0 (REGULAR_MODES),1 (RESERVED),2 (MARGIN_1_READ_MODE),3 (MARGIN_2_READ_MODE)"
    tree.end
    tree "TRIM_TRIM_OTP_CFG2"
      sgroup "TRIM_TRIM_OTP_CFG2 (at 0xfee1)"
        set &access:&cmd_addr %l (0x80fee10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_MARGIN_RD_WS                        = "
    tree.end
    tree "TRIM_TRIM_OTP_PROG_CTL"
      sgroup "TRIM_TRIM_OTP_PROG_CTL (at 0xfee2)"
        set &access:&cmd_addr %l (0x80fee20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   START_OTP_PROG                           = " "0 (NO_EFFECT),1 (START_OTP_PROGRAMMING)"
    tree.end
    tree "TRIM_TRIM_REG_INIT_CTL"
      sgroup "TRIM_TRIM_REG_INIT_CTL (at 0xfee3)"
        set &access:&cmd_addr %l (0x80fee30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIM_START_COPY                       = " "0 (NO_EFFECT),1 (START_COPY)"
    tree.end
    tree "TRIM_TRIM_OTP_HA_CTL"
      sgroup "TRIM_TRIM_OTP_HA_CTL (at 0xfee4)"
        set &access:&cmd_addr %l (0x80fee40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   START_GET_OTP_HA                         = " "0 (NO_EFFECT),1 (READ_OTP_UPPER_BYTES)"
    tree.end
    tree "TRIM_TEST1"
      sgroup "TRIM_TEST1 (at 0xfee5)"
        set &access:&cmd_addr %l (0x80fee50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DTEST4_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DTEST3_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DTEST2_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DTEST1_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
    tree "TRIM_TEST_TRIM_CLK_REQ"
      sgroup "TRIM_TEST_TRIM_CLK_REQ (at 0xfee6)"
        set &access:&cmd_addr %l (0x80fee60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEST_CLK_REQ                             = " "0 (TRIM_CLK_DISABLED),1 (TRIM_CLK_ENABLED)"
    tree.end
  tree.end
tree.end
tree "VADC1_USR"
  tree "VADC1_USR"
    tree "VADC1_USR_REVISION1"
      sgroup "VADC1_USR_REVISION1 (at 0x3100)"
        set &access:&cmd_addr %l (0x8031000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "VADC1_USR_REVISION2"
      sgroup "VADC1_USR_REVISION2 (at 0x3101)"
        set &access:&cmd_addr %l (0x8031010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "VADC1_USR_REVISION3"
      sgroup "VADC1_USR_REVISION3 (at 0x3102)"
        set &access:&cmd_addr %l (0x8031020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "VADC1_USR_REVISION4"
      sgroup "VADC1_USR_REVISION4 (at 0x3103)"
        set &access:&cmd_addr %l (0x8031030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "VADC1_USR_PERPH_TYPE"
      sgroup "VADC1_USR_PERPH_TYPE (at 0x3104)"
        set &access:&cmd_addr %l (0x8031040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "VADC1_USR_PERPH_SUBTYPE"
      sgroup "VADC1_USR_PERPH_SUBTYPE (at 0x3105)"
        set &access:&cmd_addr %l (0x8031050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "VADC1_USR_STATUS1"
      sgroup "VADC1_USR_STATUS1 (at 0x3108)"
        set &access:&cmd_addr %l (0x8031080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MEAS_INTERVAL_EN_STS                     = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   REQ_STS                                  = " "0 (REQ_NOT_IN_PROGRESS),1 (REQ_IN_PROGRESS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC                                      = " "0 (CONV_NOT_COMPLETE),1 (CONV_COMPLETE)"
    tree.end
    tree "VADC1_USR_STATUS2"
      sgroup "VADC1_USR_STATUS2 (at 0x3109)"
        set &access:&cmd_addr %l (0x8031090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   CONV_SEQ_STATE                           = "
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_FLAG                      = " "0 (FIFO_EMPTY_WHEN_REQ_MADE),1 (FIFO_NOT_EMPTY_WHEN_REQ_MADE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CONV_SEQ_TIMEOUT_STS                     = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
    tree.end
    tree "VADC1_USR_INT_RT_STS"
      sgroup "VADC1_USR_INT_RT_STS (at 0x3110)"
        set &access:&cmd_addr %l (0x8031100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_RT_STS                       = " "0 (LOW_THR_INT_FALSE),1 (LOW_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_RT_STS                      = " "0 (HIGH_THR_INT_FALSE),1 (HIGH_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_RT_STS              = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_RT_STS                = " "0 (FIFO_NOT_EMPTY_INT_FALSE),1 (FIFO_EMPTY_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_RT_STS                           = " "0 (CONV_COMPLETE_INT_FALSE),1 (CONV_COMPLETE_INT_TRUE)"
    tree.end
    tree "VADC1_USR_INT_SET_TYPE"
      sgroup "VADC1_USR_INT_SET_TYPE (at 0x3111)"
        set &access:&cmd_addr %l (0x8031110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_SET_TYPE                     = " "0 (LOW_THR_INT_LEVEL),1 (LOW_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_SET_TYPE                    = " "0 (HIGH_THR_INT_LEVEL),1 (HIGH_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_SET_TYPE            = " "0 (CONV_SEQ_TIMEOUT_LEVEL),1 (CONV_SEQ_TIMEOUT_EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_SET_TYPE              = " "0 (FIFO_NOT_EMPTY_LEVEL),1 (FIFO_NOT_EMPTY_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_SET_INT_TYPE                         = " "0 (EOC_LEVEL),1 (EOC_EDGE)"
    tree.end
    tree "VADC1_USR_INT_POLARITY_HIGH"
      sgroup "VADC1_USR_INT_POLARITY_HIGH (at 0x3112)"
        set &access:&cmd_addr %l (0x8031120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_HIGH_DISABLED),1 (LOW_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_HIGH_DISABLED),1 (HIGH_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_HIGH                = " "0 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_HIGH                  = " "0 (FIFO_NOT_EMPTY_INT_POL_HIGH_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_HIGH                             = " "0 (EOC_INT_POL_HIGH_DISABLED),1 (EOC_INT_POL_HIGH_ENABLED)"
    tree.end
    tree "VADC1_USR_INT_POLARITY_LOW"
      sgroup "VADC1_USR_INT_POLARITY_LOW (at 0x3113)"
        set &access:&cmd_addr %l (0x8031130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_LOW_DISABLED),1 (LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_LOW_DISABLED),1 (HIGH_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LOW                 = " "0 (CONV_SEQ_TIMEOUT_INT_POL_LOW_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LOW                   = " "0 (FIFO_NOT_EMPTY_INT_POL_LOW_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LOW                              = " "0 (EOC_INT_POL_LOW_DISABLED),1 (EOC_INT_POL_LOW_ENABLED)"
    tree.end
    tree "VADC1_USR_INT_LATCHED_CLR"
      sgroup "VADC1_USR_INT_LATCHED_CLR (at 0x3114)"
        set &access:&cmd_addr %l (0x8031140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_CLR         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "VADC1_USR_INT_EN_SET"
      sgroup "VADC1_USR_INT_EN_SET (at 0x3115)"
        set &access:&cmd_addr %l (0x8031150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_SET                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_SET                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_SET              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_SET                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_SET                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC1_USR_INT_EN_CLR"
      sgroup "VADC1_USR_INT_EN_CLR (at 0x3116)"
        set &access:&cmd_addr %l (0x8031160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_CLR                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_CLR                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_CLR              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_CLR                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_CLR                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC1_USR_INT_LATCHED_STS"
      sgroup "VADC1_USR_INT_LATCHED_STS (at 0x3118)"
        set &access:&cmd_addr %l (0x8031180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_STS                  = " "0 (LOW_THR_INT_LATCHED_FALSE),1 (LOW_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_STS                 = " "0 (HIGH_THR_INT_LATCHED_FALSE),1 (HIGH_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_LATCHED_FALSE),1 (CONV_SEQ_TIMEOUT_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_STS           = " "0 (FIFO_NOT_EMPTY_INT_LATCHED_FALSE),1 (FIFO_NOT_EMPTY_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_STS                      = " "0 (EOC_INT_LATCHED_FALSE),1 (EOC_INT_LATCHED_TRUE)"
    tree.end
    tree "VADC1_USR_INT_PENDING_STS"
      sgroup "VADC1_USR_INT_PENDING_STS (at 0x3119)"
        set &access:&cmd_addr %l (0x8031190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_PENDING_STS                  = " "0 (LOW_THR_INT_PENDING_FALSE),1 (LOW_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_PENDING_STS                 = " "0 (HIGH_THR_INT_PENDING_FALSE),1 (HIGH_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_PENDING_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_PENDING_FALSE),1 (CONV_SEQ_TIMEOUT_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_PENDING_STS           = " "0 (FIFO_NOT_EMPTY_INT_PENDING_FALSE),1 (FIFO_NOT_EMPTY_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_PENDING_STS                      = " "0 (EOC_INT_PENDING_FALSE),1 (EOC_INT_PENDING_TRUE)"
    tree.end
    tree "VADC1_USR_INT_MID_SEL"
      sgroup "VADC1_USR_INT_MID_SEL (at 0x311a)"
        set &access:&cmd_addr %l (0x80311a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x311a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "VADC1_USR_INT_PRIORITY"
      sgroup "VADC1_USR_INT_PRIORITY (at 0x311b)"
        set &access:&cmd_addr %l (0x80311b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x311b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "VADC1_USR_MODE_CTL"
      sgroup "VADC1_USR_MODE_CTL (at 0x3140)"
        set &access:&cmd_addr %l (0x8031400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREF_XO_THM_FORCE                        = " "0 (VREF_XO_THM_FORCE_FALSE),1 (VREF_XO_THM_FORCE_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   AMUX_TRIM_EN                             = " "0 (AMUX_TRIM_DISABLED),1 (AMUX_TRIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_TRIM_EN                              = " "0 (ADC_TRIM_DISABLED),1 (ADC_TRIM_ENABLED)"
    tree.end
    tree "VADC1_USR_EN_CTL1"
      sgroup "VADC1_USR_EN_CTL1 (at 0x3146)"
        set &access:&cmd_addr %l (0x8031460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_EN                                   = " "0 (ADC_DISABLED),1 (ADC_ENABLED)"
    tree.end
    tree "VADC1_USR_ADC_CH_SEL_CTL"
      sgroup "VADC1_USR_ADC_CH_SEL_CTL (at 0x3148)"
        set &access:&cmd_addr %l (0x8031480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC1_USR_ADC_DIG_PARAM"
      sgroup "VADC1_USR_ADC_DIG_PARAM (at 0x3150)"
        set &access:&cmd_addr %l (0x8031500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEC_RATIO_SEL                            = " "0 (DECI_512),1 (DECI_1K),2 (DECI_2K),3 (DECI_4K)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CLK_SEL                                  = " "0 (CLK_SEL_2P4MHZ),1 (CLK_SEL_4P8MHZ),2 (CLK_SEL_9P6MHZ),3 (CLK_SEL_19P2MHZ)"
    tree.end
    tree "VADC1_USR_HW_SETTLE_DELAY"
      sgroup "VADC1_USR_HW_SETTLE_DELAY (at 0x3151)"
        set &access:&cmd_addr %l (0x8031510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   HW_SETTLE_DELAY                          = "
    tree.end
    tree "VADC1_USR_CONV_REQ"
      sgroup "VADC1_USR_CONV_REQ (at 0x3152)"
        set &access:&cmd_addr %l (0x8031520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REQ                                      = " "0 (CONV_REQ_FALSE),1 (CONV_REQ_TRUE)"
    tree.end
    tree "VADC1_USR_CONV_SEQ_CTL"
      sgroup "VADC1_USR_CONV_SEQ_CTL (at 0x3154)"
        set &access:&cmd_addr %l (0x8031540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CONV_SEQ_HOLDOFF                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CONV_SEQ_TIMEOUT                         = "
    tree.end
    tree "VADC1_USR_CONV_SEQ_TRIG_CTL"
      sgroup "VADC1_USR_CONV_SEQ_TRIG_CTL (at 0x3155)"
        set &access:&cmd_addr %l (0x8031550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CONV_SEQ_TRIG_COND                       = " "0 (FALLING_EDGE),1 (RISING_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CONV_SEQ_TRIG_SEL                        = " "0 (ADC_TRIG0),1 (ADC_TRIG1),2 (ADC_TRIG2),3 (ADC_TRIG3)"
    tree.end
    tree "VADC1_USR_MEAS_INTERVAL_CTL"
      sgroup "VADC1_USR_MEAS_INTERVAL_CTL (at 0x3157)"
        set &access:&cmd_addr %l (0x8031570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MEAS_INTERVAL_TIME                       = "
    tree.end
    tree "VADC1_USR_MEAS_INTERVAL_OP_CTL"
      sgroup "VADC1_USR_MEAS_INTERVAL_OP_CTL (at 0x3159)"
        set &access:&cmd_addr %l (0x8031590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MEAS_INTERVAL_OP                         = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
    tree.end
    tree "VADC1_USR_FAST_AVG_CTL"
      sgroup "VADC1_USR_FAST_AVG_CTL (at 0x315a)"
        set &access:&cmd_addr %l (0x80315a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FAST_AVG_SAMPLES                         = "
    tree.end
    tree "VADC1_USR_FAST_AVG_EN"
      sgroup "VADC1_USR_FAST_AVG_EN (at 0x315b)"
        set &access:&cmd_addr %l (0x80315b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FAST_AVG_EN                              = " "0 (FAST_AVG_DISABLED),1 (FAST_AVG_ENABLED)"
    tree.end
    tree "VADC1_USR_LOW_THR0"
      sgroup "VADC1_USR_LOW_THR0 (at 0x315c)"
        set &access:&cmd_addr %l (0x80315c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC1_USR_LOW_THR1"
      sgroup "VADC1_USR_LOW_THR1 (at 0x315d)"
        set &access:&cmd_addr %l (0x80315d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC1_USR_HIGH_THR0"
      sgroup "VADC1_USR_HIGH_THR0 (at 0x315e)"
        set &access:&cmd_addr %l (0x80315e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC1_USR_HIGH_THR1"
      sgroup "VADC1_USR_HIGH_THR1 (at 0x315f)"
        set &access:&cmd_addr %l (0x80315f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC1_USR_DATA0"
      sgroup "VADC1_USR_DATA0 (at 0x3160)"
        set &access:&cmd_addr %l (0x8031600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC1_USR_DATA1"
      sgroup "VADC1_USR_DATA1 (at 0x3161)"
        set &access:&cmd_addr %l (0x8031610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC1_USR_SEC_ACCESS"
      sgroup "VADC1_USR_SEC_ACCESS (at 0x31d0)"
        set &access:&cmd_addr %l (0x8031d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "VADC1_USR_PERPH_RESET_CTL1"
      sgroup "VADC1_USR_PERPH_RESET_CTL1 (at 0x31d8)"
        set &access:&cmd_addr %l (0x8031d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (MODULE_DIS_AFTER_WARM_SOFT_RESET),1 (MODULE_EN_AFTER_WARM_SOFT_RESET)"
    tree.end
    tree "VADC1_USR_PERPH_RESET_CTL2"
      sgroup "VADC1_USR_PERPH_RESET_CTL2 (at 0x31d9)"
        set &access:&cmd_addr %l (0x8031d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RESET_FALSE),1 (FOLLOW_GLOBAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC1_USR_PERPH_RESET_CTL3"
      sgroup "VADC1_USR_PERPH_RESET_CTL3 (at 0x31da)"
        set &access:&cmd_addr %l (0x8031da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "VADC1_USR_PERPH_RESET_CTL4"
      sgroup "VADC1_USR_PERPH_RESET_CTL4 (at 0x31db)"
        set &access:&cmd_addr %l (0x8031db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC1_USR_INT_TEST1"
      sgroup "VADC1_USR_INT_TEST1 (at 0x31e0)"
        set &access:&cmd_addr %l (0x8031e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_FALSE),1 (INT_TEST_MODE_TRUE)"
    tree.end
    tree "VADC1_USR_INT_TEST_VAL"
      sgroup "VADC1_USR_INT_TEST_VAL (at 0x31e1)"
        set &access:&cmd_addr %l (0x8031e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_TEST_VAL                     = " "0 (LOW_THR_INT_TEST_FALSE),1 (LOW_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_TEST_VAL                    = " "0 (HIGH_THR_INT_TEST_FALSE),1 (HIGH_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_TEST_VAL            = " "0 (CONV_SEQ_TIMEOUT_TEST_FALSE),1 (CONV_SEQ_TIMEOUT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_TEST_VAL              = " "0 (FIFO_NOT_EMPTY_TEST_FALSE),1 (FIFO_NOT_EMPTY_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_TEST_VAL                         = " "0 (EOC_TEST_FALSE),1 (EOC_TEST_TRUE)"
    tree.end
    tree "VADC1_USR_TEST1_ADC_ANA_PARAM"
      sgroup "VADC1_USR_TEST1_ADC_ANA_PARAM (at 0x31e2)"
        set &access:&cmd_addr %l (0x8031e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   HS_MODE_EN                               = " "0 (DISABLE_HS_MODE_N),1 (ENABLE_HS_MODE_N)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   IOTA1_CTL                                = " "0 (OTA1_1UA_BIAS),1 (OTA1_2UA_BIAS),2 (OTA1_3UA_BIAS),3 (OTA1_4UA_BIAS)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   IOTA2_CTL                                = " "0 (OTA2_1UA_BIAS),1 (OTA2_2UA_BIAS)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   IBUF_CTL                                 = " "0 (REF_1UA_BIAS),1 (REF_2UA_BIAS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XOADC_EN                                 = " "0 (XOADC_MOD_DISABLED),1 (XOADC_MOD_ENABLED)"
    tree.end
    tree "VADC1_USR_TEST2_ADC_DIG_PARAM"
      sgroup "VADC1_USR_TEST2_ADC_DIG_PARAM (at 0x31e3)"
        set &access:&cmd_addr %l (0x8031e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DEM_EN                                   = " "0 (DEM_DISABLED),1 (DEM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CLK_GATE_EN                              = " "0 (CLK_GATE_DISABLED),1 (CLK_GATE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SEL_SHIFT                                = " "0 (DECI_SEL),1 (FILTOUT_15_0),2 (FILTOUT_25_16),3 (DECI_SEL1)"
    tree.end
    tree "VADC1_USR_TEST3_ADC_RSV"
      sgroup "VADC1_USR_TEST3_ADC_RSV (at 0x31e4)"
        set &access:&cmd_addr %l (0x8031e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SINC_FILT_SEL                            = " "0 (SINC2_OUTPUT),1 (SINC1_OUTPUT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RESET_SINC_FILT                          = " "0 (RESET_DIG_FILT_FALSE),1 (RESET_DIG_FILT_TRUE)"
    tree.end
    tree "VADC1_USR_TEST4_ADC_ATEST"
      sgroup "VADC1_USR_TEST4_ADC_ATEST (at 0x31e5)"
        set &access:&cmd_addr %l (0x8031e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REF_EN                                   = " "0 (DISABLE_XOADC_REF_VOLT),1 (ENABLE_XOADC_REF_VOLTAGE)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   VICM_SEL                                 = " "0 (VICM_0P65),1 (VICM_0P70),2 (VICM_0P75),3 (VICM_OP80)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   VOCM_SEL                                 = " "0 (VOCM_0P60),1 (VOCM_0P65),2 (VOCM_0P70),3 (VOCM_0P75)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST_SEL                                = " "0 (ATEST3_DISABLED),1 (VTH_N),2 (VTH_P),3 (VICM),4 (VOCM),5 (VREFN),6 (VREFMID),7 (VREFP)"
    tree.end
    tree "VADC1_USR_TEST5_AMUX_ATEST"
      sgroup "VADC1_USR_TEST5_AMUX_ATEST (at 0x31e6)"
        set &access:&cmd_addr %l (0x8031e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ATEST2_SEL                               = " "0 (NORM_OP),1 (AMUX_OUT_TO_ATEST2)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ATEST1_SEL                               = " "0 (NORM_OP),1 (ATEST1_TO_INPUT_OF_OUTPUT_BUF)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CAL_EN                                   = " "0 (OL_CAL_DIS),1 (OL_CAL_EN)"
    tree.end
    tree "VADC1_USR_TEST6_DTEST"
      sgroup "VADC1_USR_TEST6_DTEST (at 0x31e7)"
        set &access:&cmd_addr %l (0x8031e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SEL_FSM                                  = " "0 (REQUEST_FSM),1 (VADC_CONVERSION_FSM),2 (SAMPLE_COUNT_LSB),3 (SAMPLE_COUNT_MSB)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
    tree "VADC1_USR_TRIM_NUM"
      sgroup "VADC1_USR_TRIM_NUM (at 0x31f0)"
        set &access:&cmd_addr %l (0x8031f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "VADC1_USR_TRIM1_ADC"
      sgroup "VADC1_USR_TRIM1_ADC (at 0x31f1)"
        set &access:&cmd_addr %l (0x8031f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   DAC_REF                                  = "
    tree.end
    tree "VADC1_USR_TRIM1_AMUX"
      sgroup "VADC1_USR_TRIM1_AMUX (at 0x31f2)"
        set &access:&cmd_addr %l (0x8031f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   PRESCALE_167_RATIO                       = "
    tree.end
    tree "VADC1_USR_TRIM2_AMUX"
      sgroup "VADC1_USR_TRIM2_AMUX (at 0x31f3)"
        set &access:&cmd_addr %l (0x8031f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   PRESCALE_333_RATIO                       = "
    tree.end
    tree "VADC1_USR_TRIM4_AMUX"
      sgroup "VADC1_USR_TRIM4_AMUX (at 0x31f4)"
        set &access:&cmd_addr %l (0x8031f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   BUF_LOW_OFFSET                           = "
    tree.end
    tree "VADC1_USR_TRIM5_AMUX"
      sgroup "VADC1_USR_TRIM5_AMUX (at 0x31f5)"
        set &access:&cmd_addr %l (0x8031f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   BUF_HIGH_OFFSET                          = "
    tree.end
  tree.end
tree.end
tree "VADC2_BTM"
  tree "VADC2_BTM"
    tree "VADC2_BTM_REVISION1"
      sgroup "VADC2_BTM_REVISION1 (at 0x3400)"
        set &access:&cmd_addr %l (0x8034000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "VADC2_BTM_REVISION2"
      sgroup "VADC2_BTM_REVISION2 (at 0x3401)"
        set &access:&cmd_addr %l (0x8034010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "VADC2_BTM_REVISION3"
      sgroup "VADC2_BTM_REVISION3 (at 0x3402)"
        set &access:&cmd_addr %l (0x8034020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "VADC2_BTM_REVISION4"
      sgroup "VADC2_BTM_REVISION4 (at 0x3403)"
        set &access:&cmd_addr %l (0x8034030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "VADC2_BTM_PERPH_TYPE"
      sgroup "VADC2_BTM_PERPH_TYPE (at 0x3404)"
        set &access:&cmd_addr %l (0x8034040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "VADC2_BTM_PERPH_SUBTYPE"
      sgroup "VADC2_BTM_PERPH_SUBTYPE (at 0x3405)"
        set &access:&cmd_addr %l (0x8034050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "VADC2_BTM_STATUS1"
      sgroup "VADC2_BTM_STATUS1 (at 0x3408)"
        set &access:&cmd_addr %l (0x8034080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MEAS_INTERVAL_EN_STS                     = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   REQ_STS                                  = " "0 (REQ_NOT_IN_PROGRESS),1 (REQ_IN_PROGRESS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC                                      = " "0 (CONV_NOT_COMPLETE),1 (CONV_COMPLETE)"
    tree.end
    tree "VADC2_BTM_STATUS2"
      sgroup "VADC2_BTM_STATUS2 (at 0x3409)"
        set &access:&cmd_addr %l (0x8034090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   CONV_SEQ_STATE                           = "
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_FLAG                      = " "0 (FIFO_EMPTY_WHEN_REQ_MADE),1 (FIFO_NOT_EMPTY_WHEN_REQ_MADE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CONV_SEQ_TIMEOUT_STS                     = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
    tree.end
    tree "VADC2_BTM_STATUS_LOW"
      sgroup "VADC2_BTM_STATUS_LOW (at 0x340a)"
        set &access:&cmd_addr %l (0x80340a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x340a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   M7_LOW                                   = " "0 (M7_LOW_FALSE),1 (M7_LOW_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   M6_LOW                                   = " "0 (M6_LOW_FALSE),1 (M6_LOW_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   M5_LOW                                   = " "0 (M5_LOW_FALSE),1 (M5_LOW_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   M4_LOW                                   = " "0 (M4_LOW_FALSE),1 (M4_LOW_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   M3_LOW                                   = " "0 (M3_LOW_FALSE),1 (M3_LOW_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   M2_LOW                                   = " "0 (M2_LOW_FALSE),1 (M2_LOW_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   M1_LOW                                   = " "0 (M1_LOW_FALSE),1 (M1_LOW_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   M0_LOW                                   = " "0 (M0_LOW_FALSE),1 (M0_LOW_TRUE)"
    tree.end
    tree "VADC2_BTM_STATUS_HIGH"
      sgroup "VADC2_BTM_STATUS_HIGH (at 0x340b)"
        set &access:&cmd_addr %l (0x80340b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x340b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   M7_HIGH                                  = " "0 (M7_HIGH_FALSE),1 (M7_HIGH_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   M6_HIGH                                  = " "0 (M6_HIGH_FALSE),1 (M6_HIGH_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   M5_HIGH                                  = " "0 (M5_HIGH_FALSE),1 (M5_HIGH_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   M4_HIGH                                  = " "0 (M4_HIGH_FALSE),1 (M4_HIGH_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   M3_HIGH                                  = " "0 (M3_HIGH_FALSE),1 (M3_HIGH_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   M2_HIGH                                  = " "0 (M2_HIGH_FALSE),1 (M2_HIGH_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   M1_HIGH                                  = " "0 (M1_HIGH_FALSE),1 (M1_HIGH_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   M0_HIGH                                  = " "0 (M0_HIGH_FALSE),1 (M0_HIGH_TRUE)"
    tree.end
    tree "VADC2_BTM_INT_RT_STS"
      sgroup "VADC2_BTM_INT_RT_STS (at 0x3410)"
        set &access:&cmd_addr %l (0x8034100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_RT_STS                       = " "0 (LOW_THR_INT_LEVEL),1 (LOW_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_RT_STS                      = " "0 (HIGH_THR_INT_LEVEL),1 (HIGH_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_RT_STS              = " "0 (CONV_SEQ_TIMEOUT_LEVEL),1 (CONV_SEQ_TIMEOUT_EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_RT_STS                = " "0 (FIFO_NOT_EMPTY_LEVEL),1 (FIFO_NOT_EMPTY_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_RT_STS                           = " "0 (EOC_LEVEL),1 (EOC_EDGE)"
    tree.end
    tree "VADC2_BTM_INT_SET_TYPE"
      sgroup "VADC2_BTM_INT_SET_TYPE (at 0x3411)"
        set &access:&cmd_addr %l (0x8034110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_SET_TYPE                     = " "0 (LOW_THR_INT_POL_HIGH_DISABLED),1 (LOW_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_SET_TYPE                    = " "0 (HIGH_THR_INT_POL_HIGH_DISABLED),1 (HIGH_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_SET_TYPE            = " "0 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_SET_TYPE              = " "0 (FIFO_NOT_EMPTY_INT_POL_HIGH_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_SET_INT_TYPE                         = " "0 (EOC_INT_POL_HIGH_DISABLED),1 (EOC_INT_POL_HIGH_ENABLED)"
    tree.end
    tree "VADC2_BTM_INT_POLARITY_HIGH"
      sgroup "VADC2_BTM_INT_POLARITY_HIGH (at 0x3412)"
        set &access:&cmd_addr %l (0x8034120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_LOW_DISABLED),1 (LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_LOW_DISABLED),1 (HIGH_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_HIGH                = " "0 (CONV_SEQ_TIMEOUT_INT_POL_LOW_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_HIGH                  = " "0 (FIFO_NOT_EMPTY_INT_POL_LOW_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_HIGH                             = " "0 (EOC_INT_POL_LOW_DISABLED),1 (EOC_INT_POL_LOW_ENABLED)"
    tree.end
    tree "VADC2_BTM_INT_POLARITY_LOW"
      sgroup "VADC2_BTM_INT_POLARITY_LOW (at 0x3413)"
        set &access:&cmd_addr %l (0x8034130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_LOW_DISABLED),1 (LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_LOW_DISABLED),1 (HIGH_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LOW                 = " "0 (CONV_SEQ_TIMEOUT_INT_POL_LOW_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LOW                   = " "0 (FIFO_NOT_EMPTY_INT_POL_LOW_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LOW                              = " "0 (EOC_INT_POL_LOW_DISABLED),1 (EOC_INT_POL_LOW_ENABLED)"
    tree.end
    tree "VADC2_BTM_INT_LATCHED_CLR"
      sgroup "VADC2_BTM_INT_LATCHED_CLR (at 0x3414)"
        set &access:&cmd_addr %l (0x8034140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_CLR         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "VADC2_BTM_INT_EN_SET"
      sgroup "VADC2_BTM_INT_EN_SET (at 0x3415)"
        set &access:&cmd_addr %l (0x8034150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_SET                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_SET                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_SET              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_SET                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_SET                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC2_BTM_INT_EN_CLR"
      sgroup "VADC2_BTM_INT_EN_CLR (at 0x3416)"
        set &access:&cmd_addr %l (0x8034160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_CLR                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_CLR                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_CLR              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_CLR                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_CLR                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC2_BTM_INT_LATCHED_STS"
      sgroup "VADC2_BTM_INT_LATCHED_STS (at 0x3418)"
        set &access:&cmd_addr %l (0x8034180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_STS                  = " "0 (LOW_THR_INT_LATCHED_FALSE),1 (LOW_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_STS                 = " "0 (HIGH_THR_INT_LATCHED_FALSE),1 (HIGH_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_LATCHED_FALSE),1 (CONV_SEQ_TIMEOUT_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_STS           = " "0 (FIFO_NOT_EMPTY_INT_LATCHED_FALSE),1 (FIFO_NOT_EMPTY_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_STS                      = " "0 (EOC_INT_LATCHED_FALSE),1 (EOC_INT_LATCHED_TRUE)"
    tree.end
    tree "VADC2_BTM_INT_PENDING_STS"
      sgroup "VADC2_BTM_INT_PENDING_STS (at 0x3419)"
        set &access:&cmd_addr %l (0x8034190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_PENDING_STS                  = " "0 (LOW_THR_INT_PENDING_FALSE),1 (LOW_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_PENDING_STS                 = " "0 (HIGH_THR_INT_PENDING_FALSE),1 (HIGH_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_PENDING_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_PENDING_FALSE),1 (CONV_SEQ_TIMEOUT_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_PENDING_STS           = " "0 (FIFO_NOT_EMPTY_INT_PENDING_FALSE),1 (FIFO_NOT_EMPTY_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_PENDING_STS                      = " "0 (EOC_INT_PENDING_FALSE),1 (EOC_INT_PENDING_TRUE)"
    tree.end
    tree "VADC2_BTM_INT_MID_SEL"
      sgroup "VADC2_BTM_INT_MID_SEL (at 0x341a)"
        set &access:&cmd_addr %l (0x80341a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x341a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "VADC2_BTM_INT_PRIORITY"
      sgroup "VADC2_BTM_INT_PRIORITY (at 0x341b)"
        set &access:&cmd_addr %l (0x80341b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x341b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "VADC2_BTM_MODE_CTL"
      sgroup "VADC2_BTM_MODE_CTL (at 0x3440)"
        set &access:&cmd_addr %l (0x8034400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREF_XO_THM_FORCE                        = " "0 (VREF_XO_THM_FORCE_FALSE),1 (VREF_XO_THM_FORCE_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   AMUX_TRIM_EN                             = " "0 (AMUX_TRIM_DISABLED),1 (AMUX_TRIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_TRIM_EN                              = " "0 (ADC_TRIM_DISABLED),1 (ADC_TRIM_ENABLED)"
    tree.end
    tree "VADC2_BTM_MULTI_MEAS_EN"
      sgroup "VADC2_BTM_MULTI_MEAS_EN (at 0x3441)"
        set &access:&cmd_addr %l (0x8034410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   M7_MEAS_EN                               = " "0 (M7_MEAS_DISABLE),1 (M7_MEAS_ENABLE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   M6_MEAS_EN                               = " "0 (M6_MEAS_DISABLE),1 (M6_MEAS_ENABLE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   M5_MEAS_EN                               = " "0 (M5_MEAS_DISABLE),1 (M5_MEAS_ENABLE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   M4_MEAS_EN                               = " "0 (M4_MEAS_DISABLE),1 (M4_MEAS_ENABLE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   M3_MEAS_EN                               = " "0 (M3_MEAS_DISABLE),1 (M3_MEAS_ENABLE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   M2_MEAS_EN                               = " "0 (M2_MEAS_DISABLE),1 (M2_MEAS_ENABLE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   M1_MEAS_EN                               = " "0 (M1_MEAS_DISABLE),1 (M1_MEAS_ENABLE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   M0_MEAS_EN                               = " "0 (M0_MEAS_DISABLE),1 (M0_MEAS_ENABLE)"
    tree.end
    tree "VADC2_BTM_LOW_THR_INT_EN"
      sgroup "VADC2_BTM_LOW_THR_INT_EN (at 0x3442)"
        set &access:&cmd_addr %l (0x8034420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   M7_LOW_THR_INT_EN                        = " "0 (M7_LOW_THR_INT_DISABLED),1 (M7_LOW_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   M6_LOW_THR_INT_EN                        = " "0 (M6_LOW_THR_INT_DISABLED),1 (M6_LOW_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   M5_LOW_THR_INT_EN                        = " "0 (M5_LOW_THR_INT_DISABLED),1 (M5_LOW_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   M4_LOW_THR_INT_EN                        = " "0 (M4_LOW_THR_INT_DISABLED),1 (M4_LOW_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   M3_LOW_THR_INT_EN                        = " "0 (M3_LOW_THR_INT_DISABLED),1 (M3_LOW_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   M2_LOW_THR_INT_EN                        = " "0 (M2_LOW_THR_INT_DISABLED),1 (M2_LOW_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   M1_LOW_THR_INT_EN                        = " "0 (M1_LOW_THR_INT_DISABLED),1 (M1_LOW_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   M0_LOW_THR_INT_EN                        = " "0 (M0_LOW_THR_INT_DISABLED),1 (M0_LOW_THR_INT_ENABLED)"
    tree.end
    tree "VADC2_BTM_HIGH_THR_INT_EN"
      sgroup "VADC2_BTM_HIGH_THR_INT_EN (at 0x3443)"
        set &access:&cmd_addr %l (0x8034430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   M7_HIGH_THR_INT_EN                       = " "0 (M7_HIGH_THR_INT_DISABLED),1 (M7_HIGH_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   M6_HIGH_THR_INT_EN                       = " "0 (M6_HIGH_THR_INT_DISABLED),1 (M6_HIGH_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   M5_HIGH_THR_INT_EN                       = " "0 (M5_HIGH_THR_INT_DISABLED),1 (M5_HIGH_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   M4_HIGH_THR_INT_EN                       = " "0 (M4_HIGH_THR_INT_DISABLED),1 (M4_HIGH_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   M3_HIGH_THR_INT_EN                       = " "0 (M3_HIGH_THR_INT_DISABLED),1 (M3_HIGH_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   M2_HIGH_THR_INT_EN                       = " "0 (M2_HIGH_THR_INT_DISABLED),1 (M2_HIGH_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   M1_HIGH_THR_INT_EN                       = " "0 (M1_HIGH_THR_INT_DISABLED),1 (M1_HIGH_THR_INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   M0_HIGH_THR_INT_EN                       = " "0 (M0_HIGH_THR_INT_DISABLED),1 (M0_HIGH_THR_INT_ENABLED)"
    tree.end
    tree "VADC2_BTM_EN_CTL1"
      sgroup "VADC2_BTM_EN_CTL1 (at 0x3446)"
        set &access:&cmd_addr %l (0x8034460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_EN                                   = " "0 (ADC_DISABLED),1 (ADC_ENABLED)"
    tree.end
    tree "VADC2_BTM_M0_ADC_CH_SEL_CTL"
      sgroup "VADC2_BTM_M0_ADC_CH_SEL_CTL (at 0x3448)"
        set &access:&cmd_addr %l (0x8034480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC2_BTM_ADC_DIG_PARAM"
      sgroup "VADC2_BTM_ADC_DIG_PARAM (at 0x3450)"
        set &access:&cmd_addr %l (0x8034500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEC_RATIO_SEL                            = " "0 (DECI_512),1 (DECI_1K),2 (DECI_2K),3 (DECI_4K)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CLK_SEL                                  = " "0 (CLK_SEL_2P4MHZ),1 (CLK_SEL_4P8MHZ),2 (CLK_SEL_9P6MHZ),3 (CLK_SEL_19P2MHZ)"
    tree.end
    tree "VADC2_BTM_HW_SETTLE_DELAY"
      sgroup "VADC2_BTM_HW_SETTLE_DELAY (at 0x3451)"
        set &access:&cmd_addr %l (0x8034510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   HW_SETTLE_DELAY                          = "
    tree.end
    tree "VADC2_BTM_CONV_REQ"
      sgroup "VADC2_BTM_CONV_REQ (at 0x3452)"
        set &access:&cmd_addr %l (0x8034520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REQ                                      = " "0 (CONV_REQ_FALSE),1 (CONV_REQ_TRUE)"
    tree.end
    tree "VADC2_BTM_CONV_SEQ_CTL"
      sgroup "VADC2_BTM_CONV_SEQ_CTL (at 0x3454)"
        set &access:&cmd_addr %l (0x8034540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CONV_SEQ_HOLDOFF                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CONV_SEQ_TIMEOUT                         = "
    tree.end
    tree "VADC2_BTM_CONV_SEQ_TRIG_CTL"
      sgroup "VADC2_BTM_CONV_SEQ_TRIG_CTL (at 0x3455)"
        set &access:&cmd_addr %l (0x8034550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CONV_SEQ_TRIG_COND                       = " "0 (FALLING_EDGE),1 (RISING_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CONV_SEQ_TRIG_SEL                        = " "0 (ADC_TRIG0),1 (ADC_TRIG1),2 (ADC_TRIG2),3 (ADC_TRIG3)"
    tree.end
    tree "VADC2_BTM_MEAS_INTERVAL_CTL"
      sgroup "VADC2_BTM_MEAS_INTERVAL_CTL (at 0x3457)"
        set &access:&cmd_addr %l (0x8034570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MEAS_INTERVAL_TIME1                      = "
    tree.end
    tree "VADC2_BTM_MEAS_INTERVAL_CTL2"
      sgroup "VADC2_BTM_MEAS_INTERVAL_CTL2 (at 0x3458)"
        set &access:&cmd_addr %l (0x8034580|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34580|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   MEAS_INTERVAL_TIME2                      = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MEAS_INTERVAL_TIME3                      = "
    tree.end
    tree "VADC2_BTM_MEAS_INTERVAL_OP_CTL"
      sgroup "VADC2_BTM_MEAS_INTERVAL_OP_CTL (at 0x3459)"
        set &access:&cmd_addr %l (0x8034590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MEAS_INTERVAL_OP                         = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   M0_MEAS_INTERVAL_TIME                    = " "0 (M0_USING_TIMER1),1 (M0_USING_TIMER2),2 (M0_USING_TIMER3),3 (reserved)"
    tree.end
    tree "VADC2_BTM_FAST_AVG_CTL"
      sgroup "VADC2_BTM_FAST_AVG_CTL (at 0x345a)"
        set &access:&cmd_addr %l (0x80345a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x345a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FAST_AVG_SAMPLES                         = "
    tree.end
    tree "VADC2_BTM_FAST_AVG_EN"
      sgroup "VADC2_BTM_FAST_AVG_EN (at 0x345b)"
        set &access:&cmd_addr %l (0x80345b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x345b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FAST_AVG_EN                              = " "0 (FAST_AVG_DISABLED),1 (FAST_AVG_ENABLED)"
    tree.end
    tree "VADC2_BTM_M0_LOW_THR0"
      sgroup "VADC2_BTM_M0_LOW_THR0 (at 0x345c)"
        set &access:&cmd_addr %l (0x80345c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x345c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC2_BTM_M0_LOW_THR1"
      sgroup "VADC2_BTM_M0_LOW_THR1 (at 0x345d)"
        set &access:&cmd_addr %l (0x80345d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x345d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC2_BTM_M0_HIGH_THR0"
      sgroup "VADC2_BTM_M0_HIGH_THR0 (at 0x345e)"
        set &access:&cmd_addr %l (0x80345e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x345e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC2_BTM_M0_HIGH_THR1"
      sgroup "VADC2_BTM_M0_HIGH_THR1 (at 0x345f)"
        set &access:&cmd_addr %l (0x80345f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x345f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC2_BTM_M0_DATA0"
      sgroup "VADC2_BTM_M0_DATA0 (at 0x3460)"
        set &access:&cmd_addr %l (0x8034600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC2_BTM_M0_DATA1"
      sgroup "VADC2_BTM_M0_DATA1 (at 0x3461)"
        set &access:&cmd_addr %l (0x8034610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC2_BTM_M1_ADC_CH_SEL_CTL"
      sgroup "VADC2_BTM_M1_ADC_CH_SEL_CTL (at 0x3468)"
        set &access:&cmd_addr %l (0x8034680|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34680|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC2_BTM_M1_LOW_THR0"
      sgroup "VADC2_BTM_M1_LOW_THR0 (at 0x3469)"
        set &access:&cmd_addr %l (0x8034690|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34690|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC2_BTM_M1_LOW_THR1"
      sgroup "VADC2_BTM_M1_LOW_THR1 (at 0x346a)"
        set &access:&cmd_addr %l (0x80346a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x346a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC2_BTM_M1_HIGH_THR0"
      sgroup "VADC2_BTM_M1_HIGH_THR0 (at 0x346b)"
        set &access:&cmd_addr %l (0x80346b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x346b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC2_BTM_M1_HIGH_THR1"
      sgroup "VADC2_BTM_M1_HIGH_THR1 (at 0x346c)"
        set &access:&cmd_addr %l (0x80346c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x346c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC2_BTM_M1_MEAS_INTERVAL_CTL"
      sgroup "VADC2_BTM_M1_MEAS_INTERVAL_CTL (at 0x346d)"
        set &access:&cmd_addr %l (0x80346d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x346d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   M1_MEAS_INTERVAL_TIME                    = " "0 (M1_USING_TIMER1),1 (M1_USING_TIMER2),2 (M1_USING_TIMER3),3 (reserved)"
    tree.end
    tree "VADC2_BTM_M2_ADC_CH_SEL_CTL"
      sgroup "VADC2_BTM_M2_ADC_CH_SEL_CTL (at 0x3470)"
        set &access:&cmd_addr %l (0x8034700|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34700|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC2_BTM_M2_LOW_THR0"
      sgroup "VADC2_BTM_M2_LOW_THR0 (at 0x3471)"
        set &access:&cmd_addr %l (0x8034710|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34710|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC2_BTM_M2_LOW_THR1"
      sgroup "VADC2_BTM_M2_LOW_THR1 (at 0x3472)"
        set &access:&cmd_addr %l (0x8034720|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34720|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC2_BTM_M2_HIGH_THR0"
      sgroup "VADC2_BTM_M2_HIGH_THR0 (at 0x3473)"
        set &access:&cmd_addr %l (0x8034730|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34730|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC2_BTM_M2_HIGH_THR1"
      sgroup "VADC2_BTM_M2_HIGH_THR1 (at 0x3474)"
        set &access:&cmd_addr %l (0x8034740|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34740|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC2_BTM_M2_MEAS_INTERVAL_CTL"
      sgroup "VADC2_BTM_M2_MEAS_INTERVAL_CTL (at 0x3475)"
        set &access:&cmd_addr %l (0x8034750|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34750|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   M2_MEAS_INTERVAL_TIME                    = " "0 (M2_USING_TIMER1),1 (M2_USING_TIMER2),2 (M2_USING_TIMER3),3 (reserved)"
    tree.end
    tree "VADC2_BTM_M3_ADC_CH_SEL_CTL"
      sgroup "VADC2_BTM_M3_ADC_CH_SEL_CTL (at 0x3478)"
        set &access:&cmd_addr %l (0x8034780|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34780|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC2_BTM_M3_LOW_THR0"
      sgroup "VADC2_BTM_M3_LOW_THR0 (at 0x3479)"
        set &access:&cmd_addr %l (0x8034790|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34790|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC2_BTM_M3_LOW_THR1"
      sgroup "VADC2_BTM_M3_LOW_THR1 (at 0x347a)"
        set &access:&cmd_addr %l (0x80347a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x347a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC2_BTM_M3_HIGH_THR0"
      sgroup "VADC2_BTM_M3_HIGH_THR0 (at 0x347b)"
        set &access:&cmd_addr %l (0x80347b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x347b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC2_BTM_M3_HIGH_THR1"
      sgroup "VADC2_BTM_M3_HIGH_THR1 (at 0x347c)"
        set &access:&cmd_addr %l (0x80347c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x347c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC2_BTM_M3_MEAS_INTERVAL_CTL"
      sgroup "VADC2_BTM_M3_MEAS_INTERVAL_CTL (at 0x347d)"
        set &access:&cmd_addr %l (0x80347d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x347d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   M3_MEAS_INTERVAL_TIME                    = " "0 (M3_USING_TIMER1),1 (M3_USING_TIMER2),2 (M3_USING_TIMER3),3 (reserved)"
    tree.end
    tree "VADC2_BTM_M4_ADC_CH_SEL_CTL"
      sgroup "VADC2_BTM_M4_ADC_CH_SEL_CTL (at 0x3480)"
        set &access:&cmd_addr %l (0x8034800|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34800|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC2_BTM_M4_LOW_THR0"
      sgroup "VADC2_BTM_M4_LOW_THR0 (at 0x3481)"
        set &access:&cmd_addr %l (0x8034810|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34810|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC2_BTM_M4_LOW_THR1"
      sgroup "VADC2_BTM_M4_LOW_THR1 (at 0x3482)"
        set &access:&cmd_addr %l (0x8034820|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34820|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC2_BTM_M4_HIGH_THR0"
      sgroup "VADC2_BTM_M4_HIGH_THR0 (at 0x3483)"
        set &access:&cmd_addr %l (0x8034830|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34830|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC2_BTM_M4_HIGH_THR1"
      sgroup "VADC2_BTM_M4_HIGH_THR1 (at 0x3484)"
        set &access:&cmd_addr %l (0x8034840|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34840|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC2_BTM_M4_MEAS_INTERVAL_CTL"
      sgroup "VADC2_BTM_M4_MEAS_INTERVAL_CTL (at 0x3485)"
        set &access:&cmd_addr %l (0x8034850|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34850|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   M4_MEAS_INTERVAL_TIME                    = " "0 (M4_USING_TIMER1),1 (M4_USING_TIMER2),2 (M4_USING_TIMER3),3 (reserved)"
    tree.end
    tree "VADC2_BTM_M5_ADC_CH_SEL_CTL"
      sgroup "VADC2_BTM_M5_ADC_CH_SEL_CTL (at 0x3488)"
        set &access:&cmd_addr %l (0x8034880|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34880|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC2_BTM_M5_LOW_THR0"
      sgroup "VADC2_BTM_M5_LOW_THR0 (at 0x3489)"
        set &access:&cmd_addr %l (0x8034890|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34890|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC2_BTM_M5_LOW_THR1"
      sgroup "VADC2_BTM_M5_LOW_THR1 (at 0x348a)"
        set &access:&cmd_addr %l (0x80348a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x348a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC2_BTM_M5_HIGH_THR0"
      sgroup "VADC2_BTM_M5_HIGH_THR0 (at 0x348b)"
        set &access:&cmd_addr %l (0x80348b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x348b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC2_BTM_M5_HIGH_THR1"
      sgroup "VADC2_BTM_M5_HIGH_THR1 (at 0x348c)"
        set &access:&cmd_addr %l (0x80348c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x348c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC2_BTM_M5_MEAS_INTERVAL_CTL"
      sgroup "VADC2_BTM_M5_MEAS_INTERVAL_CTL (at 0x348d)"
        set &access:&cmd_addr %l (0x80348d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x348d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   M5_MEAS_INTERVAL_TIME                    = " "0 (M5_USING_TIMER1),1 (M5_USING_TIMER2),2 (M5_USING_TIMER3),3 (reserved)"
    tree.end
    tree "VADC2_BTM_M6_ADC_CH_SEL_CTL"
      sgroup "VADC2_BTM_M6_ADC_CH_SEL_CTL (at 0x3490)"
        set &access:&cmd_addr %l (0x8034900|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34900|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC2_BTM_M6_LOW_THR0"
      sgroup "VADC2_BTM_M6_LOW_THR0 (at 0x3491)"
        set &access:&cmd_addr %l (0x8034910|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34910|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC2_BTM_M6_LOW_THR1"
      sgroup "VADC2_BTM_M6_LOW_THR1 (at 0x3492)"
        set &access:&cmd_addr %l (0x8034920|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34920|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC2_BTM_M6_HIGH_THR0"
      sgroup "VADC2_BTM_M6_HIGH_THR0 (at 0x3493)"
        set &access:&cmd_addr %l (0x8034930|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34930|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC2_BTM_M6_HIGH_THR1"
      sgroup "VADC2_BTM_M6_HIGH_THR1 (at 0x3494)"
        set &access:&cmd_addr %l (0x8034940|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34940|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC2_BTM_M6_MEAS_INTERVAL_CTL"
      sgroup "VADC2_BTM_M6_MEAS_INTERVAL_CTL (at 0x3495)"
        set &access:&cmd_addr %l (0x8034950|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34950|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   M6_MEAS_INTERVAL_TIME                    = " "0 (M6_USING_TIMER1),1 (M6_USING_TIMER2),2 (M6_USING_TIMER3),3 (reserved)"
    tree.end
    tree "VADC2_BTM_M7_ADC_CH_SEL_CTL"
      sgroup "VADC2_BTM_M7_ADC_CH_SEL_CTL (at 0x3498)"
        set &access:&cmd_addr %l (0x8034980|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34980|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC2_BTM_M7_LOW_THR0"
      sgroup "VADC2_BTM_M7_LOW_THR0 (at 0x3499)"
        set &access:&cmd_addr %l (0x8034990|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34990|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC2_BTM_M7_LOW_THR1"
      sgroup "VADC2_BTM_M7_LOW_THR1 (at 0x349a)"
        set &access:&cmd_addr %l (0x80349a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x349a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC2_BTM_M7_HIGH_THR0"
      sgroup "VADC2_BTM_M7_HIGH_THR0 (at 0x349b)"
        set &access:&cmd_addr %l (0x80349b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x349b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC2_BTM_M7_HIGH_THR1"
      sgroup "VADC2_BTM_M7_HIGH_THR1 (at 0x349c)"
        set &access:&cmd_addr %l (0x80349c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x349c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC2_BTM_M7_MEAS_INTERVAL_CTL"
      sgroup "VADC2_BTM_M7_MEAS_INTERVAL_CTL (at 0x349d)"
        set &access:&cmd_addr %l (0x80349d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x349d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   M7_MEAS_INTERVAL_TIME                    = " "0 (M7_USING_TIMER1),1 (M7_USING_TIMER2),2 (M7_USING_TIMER3),3 (reserved)"
    tree.end
    tree "VADC2_BTM_M1_DATA0"
      sgroup "VADC2_BTM_M1_DATA0 (at 0x34a0)"
        set &access:&cmd_addr %l (0x8034a00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC2_BTM_M1_DATA1"
      sgroup "VADC2_BTM_M1_DATA1 (at 0x34a1)"
        set &access:&cmd_addr %l (0x8034a10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC2_BTM_M2_DATA0"
      sgroup "VADC2_BTM_M2_DATA0 (at 0x34a2)"
        set &access:&cmd_addr %l (0x8034a20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC2_BTM_M2_DATA1"
      sgroup "VADC2_BTM_M2_DATA1 (at 0x34a3)"
        set &access:&cmd_addr %l (0x8034a30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC2_BTM_M3_DATA0"
      sgroup "VADC2_BTM_M3_DATA0 (at 0x34a4)"
        set &access:&cmd_addr %l (0x8034a40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC2_BTM_M3_DATA1"
      sgroup "VADC2_BTM_M3_DATA1 (at 0x34a5)"
        set &access:&cmd_addr %l (0x8034a50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC2_BTM_M4_DATA0"
      sgroup "VADC2_BTM_M4_DATA0 (at 0x34a6)"
        set &access:&cmd_addr %l (0x8034a60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC2_BTM_M4_DATA1"
      sgroup "VADC2_BTM_M4_DATA1 (at 0x34a7)"
        set &access:&cmd_addr %l (0x8034a70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC2_BTM_M5_DATA0"
      sgroup "VADC2_BTM_M5_DATA0 (at 0x34a8)"
        set &access:&cmd_addr %l (0x8034a80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC2_BTM_M5_DATA1"
      sgroup "VADC2_BTM_M5_DATA1 (at 0x34a9)"
        set &access:&cmd_addr %l (0x8034a90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34a90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC2_BTM_M6_DATA0"
      sgroup "VADC2_BTM_M6_DATA0 (at 0x34aa)"
        set &access:&cmd_addr %l (0x8034aa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34aa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC2_BTM_M6_DATA1"
      sgroup "VADC2_BTM_M6_DATA1 (at 0x34ab)"
        set &access:&cmd_addr %l (0x8034ab0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34ab0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC2_BTM_M7_DATA0"
      sgroup "VADC2_BTM_M7_DATA0 (at 0x34ac)"
        set &access:&cmd_addr %l (0x8034ac0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34ac0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC2_BTM_M7_DATA1"
      sgroup "VADC2_BTM_M7_DATA1 (at 0x34ad)"
        set &access:&cmd_addr %l (0x8034ad0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34ad0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC2_BTM_SEC_ACCESS"
      sgroup "VADC2_BTM_SEC_ACCESS (at 0x34d0)"
        set &access:&cmd_addr %l (0x8034d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "VADC2_BTM_PERPH_RESET_CTL1"
      sgroup "VADC2_BTM_PERPH_RESET_CTL1 (at 0x34d8)"
        set &access:&cmd_addr %l (0x8034d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (MODULE_DIS_AFTER_WARM_SOFT_RESET),1 (MODULE_EN_AFTER_WARM_SOFT_RESET)"
    tree.end
    tree "VADC2_BTM_PERPH_RESET_CTL2"
      sgroup "VADC2_BTM_PERPH_RESET_CTL2 (at 0x34d9)"
        set &access:&cmd_addr %l (0x8034d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RESET_FALSE),1 (FOLLOW_GLOBAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC2_BTM_PERPH_RESET_CTL3"
      sgroup "VADC2_BTM_PERPH_RESET_CTL3 (at 0x34da)"
        set &access:&cmd_addr %l (0x8034da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "VADC2_BTM_PERPH_RESET_CTL4"
      sgroup "VADC2_BTM_PERPH_RESET_CTL4 (at 0x34db)"
        set &access:&cmd_addr %l (0x8034db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC2_BTM_INT_TEST1"
      sgroup "VADC2_BTM_INT_TEST1 (at 0x34e0)"
        set &access:&cmd_addr %l (0x8034e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_FALSE),1 (INT_TEST_MODE_TRUE)"
    tree.end
    tree "VADC2_BTM_INT_TEST_VAL"
      sgroup "VADC2_BTM_INT_TEST_VAL (at 0x34e1)"
        set &access:&cmd_addr %l (0x8034e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_TEST_VAL                     = " "0 (LOW_THR_INT_TEST_FALSE),1 (LOW_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_TEST_VAL                    = " "0 (HIGH_THR_INT_TEST_FALSE),1 (HIGH_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_TEST_VAL            = " "0 (CONV_SEQ_TIMEOUT_TEST_FALSE),1 (CONV_SEQ_TIMEOUT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_TEST_VAL              = " "0 (FIFO_NOT_EMPTY_TEST_FALSE),1 (FIFO_NOT_EMPTY_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_TEST_VAL                         = " "0 (EOC_TEST_FALSE),1 (EOC_TEST_TRUE)"
    tree.end
    tree "VADC2_BTM_TEST1"
      sgroup "VADC2_BTM_TEST1 (at 0x34e2)"
        set &access:&cmd_addr %l (0x8034e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x34e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   SEL_FSM                                  = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
  tree.end
tree.end
tree "VADC3_BMS"
  tree "VADC3_BMS"
    tree "VADC3_BMS_REVISION1"
      sgroup "VADC3_BMS_REVISION1 (at 0x3300)"
        set &access:&cmd_addr %l (0x8033000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "VADC3_BMS_REVISION2"
      sgroup "VADC3_BMS_REVISION2 (at 0x3301)"
        set &access:&cmd_addr %l (0x8033010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "VADC3_BMS_REVISION3"
      sgroup "VADC3_BMS_REVISION3 (at 0x3302)"
        set &access:&cmd_addr %l (0x8033020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "VADC3_BMS_REVISION4"
      sgroup "VADC3_BMS_REVISION4 (at 0x3303)"
        set &access:&cmd_addr %l (0x8033030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "VADC3_BMS_PERPH_TYPE"
      sgroup "VADC3_BMS_PERPH_TYPE (at 0x3304)"
        set &access:&cmd_addr %l (0x8033040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "VADC3_BMS_PERPH_SUBTYPE"
      sgroup "VADC3_BMS_PERPH_SUBTYPE (at 0x3305)"
        set &access:&cmd_addr %l (0x8033050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "VADC3_BMS_STATUS1"
      sgroup "VADC3_BMS_STATUS1 (at 0x3308)"
        set &access:&cmd_addr %l (0x8033080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MEAS_INTERVAL_EN_STS                     = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   REQ_STS                                  = " "0 (REQ_NOT_IN_PROGRESS),1 (REQ_IN_PROGRESS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC                                      = " "0 (CONV_NOT_COMPLETE),1 (CONV_COMPLETE)"
    tree.end
    tree "VADC3_BMS_STATUS2"
      sgroup "VADC3_BMS_STATUS2 (at 0x3309)"
        set &access:&cmd_addr %l (0x8033090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   CONV_SEQ_STATE                           = "
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_FLAG                      = " "0 (FIFO_EMPTY_WHEN_REQ_MADE),1 (FIFO_NOT_EMPTY_WHEN_REQ_MADE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CONV_SEQ_TIMEOUT_STS                     = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
    tree.end
    tree "VADC3_BMS_INT_RT_STS"
      sgroup "VADC3_BMS_INT_RT_STS (at 0x3310)"
        set &access:&cmd_addr %l (0x8033100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_RT_STS                       = " "0 (LOW_THR_INT_FALSE),1 (LOW_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_RT_STS                      = " "0 (HIGH_THR_INT_FALSE),1 (HIGH_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_RT_STS              = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_RT_STS                = " "0 (FIFO_NOT_EMPTY_INT_FALSE),1 (FIFO_EMPTY_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_RT_STS                           = " "0 (CONV_COMPLETE_INT_FALSE),1 (CONV_COMPLETE_INT_TRUE)"
    tree.end
    tree "VADC3_BMS_INT_SET_TYPE"
      sgroup "VADC3_BMS_INT_SET_TYPE (at 0x3311)"
        set &access:&cmd_addr %l (0x8033110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_SET_TYPE                     = " "0 (LOW_THR_INT_LEVEL),1 (LOW_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_SET_TYPE                    = " "0 (HIGH_THR_INT_LEVEL),1 (HIGH_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_SET_TYPE            = " "0 (CONV_SEQ_TIMEOUT_LEVEL),1 (CONV_SEQ_TIMEOUT_EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_SET_TYPE              = " "0 (FIFO_NOT_EMPTY_LEVEL),1 (FIFO_NOT_EMPTY_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_SET_INT_TYPE                         = " "0 (EOC_LEVEL),1 (EOC_EDGE)"
    tree.end
    tree "VADC3_BMS_INT_POLARITY_HIGH"
      sgroup "VADC3_BMS_INT_POLARITY_HIGH (at 0x3312)"
        set &access:&cmd_addr %l (0x8033120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_HIGH_DISABLED),1 (LOW_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_HIGH_DISABLED),1 (HIGH_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_HIGH                = " "0 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_HIGH                  = " "0 (FIFO_NOT_EMPTY_INT_POL_HIGH_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_HIGH                             = " "0 (EOC_INT_POL_HIGH_DISABLED),1 (EOC_INT_POL_HIGH_ENABLED)"
    tree.end
    tree "VADC3_BMS_INT_POLARITY_LOW"
      sgroup "VADC3_BMS_INT_POLARITY_LOW (at 0x3313)"
        set &access:&cmd_addr %l (0x8033130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_LOW_DISABLED),1 (LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_LOW_DISABLED),1 (HIGH_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LOW                 = " "0 (CONV_SEQ_TIMEOUT_INT_POL_LOW_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LOW                   = " "0 (FIFO_NOT_EMPTY_INT_POL_LOW_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LOW                              = " "0 (EOC_INT_POL_LOW_DISABLED),1 (EOC_INT_POL_LOW_ENABLED)"
    tree.end
    tree "VADC3_BMS_INT_LATCHED_CLR"
      sgroup "VADC3_BMS_INT_LATCHED_CLR (at 0x3314)"
        set &access:&cmd_addr %l (0x8033140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_CLR         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "VADC3_BMS_INT_EN_SET"
      sgroup "VADC3_BMS_INT_EN_SET (at 0x3315)"
        set &access:&cmd_addr %l (0x8033150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_SET                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_SET                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_SET              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_SET                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_SET                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC3_BMS_INT_EN_CLR"
      sgroup "VADC3_BMS_INT_EN_CLR (at 0x3316)"
        set &access:&cmd_addr %l (0x8033160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_CLR                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_CLR                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_CLR              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_CLR                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_CLR                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC3_BMS_INT_LATCHED_STS"
      sgroup "VADC3_BMS_INT_LATCHED_STS (at 0x3318)"
        set &access:&cmd_addr %l (0x8033180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_STS                  = " "0 (LOW_THR_INT_LATCHED_FALSE),1 (LOW_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_STS                 = " "0 (HIGH_THR_INT_LATCHED_FALSE),1 (HIGH_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_LATCHED_FALSE),1 (CONV_SEQ_TIMEOUT_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_STS           = " "0 (FIFO_NOT_EMPTY_INT_LATCHED_FALSE),1 (FIFO_NOT_EMPTY_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_STS                      = " "0 (EOC_INT_LATCHED_FALSE),1 (EOC_INT_LATCHED_TRUE)"
    tree.end
    tree "VADC3_BMS_INT_PENDING_STS"
      sgroup "VADC3_BMS_INT_PENDING_STS (at 0x3319)"
        set &access:&cmd_addr %l (0x8033190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_PENDING_STS                  = " "0 (LOW_THR_INT_PENDING_FALSE),1 (LOW_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_PENDING_STS                 = " "0 (HIGH_THR_INT_PENDING_FALSE),1 (HIGH_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_PENDING_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_PENDING_FALSE),1 (CONV_SEQ_TIMEOUT_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_PENDING_STS           = " "0 (FIFO_NOT_EMPTY_INT_PENDING_FALSE),1 (FIFO_NOT_EMPTY_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_PENDING_STS                      = " "0 (EOC_INT_PENDING_FALSE),1 (EOC_INT_PENDING_TRUE)"
    tree.end
    tree "VADC3_BMS_INT_MID_SEL"
      sgroup "VADC3_BMS_INT_MID_SEL (at 0x331a)"
        set &access:&cmd_addr %l (0x80331a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x331a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "VADC3_BMS_INT_PRIORITY"
      sgroup "VADC3_BMS_INT_PRIORITY (at 0x331b)"
        set &access:&cmd_addr %l (0x80331b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x331b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "VADC3_BMS_MODE_CTL"
      sgroup "VADC3_BMS_MODE_CTL (at 0x3340)"
        set &access:&cmd_addr %l (0x8033400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREF_XO_THM_FORCE                        = " "0 (VREF_XO_THM_FORCE_FALSE),1 (VREF_XO_THM_FORCE_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   AMUX_TRIM_EN                             = " "0 (AMUX_TRIM_DISABLED),1 (AMUX_TRIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_TRIM_EN                              = " "0 (ADC_TRIM_DISABLED),1 (ADC_TRIM_ENABLED)"
    tree.end
    tree "VADC3_BMS_EN_CTL1"
      sgroup "VADC3_BMS_EN_CTL1 (at 0x3346)"
        set &access:&cmd_addr %l (0x8033460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_EN                                   = " "0 (ADC_DISABLED),1 (ADC_ENABLED)"
    tree.end
    tree "VADC3_BMS_ADC_CH_SEL_CTL"
      sgroup "VADC3_BMS_ADC_CH_SEL_CTL (at 0x3348)"
        set &access:&cmd_addr %l (0x8033480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC3_BMS_ADC_DIG_PARAM"
      sgroup "VADC3_BMS_ADC_DIG_PARAM (at 0x3350)"
        set &access:&cmd_addr %l (0x8033500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEC_RATIO_SEL                            = " "0 (DECI_512),1 (DECI_1K),2 (DECI_2K),3 (DECI_4K)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CLK_SEL                                  = " "0 (CLK_SEL_2P4MHZ),1 (CLK_SEL_4P8MHZ),2 (CLK_SEL_9P6MHZ),3 (CLK_SEL_19P2MHZ)"
    tree.end
    tree "VADC3_BMS_HW_SETTLE_DELAY"
      sgroup "VADC3_BMS_HW_SETTLE_DELAY (at 0x3351)"
        set &access:&cmd_addr %l (0x8033510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   HW_SETTLE_DELAY                          = "
    tree.end
    tree "VADC3_BMS_CONV_REQ"
      sgroup "VADC3_BMS_CONV_REQ (at 0x3352)"
        set &access:&cmd_addr %l (0x8033520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REQ                                      = " "0 (CONV_REQ_FALSE),1 (CONV_REQ_TRUE)"
    tree.end
    tree "VADC3_BMS_CONV_SEQ_CTL"
      sgroup "VADC3_BMS_CONV_SEQ_CTL (at 0x3354)"
        set &access:&cmd_addr %l (0x8033540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CONV_SEQ_HOLDOFF                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CONV_SEQ_TIMEOUT                         = "
    tree.end
    tree "VADC3_BMS_CONV_SEQ_TRIG_CTL"
      sgroup "VADC3_BMS_CONV_SEQ_TRIG_CTL (at 0x3355)"
        set &access:&cmd_addr %l (0x8033550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CONV_SEQ_TRIG_COND                       = " "0 (FALLING_EDGE),1 (RISING_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CONV_SEQ_TRIG_SEL                        = " "0 (ADC_TRIG0),1 (ADC_TRIG1),2 (ADC_TRIG2),3 (ADC_TRIG3)"
    tree.end
    tree "VADC3_BMS_MEAS_INTERVAL_CTL"
      sgroup "VADC3_BMS_MEAS_INTERVAL_CTL (at 0x3357)"
        set &access:&cmd_addr %l (0x8033570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MEAS_INTERVAL_TIME                       = "
    tree.end
    tree "VADC3_BMS_MEAS_INTERVAL_OP_CTL"
      sgroup "VADC3_BMS_MEAS_INTERVAL_OP_CTL (at 0x3359)"
        set &access:&cmd_addr %l (0x8033590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MEAS_INTERVAL_OP                         = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
    tree.end
    tree "VADC3_BMS_FAST_AVG_CTL"
      sgroup "VADC3_BMS_FAST_AVG_CTL (at 0x335a)"
        set &access:&cmd_addr %l (0x80335a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x335a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FAST_AVG_SAMPLES                         = "
    tree.end
    tree "VADC3_BMS_FAST_AVG_EN"
      sgroup "VADC3_BMS_FAST_AVG_EN (at 0x335b)"
        set &access:&cmd_addr %l (0x80335b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x335b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FAST_AVG_EN                              = " "0 (FAST_AVG_DISABLED),1 (FAST_AVG_ENABLED)"
    tree.end
    tree "VADC3_BMS_LOW_THR0"
      sgroup "VADC3_BMS_LOW_THR0 (at 0x335c)"
        set &access:&cmd_addr %l (0x80335c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x335c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC3_BMS_LOW_THR1"
      sgroup "VADC3_BMS_LOW_THR1 (at 0x335d)"
        set &access:&cmd_addr %l (0x80335d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x335d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC3_BMS_HIGH_THR0"
      sgroup "VADC3_BMS_HIGH_THR0 (at 0x335e)"
        set &access:&cmd_addr %l (0x80335e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x335e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC3_BMS_HIGH_THR1"
      sgroup "VADC3_BMS_HIGH_THR1 (at 0x335f)"
        set &access:&cmd_addr %l (0x80335f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x335f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC3_BMS_DATA0"
      sgroup "VADC3_BMS_DATA0 (at 0x3360)"
        set &access:&cmd_addr %l (0x8033600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC3_BMS_DATA1"
      sgroup "VADC3_BMS_DATA1 (at 0x3361)"
        set &access:&cmd_addr %l (0x8033610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC3_BMS_SEC_ACCESS"
      sgroup "VADC3_BMS_SEC_ACCESS (at 0x33d0)"
        set &access:&cmd_addr %l (0x8033d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "VADC3_BMS_PERPH_RESET_CTL1"
      sgroup "VADC3_BMS_PERPH_RESET_CTL1 (at 0x33d8)"
        set &access:&cmd_addr %l (0x8033d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (MODULE_DIS_AFTER_WARM_SOFT_RESET),1 (MODULE_EN_AFTER_WARM_SOFT_RESET)"
    tree.end
    tree "VADC3_BMS_PERPH_RESET_CTL2"
      sgroup "VADC3_BMS_PERPH_RESET_CTL2 (at 0x33d9)"
        set &access:&cmd_addr %l (0x8033d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RESET_FALSE),1 (FOLLOW_GLOBAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC3_BMS_PERPH_RESET_CTL3"
      sgroup "VADC3_BMS_PERPH_RESET_CTL3 (at 0x33da)"
        set &access:&cmd_addr %l (0x8033da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "VADC3_BMS_PERPH_RESET_CTL4"
      sgroup "VADC3_BMS_PERPH_RESET_CTL4 (at 0x33db)"
        set &access:&cmd_addr %l (0x8033db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC3_BMS_INT_TEST1"
      sgroup "VADC3_BMS_INT_TEST1 (at 0x33e0)"
        set &access:&cmd_addr %l (0x8033e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_FALSE),1 (INT_TEST_MODE_TRUE)"
    tree.end
    tree "VADC3_BMS_INT_TEST_VAL"
      sgroup "VADC3_BMS_INT_TEST_VAL (at 0x33e1)"
        set &access:&cmd_addr %l (0x8033e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_TEST_VAL                     = " "0 (LOW_THR_INT_TEST_FALSE),1 (LOW_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_TEST_VAL                    = " "0 (HIGH_THR_INT_TEST_FALSE),1 (HIGH_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_TEST_VAL            = " "0 (CONV_SEQ_TIMEOUT_TEST_FALSE),1 (CONV_SEQ_TIMEOUT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_TEST_VAL              = " "0 (FIFO_NOT_EMPTY_TEST_FALSE),1 (FIFO_NOT_EMPTY_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_TEST_VAL                         = " "0 (EOC_TEST_FALSE),1 (EOC_TEST_TRUE)"
    tree.end
    tree "VADC3_BMS_TEST6_DTEST"
      sgroup "VADC3_BMS_TEST6_DTEST (at 0x33e7)"
        set &access:&cmd_addr %l (0x8033e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x33e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SEL_FSM                                  = " "0 (REQUEST_FSM),1 (VADC_CONVERSION_FSM),2 (SAMPLE_COUNT_LSB),3 (SAMPLE_COUNT_MSB)"
    tree.end
  tree.end
tree.end
tree "VADC3_MDM"
  tree "VADC3_MDM"
    tree "VADC3_MDM_REVISION1"
      sgroup "VADC3_MDM_REVISION1 (at 0x3200)"
        set &access:&cmd_addr %l (0x8032000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "VADC3_MDM_REVISION2"
      sgroup "VADC3_MDM_REVISION2 (at 0x3201)"
        set &access:&cmd_addr %l (0x8032010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "VADC3_MDM_REVISION3"
      sgroup "VADC3_MDM_REVISION3 (at 0x3202)"
        set &access:&cmd_addr %l (0x8032020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "VADC3_MDM_REVISION4"
      sgroup "VADC3_MDM_REVISION4 (at 0x3203)"
        set &access:&cmd_addr %l (0x8032030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "VADC3_MDM_PERPH_TYPE"
      sgroup "VADC3_MDM_PERPH_TYPE (at 0x3204)"
        set &access:&cmd_addr %l (0x8032040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "VADC3_MDM_PERPH_SUBTYPE"
      sgroup "VADC3_MDM_PERPH_SUBTYPE (at 0x3205)"
        set &access:&cmd_addr %l (0x8032050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "VADC3_MDM_STATUS1"
      sgroup "VADC3_MDM_STATUS1 (at 0x3208)"
        set &access:&cmd_addr %l (0x8032080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MEAS_INTERVAL_EN_STS                     = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   REQ_STS                                  = " "0 (REQ_NOT_IN_PROGRESS),1 (REQ_IN_PROGRESS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC                                      = " "0 (CONV_NOT_COMPLETE),1 (CONV_COMPLETE)"
    tree.end
    tree "VADC3_MDM_STATUS2"
      sgroup "VADC3_MDM_STATUS2 (at 0x3209)"
        set &access:&cmd_addr %l (0x8032090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   CONV_SEQ_STATE                           = "
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_FLAG                      = " "0 (FIFO_EMPTY_WHEN_REQ_MADE),1 (FIFO_NOT_EMPTY_WHEN_REQ_MADE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CONV_SEQ_TIMEOUT_STS                     = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
    tree.end
    tree "VADC3_MDM_INT_RT_STS"
      sgroup "VADC3_MDM_INT_RT_STS (at 0x3210)"
        set &access:&cmd_addr %l (0x8032100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_RT_STS                       = " "0 (LOW_THR_INT_FALSE),1 (LOW_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_RT_STS                      = " "0 (HIGH_THR_INT_FALSE),1 (HIGH_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_RT_STS              = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_RT_STS                = " "0 (FIFO_NOT_EMPTY_INT_FALSE),1 (FIFO_EMPTY_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_RT_STS                           = " "0 (CONV_COMPLETE_INT_FALSE),1 (CONV_COMPLETE_INT_TRUE)"
    tree.end
    tree "VADC3_MDM_INT_SET_TYPE"
      sgroup "VADC3_MDM_INT_SET_TYPE (at 0x3211)"
        set &access:&cmd_addr %l (0x8032110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_SET_TYPE                     = " "0 (LOW_THR_INT_LEVEL),1 (LOW_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_SET_TYPE                    = " "0 (HIGH_THR_INT_LEVEL),1 (HIGH_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_SET_TYPE            = " "0 (CONV_SEQ_TIMEOUT_LEVEL),1 (CONV_SEQ_TIMEOUT_EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_SET_TYPE              = " "0 (FIFO_NOT_EMPTY_LEVEL),1 (FIFO_NOT_EMPTY_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_SET_INT_TYPE                         = " "0 (EOC_LEVEL),1 (EOC_EDGE)"
    tree.end
    tree "VADC3_MDM_INT_POLARITY_HIGH"
      sgroup "VADC3_MDM_INT_POLARITY_HIGH (at 0x3212)"
        set &access:&cmd_addr %l (0x8032120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_HIGH_DISABLED),1 (LOW_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_HIGH_DISABLED),1 (HIGH_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_HIGH                = " "0 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_HIGH                  = " "0 (FIFO_NOT_EMPTY_INT_POL_HIGH_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_HIGH                             = " "0 (EOC_INT_POL_HIGH_DISABLED),1 (EOC_INT_POL_HIGH_ENABLED)"
    tree.end
    tree "VADC3_MDM_INT_POLARITY_LOW"
      sgroup "VADC3_MDM_INT_POLARITY_LOW (at 0x3213)"
        set &access:&cmd_addr %l (0x8032130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_LOW_DISABLED),1 (LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_LOW_DISABLED),1 (HIGH_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LOW                 = " "0 (CONV_SEQ_TIMEOUT_INT_POL_LOW_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LOW                   = " "0 (FIFO_NOT_EMPTY_INT_POL_LOW_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LOW                              = " "0 (EOC_INT_POL_LOW_DISABLED),1 (EOC_INT_POL_LOW_ENABLED)"
    tree.end
    tree "VADC3_MDM_INT_LATCHED_CLR"
      sgroup "VADC3_MDM_INT_LATCHED_CLR (at 0x3214)"
        set &access:&cmd_addr %l (0x8032140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_CLR         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "VADC3_MDM_INT_EN_SET"
      sgroup "VADC3_MDM_INT_EN_SET (at 0x3215)"
        set &access:&cmd_addr %l (0x8032150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_SET                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_SET                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_SET              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_SET                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_SET                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC3_MDM_INT_EN_CLR"
      sgroup "VADC3_MDM_INT_EN_CLR (at 0x3216)"
        set &access:&cmd_addr %l (0x8032160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_CLR                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_CLR                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_CLR              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_CLR                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_CLR                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC3_MDM_INT_LATCHED_STS"
      sgroup "VADC3_MDM_INT_LATCHED_STS (at 0x3218)"
        set &access:&cmd_addr %l (0x8032180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_STS                  = " "0 (LOW_THR_INT_LATCHED_FALSE),1 (LOW_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_STS                 = " "0 (HIGH_THR_INT_LATCHED_FALSE),1 (HIGH_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_LATCHED_FALSE),1 (CONV_SEQ_TIMEOUT_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_STS           = " "0 (FIFO_NOT_EMPTY_INT_LATCHED_FALSE),1 (FIFO_NOT_EMPTY_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_STS                      = " "0 (EOC_INT_LATCHED_FALSE),1 (EOC_INT_LATCHED_TRUE)"
    tree.end
    tree "VADC3_MDM_INT_PENDING_STS"
      sgroup "VADC3_MDM_INT_PENDING_STS (at 0x3219)"
        set &access:&cmd_addr %l (0x8032190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_PENDING_STS                  = " "0 (LOW_THR_INT_PENDING_FALSE),1 (LOW_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_PENDING_STS                 = " "0 (HIGH_THR_INT_PENDING_FALSE),1 (HIGH_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_PENDING_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_PENDING_FALSE),1 (CONV_SEQ_TIMEOUT_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_PENDING_STS           = " "0 (FIFO_NOT_EMPTY_INT_PENDING_FALSE),1 (FIFO_NOT_EMPTY_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_PENDING_STS                      = " "0 (EOC_INT_PENDING_FALSE),1 (EOC_INT_PENDING_TRUE)"
    tree.end
    tree "VADC3_MDM_INT_MID_SEL"
      sgroup "VADC3_MDM_INT_MID_SEL (at 0x321a)"
        set &access:&cmd_addr %l (0x80321a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x321a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "VADC3_MDM_INT_PRIORITY"
      sgroup "VADC3_MDM_INT_PRIORITY (at 0x321b)"
        set &access:&cmd_addr %l (0x80321b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x321b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "VADC3_MDM_MODE_CTL"
      sgroup "VADC3_MDM_MODE_CTL (at 0x3240)"
        set &access:&cmd_addr %l (0x8032400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREF_XO_THM_FORCE                        = " "0 (VREF_XO_THM_FORCE_FALSE),1 (VREF_XO_THM_FORCE_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   AMUX_TRIM_EN                             = " "0 (AMUX_TRIM_DISABLED),1 (AMUX_TRIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_TRIM_EN                              = " "0 (ADC_TRIM_DISABLED),1 (ADC_TRIM_ENABLED)"
    tree.end
    tree "VADC3_MDM_EN_CTL1"
      sgroup "VADC3_MDM_EN_CTL1 (at 0x3246)"
        set &access:&cmd_addr %l (0x8032460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_EN                                   = " "0 (ADC_DISABLED),1 (ADC_ENABLED)"
    tree.end
    tree "VADC3_MDM_ADC_CH_SEL_CTL"
      sgroup "VADC3_MDM_ADC_CH_SEL_CTL (at 0x3248)"
        set &access:&cmd_addr %l (0x8032480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC3_MDM_ADC_DIG_PARAM"
      sgroup "VADC3_MDM_ADC_DIG_PARAM (at 0x3250)"
        set &access:&cmd_addr %l (0x8032500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEC_RATIO_SEL                            = " "0 (DECI_512),1 (DECI_1K),2 (DECI_2K),3 (DECI_4K)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CLK_SEL                                  = " "0 (CLK_SEL_2P4MHZ),1 (CLK_SEL_4P8MHZ),2 (CLK_SEL_9P6MHZ),3 (CLK_SEL_19P2MHZ)"
    tree.end
    tree "VADC3_MDM_HW_SETTLE_DELAY"
      sgroup "VADC3_MDM_HW_SETTLE_DELAY (at 0x3251)"
        set &access:&cmd_addr %l (0x8032510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   HW_SETTLE_DELAY                          = "
    tree.end
    tree "VADC3_MDM_CONV_REQ"
      sgroup "VADC3_MDM_CONV_REQ (at 0x3252)"
        set &access:&cmd_addr %l (0x8032520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REQ                                      = " "0 (CONV_REQ_FALSE),1 (CONV_REQ_TRUE)"
    tree.end
    tree "VADC3_MDM_CONV_SEQ_CTL"
      sgroup "VADC3_MDM_CONV_SEQ_CTL (at 0x3254)"
        set &access:&cmd_addr %l (0x8032540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CONV_SEQ_HOLDOFF                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CONV_SEQ_TIMEOUT                         = "
    tree.end
    tree "VADC3_MDM_CONV_SEQ_TRIG_CTL"
      sgroup "VADC3_MDM_CONV_SEQ_TRIG_CTL (at 0x3255)"
        set &access:&cmd_addr %l (0x8032550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CONV_SEQ_TRIG_COND                       = " "0 (FALLING_EDGE),1 (RISING_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CONV_SEQ_TRIG_SEL                        = " "0 (ADC_TRIG0),1 (ADC_TRIG1),2 (ADC_TRIG2),3 (ADC_TRIG3)"
    tree.end
    tree "VADC3_MDM_MEAS_INTERVAL_CTL"
      sgroup "VADC3_MDM_MEAS_INTERVAL_CTL (at 0x3257)"
        set &access:&cmd_addr %l (0x8032570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MEAS_INTERVAL_TIME                       = "
    tree.end
    tree "VADC3_MDM_MEAS_INTERVAL_OP_CTL"
      sgroup "VADC3_MDM_MEAS_INTERVAL_OP_CTL (at 0x3259)"
        set &access:&cmd_addr %l (0x8032590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MEAS_INTERVAL_OP                         = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
    tree.end
    tree "VADC3_MDM_FAST_AVG_CTL"
      sgroup "VADC3_MDM_FAST_AVG_CTL (at 0x325a)"
        set &access:&cmd_addr %l (0x80325a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x325a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FAST_AVG_SAMPLES                         = "
    tree.end
    tree "VADC3_MDM_FAST_AVG_EN"
      sgroup "VADC3_MDM_FAST_AVG_EN (at 0x325b)"
        set &access:&cmd_addr %l (0x80325b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x325b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FAST_AVG_EN                              = " "0 (FAST_AVG_DISABLED),1 (FAST_AVG_ENABLED)"
    tree.end
    tree "VADC3_MDM_LOW_THR0"
      sgroup "VADC3_MDM_LOW_THR0 (at 0x325c)"
        set &access:&cmd_addr %l (0x80325c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x325c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC3_MDM_LOW_THR1"
      sgroup "VADC3_MDM_LOW_THR1 (at 0x325d)"
        set &access:&cmd_addr %l (0x80325d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x325d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC3_MDM_HIGH_THR0"
      sgroup "VADC3_MDM_HIGH_THR0 (at 0x325e)"
        set &access:&cmd_addr %l (0x80325e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x325e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC3_MDM_HIGH_THR1"
      sgroup "VADC3_MDM_HIGH_THR1 (at 0x325f)"
        set &access:&cmd_addr %l (0x80325f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x325f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC3_MDM_DATA0"
      sgroup "VADC3_MDM_DATA0 (at 0x3260)"
        set &access:&cmd_addr %l (0x8032600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC3_MDM_DATA1"
      sgroup "VADC3_MDM_DATA1 (at 0x3261)"
        set &access:&cmd_addr %l (0x8032610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC3_MDM_SEC_ACCESS"
      sgroup "VADC3_MDM_SEC_ACCESS (at 0x32d0)"
        set &access:&cmd_addr %l (0x8032d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "VADC3_MDM_PERPH_RESET_CTL1"
      sgroup "VADC3_MDM_PERPH_RESET_CTL1 (at 0x32d8)"
        set &access:&cmd_addr %l (0x8032d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (MODULE_DIS_AFTER_WARM_SOFT_RESET),1 (MODULE_EN_AFTER_WARM_SOFT_RESET)"
    tree.end
    tree "VADC3_MDM_PERPH_RESET_CTL2"
      sgroup "VADC3_MDM_PERPH_RESET_CTL2 (at 0x32d9)"
        set &access:&cmd_addr %l (0x8032d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RESET_FALSE),1 (FOLLOW_GLOBAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC3_MDM_PERPH_RESET_CTL3"
      sgroup "VADC3_MDM_PERPH_RESET_CTL3 (at 0x32da)"
        set &access:&cmd_addr %l (0x8032da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "VADC3_MDM_PERPH_RESET_CTL4"
      sgroup "VADC3_MDM_PERPH_RESET_CTL4 (at 0x32db)"
        set &access:&cmd_addr %l (0x8032db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC3_MDM_INT_TEST1"
      sgroup "VADC3_MDM_INT_TEST1 (at 0x32e0)"
        set &access:&cmd_addr %l (0x8032e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_FALSE),1 (INT_TEST_MODE_TRUE)"
    tree.end
    tree "VADC3_MDM_INT_TEST_VAL"
      sgroup "VADC3_MDM_INT_TEST_VAL (at 0x32e1)"
        set &access:&cmd_addr %l (0x8032e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_TEST_VAL                     = " "0 (LOW_THR_INT_TEST_FALSE),1 (LOW_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_TEST_VAL                    = " "0 (HIGH_THR_INT_TEST_FALSE),1 (HIGH_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_TEST_VAL            = " "0 (CONV_SEQ_TIMEOUT_TEST_FALSE),1 (CONV_SEQ_TIMEOUT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_TEST_VAL              = " "0 (FIFO_NOT_EMPTY_TEST_FALSE),1 (FIFO_NOT_EMPTY_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_TEST_VAL                         = " "0 (EOC_TEST_FALSE),1 (EOC_TEST_TRUE)"
    tree.end
    tree "VADC3_MDM_TEST6_DTEST"
      sgroup "VADC3_MDM_TEST6_DTEST (at 0x32e7)"
        set &access:&cmd_addr %l (0x8032e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x32e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SEL_FSM                                  = " "0 (REQUEST_FSM),1 (VADC_CONVERSION_FSM),2 (SAMPLE_COUNT_LSB),3 (SAMPLE_COUNT_MSB)"
    tree.end
  tree.end
tree.end
tree "VIB1"
  tree "VIB1"
    tree "VIB1_REVISION1"
      sgroup "VIB1_REVISION1 (at 0x1c000)"
        set &access:&cmd_addr %l (0x80c0000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "VIB1_REVISION2"
      sgroup "VIB1_REVISION2 (at 0x1c001)"
        set &access:&cmd_addr %l (0x80c0010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "VIB1_REVISION3"
      sgroup "VIB1_REVISION3 (at 0x1c002)"
        set &access:&cmd_addr %l (0x80c0020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "VIB1_REVISION4"
      sgroup "VIB1_REVISION4 (at 0x1c003)"
        set &access:&cmd_addr %l (0x80c0030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "VIB1_PERPH_TYPE"
      sgroup "VIB1_PERPH_TYPE (at 0x1c004)"
        set &access:&cmd_addr %l (0x80c0040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "VIB1_PERPH_SUBTYPE"
      sgroup "VIB1_PERPH_SUBTYPE (at 0x1c005)"
        set &access:&cmd_addr %l (0x80c0050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "VIB1_STATUS1"
      sgroup "VIB1_STATUS1 (at 0x1c008)"
        set &access:&cmd_addr %l (0x80c0080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VIB_OK                                   = " "0 (VIB_DISABLED),1 (VIB_ENABLED)"
    tree.end
    tree "VIB1_VOLTAGE_CTL2"
      sgroup "VIB1_VOLTAGE_CTL2 (at 0x1c041)"
        set &access:&cmd_addr %l (0x80c0410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   V_SET                                    = "
    tree.end
    tree "VIB1_EN_CTL"
      sgroup "VIB1_EN_CTL (at 0x1c046)"
        set &access:&cmd_addr %l (0x80c0460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (VIB_DISABLED),1 (VIB_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   INV_DTEST                                = " "0 (VIB_ENABLE_DTEST_HIGH),1 (VIB_ENABLE_DTEST_LOW)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_DTEST3                            = " "0 (VIB_IGNORE_DTEST3),1 (VIB_FOLLOW_DTEST3)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_DTEST2                            = " "0 (VIB_IGNORE_DTEST2),1 (VIB_FOLLOW_DTEST2)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_DTEST1                            = " "0 (VIB_IGNORE_DTEST1),1 (VIB_FOLLOW_DTEST1)"
    tree.end
    tree "VIB1_SEC_ACCESS"
      sgroup "VIB1_SEC_ACCESS (at 0x1c0d0)"
        set &access:&cmd_addr %l (0x80c0d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "VIB1_PERPH_RESET_CTL1"
      sgroup "VIB1_PERPH_RESET_CTL1 (at 0x1c0d8)"
        set &access:&cmd_addr %l (0x80c0d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "VIB1_PERPH_RESET_CTL2"
      sgroup "VIB1_PERPH_RESET_CTL2 (at 0x1c0d9)"
        set &access:&cmd_addr %l (0x80c0d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "VIB1_PERPH_RESET_CTL3"
      sgroup "VIB1_PERPH_RESET_CTL3 (at 0x1c0da)"
        set &access:&cmd_addr %l (0x80c0da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "VIB1_PERPH_RESET_CTL4"
      sgroup "VIB1_PERPH_RESET_CTL4 (at 0x1c0db)"
        set &access:&cmd_addr %l (0x80c0db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "VIB1_TEST1"
      sgroup "VIB1_TEST1 (at 0x1c0e2)"
        set &access:&cmd_addr %l (0x80c0e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ILIM_REDUCTION                           = " "0 (VIB_TEST_ILIM_NORMAL),1 (VIB_TEST_ILIM_REDUCED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ATEST_VIB_OUT                            = " "0 (VIB_TEST_ATEST1_HI_Z),1 (VIB_TEST_ATEST1_IS_VOUT)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ATEST_ISENSE                             = " "0 (VIB_TEST_ATEST2_HI_Z),1 (VIB_TEST_ATEST2_IS_ISENSE)"
    tree.end
  tree.end
tree.end
tree "VREFLPDDR"
  tree "VREFLPDDR"
    tree "VREFLPDDR_REVISION1"
      sgroup "VREFLPDDR_REVISION1 (at 0xa00)"
        set &access:&cmd_addr %l (0x800a000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "VREFLPDDR_REVISION2"
      sgroup "VREFLPDDR_REVISION2 (at 0xa01)"
        set &access:&cmd_addr %l (0x800a010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "VREFLPDDR_REVISION3"
      sgroup "VREFLPDDR_REVISION3 (at 0xa02)"
        set &access:&cmd_addr %l (0x800a020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "VREFLPDDR_REVISION4"
      sgroup "VREFLPDDR_REVISION4 (at 0xa03)"
        set &access:&cmd_addr %l (0x800a030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "VREFLPDDR_PERPH_TYPE"
      sgroup "VREFLPDDR_PERPH_TYPE (at 0xa04)"
        set &access:&cmd_addr %l (0x800a040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "VREFLPDDR_PERPH_SUBTYPE"
      sgroup "VREFLPDDR_PERPH_SUBTYPE (at 0xa05)"
        set &access:&cmd_addr %l (0x800a050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "VREFLPDDR_STATUS1"
      sgroup "VREFLPDDR_STATUS1 (at 0xa08)"
        set &access:&cmd_addr %l (0x800a080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREF_OK                                  = " "0 (VREF_DISABLED),1 (VREF_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VREF_LPDDR_OK                            = " "0 (VREF_LPDDR_DISABLED),1 (VREF_LPDDR_ENABLED)"
    tree.end
    tree "VREFLPDDR_VREF_LPDDR2_EN"
      sgroup "VREFLPDDR_VREF_LPDDR2_EN (at 0xa44)"
        set &access:&cmd_addr %l (0x800a440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REF_EN                                   = " "0 (VREF_LPDDR_DISABLED),1 (VREF_LPDDR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN2                            = " "0 (VREF_LPDDR_FOLLOW_SLEEPB_DISABLED),1 (VREF_LPDDR_FOLLOW_SLEEPB_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN1                            = " "0 (VREF_LPDDR_FOLLOW_VREGOK_DISABLED),1 (VREF_LPDDR_FOLLOW_VREGOK_ENABLED)"
    tree.end
    tree "VREFLPDDR_EN_CTL1"
      sgroup "VREFLPDDR_EN_CTL1 (at 0xa46)"
        set &access:&cmd_addr %l (0x800a460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (VREF_DISABLED),1 (VREF_ENABLED)"
    tree.end
    tree "VREFLPDDR_SEC_ACCESS"
      sgroup "VREFLPDDR_SEC_ACCESS (at 0xad0)"
        set &access:&cmd_addr %l (0x800ad00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xad00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "VREFLPDDR_PERPH_RESET_CTL1"
      sgroup "VREFLPDDR_PERPH_RESET_CTL1 (at 0xad8)"
        set &access:&cmd_addr %l (0x800ad80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xad80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "VREFLPDDR_PERPH_RESET_CTL2"
      sgroup "VREFLPDDR_PERPH_RESET_CTL2 (at 0xad9)"
        set &access:&cmd_addr %l (0x800ad90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xad90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "VREFLPDDR_PERPH_RESET_CTL3"
      sgroup "VREFLPDDR_PERPH_RESET_CTL3 (at 0xada)"
        set &access:&cmd_addr %l (0x800ada0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xada0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "VREFLPDDR_PERPH_RESET_CTL4"
      sgroup "VREFLPDDR_PERPH_RESET_CTL4 (at 0xadb)"
        set &access:&cmd_addr %l (0x800adb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xadb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "VREFLPDDR_TRIM_NUM"
      sgroup "VREFLPDDR_TRIM_NUM (at 0xaf0)"
        set &access:&cmd_addr %l (0x800af00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xaf00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "VREFLPDDR_TRIM_VAL"
      sgroup "VREFLPDDR_TRIM_VAL (at 0xaf1)"
        set &access:&cmd_addr %l (0x800af10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xaf10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VREF_LPDDR2_TRIM_VALUE                   = "
    tree.end
  tree.end
tree.end
tree "WLED1"
  tree "WLED1"
    tree "WLED1_REVISION1"
      sgroup "WLED1_REVISION1 (at 0x1d800)"
        set &access:&cmd_addr %l (0x80d8000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "WLED1_REVISION2"
      sgroup "WLED1_REVISION2 (at 0x1d801)"
        set &access:&cmd_addr %l (0x80d8010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "WLED1_REVISION3"
      sgroup "WLED1_REVISION3 (at 0x1d802)"
        set &access:&cmd_addr %l (0x80d8020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "WLED1_REVISION4"
      sgroup "WLED1_REVISION4 (at 0x1d803)"
        set &access:&cmd_addr %l (0x80d8030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "WLED1_PERPH_TYPE"
      sgroup "WLED1_PERPH_TYPE (at 0x1d804)"
        set &access:&cmd_addr %l (0x80d8040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "WLED1_PERPH_SUBTYPE"
      sgroup "WLED1_PERPH_SUBTYPE (at 0x1d805)"
        set &access:&cmd_addr %l (0x80d8050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "WLED1_FAULT_STATUS"
      sgroup "WLED1_FAULT_STATUS (at 0x1d808)"
        set &access:&cmd_addr %l (0x80d8080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT                                = " "0 (NO_FAULT),1 (OVP_FAULT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT                               = " "0 (NO_FAULT),1 (ILIM_FAULT)"
    tree.end
    tree "WLED1_INT_RT_STS"
      sgroup "WLED1_INT_RT_STS (at 0x1d810)"
        set &access:&cmd_addr %l (0x80d8100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_RT_STS                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_RT_STS                        = " "0, 1"
    tree.end
    tree "WLED1_INT_SET_TYPE"
      sgroup "WLED1_INT_SET_TYPE (at 0x1d811)"
        set &access:&cmd_addr %l (0x80d8110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_TYPE                          = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "WLED1_INT_POLARITY_HIGH"
      sgroup "WLED1_INT_POLARITY_HIGH (at 0x1d812)"
        set &access:&cmd_addr %l (0x80d8120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_HIGH                          = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "WLED1_INT_POLARITY_LOW"
      sgroup "WLED1_INT_POLARITY_LOW (at 0x1d813)"
        set &access:&cmd_addr %l (0x80d8130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_LOW                           = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "WLED1_INT_LATCHED_CLR"
      sgroup "WLED1_INT_LATCHED_CLR (at 0x1d814)"
        set &access:&cmd_addr %l (0x80d8140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_LATCHED_CLR                   = " "0, 1"
    tree.end
    tree "WLED1_INT_EN_SET"
      sgroup "WLED1_INT_EN_SET (at 0x1d815)"
        set &access:&cmd_addr %l (0x80d8150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_EN_SET                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "WLED1_INT_EN_CLR"
      sgroup "WLED1_INT_EN_CLR (at 0x1d816)"
        set &access:&cmd_addr %l (0x80d8160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_EN_CLR                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "WLED1_INT_LATCHED_STS"
      sgroup "WLED1_INT_LATCHED_STS (at 0x1d818)"
        set &access:&cmd_addr %l (0x80d8180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_LATCHED_STS                   = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "WLED1_INT_PENDING_STS"
      sgroup "WLED1_INT_PENDING_STS (at 0x1d819)"
        set &access:&cmd_addr %l (0x80d8190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_PENDING_STS                   = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "WLED1_INT_MID_SEL"
      sgroup "WLED1_INT_MID_SEL (at 0x1d81a)"
        set &access:&cmd_addr %l (0x80d81a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd81a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "WLED1_INT_PRIORITY"
      sgroup "WLED1_INT_PRIORITY (at 0x1d81b)"
        set &access:&cmd_addr %l (0x80d81b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd81b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "WLED1_LED1_BRIGHTNESS_SETTING_LSB"
      sgroup "WLED1_LED1_BRIGHTNESS_SETTING_LSB (at 0x1d840)"
        set &access:&cmd_addr %l (0x80d8400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED1_BRIGHTNESS_SETTING_LSB              = "
    tree.end
    tree "WLED1_LED1_BRIGHTNESS_SETTING_MSB"
      sgroup "WLED1_LED1_BRIGHTNESS_SETTING_MSB (at 0x1d841)"
        set &access:&cmd_addr %l (0x80d8410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED1_BRIGHTNESS_SETTING_MSB              = "
    tree.end
    tree "WLED1_LED2_BRIGHTNESS_SETTING_LSB"
      sgroup "WLED1_LED2_BRIGHTNESS_SETTING_LSB (at 0x1d842)"
        set &access:&cmd_addr %l (0x80d8420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED2_BRIGHTNESS_SETTING_LSB              = "
    tree.end
    tree "WLED1_LED2_BRIGHTNESS_SETTING_MSB"
      sgroup "WLED1_LED2_BRIGHTNESS_SETTING_MSB (at 0x1d843)"
        set &access:&cmd_addr %l (0x80d8430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED2_BRIGHTNESS_SETTING_MSB              = "
    tree.end
    tree "WLED1_LED3_BRIGHTNESS_SETTING_LSB"
      sgroup "WLED1_LED3_BRIGHTNESS_SETTING_LSB (at 0x1d844)"
        set &access:&cmd_addr %l (0x80d8440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED3_BRIGHTNESS_SETTING_LSB              = "
    tree.end
    tree "WLED1_LED3_BRIGHTNESS_SETTING_MSB"
      sgroup "WLED1_LED3_BRIGHTNESS_SETTING_MSB (at 0x1d845)"
        set &access:&cmd_addr %l (0x80d8450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED3_BRIGHTNESS_SETTING_MSB              = "
    tree.end
    tree "WLED1_MODULE_ENABLE"
      sgroup "WLED1_MODULE_ENABLE (at 0x1d846)"
        set &access:&cmd_addr %l (0x80d8460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_MODULE                                = " "0 (WLED_DIS),1 (WLED_EN)"
    tree.end
    tree "WLED1_ILED_SYNC_BIT"
      sgroup "WLED1_ILED_SYNC_BIT (at 0x1d847)"
        set &access:&cmd_addr %l (0x80d8470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SYNC_LED3                                = " "0 (LED3_SYNC_DIS),1 (LED3_SYNC_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SYNC_LED2                                = " "0 (LED2_SYNC_DIS),1 (LED2_SYNC_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SYNC_LED1                                = " "0 (LED1_SYNC_DIS),1 (LED1_SYNC_EN)"
    tree.end
    tree "WLED1_FEEDBACK_CONTROL"
      sgroup "WLED1_FEEDBACK_CONTROL (at 0x1d848)"
        set &access:&cmd_addr %l (0x80d8480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   FEEDBACK_CONTROL                         = " "0 (FBCTRL_AUTO),1 (FBCTRL_LED1),2 (FBCTRL_LED2),3 (FBCTRL_LED1_2),4 (FBCTRL_LED3),5 (FBCTRL_LED1_3),6 (FBCTRL_LED2_3),7 (FBCTRL_LED1_2_3)"
    tree.end
    tree "WLED1_VREF_CONTROL"
      sgroup "WLED1_VREF_CONTROL (at 0x1d849)"
        set &access:&cmd_addr %l (0x80d8490|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8490|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VREF_CONTROL                             = " "0 (VREF_CTRL_0P3V),1 (VREF_CTRL_0P4V),2 (VREF_CTRL_0P5V),3 (VREF_CTRL_0P6V),4 (VREF_CTRL_0P7V),5 (VREF_CTRL_0P8V),6 (VREF_CTRL_0P9V),7 (VREF_CTRL_1V)"
    tree.end
    tree "WLED1_MODULATION_SCHEME"
      sgroup "WLED1_MODULATION_SCHEME (at 0x1d84a)"
        set &access:&cmd_addr %l (0x80d84a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   MODULATOR_CLOCK_SEL                      = " "0 (MOD_CLK_FREQ_19P2MHZ),1 (MOD_CLK_FREQ_4P8MHZ),2 (MOD_CLK_FREQ_2P4MHZ),3 (MOD_CLK_FREQ_1P2MHZ)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   INTERNAL_MOD_RESOLUTION                  = " "0 (RES_12BIT),1 (RES_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DIMMING_METHOD                           = " "0 (ANALOG_DIMMING),1 (DIGITAL_DIMMING)"
    tree.end
    tree "WLED1_BOOST_MAX_DUTY_CYCLE"
      sgroup "WLED1_BOOST_MAX_DUTY_CYCLE (at 0x1d84b)"
        set &access:&cmd_addr %l (0x80d84b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BOOST_MAX_DUTY_CYCLE                     = " "0 (MXDUTY_26NS),1 (MXDUTY_52NS),2 (MXDUTY_104NS),3 (MXDUTY_156NS)"
    tree.end
    tree "WLED1_SWITCHING_FREQUENCY"
      sgroup "WLED1_SWITCHING_FREQUENCY (at 0x1d84c)"
        set &access:&cmd_addr %l (0x80d84c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SWITCHING_FREQ                           = "
    tree.end
    tree "WLED1_WLED_OVP"
      sgroup "WLED1_WLED_OVP (at 0x1d84d)"
        set &access:&cmd_addr %l (0x80d84d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   WLED_OVP                                 = " "0 (OVP_35V),1 (OVP_32V),2 (OVP_29V),3 (OVP_27V)"
    tree.end
    tree "WLED1_WLED_ILIM"
      sgroup "WLED1_WLED_ILIM (at 0x1d84e)"
        set &access:&cmd_addr %l (0x80d84e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   WLED_ILIM                                = " "0 (ILIM_143MA),1 (ILIM_409MA),2 (ILIM_544MA),3 (ILIM_818MA),4 (ILIM_981MA),5 (ILIM_1250MA),6 (ILIM_1380MA),7 (ILIM_1650MA)"
    tree.end
    tree "WLED1_EN_CURRENT_SINK"
      sgroup "WLED1_EN_CURRENT_SINK (at 0x1d84f)"
        set &access:&cmd_addr %l (0x80d84f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CURRENT_SINK3                         = " "0 (LED3_DIS),1 (LED3_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_CURRENT_SINK2                         = " "0 (LED2_DIS),1 (LED2_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_CURRENT_SINK1                         = " "0 (LED1_DIS),1 (LED1_EN)"
    tree.end
    tree "WLED1_SLOPE_COMP_CAP"
      sgroup "WLED1_SLOPE_COMP_CAP (at 0x1d850)"
        set &access:&cmd_addr %l (0x80d8500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SLOPE_COMP                               = " "0 (SLOPE_COMP_CAP_OPT0_5PF),1 (SLOPE_COMP_CAP_4PF),2 (SLOPE_COMP_CAP_3PF),3 (SLOPE_COMP_CAP_2PF),4 (SLOPE_COMP_CAP_8PF),5 (SLOPE_COMP_CAP_7PF),6 (SLOPE_COMP_CAP_6PF),7 (SLOPE_COMP_CAP_OPT1_5PF)"
    tree.end
    tree "WLED1_SLOPE_COMP_ADJ"
      sgroup "WLED1_SLOPE_COMP_ADJ (at 0x1d851)"
        set &access:&cmd_addr %l (0x80d8510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SLOPE_COMP_ADJ                           = " "0 (SLOPE_COMP_3UA),1 (SLOPE_COMP_4UA),2 (reserved),3 (SLOPE_COMP_5UA)"
    tree.end
    tree "WLED1_BIAS_GEN_WARMUP_DELAY"
      sgroup "WLED1_BIAS_GEN_WARMUP_DELAY (at 0x1d852)"
        set &access:&cmd_addr %l (0x80d8520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BIAS_GEN_WARMUP_DELAY                    = " "0 (BGWD_NODELAY),1 (BGWD_6P7US),2 (BGWD_13P3US),3 (BGWD_26P7US)"
    tree.end
    tree "WLED1_SOFTSTART_RAMP_DELAY"
      sgroup "WLED1_SOFTSTART_RAMP_DELAY (at 0x1d853)"
        set &access:&cmd_addr %l (0x80d8530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SOFTSTART_RAMP_DELAY                     = " "0 (RAMP_TIME_700US),1 (RAMP_TIME_1400US),2 (RAMP_TIME_2100US),3 (RAMP_TIME_2800US),4 (RAMP_TIME_3500US),5 (RAMP_TIME_4200US),6 (RAMP_TIME_4900US),7 (RAMP_TIME_5600US)"
    tree.end
    tree "WLED1_SW_SLEW_RATE_CONTROL"
      sgroup "WLED1_SW_SLEW_RATE_CONTROL (at 0x1d854)"
        set &access:&cmd_addr %l (0x80d8540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SW_SLEW_RATE_CONTROL                     = " "0 (SLEW_RATE_10NS),1 (SLEW_RATE_7P5NS),2 (SLEW_RATE_5NS),3 (SLEW_RATE_2P5NS)"
    tree.end
    tree "WLED1_VLOOP_COMP_RES"
      sgroup "WLED1_VLOOP_COMP_RES (at 0x1d855)"
        set &access:&cmd_addr %l (0x80d8550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LOOP_COMP_RES                            = "
    tree.end
    tree "WLED1_VLOOP_COMP_GM"
      sgroup "WLED1_VLOOP_COMP_GM (at 0x1d856)"
        set &access:&cmd_addr %l (0x80d8560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LOOP_EA_GM                               = "
    tree.end
    tree "WLED1_VLOOP_COMP_CAP"
      sgroup "WLED1_VLOOP_COMP_CAP (at 0x1d857)"
        set &access:&cmd_addr %l (0x80d8570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VLOOP_COMP_CAP                           = " "0 (VLOOP_COMP_CAP_50PF),1 (VLOOP_COMP_CAP_60PF),2 (VLOOP_COMP_CAP_70PF),3 (VLOOP_COMP_CAP_80PF)"
    tree.end
    tree "WLED1_VLOOP_COMP_HCAP"
      sgroup "WLED1_VLOOP_COMP_HCAP (at 0x1d858)"
        set &access:&cmd_addr %l (0x80d8580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VLOOP_COMP_HCAP                          = " "0 (VLOOP_COMP_HCAP_0PF),1 (VLOOP_COMP_HCAP_1PF),2 (VLOOP_COMP_HCAP_2PF),3 (VLOOP_COMP_HCAP_3PF)"
    tree.end
    tree "WLED1_EN_HW_BL_REDN"
      sgroup "WLED1_EN_HW_BL_REDN (at 0x1d859)"
        set &access:&cmd_addr %l (0x80d8590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_HW_BL_REDN                            = " "0 (HW_BL_REDN_DIS),1 (HW_BL_REDN_EN)"
    tree.end
    tree "WLED1_EN_PSM"
      sgroup "WLED1_EN_PSM (at 0x1d85a)"
        set &access:&cmd_addr %l (0x80d85a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd85a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PSM                                   = " "0 (PSM_DIS),1 (PSM_EN)"
    tree.end
    tree "WLED1_PSM_CTRL"
      sgroup "WLED1_PSM_CTRL (at 0x1d85b)"
        set &access:&cmd_addr %l (0x80d85b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd85b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PSM_HYS_CTRL                             = " "0 (PSM_HYS_25MV),1 (PSM_HYS_50MV)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VREF_PSM                                 = " "0 (PSM_VREF_300MV),1 (PSM_VREF_400MV),2 (PSM_VREF_500MV),3 (PSM_VREF_600MV),4 (PSM_VREF_700MV),5 (PSM_VREF_800MV),6 (PSM_VREF_900MV),7 (PSM_VREF_1V)"
    tree.end
    tree "WLED1_LED1_MODULATOR_EN"
      sgroup "WLED1_LED1_MODULATOR_EN (at 0x1d860)"
        set &access:&cmd_addr %l (0x80d8600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED1_EN_MODULATOR                        = " "0 (LED1_MOD_DIS),1 (LED1_MOD_EN)"
    tree.end
    tree "WLED1_LED1_IDAC_SYNC_DELAY"
      sgroup "WLED1_LED1_IDAC_SYNC_DELAY (at 0x1d861)"
        set &access:&cmd_addr %l (0x80d8610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LED1_IDAC_SYNC_DELAY                     = " "0 (LED1_SYNC_DLY_0US),1 (LED1_SYNC_DLY_200US),2 (LED1_SYNC_DLY_400US),3 (LED1_SYNC_DLY_600US),4 (LED1_SYNC_DLY_800US),5 (LED1_SYNC_DLY_1MS),6 (LED1_SYNC_DLY_1P2MS),7 (LED1_SYNC_DLY_1P4MS)"
    tree.end
    tree "WLED1_LED1_FULL_SCALE_CURRENT"
      sgroup "WLED1_LED1_FULL_SCALE_CURRENT (at 0x1d862)"
        set &access:&cmd_addr %l (0x80d8620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LED1_FULL_SCALE_CURRENT                  = "
    tree.end
    tree "WLED1_LED1_MODULATOR_SRC_SEL"
      sgroup "WLED1_LED1_MODULATOR_SRC_SEL (at 0x1d863)"
        set &access:&cmd_addr %l (0x80d8630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED1_MODULATOR_SRC_SEL                   = " "0 (LED1_MOD_SRC_INT),1 (LED1_MOD_SRC_EXT)"
    tree.end
    tree "WLED1_LED1_CABC_EN"
      sgroup "WLED1_LED1_CABC_EN (at 0x1d866)"
        set &access:&cmd_addr %l (0x80d8660|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8660|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED1_CABC_EN                             = " "0 (CABC_DIS),1 (CABC_EN)"
    tree.end
    tree "WLED1_LED2_MODULATOR_EN"
      sgroup "WLED1_LED2_MODULATOR_EN (at 0x1d870)"
        set &access:&cmd_addr %l (0x80d8700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED2_EN_MODULATOR                        = " "0 (LED2_MOD_DIS),1 (LED2_MOD_EN)"
    tree.end
    tree "WLED1_LED2_IDAC_SYNC_DELAY"
      sgroup "WLED1_LED2_IDAC_SYNC_DELAY (at 0x1d871)"
        set &access:&cmd_addr %l (0x80d8710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LED2_IDAC_SYNC_DELAY                     = " "0 (LED2_SYNC_DLY_0US),1 (LED2_SYNC_DLY_200US),2 (LED2_SYNC_DLY_400US),3 (LED2_SYNC_DLY_600US),4 (LED2_SYNC_DLY_800US),5 (LED2_SYNC_DLY_1MS),6 (LED2_SYNC_DLY_1P2MS),7 (LED2_SYNC_DLY_1P4MS)"
    tree.end
    tree "WLED1_LED2_FULL_SCALE_CURRENT"
      sgroup "WLED1_LED2_FULL_SCALE_CURRENT (at 0x1d872)"
        set &access:&cmd_addr %l (0x80d8720|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8720|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LED2_FULL_SCALE_CURRENT                  = "
    tree.end
    tree "WLED1_LED2_MODULATOR_SRC_SEL"
      sgroup "WLED1_LED2_MODULATOR_SRC_SEL (at 0x1d873)"
        set &access:&cmd_addr %l (0x80d8730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_MODULATOR_SRC_SEL                   = " "0 (LED2_MOD_SRC_INT),1 (LED2_MOD_SRC_EXT)"
    tree.end
    tree "WLED1_LED2_CABC_EN"
      sgroup "WLED1_LED2_CABC_EN (at 0x1d876)"
        set &access:&cmd_addr %l (0x80d8760|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8760|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED2_CABC_EN                             = " "0 (CABC_DIS),1 (CABC_EN)"
    tree.end
    tree "WLED1_LED3_MODULATOR_EN"
      sgroup "WLED1_LED3_MODULATOR_EN (at 0x1d880)"
        set &access:&cmd_addr %l (0x80d8800|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8800|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED3_EN_MODULATOR                        = " "0 (LED3_MOD_DIS),1 (LED3_MOD_EN)"
    tree.end
    tree "WLED1_LED3_IDAC_SYNC_DELAY"
      sgroup "WLED1_LED3_IDAC_SYNC_DELAY (at 0x1d881)"
        set &access:&cmd_addr %l (0x80d8810|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8810|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LED3_IDAC_SYNC_DELAY                     = " "0 (LED3_SYNC_DLY_0US),1 (LED3_SYNC_DLY_200US),2 (LED3_SYNC_DLY_400US),3 (LED3_SYNC_DLY_600US),4 (LED3_SYNC_DLY_800US),5 (LED3_SYNC_DLY_1MS),6 (LED3_SYNC_DLY_1P2MS),7 (LED3_SYNC_DLY_1P4MS)"
    tree.end
    tree "WLED1_LED3_FULL_SCALE_CURRENT"
      sgroup "WLED1_LED3_FULL_SCALE_CURRENT (at 0x1d882)"
        set &access:&cmd_addr %l (0x80d8820|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8820|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LED3_FULL_SCALE_CURRENT                  = "
    tree.end
    tree "WLED1_LED3_MODULATOR_SRC_SEL"
      sgroup "WLED1_LED3_MODULATOR_SRC_SEL (at 0x1d883)"
        set &access:&cmd_addr %l (0x80d8830|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8830|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED3_MODULATOR_SRC_SEL                   = " "0 (LED3_MOD_SRC_INT),1 (LED3_MOD_SRC_EXT)"
    tree.end
    tree "WLED1_LED3_CABC_EN"
      sgroup "WLED1_LED3_CABC_EN (at 0x1d886)"
        set &access:&cmd_addr %l (0x80d8860|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8860|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED3_CABC_EN                             = " "0 (CABC_DIS),1 (CABC_EN)"
    tree.end
    tree "WLED1_SEC_ACCESS"
      sgroup "WLED1_SEC_ACCESS (at 0x1d8d0)"
        set &access:&cmd_addr %l (0x80d8d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "WLED1_PERPH_RESET_CTL1"
      sgroup "WLED1_PERPH_RESET_CTL1 (at 0x1d8d8)"
        set &access:&cmd_addr %l (0x80d8d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "WLED1_PERPH_RESET_CTL2"
      sgroup "WLED1_PERPH_RESET_CTL2 (at 0x1d8d9)"
        set &access:&cmd_addr %l (0x80d8d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "WLED1_PERPH_RESET_CTL3"
      sgroup "WLED1_PERPH_RESET_CTL3 (at 0x1d8da)"
        set &access:&cmd_addr %l (0x80d8da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "WLED1_PERPH_RESET_CTL4"
      sgroup "WLED1_PERPH_RESET_CTL4 (at 0x1d8db)"
        set &access:&cmd_addr %l (0x80d8db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "WLED1_INT_TEST1"
      sgroup "WLED1_INT_TEST1 (at 0x1d8e0)"
        set &access:&cmd_addr %l (0x80d8e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "WLED1_INT_TEST_VAL"
      sgroup "WLED1_INT_TEST_VAL (at 0x1d8e1)"
        set &access:&cmd_addr %l (0x80d8e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_TEST_VAL                      = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "WLED1_TEST1"
      sgroup "WLED1_TEST1 (at 0x1d8e2)"
        set &access:&cmd_addr %l (0x80d8e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "WLED1_TEST2"
      sgroup "WLED1_TEST2 (at 0x1d8e3)"
        set &access:&cmd_addr %l (0x80d8e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_TEST3"
      sgroup "WLED1_TEST3 (at 0x1d8e4)"
        set &access:&cmd_addr %l (0x80d8e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RDSON_TM                                 = " "0 (NORMAL_OPERATION),1 (NFET_ON)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ERRAMP_TRIM_CL                           = " "0 (NORMAL_OPERATION),1 (ERROR_AMP_INPUT_SHORTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OVP_EN_MASK                              = " "0 (NORMAL_OPERATION),1 (OVP_MOD_EN)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SLOPE_COMP_EN_MASK                       = " "0 (DISABLE),1 (MODULE_CNTRL_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CS_REF_EN_MASK                           = " "0 (DISABLE),1 (MODULE_CNTRL_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREF_EN_MASK                             = " "0 (DISABLE),1 (MODULE_CNTRL_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIM_EN_MASK                             = " "0 (DISABLE),1 (MODULE_CNTRL_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ERRAMP_EN_MASK                           = " "0 (DISABLE),1 (MODULE_CNTRL_EN)"
    tree.end
    tree "WLED1_TEST4"
      sgroup "WLED1_TEST4 (at 0x1d8e5)"
        set &access:&cmd_addr %l (0x80d8e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DEBOUNCE_BYPASS                          = " "0 (DBNCE_ACTIVE),1 (DBNC_REMOVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_SLEEP_CLK_REQUEST                     = " "0 (WLED_19P2MHZ_MOD_EN),1 (WLED_19P2MHZ_DIS_SLEEP_B)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_SOFT_START                            = " "0 (SOFT_START_DIS),1 (SOFT_START_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DIG_DIM_SAMPLE_HOLD                      = " "0 (DIG_DIM_S_H),1 (CONT_FB)"
    tree.end
    tree "WLED1_TRIM_NUM"
      sgroup "WLED1_TRIM_NUM (at 0x1d8f0)"
        set &access:&cmd_addr %l (0x80d8f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "WLED1_TRIM_VREF_ILED1"
      sgroup "WLED1_TRIM_VREF_ILED1 (at 0x1d8f1)"
        set &access:&cmd_addr %l (0x80d8f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_VREF_ILED1                          = "
    tree.end
    tree "WLED1_TRIM_VREF_ILED2"
      sgroup "WLED1_TRIM_VREF_ILED2 (at 0x1d8f2)"
        set &access:&cmd_addr %l (0x80d8f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_VREF_ILED2                          = "
    tree.end
    tree "WLED1_TRIM_VREF_ILED3"
      sgroup "WLED1_TRIM_VREF_ILED3 (at 0x1d8f3)"
        set &access:&cmd_addr %l (0x80d8f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_VREF_ILED3                          = "
    tree.end
    tree "WLED1_TRIM_OFFSET_ILED1"
      sgroup "WLED1_TRIM_OFFSET_ILED1 (at 0x1d8f4)"
        set &access:&cmd_addr %l (0x80d8f40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_OFFSET_ILED1                        = "
    tree.end
    tree "WLED1_TRIM_OFFSET_ILED2"
      sgroup "WLED1_TRIM_OFFSET_ILED2 (at 0x1d8f5)"
        set &access:&cmd_addr %l (0x80d8f50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_OFFSET_ILED2                        = "
    tree.end
    tree "WLED1_TRIM_OFFSET_ILED3"
      sgroup "WLED1_TRIM_OFFSET_ILED3 (at 0x1d8f6)"
        set &access:&cmd_addr %l (0x80d8f60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_OFFSET_ILED3                        = "
    tree.end
    tree "WLED1_TRIM_ILIM"
      sgroup "WLED1_TRIM_ILIM (at 0x1d8f7)"
        set &access:&cmd_addr %l (0x80d8f70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_ILIM                                = "
    tree.end
  tree.end
tree.end
tree "XO"
  tree "XO"
    tree "XO_REVISION1"
      sgroup "XO_REVISION1 (at 0x5000)"
        set &access:&cmd_addr %l (0x8050000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "XO_REVISION2"
      sgroup "XO_REVISION2 (at 0x5001)"
        set &access:&cmd_addr %l (0x8050010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "XO_REVISION3"
      sgroup "XO_REVISION3 (at 0x5002)"
        set &access:&cmd_addr %l (0x8050020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "XO_REVISION4"
      sgroup "XO_REVISION4 (at 0x5003)"
        set &access:&cmd_addr %l (0x8050030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "XO_PERPH_TYPE"
      sgroup "XO_PERPH_TYPE (at 0x5004)"
        set &access:&cmd_addr %l (0x8050040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "XO_PERPH_SUBTYPE"
      sgroup "XO_PERPH_SUBTYPE (at 0x5005)"
        set &access:&cmd_addr %l (0x8050050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "XO_STATUS1"
      sgroup "XO_STATUS1 (at 0x5008)"
        set &access:&cmd_addr %l (0x8050080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   XO19M2_OK                                = " "0 (XO19M_OFF),1 (XO19M_ON)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SLEEP_B                                  = " "0 (PMIC_SLEEP),1 (PMIC_AWAKE)"
    tree.end
    tree "XO_VOLTAGE_CTL1"
      sgroup "XO_VOLTAGE_CTL1 (at 0x5040)"
        set &access:&cmd_addr %l (0x8050400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MUX_CTL                                  = " "0 (AUTO),1 (VREG_XO),2 (VREG_SMPS),3 (XVDD)"
    tree.end
    tree "XO_MODE_CTL1"
      sgroup "XO_MODE_CTL1 (at 0x5044)"
        set &access:&cmd_addr %l (0x8050440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   RF_PREBUFF_MODE                          = " "0 (VLPM),1 (LPM),2 (NPM),3 (HPM)"
    tree.end
    tree "XO_EN_CTL"
      sgroup "XO_EN_CTL (at 0x5046)"
        set &access:&cmd_addr %l (0x8050460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   XO_EN                                    = " "0 (XO19M_NOT_FORCED),1 (XO19M_FORCED_ON)"
    tree.end
    tree "XO_XO_TIMER1"
      sgroup "XO_XO_TIMER1 (at 0x504c)"
        set &access:&cmd_addr %l (0x80504c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x504c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   XO_TIMER_LSB                             = "
    tree.end
    tree "XO_XO_TIMER2"
      sgroup "XO_XO_TIMER2 (at 0x504d)"
        set &access:&cmd_addr %l (0x80504d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x504d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   XO_TIMER_MSB                             = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "XO_XO_STEPPER"
      sgroup "XO_XO_STEPPER (at 0x505a)"
        set &access:&cmd_addr %l (0x80505a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x505a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   XO_SS_DELAY_EN                           = " "0 (XO_FASTSTART_DIS),1 (XO_FAST_START_EN)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   XO_SS_DELAY                              = "
    tree.end
    tree "XO_XO_ADJ_FINE"
      sgroup "XO_XO_ADJ_FINE (at 0x505c)"
        set &access:&cmd_addr %l (0x80505c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x505c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   XO_ADJUST_CAP                            = "
    tree.end
    tree "XO_XO_ADJ_COARSE"
      sgroup "XO_XO_ADJ_COARSE (at 0x505b)"
        set &access:&cmd_addr %l (0x80505b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x505b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   XO_FIXED_CAP_EN1                         = " "0 (FIX_CAP1_DIS),1 (FIX_CAP1_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   XO_FIXED_CAP_EN2                         = " "0 (FIX_CAP2_DIS),1 (FIX_CAP2_EN)"
    tree.end
    tree "XO_XO_CTL"
      sgroup "XO_XO_CTL (at 0x505e)"
        set &access:&cmd_addr %l (0x80505e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x505e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ICTL3                                    = " "0 (XO_BIAS3_DIS),1 (XO_BIAS3_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ICTL2                                    = " "0 (XO_BIAS2_DIS),1 (XO_BIAS2_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ICTL1                                    = " "0 (XO_BIAS1_DIS),1 (XO_BIAS1_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SS_RATE                                  = " "0 (TCXO_DIV_8),1 (TCXO_DIV_16),2 (TCXO_DIV_128),3 (TCXO_DIV_256)"
    tree.end
    tree "XO_SEC_ACCESS"
      sgroup "XO_SEC_ACCESS (at 0x50d0)"
        set &access:&cmd_addr %l (0x8050d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "XO_PERPH_RESET_CTL2"
      sgroup "XO_PERPH_RESET_CTL2 (at 0x50d9)"
        set &access:&cmd_addr %l (0x8050d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "XO_PERPH_RESET_CTL3"
      sgroup "XO_PERPH_RESET_CTL3 (at 0x50da)"
        set &access:&cmd_addr %l (0x8050da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "XO_PERPH_RESET_CTL4"
      sgroup "XO_PERPH_RESET_CTL4 (at 0x50db)"
        set &access:&cmd_addr %l (0x8050db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "XO_TEST1"
      sgroup "XO_TEST1 (at 0x50e2)"
        set &access:&cmd_addr %l (0x8050e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   DTEST1_SEL                               = " "0 (HIZ),1 (XO19M),2 (OUTBUG_EN),3 (OUTBUFF_EN_DLY),4 (STEPPER_DONE),5 (SLEEP_B),6 (RESERVED),7 (reserved)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   XO_AGC_TEST_EN                           = " "0 (NORMAL),1 (XO_AGC_ON_ATEST)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ADJ_CODE_TEST                            = " "0 (GRAY_CODE),1 (BINARY_CODE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SS_RESET                                 = " "0 (NORMAL),1 (RESET_STEPPER)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RF_PREBUF_FOLLOW_BB                      = " "0 (RFPREBUFF_NOT_FOLLOW_BB),1 (RFPREBUFF_FOLLOW_BB)"
    tree.end
    tree "XO_TEST2"
      sgroup "XO_TEST2 (at 0x50e4)"
        set &access:&cmd_addr %l (0x8050e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x50e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   RF_OUT_DTEST                             = " "0 (NORMAL),1 (DRIVE_RF_FROM_DTEST2)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   RF_OUT_TEST                              = " "0 (NORMAL),1 (DISABLED),2 (reserved),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BB_OUT_DTEST                             = " "0 (NORMAL),1 (DRIVE_BB_FROM_DTEST2)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BB_OUT_TEST                              = " "0 (NORMAL),1 (DISABLED),2 (reserved),3 (reserved)"
    tree.end
  tree.end
tree.end

