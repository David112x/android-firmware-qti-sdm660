entry &access &sid &cmd_addr &read_addr &write_addr
tree "BCLK_GEN_MAIN"
  tree "BCLK_GEN_MAIN"
    tree "BCLK_GEN_MAIN_REVISION1"
      sgroup "BCLK_GEN_MAIN_REVISION1 (at 0x11000)"
        set &access:&cmd_addr %l (0x8010000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BCLK_GEN_MAIN_REVISION2"
      sgroup "BCLK_GEN_MAIN_REVISION2 (at 0x11001)"
        set &access:&cmd_addr %l (0x8010010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BCLK_GEN_MAIN_REVISION3"
      sgroup "BCLK_GEN_MAIN_REVISION3 (at 0x11002)"
        set &access:&cmd_addr %l (0x8010020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "BCLK_GEN_MAIN_REVISION4"
      sgroup "BCLK_GEN_MAIN_REVISION4 (at 0x11003)"
        set &access:&cmd_addr %l (0x8010030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_TYPE"
      sgroup "BCLK_GEN_MAIN_PERPH_TYPE (at 0x11004)"
        set &access:&cmd_addr %l (0x8010040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_SUBTYPE"
      sgroup "BCLK_GEN_MAIN_PERPH_SUBTYPE (at 0x11005)"
        set &access:&cmd_addr %l (0x8010050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BCLK_GEN_MAIN_STATUS"
      sgroup "BCLK_GEN_MAIN_STATUS (at 0x11008)"
        set &access:&cmd_addr %l (0x8010080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DLL_LOCK_FLG                             = " "0 (STATUS_DLL_NOT_LOCKED),1 (STATUS_DLL_LOCKED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_RT_STS"
      sgroup "BCLK_GEN_MAIN_INT_RT_STS (at 0x11010)"
        set &access:&cmd_addr %l (0x8010100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_RT_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_SET_TYPE"
      sgroup "BCLK_GEN_MAIN_INT_SET_TYPE (at 0x11011)"
        set &access:&cmd_addr %l (0x8010110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_TYPE                            = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_POLARITY_HIGH"
      sgroup "BCLK_GEN_MAIN_INT_POLARITY_HIGH (at 0x11012)"
        set &access:&cmd_addr %l (0x8010120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_HIGH                            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_POLARITY_LOW"
      sgroup "BCLK_GEN_MAIN_INT_POLARITY_LOW (at 0x11013)"
        set &access:&cmd_addr %l (0x8010130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_LOW                             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_LATCHED_CLR"
      sgroup "BCLK_GEN_MAIN_INT_LATCHED_CLR (at 0x11014)"
        set &access:&cmd_addr %l (0x8010140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_LATCHED_CLR                     = " "0, 1"
    tree.end
    tree "BCLK_GEN_MAIN_INT_EN_SET"
      sgroup "BCLK_GEN_MAIN_INT_EN_SET (at 0x11015)"
        set &access:&cmd_addr %l (0x8010150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_EN_CLR"
      sgroup "BCLK_GEN_MAIN_INT_EN_CLR (at 0x11016)"
        set &access:&cmd_addr %l (0x8010160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_LATCHED_STS"
      sgroup "BCLK_GEN_MAIN_INT_LATCHED_STS (at 0x11018)"
        set &access:&cmd_addr %l (0x8010180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_PENDING_STS"
      sgroup "BCLK_GEN_MAIN_INT_PENDING_STS (at 0x11019)"
        set &access:&cmd_addr %l (0x8010190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_PENDING_STS                     = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_MID_SEL"
      sgroup "BCLK_GEN_MAIN_INT_MID_SEL (at 0x1101a)"
        set &access:&cmd_addr %l (0x80101a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x101a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_PRIORITY"
      sgroup "BCLK_GEN_MAIN_INT_PRIORITY (at 0x1101b)"
        set &access:&cmd_addr %l (0x80101b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x101b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "BCLK_GEN_MAIN_BCLK_GEN_ENABLE"
      sgroup "BCLK_GEN_MAIN_BCLK_GEN_ENABLE (at 0x11046)"
        set &access:&cmd_addr %l (0x8010460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_BCLK_GEN                              = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_REQ                           = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_DLL_CFG"
      sgroup "BCLK_GEN_MAIN_DLL_CFG (at 0x11050)"
        set &access:&cmd_addr %l (0x8010500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   DLL_LOCK_CFG                             = " "0 (DLL_LOCK_CHECK_DISABLED_0),1 (DLL_LOCK_CHECK_DISABLED_1),2 (WAIT_FOR_DLL_LOCK),3 (WAIT_FOR_10_US)"
    tree.end
    tree "BCLK_GEN_MAIN_QM_MODE"
      sgroup "BCLK_GEN_MAIN_QM_MODE (at 0x11051)"
        set &access:&cmd_addr %l (0x8010510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   QM_EN                                    = " "0 (QUIET_MODE_DISABLED),1 (QUIET_MODE_ENABLED)"
    tree.end
    tree "BCLK_GEN_MAIN_SEC_ACCESS"
      sgroup "BCLK_GEN_MAIN_SEC_ACCESS (at 0x110d0)"
        set &access:&cmd_addr %l (0x8010d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_RESET_CTL2"
      sgroup "BCLK_GEN_MAIN_PERPH_RESET_CTL2 (at 0x110d9)"
        set &access:&cmd_addr %l (0x8010d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_RESET_CTL3"
      sgroup "BCLK_GEN_MAIN_PERPH_RESET_CTL3 (at 0x110da)"
        set &access:&cmd_addr %l (0x8010da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BCLK_GEN_MAIN_PERPH_RESET_CTL4"
      sgroup "BCLK_GEN_MAIN_PERPH_RESET_CTL4 (at 0x110db)"
        set &access:&cmd_addr %l (0x8010db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BCLK_GEN_MAIN_INT_TEST1"
      sgroup "BCLK_GEN_MAIN_INT_TEST1 (at 0x110e0)"
        set &access:&cmd_addr %l (0x8010e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "BCLK_GEN_MAIN_INT_TEST_VAL"
      sgroup "BCLK_GEN_MAIN_INT_TEST_VAL (at 0x110e1)"
        set &access:&cmd_addr %l (0x8010e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DLL_LOCK_TEST_VAL                        = " "0, 1"
    tree.end
    tree "BCLK_GEN_MAIN_TEST1"
      sgroup "BCLK_GEN_MAIN_TEST1 (at 0x110e2)"
        set &access:&cmd_addr %l (0x8010e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST1_SEL                               = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST2_SEL                               = "
    tree.end
    tree "BCLK_GEN_MAIN_TEST2"
      sgroup "BCLK_GEN_MAIN_TEST2 (at 0x110e3)"
        set &access:&cmd_addr %l (0x8010e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST3_SEL                               = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST4_SEL                               = "
    tree.end
    tree "BCLK_GEN_MAIN_TEST3"
      sgroup "BCLK_GEN_MAIN_TEST3 (at 0x110e4)"
        set &access:&cmd_addr %l (0x8010e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_TRISTATE),1 (ATEST_1S_2T_3T),2 (ATEST_1T_2S_3T),3 (ATEST_1S_2S_3T),4 (ATEST_1T_2T_3S),5 (ATEST_1S_2T_3S),6 (ATEST_1T_2S_3S),7 (ATEST_1S_2S_3S)"
    tree.end
    tree "BCLK_GEN_MAIN_TEST4"
      sgroup "BCLK_GEN_MAIN_TEST4 (at 0x110e5)"
        set &access:&cmd_addr %l (0x8010e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TEST_CLK_EN                              = " "0 (USE_MAIN_CLK),1 (USE_ALT_CLK)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   TEST_CLK_SEL                             = " "0 (ALT_CLK_DTEST1),1 (ALT_CLK_DTEST2),2 (ALT_CLK_DTEST3),3 (ALT_CLK_DTEST4)"
    tree.end
  tree.end
tree.end
tree "BOOST"
  tree "BOOST"
    tree "BOOST_REVISION1"
      sgroup "BOOST_REVISION1 (at 0x1a000)"
        set &access:&cmd_addr %l (0x80a0000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BOOST_REVISION2"
      sgroup "BOOST_REVISION2 (at 0x1a001)"
        set &access:&cmd_addr %l (0x80a0010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BOOST_REVISION3"
      sgroup "BOOST_REVISION3 (at 0x1a002)"
        set &access:&cmd_addr %l (0x80a0020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "BOOST_REVISION4"
      sgroup "BOOST_REVISION4 (at 0x1a003)"
        set &access:&cmd_addr %l (0x80a0030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "BOOST_PERPH_TYPE"
      sgroup "BOOST_PERPH_TYPE (at 0x1a004)"
        set &access:&cmd_addr %l (0x80a0040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BOOST_PERPH_SUBTYPE"
      sgroup "BOOST_PERPH_SUBTYPE (at 0x1a005)"
        set &access:&cmd_addr %l (0x80a0050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BOOST_STATUS1"
      sgroup "BOOST_STATUS1 (at 0x1a008)"
        set &access:&cmd_addr %l (0x80a0080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0, 1"
    tree.end
    tree "BOOST_INT_RT_STS"
      sgroup "BOOST_INT_RT_STS (at 0x1a010)"
        set &access:&cmd_addr %l (0x80a0100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "BOOST_INT_SET_TYPE"
      sgroup "BOOST_INT_SET_TYPE (at 0x1a011)"
        set &access:&cmd_addr %l (0x80a0110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "BOOST_INT_POLARITY_HIGH"
      sgroup "BOOST_INT_POLARITY_HIGH (at 0x1a012)"
        set &access:&cmd_addr %l (0x80a0120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "BOOST_INT_POLARITY_LOW"
      sgroup "BOOST_INT_POLARITY_LOW (at 0x1a013)"
        set &access:&cmd_addr %l (0x80a0130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "BOOST_INT_LATCHED_CLR"
      sgroup "BOOST_INT_LATCHED_CLR (at 0x1a014)"
        set &access:&cmd_addr %l (0x80a0140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "BOOST_INT_EN_SET"
      sgroup "BOOST_INT_EN_SET (at 0x1a015)"
        set &access:&cmd_addr %l (0x80a0150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BOOST_INT_EN_CLR"
      sgroup "BOOST_INT_EN_CLR (at 0x1a016)"
        set &access:&cmd_addr %l (0x80a0160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BOOST_INT_LATCHED_STS"
      sgroup "BOOST_INT_LATCHED_STS (at 0x1a018)"
        set &access:&cmd_addr %l (0x80a0180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "BOOST_INT_PENDING_STS"
      sgroup "BOOST_INT_PENDING_STS (at 0x1a019)"
        set &access:&cmd_addr %l (0x80a0190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "BOOST_INT_MID_SEL"
      sgroup "BOOST_INT_MID_SEL (at 0x1a01a)"
        set &access:&cmd_addr %l (0x80a01a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa01a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "BOOST_INT_PRIORITY"
      sgroup "BOOST_INT_PRIORITY (at 0x1a01b)"
        set &access:&cmd_addr %l (0x80a01b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa01b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "BOOST_OUTPUT_VOLTAGE"
      sgroup "BOOST_OUTPUT_VOLTAGE (at 0x1a041)"
        set &access:&cmd_addr %l (0x80a0410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   SET_OUTPUT_VOLTAGE                       = "
    tree.end
    tree "BOOST_BOOST_ENABLE"
      sgroup "BOOST_BOOST_ENABLE (at 0x1a046)"
        set &access:&cmd_addr %l (0x80a0460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BOOST_ENABLE                             = " "0 (BOOST_DIS),1 (BOOST_EN)"
    tree.end
    tree "BOOST_CURRENT_LIMIT"
      sgroup "BOOST_CURRENT_LIMIT (at 0x1a04a)"
        set &access:&cmd_addr %l (0x80a04a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa04a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CURRENT_LIMIT                         = " "0 (ILIM_DIS),1 (ILIM_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SET_CURRENT_MAX                          = " "0 (ILIM_500MA),1 (ILIM_1000MA),2 (ILIM_1500MA),3 (ILIM_2000MA),4 (ILIM_2500MA),5 (ILIM_3000MA),6 (ILIM_3500MA),7 (ILIM_4000MA)"
    tree.end
    tree "BOOST_LOOP_COMP_CAP"
      sgroup "BOOST_LOOP_COMP_CAP (at 0x1a050)"
        set &access:&cmd_addr %l (0x80a0500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LOOP_COMP_CAP                            = " "0 (COMP_CAP_40PF),1 (COMP_CAP_60PF),2 (COMP_CAP_80PF),3 (COMP_CAP_100PF)"
    tree.end
    tree "BOOST_LOOP_COMP_RES"
      sgroup "BOOST_LOOP_COMP_RES (at 0x1a051)"
        set &access:&cmd_addr %l (0x80a0510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LOOP_COMP_RES                            = " "0 (COMP_RES_100K),1 (COMP_RES_200K),2 (COMP_RES_500K),3 (COMP_RES_600K)"
    tree.end
    tree "BOOST_SLOPE_COMP_CURRENT"
      sgroup "BOOST_SLOPE_COMP_CURRENT (at 0x1a052)"
        set &access:&cmd_addr %l (0x80a0520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SLOPE_COMP_CURRNET                       = " "0 (COMP_CURR_4P5UA),1 (COMP_CURR_4UA),2 (COMP_CURR_3P5UA),3 (COMP_CURR_3UA),4 (COMP_CURR_2P5UA),5 (COMP_CURR_2UA),6 (COMP_CURR_1P5UA),7 (COMP_CURR_1UA)"
    tree.end
    tree "BOOST_SLOPE_COMP_DOUBLER"
      sgroup "BOOST_SLOPE_COMP_DOUBLER (at 0x1a053)"
        set &access:&cmd_addr %l (0x80a0530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SLOPE_COMP_DOUBLER                       = " "0 (COMP_DOUBLER_DIS),1 (COMP_DOUBLER_EN)"
    tree.end
    tree "BOOST_IP_ZERO_DETECTOR"
      sgroup "BOOST_IP_ZERO_DETECTOR (at 0x1a054)"
        set &access:&cmd_addr %l (0x80a0540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   VOLTAGE_OFFSET                           = " "0 (VOFF_0MV),1 (VOFF_1P5MV),2 (VOFF_3MV),3 (VOFF_4P5MV)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ZX_DETECT_ON                             = " "0 (IPZERODET_ZERO),1 (IPZERODET_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   AUTOZERO_ON                              = " "0 (AUTOZERO_EN),1 (AUTO_ZERO_DIS)"
    tree.end
    tree "BOOST_RDSON_MNGMNT"
      sgroup "BOOST_RDSON_MNGMNT (at 0x1a055)"
        set &access:&cmd_addr %l (0x80a0550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PFET_SW_SIZE                             = " "0 (RDSON_HALF),1 (RDSON_FULLSIZE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NFET_SW_SIZE                             = " "0 (RDSON_TWOTHIRDS),1 (RDSON_FULLSIZE)"
    tree.end
    tree "BOOST_MAX_DUTY_CYCLE"
      sgroup "BOOST_MAX_DUTY_CYCLE (at 0x1a056)"
        set &access:&cmd_addr %l (0x80a0560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_MAX_DUTY_CYCLE                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_D_MODULATION                          = " "0 (DIS_D_MODULATION),1 (EN_D_MODULATION)"
    tree.end
    tree "BOOST_SEC_ACCESS"
      sgroup "BOOST_SEC_ACCESS (at 0x1a0d0)"
        set &access:&cmd_addr %l (0x80a0d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BOOST_PERPH_RESET_CTL1"
      sgroup "BOOST_PERPH_RESET_CTL1 (at 0x1a0d8)"
        set &access:&cmd_addr %l (0x80a0d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "BOOST_PERPH_RESET_CTL2"
      sgroup "BOOST_PERPH_RESET_CTL2 (at 0x1a0d9)"
        set &access:&cmd_addr %l (0x80a0d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "BOOST_PERPH_RESET_CTL3"
      sgroup "BOOST_PERPH_RESET_CTL3 (at 0x1a0da)"
        set &access:&cmd_addr %l (0x80a0da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "BOOST_PERPH_RESET_CTL4"
      sgroup "BOOST_PERPH_RESET_CTL4 (at 0x1a0db)"
        set &access:&cmd_addr %l (0x80a0db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BOOST_INT_TEST1"
      sgroup "BOOST_INT_TEST1 (at 0x1a0e0)"
        set &access:&cmd_addr %l (0x80a0e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "BOOST_INT_TEST_VAL"
      sgroup "BOOST_INT_TEST_VAL (at 0x1a0e1)"
        set &access:&cmd_addr %l (0x80a0e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "BOOST_DTEST_ACCESS"
      sgroup "BOOST_DTEST_ACCESS (at 0x1a0e2)"
        set &access:&cmd_addr %l (0x80a0e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_ACCESS                             = "
    tree.end
    tree "BOOST_ATEST_ACCESS"
      sgroup "BOOST_ATEST_ACCESS (at 0x1a0e3)"
        set &access:&cmd_addr %l (0x80a0e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST_ACCESS                             = " "0 (NO_SIGNAL),1 (VC),2 (NFET_DSNS),3 (NFET_SSNS),4 (VINT7),5 (PVDD_DLOW),6 (PCDD_D0P25),7 (VREF_PS)"
    tree.end
    tree "BOOST_SW_FORCE_CTRL"
      sgroup "BOOST_SW_FORCE_CTRL (at 0x1a0e4)"
        set &access:&cmd_addr %l (0x80a0e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PFET_FORCE                            = " "0 (PFET_FORCE_DIS),1 (PFET_FORCE_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFET_FORCE                               = " "0 (PFET_OFF),1 (PFET_ON)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_NFET_FORCE                            = " "0 (NFET_FORCE_DIS),1 (NFET_FORCE_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NFET_FORCE                               = " "0 (NFET_OFF),1 (NFET_ON)"
    tree.end
    tree "BOOST_PULSESKIP_THRES_SEL"
      sgroup "BOOST_PULSESKIP_THRES_SEL (at 0x1a0e5)"
        set &access:&cmd_addr %l (0x80a0e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULSESKIP_ENABLE                         = " "0 (PULSESKIP_ENB),1 (PULSESKIP_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PULSESKIP_THRES                          = " "0 (PULSESKIP_THRES_50MA),1 (PULSESKIP_THRES_100MA),2 (PULSESKIP_THRES_150MA),3 (PULSESKIP_THRES_200MA)"
    tree.end
    tree "BOOST_SMART_BOOST"
      sgroup "BOOST_SMART_BOOST (at 0x1a0e6)"
        set &access:&cmd_addr %l (0x80a0e60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0e60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   HW_FOLLOW_EN                             = " "0 (IGNORE_BST_REQ),1 (FOLLOW_BST_REQ)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1_FOLLOW_EN                         = " "0 (IGNORE_DTEST1),1 (FOLLOW_DTEST1)"
    tree.end
  tree.end
tree.end
tree "BOOST_BYP"
  tree "BOOST_BYP"
    tree "BOOST_BYP_REVISION1"
      sgroup "BOOST_BYP_REVISION1 (at 0x1a200)"
        set &access:&cmd_addr %l (0x80a2000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BOOST_BYP_REVISION2"
      sgroup "BOOST_BYP_REVISION2 (at 0x1a201)"
        set &access:&cmd_addr %l (0x80a2010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BOOST_BYP_REVISION3"
      sgroup "BOOST_BYP_REVISION3 (at 0x1a202)"
        set &access:&cmd_addr %l (0x80a2020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "BOOST_BYP_REVISION4"
      sgroup "BOOST_BYP_REVISION4 (at 0x1a203)"
        set &access:&cmd_addr %l (0x80a2030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "BOOST_BYP_PERPH_TYPE"
      sgroup "BOOST_BYP_PERPH_TYPE (at 0x1a204)"
        set &access:&cmd_addr %l (0x80a2040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BOOST_BYP_PERPH_SUBTYPE"
      sgroup "BOOST_BYP_PERPH_SUBTYPE (at 0x1a205)"
        set &access:&cmd_addr %l (0x80a2050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BOOST_BYP_STATUS1"
      sgroup "BOOST_BYP_STATUS1 (at 0x1a208)"
        set &access:&cmd_addr %l (0x80a2080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (BB_DISABLED),1 (BB_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ISL_FLAG                                 = " "0 (ISL_FLAG_LOW),1 (ISL_FLAG_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USL_FLAG                                 = " "0 (USL_FLAG_LOW),1 (USL_FLAG_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LSL_FLAG                                 = " "0 (LSL_FLAG_LOW),1 (LSL_FLAG_HIGH)"
    tree.end
    tree "BOOST_BYP_INT_RT_STS"
      sgroup "BOOST_BYP_INT_RT_STS (at 0x1a210)"
        set &access:&cmd_addr %l (0x80a2100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_RT_STS                      = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "BOOST_BYP_INT_SET_TYPE"
      sgroup "BOOST_BYP_INT_SET_TYPE (at 0x1a211)"
        set &access:&cmd_addr %l (0x80a2110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_TYPE                        = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "BOOST_BYP_INT_POLARITY_HIGH"
      sgroup "BOOST_BYP_INT_POLARITY_HIGH (at 0x1a212)"
        set &access:&cmd_addr %l (0x80a2120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_HIGH                        = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "BOOST_BYP_INT_POLARITY_LOW"
      sgroup "BOOST_BYP_INT_POLARITY_LOW (at 0x1a213)"
        set &access:&cmd_addr %l (0x80a2130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_LOW                         = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "BOOST_BYP_INT_LATCHED_CLR"
      sgroup "BOOST_BYP_INT_LATCHED_CLR (at 0x1a214)"
        set &access:&cmd_addr %l (0x80a2140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "BOOST_BYP_INT_EN_SET"
      sgroup "BOOST_BYP_INT_EN_SET (at 0x1a215)"
        set &access:&cmd_addr %l (0x80a2150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_EN_SET                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BOOST_BYP_INT_EN_CLR"
      sgroup "BOOST_BYP_INT_EN_CLR (at 0x1a216)"
        set &access:&cmd_addr %l (0x80a2160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_EN_CLR                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BOOST_BYP_INT_LATCHED_STS"
      sgroup "BOOST_BYP_INT_LATCHED_STS (at 0x1a218)"
        set &access:&cmd_addr %l (0x80a2180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_LATCHED_STS                 = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "BOOST_BYP_INT_PENDING_STS"
      sgroup "BOOST_BYP_INT_PENDING_STS (at 0x1a219)"
        set &access:&cmd_addr %l (0x80a2190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_PENDING_STS                 = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "BOOST_BYP_INT_MID_SEL"
      sgroup "BOOST_BYP_INT_MID_SEL (at 0x1a21a)"
        set &access:&cmd_addr %l (0x80a21a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa21a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "BOOST_BYP_INT_PRIORITY"
      sgroup "BOOST_BYP_INT_PRIORITY (at 0x1a21b)"
        set &access:&cmd_addr %l (0x80a21b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa21b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "BOOST_BYP_OUTPUT_VOLTAGE"
      sgroup "BOOST_BYP_OUTPUT_VOLTAGE (at 0x1a241)"
        set &access:&cmd_addr %l (0x80a2410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SET_OUTPUT_VOLTAGE                       = "
    tree.end
    tree "BOOST_BYP_OUTPUT_VOLTAGE_MODE_BB"
      sgroup "BOOST_BYP_OUTPUT_VOLTAGE_MODE_BB (at 0x1a242)"
        set &access:&cmd_addr %l (0x80a2420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SET_OUTPUT_VOLTAGE                       = "
    tree.end
    tree "BOOST_BYP_MODE_CTL"
      sgroup "BOOST_BYP_MODE_CTL (at 0x1a245)"
        set &access:&cmd_addr %l (0x80a2450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BBYP_MODE                                = " "0 (FORCED_BYPASS),1 (AUTO_BOOST)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BOOST_MODE                               = " "0 (FORCED_PBM),1 (FORCED_PWM)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PULSE_SKIP                               = " "0 (PULSE_SKIP_DIS),1 (PULSE_SKIP_EN)"
    tree.end
    tree "BOOST_BYP_BBYP_ENABLE"
      sgroup "BOOST_BYP_BBYP_ENABLE (at 0x1a246)"
        set &access:&cmd_addr %l (0x80a2460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BBYP_ENABLE                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "BOOST_BYP_CLK_DIV"
      sgroup "BOOST_BYP_CLK_DIV (at 0x1a24a)"
        set &access:&cmd_addr %l (0x80a24a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa24a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CLK_DIV                                  = " "0 (MHZ6P4),1 (MHZ4P8),2 (MHZ3P84),3 (MHZ3P2),4 (MHZ2P4),5 (MHZ1P92),6 (MHZ1P6),7 (MHZ1P2)"
    tree.end
    tree "BOOST_BYP_CURRENT_LIMIT_CTL"
      sgroup "BOOST_BYP_CURRENT_LIMIT_CTL (at 0x1a24b)"
        set &access:&cmd_addr %l (0x80a24b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa24b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CURRENT_LIMIT                         = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   ILIMIT_COUNT                             = " "0 (CYC8),1 (CYC16),2 (CYC32),3 (CYC64)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SET_CURRENT_MAX                          = " "0 (MA500),1 (MA1000),2 (MA1500),3 (MA2000),4 (MA2500),5 (MA3000),6 (MA3500),7 (MA4000)"
    tree.end
    tree "BOOST_BYP_CURRENT_SENSE"
      sgroup "BOOST_BYP_CURRENT_SENSE (at 0x1a24c)"
        set &access:&cmd_addr %l (0x80a24c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa24c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ISENSE_GAIN                              = " "0 (X0P5),1 (X1),2 (X1P5),3 (X2)"
    tree.end
    tree "BOOST_BYP_LOOP_COMP_CTL"
      sgroup "BOOST_BYP_LOOP_COMP_CTL (at 0x1a250)"
        set &access:&cmd_addr %l (0x80a2500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   LOOP_COMP_CAP                            = " "0 (PF40),1 (PF60),2 (PF80),3 (PF100)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LOOP_COMP_RES                            = " "0 (KOHM50),1 (KOHM150),2 (KOHM300),3 (KOHM400)"
    tree.end
    tree "BOOST_BYP_SLOPE_COMP_CTL"
      sgroup "BOOST_BYP_SLOPE_COMP_CTL (at 0x1a251)"
        set &access:&cmd_addr %l (0x80a2510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x3 "  [ 3: 1]   SLOPE_COMP_CURRENT                       = " "0 (UA4P5),1 (UA4),2 (UA3P5),3 (UA3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SLOPE_COMP_DOUBLER                       = " "0 (DO_NOT_DOUBLE),1 (DOUBLE)"
    tree.end
    tree "BOOST_BYP_IP_ZERO_DETECTOR"
      sgroup "BOOST_BYP_IP_ZERO_DETECTOR (at 0x1a252)"
        set &access:&cmd_addr %l (0x80a2520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   VOLTAGE_OFFSET                           = " "0 (MV0),1 (MV1P5),2 (MV3),3 (MV4P5)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ZX_DETECT_ON                             = " "0 (ZX_DET_DISABLED),1 (ZX_DET_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   AUTOZERO_ON                              = " "0 (AUTO_ZERORING_DISABLED),1 (AUTO_ZEROING_ENABLED)"
    tree.end
    tree "BOOST_BYP_RDSON_MNGMNT"
      sgroup "BOOST_BYP_RDSON_MNGMNT (at 0x1a253)"
        set &access:&cmd_addr %l (0x80a2530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   BYPASS_PFET_SIZE                         = " "0 (X0P125),1 (X0P25),2 (X0P5),3 (X1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PFET_SIZE                                = " "0 (X0P125),1 (X0P25),2 (X0P5),3 (X1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   NFET_SIZE                                = " "0 (X0P125),1 (X0P25),2 (X0P5),3 (X1)"
    tree.end
    tree "BOOST_BYP_MAX_DUTY_CYCLE"
      sgroup "BOOST_BYP_MAX_DUTY_CYCLE (at 0x1a254)"
        set &access:&cmd_addr %l (0x80a2540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_MAX_DUTY_CYCLE                        = " "0 (MAX_DC_DISABLED),1 (MAX_DC_ENABLED)"
    tree.end
    tree "BOOST_BYP_PS_CTL"
      sgroup "BOOST_BYP_PS_CTL (at 0x1a255)"
        set &access:&cmd_addr %l (0x80a2550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PS_THRESHOLD                             = " "0 (MA50),1 (MA100),2 (MA200),3 (MA300)"
    tree.end
    tree "BOOST_BYP_PBM_CTL"
      sgroup "BOOST_BYP_PBM_CTL (at 0x1a256)"
        set &access:&cmd_addr %l (0x80a2560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PBM_ILIMIT                               = " "0 (A2P5),1 (A3),2 (A3P5),3 (A4)"
    tree.end
    tree "BOOST_BYP_PWM_CTL"
      sgroup "BOOST_BYP_PWM_CTL (at 0x1a257)"
        set &access:&cmd_addr %l (0x80a2570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ERR_AMP_GAIN                             = " "0 (LOW_GAIN),1 (HIGH_GAIN)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   BLANK_TIME                               = " "0 (NS5),1 (NS10),2 (NS20),3 (NS35)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MIN_DUTY_CYCLE                           = " "0 (PCT7P5),1 (PCT9),2 (PCT10),3 (PCT15)"
    tree.end
    tree "BOOST_BYP_SOFT_START_CTL"
      sgroup "BOOST_BYP_SOFT_START_CTL (at 0x1a25a)"
        set &access:&cmd_addr %l (0x80a25a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa25a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SELECT_THE_MAX_SOFT_START_TIME           = " "0 (US200),1 (US300),2 (US400),3 (US500)"
    tree.end
    tree "BOOST_BYP_VREG_OK_CTL"
      sgroup "BOOST_BYP_VREG_OK_CTL (at 0x1a25b)"
        set &access:&cmd_addr %l (0x80a25b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa25b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VREG_OK_DEB                              = " "0 (US53P3),1 (US80),2 (US106P7),3 (US133P3)"
    tree.end
    tree "BOOST_BYP_MODE_TRSN_VTH"
      sgroup "BOOST_BYP_MODE_TRSN_VTH (at 0x1a25c)"
        set &access:&cmd_addr %l (0x80a25c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa25c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   BYP_TO_BOOST_VTH                         = " "0 (MV0),1 (MV10),2 (MV20),3 (MV30),4 (MV40),5 (MV50),6 (MV60),7 (MV70)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   BOOST_TO_BYP_VTH                         = " "0 (MV0X),1 (MV25),2 (MV50X),3 (MV75),4 (MV100),5 (MV125),6 (MV150),7 (MV175)"
    tree.end
    tree "BOOST_BYP_MODE_TRSN_DEB"
      sgroup "BOOST_BYP_MODE_TRSN_DEB (at 0x1a25d)"
        set &access:&cmd_addr %l (0x80a25d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa25d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   BYP_TO_BOOST_DEB                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   BOOST_TO_BYP_DEB                         = "
    tree.end
    tree "BOOST_BYP_TX_GTR_TRESH_CTL"
      sgroup "BOOST_BYP_TX_GTR_TRESH_CTL (at 0x1a25e)"
        set &access:&cmd_addr %l (0x80a25e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa25e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TX_GTR_TRESH_ENABLE                      = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   THRESHOLD                                = " "0 (MV200),1 (MV300),2 (MV400),3 (MV500)"
    tree.end
    tree "BOOST_BYP_UL_LL_CTRL"
      sgroup "BOOST_BYP_UL_LL_CTRL (at 0x1a268)"
        set &access:&cmd_addr %l (0x80a2680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UL_INT_EN                                = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LL_INT_EN                                = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "BOOST_BYP_BOOST_VSET_UL"
      sgroup "BOOST_BYP_BOOST_VSET_UL (at 0x1a269)"
        set &access:&cmd_addr %l (0x80a2690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   BOOST_VSET_UL                            = "
    tree.end
    tree "BOOST_BYP_BOOST_VSET_LL"
      sgroup "BOOST_BYP_BOOST_VSET_LL (at 0x1a26b)"
        set &access:&cmd_addr %l (0x80a26b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa26b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   BOOST_VSET_LL                            = "
    tree.end
    tree "BOOST_BYP_SEC_ACCESS"
      sgroup "BOOST_BYP_SEC_ACCESS (at 0x1a2d0)"
        set &access:&cmd_addr %l (0x80a2d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BOOST_BYP_PERPH_RESET_CTL1"
      sgroup "BOOST_BYP_PERPH_RESET_CTL1 (at 0x1a2d8)"
        set &access:&cmd_addr %l (0x80a2d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "BOOST_BYP_PERPH_RESET_CTL2"
      sgroup "BOOST_BYP_PERPH_RESET_CTL2 (at 0x1a2d9)"
        set &access:&cmd_addr %l (0x80a2d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BOOST_BYP_PERPH_RESET_CTL3"
      sgroup "BOOST_BYP_PERPH_RESET_CTL3 (at 0x1a2da)"
        set &access:&cmd_addr %l (0x80a2da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BOOST_BYP_PERPH_RESET_CTL4"
      sgroup "BOOST_BYP_PERPH_RESET_CTL4 (at 0x1a2db)"
        set &access:&cmd_addr %l (0x80a2db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BOOST_BYP_INT_TEST1"
      sgroup "BOOST_BYP_INT_TEST1 (at 0x1a2e0)"
        set &access:&cmd_addr %l (0x80a2e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "BOOST_BYP_INT_TEST_VAL"
      sgroup "BOOST_BYP_INT_TEST_VAL (at 0x1a2e1)"
        set &access:&cmd_addr %l (0x80a2e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_TEST_VAL                    = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "BOOST_BYP_DTEST1_ACCESS"
      sgroup "BOOST_BYP_DTEST1_ACCESS (at 0x1a2e2)"
        set &access:&cmd_addr %l (0x80a2e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1_ACCESS                            = " "0 (NO_SIGNAL),1 (CURRENT_COMPARATOR_OUTPUT),2 (PBM_COMPARATOR_OUTPUT),3 (CURRENT_LIMIT_COMPARATOR_OUTPUT),4 (PULSE_SKIP_COMPARATOR_OUTPUT),5 (DUTY_CYCLE_MONITOR_COMPARATOR_OUTPUT),6 (VIN_HIGHER_THAN_VSET_COMPARATOR_OUTPUT),7 (VREG_OK_COMPARATOR_OUTPUT)"
    tree.end
    tree "BOOST_BYP_DTEST2_ACCESS"
      sgroup "BOOST_BYP_DTEST2_ACCESS (at 0x1a2e3)"
        set &access:&cmd_addr %l (0x80a2e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2_ACCESS                            = " "0 (NO_SIGNAL),1 (SWITCHING_FREQUENCY_CLOCK),2 (MAX_D_SIGNAL),3 (CLOCK_19P2M),4 (NFET_GATE_LOGIC),5 (PFET_GATE_LOGIC),6 (BYPASS_PFET_GATE_LOGIC),7 (INZERO_COMP_OUT)"
    tree.end
    tree "BOOST_BYP_DTEST3_ACCESS"
      sgroup "BOOST_BYP_DTEST3_ACCESS (at 0x1a2e4)"
        set &access:&cmd_addr %l (0x80a2e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3_ACCESS                            = " "0 (NO_SIGNAL),1 (BIAS_LOW),2 (PWM_ENABLE),3 (PBM_ENABLE),4 (NFET_GATE_DRIVE),5 (PFET_GATE_DRIVE),6 (BYPASS_PFET_GATE_DRIVE),7 (DVSS)"
    tree.end
    tree "BOOST_BYP_DTEST4_ACCESS"
      sgroup "BOOST_BYP_DTEST4_ACCESS (at 0x1a2e5)"
        set &access:&cmd_addr %l (0x80a2e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4_ACCESS                            = " "0 (NO_SIGNAL),1 (DEBOUCED_VOK_SIGNAL),2 (DEBOUCED_BYPASS_MODE_SIGNAL),3 (CURRENT_SENSE_SWITCH_CONTROL_SIGNAL),4 (DVSS4),5 (DVSS5),6 (DVSS6),7 (DVSS7)"
    tree.end
    tree "BOOST_BYP_ATEST1_ACCESS"
      sgroup "BOOST_BYP_ATEST1_ACCESS (at 0x1a2e6)"
        set &access:&cmd_addr %l (0x80a2e60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST1_ACCESS                            = " "0 (NO_SIGNAL),1 (ERRAMP_OUT),2 (VREF1P25_BUF),3 (BGAP_BIAS_P_MIR),4 (BGAP_BIAS_P_CAS),5 (BGAP_BIAS_N_CAS),6 (VOUT_DIV_PBM),7 (BYP_THRES)"
    tree.end
    tree "BOOST_BYP_ATEST2_ACCESS"
      sgroup "BOOST_BYP_ATEST2_ACCESS (at 0x1a2e7)"
        set &access:&cmd_addr %l (0x80a2e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST2_ACCESS                            = " "0 (NO_SIGNAL),1 (VOUT_DIV_ERRAMP),2 (VOUT_DIV_VOKCOMP),3 (VIN_DIV_BPSCOMP),4 (VIN_DIV_DUTYCOMP),5 (VIN_DIV_BUFFER),6 (PGND_SENSING_POINT),7 (V2P0_PBMCOMP)"
    tree.end
    tree "BOOST_BYP_ATEST3_ACCESS"
      sgroup "BOOST_BYP_ATEST3_ACCESS (at 0x1a2e8)"
        set &access:&cmd_addr %l (0x80a2e80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST3_ACCESS                            = " "0 (NO_SIGNAL),1 (V2P0_ERRAMP),2 (VREF_PS),3 (NFET_DSNS)"
    tree.end
    tree "BOOST_BYP_ATEST4_ACCESS"
      sgroup "BOOST_BYP_ATEST4_ACCESS (at 0x1a2e9)"
        set &access:&cmd_addr %l (0x80a2e90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2e90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST4_ACCESS                            = " "0 (NO_SIGNAL),1 (V2P0_ERRAMP),2 (VLIMIT),3 (IMAX_VREF)"
    tree.end
    tree "BOOST_BYP_TEST_CTL"
      sgroup "BOOST_BYP_TEST_CTL (at 0x1a2ea)"
        set &access:&cmd_addr %l (0x80a2ea0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2ea0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PFET_OVERRIDE                         = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFET_CTL                                 = " "0 (OFF),1 (ON)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_NFET_OVERRIDE                         = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NFET_CTL                                 = " "0 (OFF),1 (ON)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EN_BPPFET_OVERRIDE                       = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BPPFET_CTL                               = " "0 (OFF),1 (ON)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SCALE_ILIM                               = " "0 (X1),1 (X0P5),2 (X0P33),3 (X0P25)"
    tree.end
    tree "BOOST_BYP_DEBOUNCER_OVERRIDE"
      sgroup "BOOST_BYP_DEBOUNCER_OVERRIDE (at 0x1a2eb)"
        set &access:&cmd_addr %l (0x80a2eb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2eb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   DEB_ILIMIT                               = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEB_VREG_OK                              = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEB_BYPASS_ON                            = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "BOOST_BYP_TRIM_NUM"
      sgroup "BOOST_BYP_TRIM_NUM (at 0x1a2f0)"
        set &access:&cmd_addr %l (0x80a2f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "BOOST_BYP_TRIM_CTL1"
      sgroup "BOOST_BYP_TRIM_CTL1 (at 0x1a2f1)"
        set &access:&cmd_addr %l (0x80a2f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIM_EN                                  = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   ERR_AMP_OFFSET                           = "
    tree.end
    tree "BOOST_BYP_TRIM_CTL2"
      sgroup "BOOST_BYP_TRIM_CTL2 (at 0x1a2f2)"
        set &access:&cmd_addr %l (0x80a2f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PBM_COMP_OFFSET                          = "
    tree.end
  tree.end
tree.end
tree "BOOST_FREQ"
  tree "BOOST_FREQ"
    tree "BOOST_FREQ_REVISION1"
      sgroup "BOOST_FREQ_REVISION1 (at 0x1a100)"
        set &access:&cmd_addr %l (0x80a1000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BOOST_FREQ_REVISION2"
      sgroup "BOOST_FREQ_REVISION2 (at 0x1a101)"
        set &access:&cmd_addr %l (0x80a1010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BOOST_FREQ_PERPH_TYPE"
      sgroup "BOOST_FREQ_PERPH_TYPE (at 0x1a104)"
        set &access:&cmd_addr %l (0x80a1040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BOOST_FREQ_PERPH_SUBTYPE"
      sgroup "BOOST_FREQ_PERPH_SUBTYPE (at 0x1a105)"
        set &access:&cmd_addr %l (0x80a1050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BOOST_FREQ_CLK_ENABLE"
      sgroup "BOOST_FREQ_CLK_ENABLE (at 0x1a146)"
        set &access:&cmd_addr %l (0x80a1460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "BOOST_FREQ_CLK_DIV"
      sgroup "BOOST_FREQ_CLK_DIV (at 0x1a150)"
        set &access:&cmd_addr %l (0x80a1500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "BOOST_FREQ_CLK_PHASE"
      sgroup "BOOST_FREQ_CLK_PHASE (at 0x1a151)"
        set &access:&cmd_addr %l (0x80a1510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "BOOST_FREQ_GANG_CTL1"
      sgroup "BOOST_FREQ_GANG_CTL1 (at 0x1a1c0)"
        set &access:&cmd_addr %l (0x80a1c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "BOOST_FREQ_GANG_CTL2"
      sgroup "BOOST_FREQ_GANG_CTL2 (at 0x1a1c1)"
        set &access:&cmd_addr %l (0x80a1c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "BOOST_FREQ_SEC_ACCESS"
      sgroup "BOOST_FREQ_SEC_ACCESS (at 0x1a1d0)"
        set &access:&cmd_addr %l (0x80a1d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BOOST_FREQ_PERPH_RESET_CTL2"
      sgroup "BOOST_FREQ_PERPH_RESET_CTL2 (at 0x1a1d9)"
        set &access:&cmd_addr %l (0x80a1d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BOOST_FREQ_PERPH_RESET_CTL3"
      sgroup "BOOST_FREQ_PERPH_RESET_CTL3 (at 0x1a1da)"
        set &access:&cmd_addr %l (0x80a1da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BOOST_FREQ_PERPH_RESET_CTL4"
      sgroup "BOOST_FREQ_PERPH_RESET_CTL4 (at 0x1a1db)"
        set &access:&cmd_addr %l (0x80a1db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BOOST_FREQ_TEST1"
      sgroup "BOOST_FREQ_TEST1 (at 0x1a1e2)"
        set &access:&cmd_addr %l (0x80a1e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "BSI"
  tree "BSI"
    tree "BSI_REVISION1"
      sgroup "BSI_REVISION1 (at 0x1b00)"
        set &access:&cmd_addr %l (0x801b000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BSI_REVISION2"
      sgroup "BSI_REVISION2 (at 0x1b01)"
        set &access:&cmd_addr %l (0x801b010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BSI_REVISION3"
      sgroup "BSI_REVISION3 (at 0x1b02)"
        set &access:&cmd_addr %l (0x801b020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "BSI_REVISION4"
      sgroup "BSI_REVISION4 (at 0x1b03)"
        set &access:&cmd_addr %l (0x801b030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "BSI_PERPH_TYPE"
      sgroup "BSI_PERPH_TYPE (at 0x1b04)"
        set &access:&cmd_addr %l (0x801b040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BSI_PERPH_SUBTYPE"
      sgroup "BSI_PERPH_SUBTYPE (at 0x1b05)"
        set &access:&cmd_addr %l (0x801b050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BSI_BSI_STS"
      sgroup "BSI_BSI_STS (at 0x1b08)"
        set &access:&cmd_addr %l (0x801b080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BSI_ACTIVE                               = " "0 (BSI_NOT_ACTIVE),1 (BSI_ACTIVE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BSI_TX_DISABLE                           = " "0 (TX_ENABLED),1 (TX_DISABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MIPI_BIF_ERR_FLAG                        = " "0 (OK),1 (ERROR)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MIPI_BIF_TX_BUSY                         = " "0 (TX_IDLE),1 (TX_BUSY)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_RX_BUSY                         = " "0 (RX_IDLE),1 (RX_BUSY)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_TX_GO_STATUS                    = " "0 (TX_GO_CLEAR),1 (TX_GO_SET)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_RX_FLOW_STATUS                  = " "0 (NO_RX_DATA),1 (RX_DATA_AVAIL)"
    tree.end
    tree "BSI_MIPI_BIF_FSM_STS"
      sgroup "BSI_MIPI_BIF_FSM_STS (at 0x1b09)"
        set &access:&cmd_addr %l (0x801b090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MIPI_BIF_TX_FSM                          = " "0 (TX_IDLE),1 (TX_DATA_STATE),2 (TX_STOP),3 (TX_BAT_IRQ),4 (TX_PUL),5 (TX_WAIT_CLR_ERR),6 (TX_DLY_STATE),7 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   MIPI_BIF_RX_FSM                          = " "0 (RX_IDLE),1 (RX_BCF),2 (RX_NOT_BCF),3 (RX_DATA_STATE),4 (RX_STOP),5 (RX_BAT_IRQ),6 (RX_WAIT_CLR_ERR),7 (reserved)"
    tree.end
    tree "BSI_RX_FIFO_STS"
      sgroup "BSI_RX_FIFO_STS (at 0x1b0a)"
        set &access:&cmd_addr %l (0x801b0a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b0a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   WORD_NUM                                 = "
    tree.end
    tree "BSI_BSI_BAT_STS"
      sgroup "BSI_BSI_BAT_STS (at 0x1b0d)"
        set &access:&cmd_addr %l (0x801b0d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b0d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BAT_MISS_DEB                             = " "0 (BATT_PRESENT),1 (BATT_GONE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_MISS_RAW                             = " "0 (BATT_PRESENT),1 (BATT_GONE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BAT_DEB_PRES_STATUS                      = " "0 (BATT_PRESENT),1 (BATT_GONE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_NODEB_PRES_STATUS                    = " "0 (BATT_PRESENT),1 (BATT_GONE)"
    tree.end
    tree "BSI_INT_RT_STS"
      sgroup "BSI_INT_RT_STS (at 0x1b10)"
        set &access:&cmd_addr %l (0x801b100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_RT_STS                      = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_RT_STS                    = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_RT_STS                        = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_RT_STS                   = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_RT_STS                   = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_RT_STS                  = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "BSI_INT_SET_TYPE"
      sgroup "BSI_INT_SET_TYPE (at 0x1b11)"
        set &access:&cmd_addr %l (0x801b110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_SET_TYPE                    = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_SET_TYPE                  = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_SET_TYPE                      = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_SET_TYPE                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_SET_TYPE                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_SET_TYPE                = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "BSI_INT_POLARITY_HIGH"
      sgroup "BSI_INT_POLARITY_HIGH (at 0x1b12)"
        set &access:&cmd_addr %l (0x801b120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_POLARITY_HIGH               = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_POLARITY_HIGH             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_POLARITY_HIGH                 = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_POLARITY_HIGH            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_POLARITY_HIGH            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_POLARITY_HIGH           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "BSI_INT_POLARITY_LOW"
      sgroup "BSI_INT_POLARITY_LOW (at 0x1b13)"
        set &access:&cmd_addr %l (0x801b130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_POLARITY_LOW                = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_POLARITY_LOW              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_POLARITY_LOW                  = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_POLARITY_LOW             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_POLARITY_LOW             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_POLARITY_LOW            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "BSI_INT_LATCHED_CLR"
      sgroup "BSI_INT_LATCHED_CLR (at 0x1b14)"
        set &access:&cmd_addr %l (0x801b140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_LATCHED_CLR               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_LATCHED_CLR                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_LATCHED_CLR             = " "0, 1"
    tree.end
    tree "BSI_INT_EN_SET"
      sgroup "BSI_INT_EN_SET (at 0x1b15)"
        set &access:&cmd_addr %l (0x801b150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_EN_SET                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_EN_SET                    = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_EN_SET                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BSI_INT_EN_CLR"
      sgroup "BSI_INT_EN_CLR (at 0x1b16)"
        set &access:&cmd_addr %l (0x801b160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_EN_CLR                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_EN_CLR                    = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_EN_CLR                        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "BSI_INT_LATCHED_STS"
      sgroup "BSI_INT_LATCHED_STS (at 0x1b18)"
        set &access:&cmd_addr %l (0x801b180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_LATCHED_STS                 = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_LATCHED_STS               = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_LATCHED_STS                   = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "BSI_INT_PENDING_STS"
      sgroup "BSI_INT_PENDING_STS (at 0x1b19)"
        set &access:&cmd_addr %l (0x801b190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_PENDING_STS                 = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_PENDING_STS               = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_PENDING_STS                   = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "BSI_INT_MID_SEL"
      sgroup "BSI_INT_MID_SEL (at 0x1b1a)"
        set &access:&cmd_addr %l (0x801b1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "BSI_INT_PRIORITY"
      sgroup "BSI_INT_PRIORITY (at 0x1b1b)"
        set &access:&cmd_addr %l (0x801b1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "BSI_BSI_EN"
      sgroup "BSI_BSI_EN (at 0x1b46)"
        set &access:&cmd_addr %l (0x801b460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BSI_EN                                   = " "0 (BSI_DISABLED),1 (BSI_ENABLED)"
    tree.end
    tree "BSI_MIPI_BIF_ERR_CLEAR"
      sgroup "BSI_MIPI_BIF_ERR_CLEAR (at 0x1b4f)"
        set &access:&cmd_addr %l (0x801b4f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b4f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_CLEAR_ERR                       = " "0, 1"
    tree.end
    tree "BSI_MIPI_BIF_FSM_RESET"
      sgroup "BSI_MIPI_BIF_FSM_RESET (at 0x1b50)"
        set &access:&cmd_addr %l (0x801b500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_FSM_RESET                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   MIPI_BIF_RX_FIFO_RESET                   = " "0, 1"
    tree.end
    tree "BSI_MIPI_BIF_FORCE_BCL_LOW"
      sgroup "BSI_MIPI_BIF_FORCE_BCL_LOW (at 0x1b51)"
        set &access:&cmd_addr %l (0x801b510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_FORCE_BCL_LOW                   = " "0 (BCL_RELEASED),1 (BCL_FORCED_LOW)"
    tree.end
    tree "BSI_MIPI_BIF_TAU_CFG"
      sgroup "BSI_MIPI_BIF_TAU_CFG (at 0x1b52)"
        set &access:&cmd_addr %l (0x801b520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MIPI_BIF_SAMPLE_RATE                     = " "0 (SAMPLE_RATE_4X),1 (SAMPLE_RATE_8X)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   MIPI_BIF_SEL_TAU                         = " "0 (TAU_150US),1 (TAU_122US),2 (TAU_62US),3 (TAU_32US),4 (TAU_16US),5 (TAU_8US),6 (TAU_4US),7 (TAU_2US)"
    tree.end
    tree "BSI_MIPI_BIF_MODE"
      sgroup "BSI_MIPI_BIF_MODE (at 0x1b53)"
        set &access:&cmd_addr %l (0x801b530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MIPI_BIF_TX_PULSE_MODE                   = " "0 (TX_DATA_MODE),1 (TX_PULSE_MODE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MIPI_BIF_RX_PULSE_MODE                   = " "0 (RX_DATA_MODE),1 (RX_PULSE_MODE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_PULSE_TYPE                   = " "0 (TX_PULSE_1_TAU),1 (TX_PULSE_240US)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_DATA_FORMAT                  = " "0 (RX_11BIT_MODE),1 (RX_17BIT_MODE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_TX_DATA_FORMAT                  = " "0 (TX_11BIT_MODE),1 (TX_17BIT_MODE)"
    tree.end
    tree "BSI_MIPI_BIF_EN"
      sgroup "BSI_MIPI_BIF_EN (at 0x1b54)"
        set &access:&cmd_addr %l (0x801b540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_TX_EN                           = " "0 (TX_DISABLED),1 (TX_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   MIPI_BIF_RX_EN                           = " "0 (RX_DISABLED),1 (RX_ENABLED)"
    tree.end
    tree "BSI_MIPI_BIF_CFG"
      sgroup "BSI_MIPI_BIF_CFG (at 0x1b55)"
        set &access:&cmd_addr %l (0x801b550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MIPI_BIF_PU_EN                           = " "0 (PULLUP_DISABLED),1 (PULLUP_ENABLED)"
    tree.end
    tree "BSI_MIPI_BIF_RX_CFG"
      sgroup "BSI_MIPI_BIF_RX_CFG (at 0x1b56)"
        set &access:&cmd_addr %l (0x801b560|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b560|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FIFO_EN                                  = " "0 (FIFO_DISABLED),1 (FIFO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RX_IRQ_FREQ                              = " "0 (FREQ_1_WORD),1 (FREQ_2_WORDS),2 (FREQ_3_WORDS),3 (FREQ_4_WORDS),4 (FREQ_5_WORDS),5 (FREQ_6_WORDS),6 (FREQ_7_WORDS),7 (FREQ_8_WORDS)"
    tree.end
    tree "BSI_MIPI_BIF_TX_DLY"
      sgroup "BSI_MIPI_BIF_TX_DLY (at 0x1b59)"
        set &access:&cmd_addr %l (0x801b590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MIPI_BIF_TX_DLY                          = " "0 (DLY_0_TAU),1 (DLY_5_TAU),2 (DLY_10_TAU),3 (DLY_15_TAU)"
    tree.end
    tree "BSI_MIPI_BIF_DATA_TX_0"
      sgroup "BSI_MIPI_BIF_DATA_TX_0 (at 0x1b5a)"
        set &access:&cmd_addr %l (0x801b5a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b5a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIPI_BIF_DATA_TX                         = "
    tree.end
    tree "BSI_MIPI_BIF_DATA_TX_1"
      sgroup "BSI_MIPI_BIF_DATA_TX_1 (at 0x1b5b)"
        set &access:&cmd_addr %l (0x801b5b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b5b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIPI_BIF_DATA_TX                         = "
    tree.end
    tree "BSI_MIPI_BIF_DATA_TX_2"
      sgroup "BSI_MIPI_BIF_DATA_TX_2 (at 0x1b5c)"
        set &access:&cmd_addr %l (0x801b5c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b5c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_DATA_TX                         = " "0, 1"
    tree.end
    tree "BSI_MIPI_BIF_TX_CTL"
      sgroup "BSI_MIPI_BIF_TX_CTL (at 0x1b5d)"
        set &access:&cmd_addr %l (0x801b5d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b5d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_TX_GO                           = " "0, 1"
    tree.end
    tree "BSI_MIPI_BIF_DATA_RX_0"
      sgroup "BSI_MIPI_BIF_DATA_RX_0 (at 0x1b60)"
        set &access:&cmd_addr %l (0x801b600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIPI_BIF_DATA_RX                         = "
    tree.end
    tree "BSI_MIPI_BIF_DATA_RX_1"
      sgroup "BSI_MIPI_BIF_DATA_RX_1 (at 0x1b61)"
        set &access:&cmd_addr %l (0x801b610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIPI_BIF_DATA_RX                         = "
    tree.end
    tree "BSI_MIPI_BIF_DATA_RX_2"
      sgroup "BSI_MIPI_BIF_DATA_RX_2 (at 0x1b62)"
        set &access:&cmd_addr %l (0x801b620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MIPI_BIF_DATA_LOOPBACK_TAG               = " "0 (NORMAL_DATA),1 (LOOPBACK_DATA)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_DATA_RX                         = " "0, 1"
    tree.end
    tree "BSI_RX_FIFO_WORD1_0"
      sgroup "BSI_RX_FIFO_WORD1_0 (at 0x1b63)"
        set &access:&cmd_addr %l (0x801b630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RX_DATA                                  = "
    tree.end
    tree "BSI_RX_FIFO_WORD1_1"
      sgroup "BSI_RX_FIFO_WORD1_1 (at 0x1b64)"
        set &access:&cmd_addr %l (0x801b640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DATA_VALID                               = " "0 (DATA_NOT_VALID),1 (DATA_VALID)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ERROR_FLAG                               = " "0 (DATA_OK),1 (DATA_ERROR)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RX_DATA                                  = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "BSI_RX_FIFO_WORD2_0"
      sgroup "BSI_RX_FIFO_WORD2_0 (at 0x1b65)"
        set &access:&cmd_addr %l (0x801b650|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b650|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RX_DATA                                  = "
    tree.end
    tree "BSI_RX_FIFO_WORD2_1"
      sgroup "BSI_RX_FIFO_WORD2_1 (at 0x1b66)"
        set &access:&cmd_addr %l (0x801b660|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b660|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DATA_VALID                               = " "0 (DATA_NOT_VALID),1 (DATA_VALID)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ERROR_FLAG                               = " "0 (DATA_OK),1 (DATA_ERROR)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RX_DATA                                  = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "BSI_RX_FIFO_WORD3_0"
      sgroup "BSI_RX_FIFO_WORD3_0 (at 0x1b67)"
        set &access:&cmd_addr %l (0x801b670|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b670|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RX_DATA                                  = "
    tree.end
    tree "BSI_RX_FIFO_WORD3_1"
      sgroup "BSI_RX_FIFO_WORD3_1 (at 0x1b68)"
        set &access:&cmd_addr %l (0x801b680|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b680|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DATA_VALID                               = " "0 (DATA_NOT_VALID),1 (DATA_VALID)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ERROR_FLAG                               = " "0 (DATA_OK),1 (DATA_ERROR)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RX_DATA                                  = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "BSI_RX_FIFO_WORD4_0"
      sgroup "BSI_RX_FIFO_WORD4_0 (at 0x1b69)"
        set &access:&cmd_addr %l (0x801b690|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b690|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RX_DATA                                  = "
    tree.end
    tree "BSI_RX_FIFO_WORD4_1"
      sgroup "BSI_RX_FIFO_WORD4_1 (at 0x1b6a)"
        set &access:&cmd_addr %l (0x801b6a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b6a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DATA_VALID                               = " "0 (DATA_NOT_VALID),1 (DATA_VALID)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ERROR_FLAG                               = " "0 (DATA_OK),1 (DATA_ERROR)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RX_DATA                                  = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "BSI_MIPI_BIF_BCL_RAW"
      sgroup "BSI_MIPI_BIF_BCL_RAW (at 0x1b6d)"
        set &access:&cmd_addr %l (0x801b6d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b6d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_BCL_RAW                         = " "0 (BCL_STATE_LOW),1 (BCL_STATE_HIGH)"
    tree.end
    tree "BSI_MIPI_BIF_ERROR"
      sgroup "BSI_MIPI_BIF_ERROR (at 0x1b70)"
        set &access:&cmd_addr %l (0x801b700|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b700|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MIPI_BIF_ERROR_CODE                      = "
    tree.end
    tree "BSI_BAT_GONE_CFG"
      sgroup "BSI_BAT_GONE_CFG (at 0x1ba7)"
        set &access:&cmd_addr %l (0x801ba70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ba70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BAT_GONE_SEL                             = " "0 (NON_DEBOUNCED),1 (DEBOUNCED)"
    tree.end
    tree "BSI_BAT_RMV_DEB_TIMER"
      sgroup "BSI_BAT_RMV_DEB_TIMER (at 0x1ba8)"
        set &access:&cmd_addr %l (0x801ba80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ba80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   RMV_TIMER                                = "
    tree.end
    tree "BSI_BAT_PRES_DEB_TIMER"
      sgroup "BSI_BAT_PRES_DEB_TIMER (at 0x1ba9)"
        set &access:&cmd_addr %l (0x801ba90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ba90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PRES_TIMER                               = "
    tree.end
    tree "BSI_BAT_GONE_DLY"
      sgroup "BSI_BAT_GONE_DLY (at 0x1baa)"
        set &access:&cmd_addr %l (0x801baa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1baa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DLY_CFG                                  = " "0 (BYPASSED),1 (DLY_10U3),2 (DLY_15U6),3 (DLY_19U6)"
    tree.end
    tree "BSI_SEC_ACCESS"
      sgroup "BSI_SEC_ACCESS (at 0x1bd0)"
        set &access:&cmd_addr %l (0x801bd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BSI_PERPH_RESET_CTL2"
      sgroup "BSI_PERPH_RESET_CTL2 (at 0x1bd9)"
        set &access:&cmd_addr %l (0x801bd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "BSI_PERPH_RESET_CTL3"
      sgroup "BSI_PERPH_RESET_CTL3 (at 0x1bda)"
        set &access:&cmd_addr %l (0x801bda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "BSI_PERPH_RESET_CTL4"
      sgroup "BSI_PERPH_RESET_CTL4 (at 0x1bdb)"
        set &access:&cmd_addr %l (0x801bdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BSI_BSI_SPARE"
      sgroup "BSI_BSI_SPARE (at 0x1bdf)"
        set &access:&cmd_addr %l (0x801bdf0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bdf0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "BSI_INT_TEST1"
      sgroup "BSI_INT_TEST1 (at 0x1be0)"
        set &access:&cmd_addr %l (0x801be00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "BSI_INT_TEST_VAL"
      sgroup "BSI_INT_TEST_VAL (at 0x1be1)"
        set &access:&cmd_addr %l (0x801be10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_BAT_PRES_INT_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NODEB_BAT_PRES_INT_VAL                   = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TX_DISABLE_INT_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MIPI_BIF_TX_INT_VAL                      = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MIPI_BIF_RX_INT_VAL                      = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MIPI_BIF_ERR_INT_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "BSI_TEST1"
      sgroup "BSI_TEST1 (at 0x1be2)"
        set &access:&cmd_addr %l (0x801be20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DTEST4_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DTEST3_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DTEST2_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DTEST1_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "BSI_TEST2"
      sgroup "BSI_TEST2 (at 0x1be3)"
        set &access:&cmd_addr %l (0x801be30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   BSI_DTEST_SEL                            = "
    tree.end
    tree "BSI_MIPI_BIF_TX_ATE_CTL"
      sgroup "BSI_MIPI_BIF_TX_ATE_CTL (at 0x1be4)"
        set &access:&cmd_addr %l (0x801be40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TX_GO_ATE                                = " "0, 1"
    tree.end
    tree "BSI_BSI_TEST"
      sgroup "BSI_BSI_TEST (at 0x1be5)"
        set &access:&cmd_addr %l (0x801be50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TX_DISABLE_TEST                          = " "0 (NORMAL),1 (IGNORED)"
    tree.end
  tree.end
tree.end
tree "BUA"
  tree "BUA"
    tree "BUA_REVISION1"
      sgroup "BUA_REVISION1 (at 0x1c00)"
        set &access:&cmd_addr %l (0x801c000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BUA_REVISION2"
      sgroup "BUA_REVISION2 (at 0x1c01)"
        set &access:&cmd_addr %l (0x801c010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BUA_REVISION3"
      sgroup "BUA_REVISION3 (at 0x1c02)"
        set &access:&cmd_addr %l (0x801c020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "BUA_REVISION4"
      sgroup "BUA_REVISION4 (at 0x1c03)"
        set &access:&cmd_addr %l (0x801c030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "BUA_PERPH_TYPE"
      sgroup "BUA_PERPH_TYPE (at 0x1c04)"
        set &access:&cmd_addr %l (0x801c040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BUA_PERPH_SUBTYPE"
      sgroup "BUA_PERPH_SUBTYPE (at 0x1c05)"
        set &access:&cmd_addr %l (0x801c050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BUA_STATUS1"
      sgroup "BUA_STATUS1 (at 0x1c08)"
        set &access:&cmd_addr %l (0x801c080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BUA_OK                                   = " "0 (BUA_DISABLED),1 (BUA_ENABLED)"
    tree.end
    tree "BUA_BUA_CTL1"
      sgroup "BUA_BUA_CTL1 (at 0x1c40)"
        set &access:&cmd_addr %l (0x801c400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   BATT_RMV_DEB                             = " "0 (SCLK_0_TO_1),1 (SCLK_1_TO_2),2 (SCLK_2_TO_3),3 (SCLK_5_TO_6),4 (SCLK_8_TO_9),5 (SCLK_11_TO_12),6 (SCLK_15_TO_16),7 (SCLK_31_TO_32)"
    tree.end
    tree "BUA_EN_CTL1"
      sgroup "BUA_EN_CTL1 (at 0x1c46)"
        set &access:&cmd_addr %l (0x801c460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BUA_EN                                   = " "0 (BUA_DISABLED),1 (BUA_ENABLED)"
    tree.end
    tree "BUA_SEC_ACCESS"
      sgroup "BUA_SEC_ACCESS (at 0x1cd0)"
        set &access:&cmd_addr %l (0x801cd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BUA_PERPH_RESET_CTL1"
      sgroup "BUA_PERPH_RESET_CTL1 (at 0x1cd8)"
        set &access:&cmd_addr %l (0x801cd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "BUA_PERPH_RESET_CTL2"
      sgroup "BUA_PERPH_RESET_CTL2 (at 0x1cd9)"
        set &access:&cmd_addr %l (0x801cd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "BUA_PERPH_RESET_CTL3"
      sgroup "BUA_PERPH_RESET_CTL3 (at 0x1cda)"
        set &access:&cmd_addr %l (0x801cda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "BUA_PERPH_RESET_CTL4"
      sgroup "BUA_PERPH_RESET_CTL4 (at 0x1cdb)"
        set &access:&cmd_addr %l (0x801cdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BUA_TEST1"
      sgroup "BUA_TEST1 (at 0x1ce2)"
        set &access:&cmd_addr %l (0x801ce20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ce20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DTEST                                    = " "0, 1, 2, 3"
    tree.end
  tree.end
tree.end
tree "BUS"
  tree "BUS"
    tree "BUS_REVISION1"
      sgroup "BUS_REVISION1 (at 0x400)"
        set &access:&cmd_addr %l (0x8004000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "BUS_REVISION2"
      sgroup "BUS_REVISION2 (at 0x401)"
        set &access:&cmd_addr %l (0x8004010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "BUS_PERPH_TYPE"
      sgroup "BUS_PERPH_TYPE (at 0x404)"
        set &access:&cmd_addr %l (0x8004040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "BUS_PERPH_SUBTYPE"
      sgroup "BUS_PERPH_SUBTYPE (at 0x405)"
        set &access:&cmd_addr %l (0x8004050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "BUS_STATUS1"
      sgroup "BUS_STATUS1 (at 0x408)"
        set &access:&cmd_addr %l (0x8004080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   INTBUS_ARB_GNT                           = "
    tree.end
    tree "BUS_TIMEOUT"
      sgroup "BUS_TIMEOUT (at 0x444)"
        set &access:&cmd_addr %l (0x8004440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   TIMEOUT_MANT                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TIMEOUT_EXP                              = "
    tree.end
    tree "BUS_SEC_ACCESS"
      sgroup "BUS_SEC_ACCESS (at 0x4d0)"
        set &access:&cmd_addr %l (0x8004d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "BUS_PERPH_RESET_CTL2"
      sgroup "BUS_PERPH_RESET_CTL2 (at 0x4d9)"
        set &access:&cmd_addr %l (0x8004d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BUS_PERPH_RESET_CTL3"
      sgroup "BUS_PERPH_RESET_CTL3 (at 0x4da)"
        set &access:&cmd_addr %l (0x8004da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "BUS_PERPH_RESET_CTL4"
      sgroup "BUS_PERPH_RESET_CTL4 (at 0x4db)"
        set &access:&cmd_addr %l (0x8004db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "BUS_TEST1"
      sgroup "BUS_TEST1 (at 0x4e2)"
        set &access:&cmd_addr %l (0x8004e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x4e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST_EN                                 = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
  tree.end
tree.end
tree "CLK_DIST"
  tree "CLK_DIST"
    tree "CLK_DIST_REVISION1"
      sgroup "CLK_DIST_REVISION1 (at 0x5900)"
        set &access:&cmd_addr %l (0x8059000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "CLK_DIST_REVISION2"
      sgroup "CLK_DIST_REVISION2 (at 0x5901)"
        set &access:&cmd_addr %l (0x8059010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "CLK_DIST_REVISION3"
      sgroup "CLK_DIST_REVISION3 (at 0x5902)"
        set &access:&cmd_addr %l (0x8059020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "CLK_DIST_REVISION4"
      sgroup "CLK_DIST_REVISION4 (at 0x5903)"
        set &access:&cmd_addr %l (0x8059030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "CLK_DIST_PERPH_TYPE"
      sgroup "CLK_DIST_PERPH_TYPE (at 0x5904)"
        set &access:&cmd_addr %l (0x8059040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "CLK_DIST_PERPH_SUBTYPE"
      sgroup "CLK_DIST_PERPH_SUBTYPE (at 0x5905)"
        set &access:&cmd_addr %l (0x8059050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "CLK_DIST_STATUS1"
      sgroup "CLK_DIST_STATUS1 (at 0x5908)"
        set &access:&cmd_addr %l (0x8059080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RC19M_OK                                 = " "0 (RC_19M_OFF),1 (RC_19M_ON)"
    tree.end
    tree "CLK_DIST_INT_RT_STS"
      sgroup "CLK_DIST_INT_RT_STS (at 0x5910)"
        set &access:&cmd_addr %l (0x8059100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_RT_STS                   = " "0 (RC_19M_NOT_HALT),1 (RC_19M_HALT)"
    tree.end
    tree "CLK_DIST_INT_SET_TYPE"
      sgroup "CLK_DIST_INT_SET_TYPE (at 0x5911)"
        set &access:&cmd_addr %l (0x8059110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_TYPE                     = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "CLK_DIST_INT_POLARITY_HIGH"
      sgroup "CLK_DIST_INT_POLARITY_HIGH (at 0x5912)"
        set &access:&cmd_addr %l (0x8059120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_HIGH                     = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "CLK_DIST_INT_POLARITY_LOW"
      sgroup "CLK_DIST_INT_POLARITY_LOW (at 0x5913)"
        set &access:&cmd_addr %l (0x8059130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_LOW                      = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "CLK_DIST_INT_LATCHED_CLR"
      sgroup "CLK_DIST_INT_LATCHED_CLR (at 0x5914)"
        set &access:&cmd_addr %l (0x8059140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_LATCHED_CLR              = " "0, 1"
    tree.end
    tree "CLK_DIST_INT_EN_SET"
      sgroup "CLK_DIST_INT_EN_SET (at 0x5915)"
        set &access:&cmd_addr %l (0x8059150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "CLK_DIST_INT_EN_CLR"
      sgroup "CLK_DIST_INT_EN_CLR (at 0x5916)"
        set &access:&cmd_addr %l (0x8059160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "CLK_DIST_INT_LATCHED_STS"
      sgroup "CLK_DIST_INT_LATCHED_STS (at 0x5918)"
        set &access:&cmd_addr %l (0x8059180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "CLK_DIST_INT_PENDING_STS"
      sgroup "CLK_DIST_INT_PENDING_STS (at 0x5919)"
        set &access:&cmd_addr %l (0x8059190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "CLK_DIST_INT_MID_SEL"
      sgroup "CLK_DIST_INT_MID_SEL (at 0x591a)"
        set &access:&cmd_addr %l (0x80591a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x591a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "CLK_DIST_INT_PRIORITY"
      sgroup "CLK_DIST_INT_PRIORITY (at 0x591b)"
        set &access:&cmd_addr %l (0x80591b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x591b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "CLK_DIST_CLK_CTL1"
      sgroup "CLK_DIST_CLK_CTL1 (at 0x5940)"
        set &access:&cmd_addr %l (0x8059400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SMPS_CLK_SEL                             = " "0 (SMPS_CLK_XO_OUTBUFF_EN_DLY_AND_19M2_HALT_B),1 (SMPS_CLK_RC_19M),2 (SMPS_CLK_XO_19M),3 (SMPS_CLK_BASE_ON_HALT)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   GPCLK_19M2_SEL                           = " "0 (GP_CLK_XO_OUTBUFF_EN_DLY_AND_19M2_HALT_B),1 (GP_CLK_RC_19M),2 (GP_CLK_XO_19M),3 (GP_CLK_BASE_ON_HALT)"
    tree.end
    tree "CLK_DIST_CLK_CTL2"
      sgroup "CLK_DIST_CLK_CTL2 (at 0x5941)"
        set &access:&cmd_addr %l (0x8059410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_ALT_SC                                = " "0 (ALT_SC_DIVIDER_DIS),1 (ALT_SC_DIVIDER_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEL_ALT_SC                               = " "0 (ALT_SC_OFF),1 (ALT_SC_ON)"
    tree.end
    tree "CLK_DIST_CLK_CTL3"
      sgroup "CLK_DIST_CLK_CTL3 (at 0x5942)"
        set &access:&cmd_addr %l (0x8059420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEL_ALT_RTC                              = " "0 (ALT_RTC_OFF),1 (ALT_RTC_ON)"
    tree.end
    tree "CLK_DIST_CLK_CTL4"
      sgroup "CLK_DIST_CLK_CTL4 (at 0x5943)"
        set &access:&cmd_addr %l (0x8059430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO32K_CLK_SEL                            = " "0 (CALRC),1 (XO32K_EXT32K)"
    tree.end
    tree "CLK_DIST_HALT_CTL"
      sgroup "CLK_DIST_HALT_CTL (at 0x5945)"
        set &access:&cmd_addr %l (0x8059450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   XO19M2_HALT_DET_EN                       = " "0 (XO19M_HALT_DIS),1 (XO19M_HALT_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FORCE_XO19M2_OSC_HALT                    = " "0 (FORCE_HALT_DIS),1 (FORCE_HALT_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOLD_XO19M2_OSC_HALT                     = " "0 (DONT_HOLD_HALT_COND),1 (HOLD_HALT_COND)"
    tree.end
    tree "CLK_DIST_RC_CTL"
      sgroup "CLK_DIST_RC_CTL (at 0x5946)"
        set &access:&cmd_addr %l (0x8059460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FORCE_RC19M2_OSC_ON                      = " "0 (RC19M_NOT_FORCED),1 (RC19M_FORCED_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RC19M2_OSC_HW_CTL                        = " "0 (RC19M_NOT_FOLLOW_HW_DEMAND),1 (RC19M_FOLLOW_HW_DEMAND)"
    tree.end
    tree "CLK_DIST_PD_CTL"
      sgroup "CLK_DIST_PD_CTL (at 0x5948)"
        set &access:&cmd_addr %l (0x8059480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (HIZ_INPUT),1 (PULLDOWN_INPUT)"
    tree.end
    tree "CLK_DIST_PMIC_SLEEP_CTL"
      sgroup "CLK_DIST_PMIC_SLEEP_CTL (at 0x594a)"
        set &access:&cmd_addr %l (0x80594a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x594a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FORCE_AWAKE_EN                           = " "0 (NOT_FORCE_AWAKE),1 (FORCE_PMIC_AWAKE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN                             = " "0 (PMIC_AWAKE_NOT_FOLLOW_HW),1 (PMIC_AWAKE_FOLLOW_HW)"
    tree.end
    tree "CLK_DIST_SPARE1"
      sgroup "CLK_DIST_SPARE1 (at 0x5951)"
        set &access:&cmd_addr %l (0x8059510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "CLK_DIST_SPARE2"
      sgroup "CLK_DIST_SPARE2 (at 0x5952)"
        set &access:&cmd_addr %l (0x8059520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "CLK_DIST_SPARE3"
      sgroup "CLK_DIST_SPARE3 (at 0x5953)"
        set &access:&cmd_addr %l (0x8059530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "CLK_DIST_SEC_ACCESS"
      sgroup "CLK_DIST_SEC_ACCESS (at 0x59d0)"
        set &access:&cmd_addr %l (0x8059d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "CLK_DIST_PERPH_RESET_CTL2"
      sgroup "CLK_DIST_PERPH_RESET_CTL2 (at 0x59d9)"
        set &access:&cmd_addr %l (0x8059d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "CLK_DIST_PERPH_RESET_CTL3"
      sgroup "CLK_DIST_PERPH_RESET_CTL3 (at 0x59da)"
        set &access:&cmd_addr %l (0x8059da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "CLK_DIST_PERPH_RESET_CTL4"
      sgroup "CLK_DIST_PERPH_RESET_CTL4 (at 0x59db)"
        set &access:&cmd_addr %l (0x8059db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NO_RESET),1 (LOCAL_SOFT_RESET)"
    tree.end
    tree "CLK_DIST_INT_TEST1"
      sgroup "CLK_DIST_INT_TEST1 (at 0x59e0)"
        set &access:&cmd_addr %l (0x8059e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_DIS),1 (INT_TEST_EN)"
    tree.end
    tree "CLK_DIST_INT_TEST_VAL"
      sgroup "CLK_DIST_INT_TEST_VAL (at 0x59e1)"
        set &access:&cmd_addr %l (0x8059e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XO19M2_HALT_DET_TEST_VAL                 = " "0 (INT_TEST_OUT_0),1 (INT_TEST_OUT_1)"
    tree.end
    tree "CLK_DIST_TEST1"
      sgroup "CLK_DIST_TEST1 (at 0x59e2)"
        set &access:&cmd_addr %l (0x8059e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
    tree "CLK_DIST_TEST2"
      sgroup "CLK_DIST_TEST2 (at 0x59e4)"
        set &access:&cmd_addr %l (0x8059e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   TESTCLK_SEL                              = " "0 (HIZ),1 (CLK19M),2 (DTEST1),3 (DIV_CLK1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CLK_32KHZ_SEL                            = " "0 (NORMAL),1 (TEST_CLK_ON_32K)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CLK_1KHZ_SEL                             = " "0 (NORMAL),1 (TEST_CLK_ON_1K)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SMPS_CLK_SEL                             = " "0 (NORMAL),1 (DTEST1_ON_SMPL)"
    tree.end
    tree "CLK_DIST_TRIM_NUM"
      sgroup "CLK_DIST_TRIM_NUM (at 0x59f0)"
        set &access:&cmd_addr %l (0x8059f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "CLK_DIST_RC19M2_TRIM"
      sgroup "CLK_DIST_RC19M2_TRIM (at 0x59f1)"
        set &access:&cmd_addr %l (0x8059f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   BCK_RCI                                  = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BCK_RCC                                  = " "0, 1, 2, 3"
    tree.end
    tree "CLK_DIST_RCLF_TRIM"
      sgroup "CLK_DIST_RCLF_TRIM (at 0x59f2)"
        set &access:&cmd_addr %l (0x8059f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x59f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   RCLF_TRIM                                = "
    tree.end
  tree.end
tree.end
tree "FG_ADC_MDM"
  tree "FG_ADC_MDM"
    tree "FG_ADC_MDM_PERPH_TYPE"
      sgroup "FG_ADC_MDM_PERPH_TYPE (at 0x4304)"
        set &access:&cmd_addr %l (0x8043040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "FG_ADC_MDM_PERPH_SUBTYPE"
      sgroup "FG_ADC_MDM_PERPH_SUBTYPE (at 0x4305)"
        set &access:&cmd_addr %l (0x8043050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "FG_ADC_MDM_INT_RT_STS"
      sgroup "FG_ADC_MDM_INT_RT_STS (at 0x4310)"
        set &access:&cmd_addr %l (0x8043100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_RT_STS                   = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_RT_STS                       = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "FG_ADC_MDM_INT_SET_TYPE"
      sgroup "FG_ADC_MDM_INT_SET_TYPE (at 0x4311)"
        set &access:&cmd_addr %l (0x8043110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_SET_TYPE                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_SET_TYPE                 = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "FG_ADC_MDM_INT_POLARITY_HIGH"
      sgroup "FG_ADC_MDM_INT_POLARITY_HIGH (at 0x4312)"
        set &access:&cmd_addr %l (0x8043120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_HIGH                     = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_HIGH                     = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "FG_ADC_MDM_INT_POLARITY_LOW"
      sgroup "FG_ADC_MDM_INT_POLARITY_LOW (at 0x4313)"
        set &access:&cmd_addr %l (0x8043130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_HIGH                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_HIGH                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "FG_ADC_MDM_INT_LATCHED_CLR"
      sgroup "FG_ADC_MDM_INT_LATCHED_CLR (at 0x4314)"
        set &access:&cmd_addr %l (0x8043140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_LATCHED_CLR              = " "0, 1"
    tree.end
    tree "FG_ADC_MDM_INT_EN_SET"
      sgroup "FG_ADC_MDM_INT_EN_SET (at 0x4315)"
        set &access:&cmd_addr %l (0x8043150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FG_ADC_MDM_INT_EN_CLR"
      sgroup "FG_ADC_MDM_INT_EN_CLR (at 0x4316)"
        set &access:&cmd_addr %l (0x8043160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FG_ADC_MDM_INT_LATCHED_STS"
      sgroup "FG_ADC_MDM_INT_LATCHED_STS (at 0x4318)"
        set &access:&cmd_addr %l (0x8043180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "FG_ADC_MDM_INT_PENDING_STS"
      sgroup "FG_ADC_MDM_INT_PENDING_STS (at 0x4319)"
        set &access:&cmd_addr %l (0x8043190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "FG_ADC_MDM_INT_MID_SEL"
      sgroup "FG_ADC_MDM_INT_MID_SEL (at 0x431a)"
        set &access:&cmd_addr %l (0x80431a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x431a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "FG_ADC_MDM_INT_PRIORITY"
      sgroup "FG_ADC_MDM_INT_PRIORITY (at 0x431b)"
        set &access:&cmd_addr %l (0x80431b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x431b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "FG_ADC_MDM_EN_CTL"
      sgroup "FG_ADC_MDM_EN_CTL (at 0x4346)"
        set &access:&cmd_addr %l (0x8043460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FG_ADC_EN                                = " "0 (BCL_MONITORING_DISABLE),1 (BCL_MONITORING_ENABLE)"
    tree.end
    tree "FG_ADC_MDM_ACCESS_BAT_REQ"
      sgroup "FG_ADC_MDM_ACCESS_BAT_REQ (at 0x4350)"
        set &access:&cmd_addr %l (0x8043500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CMD                                      = " "0 (ACC_NOT_REQUESTED),1 (O59ACC_REQUESTED)"
    tree.end
    tree "FG_ADC_MDM_ACCESS_BAT_GRNT"
      sgroup "FG_ADC_MDM_ACCESS_BAT_GRNT (at 0x4351)"
        set &access:&cmd_addr %l (0x8043510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STS                                      = " "0 (ACC_NOT_GRANTED),1 (ACC_GRANTED)"
    tree.end
    tree "FG_ADC_MDM_BCL_VALUES"
      sgroup "FG_ADC_MDM_BCL_VALUES (at 0x4353)"
        set &access:&cmd_addr %l (0x8043530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RDY                                      = " "0, 1"
    tree.end
    tree "FG_ADC_MDM_VBAT"
      sgroup "FG_ADC_MDM_VBAT (at 0x4354)"
        set &access:&cmd_addr %l (0x8043540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_IBAT"
      sgroup "FG_ADC_MDM_IBAT (at 0x4355)"
        set &access:&cmd_addr %l (0x8043550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_VBAT_CP"
      sgroup "FG_ADC_MDM_VBAT_CP (at 0x4356)"
        set &access:&cmd_addr %l (0x8043560|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43560|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_IBAT_CP"
      sgroup "FG_ADC_MDM_IBAT_CP (at 0x4357)"
        set &access:&cmd_addr %l (0x8043570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_VBAT_MIN"
      sgroup "FG_ADC_MDM_VBAT_MIN (at 0x4358)"
        set &access:&cmd_addr %l (0x8043580|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43580|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_IBAT_MAX"
      sgroup "FG_ADC_MDM_IBAT_MAX (at 0x4359)"
        set &access:&cmd_addr %l (0x8043590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_VBAT_MIN_CP"
      sgroup "FG_ADC_MDM_VBAT_MIN_CP (at 0x435a)"
        set &access:&cmd_addr %l (0x80435a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x435a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_IBAT_MAX_CP"
      sgroup "FG_ADC_MDM_IBAT_MAX_CP (at 0x435b)"
        set &access:&cmd_addr %l (0x80435b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x435b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_BAT_RES_7_0"
      sgroup "FG_ADC_MDM_BAT_RES_7_0 (at 0x435c)"
        set &access:&cmd_addr %l (0x80435c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x435c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_BAT_RES_15_8"
      sgroup "FG_ADC_MDM_BAT_RES_15_8 (at 0x435d)"
        set &access:&cmd_addr %l (0x80435d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x435d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_BCL_MODE"
      sgroup "FG_ADC_MDM_BCL_MODE (at 0x435e)"
        set &access:&cmd_addr %l (0x80435e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x435e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   STS                                      = " "0 (BCL_IS_LPM),1 (BCL_IS_HPM),2 (BCL_IS_MPM),3 (BCL_IS_INVALID_MODE)"
    tree.end
    tree "FG_ADC_MDM_BCL_V_GAIN_BATT"
      sgroup "FG_ADC_MDM_BCL_V_GAIN_BATT (at 0x4360)"
        set &access:&cmd_addr %l (0x8043600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_BCL_I_GAIN_RSENSE"
      sgroup "FG_ADC_MDM_BCL_I_GAIN_RSENSE (at 0x4361)"
        set &access:&cmd_addr %l (0x8043610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_BCL_I_OFFSET_RSENSE"
      sgroup "FG_ADC_MDM_BCL_I_OFFSET_RSENSE (at 0x4362)"
        set &access:&cmd_addr %l (0x8043620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_BCL_I_GAIN_BATFET"
      sgroup "FG_ADC_MDM_BCL_I_GAIN_BATFET (at 0x4363)"
        set &access:&cmd_addr %l (0x8043630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_BCL_I_OFFSET_BATFET"
      sgroup "FG_ADC_MDM_BCL_I_OFFSET_BATFET (at 0x4364)"
        set &access:&cmd_addr %l (0x8043640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_MDM_BCL_I_SENSE_SOURCE"
      sgroup "FG_ADC_MDM_BCL_I_SENSE_SOURCE (at 0x4365)"
        set &access:&cmd_addr %l (0x8043650|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43650|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STS                                      = " "0, 1"
    tree.end
    tree "FG_ADC_MDM_VBAT_MIN_CLR"
      sgroup "FG_ADC_MDM_VBAT_MIN_CLR (at 0x4366)"
        set &access:&cmd_addr %l (0x8043660|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43660|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CTL                                      = " "0, 1"
    tree.end
    tree "FG_ADC_MDM_IBAT_MAX_CLR"
      sgroup "FG_ADC_MDM_IBAT_MAX_CLR (at 0x4367)"
        set &access:&cmd_addr %l (0x8043670|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43670|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CTL                                      = " "0, 1"
    tree.end
    tree "FG_ADC_MDM_VBAT_INT"
      sgroup "FG_ADC_MDM_VBAT_INT (at 0x4368)"
        set &access:&cmd_addr %l (0x8043680|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43680|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   THR                                      = "
    tree.end
    tree "FG_ADC_MDM_IBAT_INT"
      sgroup "FG_ADC_MDM_IBAT_INT (at 0x4369)"
        set &access:&cmd_addr %l (0x8043690|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43690|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   THR                                      = "
    tree.end
    tree "FG_ADC_MDM_SEC_ACCESS"
      sgroup "FG_ADC_MDM_SEC_ACCESS (at 0x43d0)"
        set &access:&cmd_addr %l (0x8043d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "FG_ADC_MDM_PERPH_RESET_CTL2"
      sgroup "FG_ADC_MDM_PERPH_RESET_CTL2 (at 0x43d9)"
        set &access:&cmd_addr %l (0x8043d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "FG_ADC_MDM_PERPH_RESET_CTL3"
      sgroup "FG_ADC_MDM_PERPH_RESET_CTL3 (at 0x43da)"
        set &access:&cmd_addr %l (0x8043da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "FG_ADC_MDM_PERPH_RESET_CTL4"
      sgroup "FG_ADC_MDM_PERPH_RESET_CTL4 (at 0x43db)"
        set &access:&cmd_addr %l (0x8043db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "FG_ADC_MDM_INT_TEST1"
      sgroup "FG_ADC_MDM_INT_TEST1 (at 0x43e0)"
        set &access:&cmd_addr %l (0x8043e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "FG_ADC_MDM_INT_TEST_VAL"
      sgroup "FG_ADC_MDM_INT_TEST_VAL (at 0x43e1)"
        set &access:&cmd_addr %l (0x8043e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x43e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_TEST_VAL                 = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_TEST_VAL                 = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "FG_ADC_USR"
  tree "FG_ADC_USR"
    tree "FG_ADC_USR_PERPH_TYPE"
      sgroup "FG_ADC_USR_PERPH_TYPE (at 0x4204)"
        set &access:&cmd_addr %l (0x8042040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "FG_ADC_USR_PERPH_SUBTYPE"
      sgroup "FG_ADC_USR_PERPH_SUBTYPE (at 0x4205)"
        set &access:&cmd_addr %l (0x8042050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "FG_ADC_USR_INT_RT_STS"
      sgroup "FG_ADC_USR_INT_RT_STS (at 0x4210)"
        set &access:&cmd_addr %l (0x8042100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_RT_STS                   = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_RT_STS                       = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "FG_ADC_USR_INT_SET_TYPE"
      sgroup "FG_ADC_USR_INT_SET_TYPE (at 0x4211)"
        set &access:&cmd_addr %l (0x8042110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_SET_TYPE                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_SET_TYPE                 = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "FG_ADC_USR_INT_POLARITY_HIGH"
      sgroup "FG_ADC_USR_INT_POLARITY_HIGH (at 0x4212)"
        set &access:&cmd_addr %l (0x8042120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_HIGH                     = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_HIGH                     = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "FG_ADC_USR_INT_POLARITY_LOW"
      sgroup "FG_ADC_USR_INT_POLARITY_LOW (at 0x4213)"
        set &access:&cmd_addr %l (0x8042130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_HIGH                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_HIGH                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "FG_ADC_USR_INT_LATCHED_CLR"
      sgroup "FG_ADC_USR_INT_LATCHED_CLR (at 0x4214)"
        set &access:&cmd_addr %l (0x8042140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_LATCHED_CLR              = " "0, 1"
    tree.end
    tree "FG_ADC_USR_INT_EN_SET"
      sgroup "FG_ADC_USR_INT_EN_SET (at 0x4215)"
        set &access:&cmd_addr %l (0x8042150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_EN_SET                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FG_ADC_USR_INT_EN_CLR"
      sgroup "FG_ADC_USR_INT_EN_CLR (at 0x4216)"
        set &access:&cmd_addr %l (0x8042160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_EN_CLR                   = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FG_ADC_USR_INT_LATCHED_STS"
      sgroup "FG_ADC_USR_INT_LATCHED_STS (at 0x4218)"
        set &access:&cmd_addr %l (0x8042180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_LATCHED_STS              = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "FG_ADC_USR_INT_PENDING_STS"
      sgroup "FG_ADC_USR_INT_PENDING_STS (at 0x4219)"
        set &access:&cmd_addr %l (0x8042190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_PENDING_STS              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "FG_ADC_USR_INT_MID_SEL"
      sgroup "FG_ADC_USR_INT_MID_SEL (at 0x421a)"
        set &access:&cmd_addr %l (0x80421a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x421a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "FG_ADC_USR_INT_PRIORITY"
      sgroup "FG_ADC_USR_INT_PRIORITY (at 0x421b)"
        set &access:&cmd_addr %l (0x80421b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x421b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "FG_ADC_USR_EN_CTL"
      sgroup "FG_ADC_USR_EN_CTL (at 0x4246)"
        set &access:&cmd_addr %l (0x8042460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FG_ADC_EN                                = " "0 (BCL_MONITORING_DISABLE),1 (BCL_MONITORING_ENABLE)"
    tree.end
    tree "FG_ADC_USR_ACCESS_BAT_REQ"
      sgroup "FG_ADC_USR_ACCESS_BAT_REQ (at 0x4250)"
        set &access:&cmd_addr %l (0x8042500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CMD                                      = " "0 (ACC_NOT_REQUESTED),1 (O59ACC_REQUESTED)"
    tree.end
    tree "FG_ADC_USR_ACCESS_BAT_GRNT"
      sgroup "FG_ADC_USR_ACCESS_BAT_GRNT (at 0x4251)"
        set &access:&cmd_addr %l (0x8042510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STS                                      = " "0 (ACC_NOT_GRANTED),1 (ACC_GRANTED)"
    tree.end
    tree "FG_ADC_USR_BCL_VALUES"
      sgroup "FG_ADC_USR_BCL_VALUES (at 0x4253)"
        set &access:&cmd_addr %l (0x8042530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RDY                                      = " "0, 1"
    tree.end
    tree "FG_ADC_USR_VBAT"
      sgroup "FG_ADC_USR_VBAT (at 0x4254)"
        set &access:&cmd_addr %l (0x8042540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_IBAT"
      sgroup "FG_ADC_USR_IBAT (at 0x4255)"
        set &access:&cmd_addr %l (0x8042550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_VBAT_CP"
      sgroup "FG_ADC_USR_VBAT_CP (at 0x4256)"
        set &access:&cmd_addr %l (0x8042560|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42560|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_IBAT_CP"
      sgroup "FG_ADC_USR_IBAT_CP (at 0x4257)"
        set &access:&cmd_addr %l (0x8042570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_VBAT_MIN"
      sgroup "FG_ADC_USR_VBAT_MIN (at 0x4258)"
        set &access:&cmd_addr %l (0x8042580|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42580|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_IBAT_MAX"
      sgroup "FG_ADC_USR_IBAT_MAX (at 0x4259)"
        set &access:&cmd_addr %l (0x8042590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_VBAT_MIN_CP"
      sgroup "FG_ADC_USR_VBAT_MIN_CP (at 0x425a)"
        set &access:&cmd_addr %l (0x80425a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x425a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_IBAT_MAX_CP"
      sgroup "FG_ADC_USR_IBAT_MAX_CP (at 0x425b)"
        set &access:&cmd_addr %l (0x80425b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x425b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_BAT_RES_7_0"
      sgroup "FG_ADC_USR_BAT_RES_7_0 (at 0x425c)"
        set &access:&cmd_addr %l (0x80425c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x425c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_BAT_RES_15_8"
      sgroup "FG_ADC_USR_BAT_RES_15_8 (at 0x425d)"
        set &access:&cmd_addr %l (0x80425d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x425d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_BCL_MODE"
      sgroup "FG_ADC_USR_BCL_MODE (at 0x425e)"
        set &access:&cmd_addr %l (0x80425e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x425e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   STS                                      = " "0 (BCL_IS_LPM),1 (BCL_IS_HPM),2 (BCL_IS_MPM),3 (BCL_IS_INVALID_MODE)"
    tree.end
    tree "FG_ADC_USR_BCL_V_GAIN_BATT"
      sgroup "FG_ADC_USR_BCL_V_GAIN_BATT (at 0x4260)"
        set &access:&cmd_addr %l (0x8042600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_BCL_I_GAIN_RSENSE"
      sgroup "FG_ADC_USR_BCL_I_GAIN_RSENSE (at 0x4261)"
        set &access:&cmd_addr %l (0x8042610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_BCL_I_OFFSET_RSENSE"
      sgroup "FG_ADC_USR_BCL_I_OFFSET_RSENSE (at 0x4262)"
        set &access:&cmd_addr %l (0x8042620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_BCL_I_GAIN_BATFET"
      sgroup "FG_ADC_USR_BCL_I_GAIN_BATFET (at 0x4263)"
        set &access:&cmd_addr %l (0x8042630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_BCL_I_OFFSET_BATFET"
      sgroup "FG_ADC_USR_BCL_I_OFFSET_BATFET (at 0x4264)"
        set &access:&cmd_addr %l (0x8042640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_ADC_USR_BCL_I_SENSE_SOURCE"
      sgroup "FG_ADC_USR_BCL_I_SENSE_SOURCE (at 0x4265)"
        set &access:&cmd_addr %l (0x8042650|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42650|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STS                                      = " "0, 1"
    tree.end
    tree "FG_ADC_USR_VBAT_MIN_CLR"
      sgroup "FG_ADC_USR_VBAT_MIN_CLR (at 0x4266)"
        set &access:&cmd_addr %l (0x8042660|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42660|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CTL                                      = " "0, 1"
    tree.end
    tree "FG_ADC_USR_IBAT_MAX_CLR"
      sgroup "FG_ADC_USR_IBAT_MAX_CLR (at 0x4267)"
        set &access:&cmd_addr %l (0x8042670|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42670|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CTL                                      = " "0, 1"
    tree.end
    tree "FG_ADC_USR_VBAT_INT"
      sgroup "FG_ADC_USR_VBAT_INT (at 0x4268)"
        set &access:&cmd_addr %l (0x8042680|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42680|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   THR                                      = "
    tree.end
    tree "FG_ADC_USR_IBAT_INT"
      sgroup "FG_ADC_USR_IBAT_INT (at 0x4269)"
        set &access:&cmd_addr %l (0x8042690|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42690|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   THR                                      = "
    tree.end
    tree "FG_ADC_USR_SEC_ACCESS"
      sgroup "FG_ADC_USR_SEC_ACCESS (at 0x42d0)"
        set &access:&cmd_addr %l (0x8042d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "FG_ADC_USR_PERPH_RESET_CTL2"
      sgroup "FG_ADC_USR_PERPH_RESET_CTL2 (at 0x42d9)"
        set &access:&cmd_addr %l (0x8042d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "FG_ADC_USR_PERPH_RESET_CTL3"
      sgroup "FG_ADC_USR_PERPH_RESET_CTL3 (at 0x42da)"
        set &access:&cmd_addr %l (0x8042da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "FG_ADC_USR_PERPH_RESET_CTL4"
      sgroup "FG_ADC_USR_PERPH_RESET_CTL4 (at 0x42db)"
        set &access:&cmd_addr %l (0x8042db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "FG_ADC_USR_INT_TEST1"
      sgroup "FG_ADC_USR_INT_TEST1 (at 0x42e0)"
        set &access:&cmd_addr %l (0x8042e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "FG_ADC_USR_INT_TEST_VAL"
      sgroup "FG_ADC_USR_INT_TEST_VAL (at 0x42e1)"
        set &access:&cmd_addr %l (0x8042e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x42e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VBAT_LT_THR_INT_TEST_VAL                 = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   IBAT_GT_THR_INT_TEST_VAL                 = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "FG_BATT"
  tree "FG_BATT"
    tree "FG_BATT_PERPH_TYPE"
      sgroup "FG_BATT_PERPH_TYPE (at 0x4104)"
        set &access:&cmd_addr %l (0x8041040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "FG_BATT_PERPH_SUBTYPE"
      sgroup "FG_BATT_PERPH_SUBTYPE (at 0x4105)"
        set &access:&cmd_addr %l (0x8041050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "FG_BATT_BATTERY"
      sgroup "FG_BATT_BATTERY (at 0x4106)"
        set &access:&cmd_addr %l (0x8041060|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41060|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   ID                                       = " "0, 1, 2, 3"
    tree.end
    tree "FG_BATT_SYS_BATT"
      sgroup "FG_BATT_SYS_BATT (at 0x4107)"
        set &access:&cmd_addr %l (0x8041070|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41070|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   STS                                      = " "0 (ISMISSING),1 (CHARGING_CV),2 (CHARGING_CC),3 (SYSTEM_FULL),4 (DISCHARGING),5 (AUTOMATIC_RECHARGE),6 (SUPPLEMENTAL),7 (EMPTY)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_REMOVED_LATCHED_STS                 = " "0 (BATT_PRESENT),1 (BATT_REMOVED_LATCHED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_LOW_RT_STS                          = " "0 (BATT_VOLTAGE_NORMAL),1 (BATT_VOLTAGE_LOW)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BATT_PROFILE_STS                         = " "0 (BATT_PROFILE_ORIGINAL),1 (BATT_PROFILE_CHANGED)"
    tree.end
    tree "FG_BATT_BATT_DET"
      sgroup "FG_BATT_BATT_DET (at 0x4108)"
        set &access:&cmd_addr %l (0x8041080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ERR                                      = " "0 (BATT_ID_DETECTION_OK),1 (BATT_ID_DETECTION_ERR)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SMART                                    = " "0 (BATT_ID_DETECTION_NOT_SMART),1 (BATT_ID_DETECTION_SMART)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FLOAT                                    = " "0 (BATTERY_ID_NOT_FLOAT_TO_GND),1 (BATTERY_ID_FLOAT_TO_GND)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   GND                                      = " "0 (BATT_ID_NOT_SHORTED_TO_GND),1 (BATT_ID_SHORTED_GND)"
    tree.end
    tree "FG_BATT_BATT_INFO_STS"
      sgroup "FG_BATT_BATT_INFO_STS (at 0x4109)"
        set &access:&cmd_addr %l (0x8041090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ESR_UPDATE                               = " "0 (ESR_NOT_UPDATED_THIS_CYCLE),1 (ESR_UPDATED_THIS_CYCLE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   JEITA_HARD_HOT_RT_STS                    = " "0 (JEITA_BELOW_HARD_HOT_THRESHOLD),1 (JEITA_ABOVE_HARD_HOT_THRESHOLD)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   JEITA_HARD_COLD_RT_STS                   = " "0 (JEITA_BELOW_HARD_COLD_THRESHOLD),1 (JEITA_ABOVE_HARD_COLD_THRESHOLD)"
    tree.end
    tree "FG_BATT_RECOVERY_STS"
      sgroup "FG_BATT_RECOVERY_STS (at 0x410a)"
        set &access:&cmd_addr %l (0x80410a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x410a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RECOVERY_DATA_WAIT                       = " "0 (RECOVERY_DATA_NOT_WAIT),1 (RECOVERY_DATA_WAIT)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   RECOVERY_DATA_ACK                        = " "0 (RECOVERY_DATA_NOT_ACK),1 (RECOVERY_DATA_ACK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   RECOVERY_TIMEOUT_STS                     = " "0 (RECOVERY_TIMEOUT_FALSE),1 (RECOVERY_TIMEOUT_TRUE)"
    tree.end
    tree "FG_BATT_INT_RT_STS"
      sgroup "FG_BATT_INT_RT_STS (at 0x4110)"
        set &access:&cmd_addr %l (0x8041100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_RT_STS                        = " "0 (BATT_MATCH_RT_STS_FALSE),1 (BATT_MATCH_RT_STS_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_RT_STS                      = " "0 (BATT_MISSING_RT_STS_FALSE),1 (BATT_MISSING_RT_STS_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_RT_STS                      = " "0 (BATT_UNKNOWN_RT_STS_FALSE),1 (BATT_UNKNOWN_RT_STS_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_RT_STS                       = " "0 (BATT_ID_REQ_RT_STS_FALSE),1 (BATT_ID_REQ_RT_STS_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_RT_STS                   = " "0 (BATT_IDENTIFIED_RT_STS_FALSE),1 (BATT_IDENTIFIED_RT_STS_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_RT_STS                         = " "0 (VBATT_LOW_RT_STS_FALSE),1 (VBATT_LOW_RT_STS_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_RT_STS                    = " "0 (JEITA_SOFT_HOT_RT_STS_FALSE),1 (JEITA_SOFT_HOT_RT_STS_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_RT_STS                   = " "0 (JEITA_SOFT_COLD_RT_STS_FALSE),1 (JEITA_SOFT_COLD_RT_STS_TRUE)"
    tree.end
    tree "FG_BATT_INT_SET_TYPE"
      sgroup "FG_BATT_INT_SET_TYPE (at 0x4111)"
        set &access:&cmd_addr %l (0x8041110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_INT_SET_TYPE                  = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_INT_SET_TYPE                = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_INT_SET_TYPE                = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_INT_SET_TYPE                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_INT_SET_TYPE             = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_INT_SET_TYPE                   = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_INT_SET_TYPE              = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_INT_SET_TYPE             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "FG_BATT_INT_POLARITY_HIGH"
      sgroup "FG_BATT_INT_POLARITY_HIGH (at 0x4112)"
        set &access:&cmd_addr %l (0x8041120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_INT_HIGH                      = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_INT_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_INT_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_INT_HIGH                     = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_INT_HIGH                 = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_INT_HIGH                       = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_INT_HIGH                  = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_INT_HIGH                 = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "FG_BATT_INT_POLARITY_LOW"
      sgroup "FG_BATT_INT_POLARITY_LOW (at 0x4113)"
        set &access:&cmd_addr %l (0x8041130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_INT_LOW                       = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_INT_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_INT_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_INT_LOW                      = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_INT_LOW                  = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_INT_LOW                        = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_INT_LOW                   = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_INT_LOW                  = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "FG_BATT_INT_LATCHED_CLR"
      sgroup "FG_BATT_INT_LATCHED_CLR (at 0x4114)"
        set &access:&cmd_addr %l (0x8041140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_INT_LATCHED_CLR               = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_INT_LATCHED_CLR             = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_INT_LATCHED_CLR             = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_INT_LATCHED_CLR              = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_INT_LATCHED_CLR          = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_INT_LATCHED_CLR                = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_INT_LATCHED_CLR           = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_INT_LATCHED_CLR          = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
    tree.end
    tree "FG_BATT_INT_EN_SET"
      sgroup "FG_BATT_INT_EN_SET (at 0x4115)"
        set &access:&cmd_addr %l (0x8041150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_INT_LATCHED_SET               = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_INT_LATCHED_SET             = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_INT_LATCHED_SET             = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_INT_LATCHED_SET              = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_INT_LATCHED_SET          = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_INT_LATCHED_SET                = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_INT_LATCHED_SET           = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_INT_LATCHED_SET          = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
    tree.end
    tree "FG_BATT_INT_EN_CLR"
      sgroup "FG_BATT_INT_EN_CLR (at 0x4116)"
        set &access:&cmd_addr %l (0x8041160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_INT_EN_CLR                    = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_INT_EN_CLR                  = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_INT_EN_CLR                  = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_INT_EN_CLR                   = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_INT_EN_CLR               = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_INT_EN_CLR                     = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_INT_EN_CLR                = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_INT_EN_CLR               = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
    tree.end
    tree "FG_BATT_INT_LATCHED_STS"
      sgroup "FG_BATT_INT_LATCHED_STS (at 0x4118)"
        set &access:&cmd_addr %l (0x8041180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_INT_LATCHED_STS               = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_INT_LATCHED_STS             = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_INT_LATCHED_STS             = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_INT_LATCHED_STS              = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_INT_LATCHED_STS          = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_INT_LATCHED_STS                = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_INT_LATCHED_STS           = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_INT_LATCHED_STS          = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
    tree.end
    tree "FG_BATT_INT_PENDING_STS"
      sgroup "FG_BATT_INT_PENDING_STS (at 0x4119)"
        set &access:&cmd_addr %l (0x8041190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_INT_PENDING_STS               = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_INT_PENDING_STS             = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_INT_PENDING_STS             = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_INT_PENDING_STS              = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_INT_PENDING_STS          = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_INT_PENDING_STS                = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_INT_PENDING_STS           = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_INT_PENDING_STS          = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
    tree.end
    tree "FG_BATT_INT_MID_SEL"
      sgroup "FG_BATT_INT_MID_SEL (at 0x411a)"
        set &access:&cmd_addr %l (0x80411a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x411a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "FG_BATT_INT_PRIORITY"
      sgroup "FG_BATT_INT_PRIORITY (at 0x411b)"
        set &access:&cmd_addr %l (0x80411b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x411b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY0),1 (INT_PRIORITY1)"
    tree.end
    tree "FG_BATT_SW_BATT_ID"
      sgroup "FG_BATT_SW_BATT_ID (at 0x4150)"
        set &access:&cmd_addr %l (0x8041500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FORCE                                    = " "0 (FORCE_BATID_FALSE),1 (FORCE_BATID_TRUE)"
    tree.end
    tree "FG_BATT_PROFILE_ID"
      sgroup "FG_BATT_PROFILE_ID (at 0x4151)"
        set &access:&cmd_addr %l (0x8041510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   NUM                                      = " "0 (SW_BATT_ID0),1 (SW_BATT_ID1),2 (SW_BATT_ID2),3 (SW_BATT_ID3)"
    tree.end
    tree "FG_BATT_BATT_REMOVED_LATCHED"
      sgroup "FG_BATT_BATT_REMOVED_LATCHED (at 0x4152)"
        set &access:&cmd_addr %l (0x8041520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLR                                      = " "0 (BATT_REMOVED_LATCH_CLEAR_FALSE),1 (BATT_REMOVED_LATCH_CLEAR_TRUE)"
    tree.end
    tree "FG_BATT_BATT_RECOVERY"
      sgroup "FG_BATT_BATT_RECOVERY (at 0x4153)"
        set &access:&cmd_addr %l (0x8041530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RECOVERY_DATA_RDY                        = " "0 (RECOVERY_DATA_RDY_FALSE),1 (RECOVERY_DATA_RDY_TRUE)"
    tree.end
    tree "FG_BATT_SEC_ACCESS"
      sgroup "FG_BATT_SEC_ACCESS (at 0x41d0)"
        set &access:&cmd_addr %l (0x8041d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "FG_BATT_PERPH_RESET_CTL2"
      sgroup "FG_BATT_PERPH_RESET_CTL2 (at 0x41d9)"
        set &access:&cmd_addr %l (0x8041d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "FG_BATT_PERPH_RESET_CTL3"
      sgroup "FG_BATT_PERPH_RESET_CTL3 (at 0x41da)"
        set &access:&cmd_addr %l (0x8041da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "FG_BATT_PERPH_RESET_CTL4"
      sgroup "FG_BATT_PERPH_RESET_CTL4 (at 0x41db)"
        set &access:&cmd_addr %l (0x8041db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "FG_BATT_INT_TEST1"
      sgroup "FG_BATT_INT_TEST1 (at 0x41e0)"
        set &access:&cmd_addr %l (0x8041e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLE),1 (INT_TEST_MODE_ENABLE)"
    tree.end
    tree "FG_BATT_INT_TEST_VAL"
      sgroup "FG_BATT_INT_TEST_VAL (at 0x41e1)"
        set &access:&cmd_addr %l (0x8041e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BATT_MATCH_INT_TEST_VAL                  = " "0 (BATT_MATCH_INT_TEST_VAL_FALSE),1 (BATT_MATCH_INT_TEST_VAL_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BATT_MISSING_INT_TEST_VAL                = " "0 (BATT_MISSING_INT_TEST_VAL_FALSE),1 (BATT_MISSING_INT_TEST_VAL_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BATT_UNKNOWN_INT_TEST_VAL                = " "0 (BATT_UNKNOWN_INT_TEST_VAL_FALSE),1 (BATT_UNKNOWN_INT_TEST_VAL_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_ID_REQ_INT_TEST_VAL                 = " "0 (BATT_ID_REQ_INT_TEST_VAL_FALSE),1 (BATT_ID_REQ_INT_TEST_VAL_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BATT_IDENTIFIED_INT_TEST_VAL             = " "0 (BATT_IDENTIFIED_INT_TEST_VAL_FALSE),1 (BATT_IDENTIFIED_INT_TEST_VAL_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBATT_LOW_INT_TEST_VAL                   = " "0 (VBATT_LOW_INT_TEST_VAL_FALSE),1 (VBATT_LOW_INT_TEST_VAL_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   JEITA_SOFT_HOT_INT_TEST_VAL              = " "0 (JEITA_SOFT_HOT_INT_TEST_VAL_FALSE),1 (JEITA_SOFT_HOT_INT_TEST_VAL_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   JEITA_SOFT_COLD_INT_TEST_VAL             = " "0 (JEITA_SOFT_COLD_INT_TEST_VAL_FALSE),1 (JEITA_SOFT_COLD_INT_TEST_VAL_TRUE)"
    tree.end
    tree "FG_BATT_ESR_CHANGE_BOUND"
      sgroup "FG_BATT_ESR_CHANGE_BOUND (at 0x41e2)"
        set &access:&cmd_addr %l (0x8041e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LOW_TEMP_RANGE                           = " "0 (ESR_LOW_TEMP_RANGE_FALSE),1 (ESR_LOW_TEMP_RANGE_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   UPPER_HIT                                = " "0 (ESR_BELOW_HI_SATURATE_THRESH),1 (ESR_ABOVE_HI_SATURATE_THRESH)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LOWER_HIT                                = " "0 (ESR_ABOVE_LO_SATURATE_THRESH),1 (ESR_BELOW_LO_SATURATE_THRESH)"
    tree.end
    tree "FG_BATT_PEEK_MUX1"
      sgroup "FG_BATT_PEEK_MUX1 (at 0x41eb)"
        set &access:&cmd_addr %l (0x8041eb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41eb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   DTEST_SEL                                = "
    tree.end
    tree "FG_BATT_PEEK_MUX2"
      sgroup "FG_BATT_PEEK_MUX2 (at 0x41ec)"
        set &access:&cmd_addr %l (0x8041ec0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41ec0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   DTEST_SEL                                = "
    tree.end
    tree "FG_BATT_PEEK_MUX3"
      sgroup "FG_BATT_PEEK_MUX3 (at 0x41ed)"
        set &access:&cmd_addr %l (0x8041ed0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41ed0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   DTEST_SEL                                = "
    tree.end
    tree "FG_BATT_PEEK_MUX4"
      sgroup "FG_BATT_PEEK_MUX4 (at 0x41ee)"
        set &access:&cmd_addr %l (0x8041ee0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41ee0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   DTEST_SEL                                = "
    tree.end
    tree "FG_BATT_DTEST_RDBACK"
      sgroup "FG_BATT_DTEST_RDBACK (at 0x41ef)"
        set &access:&cmd_addr %l (0x8041ef0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41ef0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   STS                                      = "
    tree.end
    tree "FG_BATT_TRIM_NUM"
      sgroup "FG_BATT_TRIM_NUM (at 0x41f0)"
        set &access:&cmd_addr %l (0x8041f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "FG_BATT_MISC_CFG"
      sgroup "FG_BATT_MISC_CFG (at 0x41f1)"
        set &access:&cmd_addr %l (0x8041f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RECOVERY_DATA_EN                         = " "0 (RECOVERY_DATA_DISABLE),1 (RECOVERY_DATA_ENABLE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RECOVERY_TIMEOUT_EN                      = " "0 (RECOVERY_TIMEOUT_DISABLE),1 (RECOVERY_TIMEOUT_ENABLE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   THERMISTOR_CFG                           = " "0 (THERMISTOR_ON_PCB),1 (THERMISTOR_ON_BATT)"
    tree.end
    tree "FG_BATT_BATT_ID_CURR0"
      sgroup "FG_BATT_BATT_ID_CURR0 (at 0x41f2)"
        set &access:&cmd_addr %l (0x8041f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM                                     = "
    tree.end
    tree "FG_BATT_BATT_ID_CURR1"
      sgroup "FG_BATT_BATT_ID_CURR1 (at 0x41f3)"
        set &access:&cmd_addr %l (0x8041f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM                                     = "
    tree.end
    tree "FG_BATT_ESR_CUR"
      sgroup "FG_BATT_ESR_CUR (at 0x41f4)"
        set &access:&cmd_addr %l (0x8041f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG                                      = " "0 (ESR_MEAS_CUR_60MA),1 (ESR_MEAS_CUR_180MA),2 (ESR_MEAS_CUR_120MA),3 (ESR_MEAS_CUR_240MA)"
    tree.end
    tree "FG_BATT_ESR_MEAS_EN"
      sgroup "FG_BATT_ESR_MEAS_EN (at 0x41f5)"
        set &access:&cmd_addr %l (0x8041f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CFG                                      = " "0 (ESR_MEAS_DISABLE),1 (ESR_MEAS_ENABLE)"
    tree.end
    tree "FG_BATT_RBIAS_DIV"
      sgroup "FG_BATT_RBIAS_DIV (at 0x41f6)"
        set &access:&cmd_addr %l (0x8041f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x41f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEL                                      = " "0 (RBIAS_REF_UNBUF),1 (RBIAS_REF_BUF)"
    tree.end
  tree.end
tree.end
tree "FG_MEMIF"
  tree "FG_MEMIF"
    tree "FG_MEMIF_REVISION1"
      sgroup "FG_MEMIF_REVISION1 (at 0x4400)"
        set &access:&cmd_addr %l (0x8044000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "FG_MEMIF_REVISION2"
      sgroup "FG_MEMIF_REVISION2 (at 0x4401)"
        set &access:&cmd_addr %l (0x8044010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "FG_MEMIF_REVISION3"
      sgroup "FG_MEMIF_REVISION3 (at 0x4402)"
        set &access:&cmd_addr %l (0x8044020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "FG_MEMIF_REVISION4"
      sgroup "FG_MEMIF_REVISION4 (at 0x4403)"
        set &access:&cmd_addr %l (0x8044030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "FG_MEMIF_PERPH_TYPE"
      sgroup "FG_MEMIF_PERPH_TYPE (at 0x4404)"
        set &access:&cmd_addr %l (0x8044040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "FG_MEMIF_PERPH_SUBTYPE"
      sgroup "FG_MEMIF_PERPH_SUBTYPE (at 0x4405)"
        set &access:&cmd_addr %l (0x8044050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "FG_MEMIF_INT_RT_STS"
      sgroup "FG_MEMIF_INT_RT_STS (at 0x4410)"
        set &access:&cmd_addr %l (0x8044100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_RT_STS                    = " "0 (DATA_RCVRY_SUG_FALSE),1 (DATA_RCVRY_SUG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_RT_STS                      = " "0 (FG_MEM_AVAIL_FALSE),1 (FG_MEM_AVAIL_TRUE)"
    tree.end
    tree "FG_MEMIF_INT_SET_TYPE"
      sgroup "FG_MEMIF_INT_SET_TYPE (at 0x4411)"
        set &access:&cmd_addr %l (0x8044110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_INT_SET_TYPE              = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_INT_SET_TYPE                = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "FG_MEMIF_INT_POLARITY_HIGH"
      sgroup "FG_MEMIF_INT_POLARITY_HIGH (at 0x4412)"
        set &access:&cmd_addr %l (0x8044120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_INT_HIGH                  = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_INT_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "FG_MEMIF_INT_POLARITY_LOW"
      sgroup "FG_MEMIF_INT_POLARITY_LOW (at 0x4413)"
        set &access:&cmd_addr %l (0x8044130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_INT_LOW                   = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_INT_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "FG_MEMIF_INT_LATCHED_CLR"
      sgroup "FG_MEMIF_INT_LATCHED_CLR (at 0x4414)"
        set &access:&cmd_addr %l (0x8044140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_INT_LATCHED_CLR           = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_INT_LATCHED_CLR             = " "0 (INT_LATCH_CLEAR_FALSE),1 (INT_LATCH_CLEAR_TRUE)"
    tree.end
    tree "FG_MEMIF_INT_EN_SET"
      sgroup "FG_MEMIF_INT_EN_SET (at 0x4415)"
        set &access:&cmd_addr %l (0x8044150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_INT_EN_SET                = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_INT_EN_SET                  = " "0 (INT_ENABLED_FALSE),1 (INT_ENABLED_TRUE)"
    tree.end
    tree "FG_MEMIF_INT_EN_CLR"
      sgroup "FG_MEMIF_INT_EN_CLR (at 0x4416)"
        set &access:&cmd_addr %l (0x8044160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_INT_EN_CLR                = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_INT_EN_CLR                  = " "0 (INT_DISABLED_FALSE),1 (INT_DISABLED_TRUE)"
    tree.end
    tree "FG_MEMIF_INT_LATCHED_STS"
      sgroup "FG_MEMIF_INT_LATCHED_STS (at 0x4418)"
        set &access:&cmd_addr %l (0x8044180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_INT_LATCHED_STS           = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_INT_LATCHED_STS             = " "0 (INT_TRIGGERED_FALSE),1 (INT_TRIGGERED_TRUE)"
    tree.end
    tree "FG_MEMIF_INT_PENDING_STS"
      sgroup "FG_MEMIF_INT_PENDING_STS (at 0x4419)"
        set &access:&cmd_addr %l (0x8044190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_INT_PENDING_STS           = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_INT_PENDING_STS             = " "0 (INT_PENDING_FALSE),1 (INT_PENDING_TRUE)"
    tree.end
    tree "FG_MEMIF_INT_MID_SEL"
      sgroup "FG_MEMIF_INT_MID_SEL (at 0x441a)"
        set &access:&cmd_addr %l (0x80441a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x441a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "FG_MEMIF_INT_PRIORITY"
      sgroup "FG_MEMIF_INT_PRIORITY (at 0x441b)"
        set &access:&cmd_addr %l (0x80441b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x441b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY0),1 (INT_PRIORITY1)"
    tree.end
    tree "FG_MEMIF_MEM_INTF_CFG"
      sgroup "FG_MEMIF_MEM_INTF_CFG (at 0x4440)"
        set &access:&cmd_addr %l (0x8044400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RIF_MEM_ACCESS_REQ                       = " "0 (RIF_MEM_ACCESS_REQ_FALSE),1 (RIF_MEM_ACCESS_REQ_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LOW_LATENCY_ACS_EN                       = " "0 (LOW_LATENCY_ACS_EN_FALSE),1 (LOW_LATENCY_ACS_EN_TRUE)"
    tree.end
    tree "FG_MEMIF_MEM_INTF_CTL"
      sgroup "FG_MEMIF_MEM_INTF_CTL (at 0x4441)"
        set &access:&cmd_addr %l (0x8044410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BURST                                    = " "0 (MEM_ACS_SINGLE),1 (MEM_ACS_BURST)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   WR_EN                                    = " "0 (READ_ACCESS),1 (WRITE_ACCESS)"
    tree.end
    tree "FG_MEMIF_MEM_INTF_ADDR_LSB"
      sgroup "FG_MEMIF_MEM_INTF_ADDR_LSB (at 0x4442)"
        set &access:&cmd_addr %l (0x8044420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_ADDR_LSB                        = "
    tree.end
    tree "FG_MEMIF_MEM_INTF_ADDR_MSB"
      sgroup "FG_MEMIF_MEM_INTF_ADDR_MSB (at 0x4443)"
        set &access:&cmd_addr %l (0x8044430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_ADDR_MSB                        = "
    tree.end
    tree "FG_MEMIF_MEM_INTF_WR_DATA0"
      sgroup "FG_MEMIF_MEM_INTF_WR_DATA0 (at 0x4448)"
        set &access:&cmd_addr %l (0x8044480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_0                       = "
    tree.end
    tree "FG_MEMIF_MEM_INTF_WR_DATA1"
      sgroup "FG_MEMIF_MEM_INTF_WR_DATA1 (at 0x4449)"
        set &access:&cmd_addr %l (0x8044490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_1                       = "
    tree.end
    tree "FG_MEMIF_MEM_INTF_WR_DATA2"
      sgroup "FG_MEMIF_MEM_INTF_WR_DATA2 (at 0x444a)"
        set &access:&cmd_addr %l (0x80444a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x444a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_2                       = "
    tree.end
    tree "FG_MEMIF_MEM_INTF_WR_DATA3"
      sgroup "FG_MEMIF_MEM_INTF_WR_DATA3 (at 0x444b)"
        set &access:&cmd_addr %l (0x80444b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x444b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_3                       = "
    tree.end
    tree "FG_MEMIF_MEM_INTF_RD_DATA0"
      sgroup "FG_MEMIF_MEM_INTF_RD_DATA0 (at 0x444c)"
        set &access:&cmd_addr %l (0x80444c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x444c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_0                       = "
    tree.end
    tree "FG_MEMIF_MEM_INTF_RD_DATA1"
      sgroup "FG_MEMIF_MEM_INTF_RD_DATA1 (at 0x444d)"
        set &access:&cmd_addr %l (0x80444d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x444d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_1                       = "
    tree.end
    tree "FG_MEMIF_MEM_INTF_RD_DATA2"
      sgroup "FG_MEMIF_MEM_INTF_RD_DATA2 (at 0x444e)"
        set &access:&cmd_addr %l (0x80444e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x444e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_2                       = "
    tree.end
    tree "FG_MEMIF_MEM_INTF_RD_DATA3"
      sgroup "FG_MEMIF_MEM_INTF_RD_DATA3 (at 0x444f)"
        set &access:&cmd_addr %l (0x80444f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x444f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_3                       = "
    tree.end
    tree "FG_MEMIF_SEC_ACCESS"
      sgroup "FG_MEMIF_SEC_ACCESS (at 0x44d0)"
        set &access:&cmd_addr %l (0x8044d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "FG_MEMIF_PERPH_RESET_CTL2"
      sgroup "FG_MEMIF_PERPH_RESET_CTL2 (at 0x44d9)"
        set &access:&cmd_addr %l (0x8044d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "FG_MEMIF_PERPH_RESET_CTL3"
      sgroup "FG_MEMIF_PERPH_RESET_CTL3 (at 0x44da)"
        set &access:&cmd_addr %l (0x8044da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "FG_MEMIF_PERPH_RESET_CTL4"
      sgroup "FG_MEMIF_PERPH_RESET_CTL4 (at 0x44db)"
        set &access:&cmd_addr %l (0x8044db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "FG_MEMIF_INT_TEST1"
      sgroup "FG_MEMIF_INT_TEST1 (at 0x44e0)"
        set &access:&cmd_addr %l (0x8044e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLE),1 (INT_TEST_MODE_ENABLE)"
    tree.end
    tree "FG_MEMIF_INT_TEST_VAL"
      sgroup "FG_MEMIF_INT_TEST_VAL (at 0x44e1)"
        set &access:&cmd_addr %l (0x8044e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DATA_RCVRY_SUG_INT_TEST_VAL              = " "0 (DATA_RCVRY_SUG_INT_TEST_VAL_FALSE),1 (DATA_RCVRY_SUG_INT_TEST_VAL_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FG_MEM_AVAIL_INT_TEST_VAL                = " "0 (FG_MEM_AVAIL_INT_TEST_VAL_FALSE),1 (FG_MEM_AVAIL_INT_TEST_VAL_TRUE)"
    tree.end
    tree "FG_MEMIF_OTP_CFG1"
      sgroup "FG_MEMIF_OTP_CFG1 (at 0x44e2)"
        set &access:&cmd_addr %l (0x8044e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VPP_SEL                                  = " "0 (VPP_SEL_DVDD),1 (VPP_SEL_VPP)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PPROG                                    = " "0 (OTP_PROGRAM_DISABLE),1 (OTP_PROGRAM_ENABLE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PTM                                      = " "0 (OTP_TM0),1 (OTP_TM1),2 (OTP_TM2),3 (OTP_TM3)"
    tree.end
    tree "FG_MEMIF_OTP_CFG2"
      sgroup "FG_MEMIF_OTP_CFG2 (at 0x44e3)"
        set &access:&cmd_addr %l (0x8044e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x44e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   MARGIN_RD_WS                             = "
    tree.end
  tree.end
tree.end
tree "FG_SOC"
  tree "FG_SOC"
    tree "FG_SOC_PERPH_TYPE"
      sgroup "FG_SOC_PERPH_TYPE (at 0x4004)"
        set &access:&cmd_addr %l (0x8040040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "FG_SOC_PERPH_SUBTYPE"
      sgroup "FG_SOC_PERPH_SUBTYPE (at 0x4005)"
        set &access:&cmd_addr %l (0x8040050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "FG_SOC_FG_ALG_STS"
      sgroup "FG_SOC_FG_ALG_STS (at 0x4006)"
        set &access:&cmd_addr %l (0x8040060|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40060|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RDY                                      = " "0 (FG_NOT_READY),1 (FG_READY)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BOOT_DONE                                = " "0 (FG_BOOT_NOT_DONE),1 (FG_BOOT_DONE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_ITER_DONE                          = " "0 (FG_FIRST_ITER_NOT_DONE),1 (FG_FIRST_ITER_DONE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESTART_DONE                             = " "0 (FG_RESTART_NOT_DONE),1 (FG_RESTART_DONE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   RESTART_IN_PROGRESS                      = " "0 (FG_RESTART_NOT_IN_PROGRESS),1 (FG_RESTART_IN_PROGRESS)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_EXP                                 = " "0 (FG_WDOG_NOT_EXPIRED),1 (FG_WDOG_EXPIRED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CYCLE_STRETCHED                          = " "0 (FG_CYCLE_NOT_STRETCHED),1 (FG_CYCLE_STRETCHED)"
    tree.end
    tree "FG_SOC_FG_ALG_AUX_STS0"
      sgroup "FG_SOC_FG_ALG_AUX_STS0 (at 0x4007)"
        set &access:&cmd_addr %l (0x8040070|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40070|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_BELOW_TERMINATION                      = " "0 (TERM_CURRENT_NOT_REACHED),1 (TERM_CURRENT_REACHED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   V_REACHED_FLOAT_THRESHOLD                = " "0 (VBATT_FLOAT_NOT_REACHED),1 (VBATT_FLOAT_REACHED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   I_CC_AVAILABLE                           = " "0 (I_CC_INACTIVE),1 (I_CC_ACTIVE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATT_PREDICTION_CHARGE                   = " "0 (BATT_MODEL_DISCHARGE),1 (BATT_MODEL_CHARGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PULSE_APPROVED                           = " "0 (PULSE_NOT_APPROVED),1 (PULSE_APPROVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ONCONNECT_OCV                            = " "0 (ONCONNECT_OCV_FALSE),1 (ONCONNECT_OCV_TRUE)"
    tree.end
    tree "FG_SOC_SLEEP_SHUTDOWN_STS"
      sgroup "FG_SOC_SLEEP_SHUTDOWN_STS (at 0x4008)"
        set &access:&cmd_addr %l (0x8040080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FG_SLEEP_REQ                             = " "0 (SLEEP_NOT_REQUEST),1 (SLEEP_REQUESTED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SHUTDOWN_OR_SLEEP                        = " "0 (FG_AWAKE),1 (FG_IN_SHDN_OR_SLEEP)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FG_SHUTDOWN_REQ                          = " "0 (SLEEP_NOT_REQUEST),1 (SLEEP_REQUESTED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FG_SHUTDOWN_ALLOWED                      = " "0 (FG_DOES_NOT_ALOOW_SHDN),1 (FG_ALLOWS_SHDN)"
    tree.end
    tree "FG_SOC_FG_MONOTONIC_SOC"
      sgroup "FG_SOC_FG_MONOTONIC_SOC (at 0x4009)"
        set &access:&cmd_addr %l (0x8040090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_SOC_FG_MONOTONIC_SOC_CP"
      sgroup "FG_SOC_FG_MONOTONIC_SOC_CP (at 0x400a)"
        set &access:&cmd_addr %l (0x80400a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x400a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   STS                                      = "
    tree.end
    tree "FG_SOC_INT_RT_STS"
      sgroup "FG_SOC_INT_RT_STS (at 0x4010)"
        set &access:&cmd_addr %l (0x8040100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTRT_STS                 = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_RT_STS                     = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_RT_STS                    = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_RT_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_RT_STS                           = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_RT_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "FG_SOC_INT_SET_TYPE"
      sgroup "FG_SOC_INT_SET_TYPE (at 0x4011)"
        set &access:&cmd_addr %l (0x8040110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTINT_SET_TYPE           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_INT_SET_TYPE               = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_INT_SET_TYPE              = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_INT_SET_TYPE                   = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_INT_SET_TYPE                   = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_INT_SET_TYPE                    = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_INT_SET_TYPE                     = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_INT_SET_TYPE                    = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "FG_SOC_INT_POLARITY_HIGH"
      sgroup "FG_SOC_INT_POLARITY_HIGH (at 0x4012)"
        set &access:&cmd_addr %l (0x8040120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTINT_HIGH               = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_INT_HIGH                   = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_INT_HIGH                  = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_INT_HIGH                       = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_INT_HIGH                       = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_INT_HIGH                        = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_INT_HIGH                         = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_INT_HIGH                        = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "FG_SOC_INT_POLARITY_LOW"
      sgroup "FG_SOC_INT_POLARITY_LOW (at 0x4013)"
        set &access:&cmd_addr %l (0x8040130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTINT_LOW                = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_INT_LOW                    = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_INT_LOW                   = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_INT_LOW                        = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_INT_LOW                        = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_INT_LOW                         = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_INT_LOW                          = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_INT_LOW                         = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "FG_SOC_INT_LATCHED_CLR"
      sgroup "FG_SOC_INT_LATCHED_CLR (at 0x4014)"
        set &access:&cmd_addr %l (0x8040140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTINT_LATCHED_CLR        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_INT_LATCHED_CLR            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_INT_LATCHED_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_INT_LATCHED_CLR                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_INT_LATCHED_CLR                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_INT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_INT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_INT_LATCHED_CLR                 = " "0, 1"
    tree.end
    tree "FG_SOC_INT_EN_SET"
      sgroup "FG_SOC_INT_EN_SET (at 0x4015)"
        set &access:&cmd_addr %l (0x8040150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTINT_LATCHED_SET        = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_INT_LATCHED_SET            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_INT_LATCHED_SET           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_INT_LATCHED_SET                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_INT_LATCHED_SET                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_INT_LATCHED_SET                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_INT_LATCHED_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_INT_LATCHED_SET                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FG_SOC_INT_EN_CLR"
      sgroup "FG_SOC_INT_EN_CLR (at 0x4016)"
        set &access:&cmd_addr %l (0x8040160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTINT_EN_CLR             = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_INT_EN_CLR                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_INT_EN_CLR                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_INT_EN_CLR                     = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_INT_EN_CLR                     = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_INT_EN_CLR                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_INT_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_INT_EN_CLR                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FG_SOC_INT_LATCHED_STS"
      sgroup "FG_SOC_INT_LATCHED_STS (at 0x4018)"
        set &access:&cmd_addr %l (0x8040180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTINT_LATCHED_STS        = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_INT_LATCHED_STS            = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_INT_LATCHED_STS           = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_INT_LATCHED_STS                = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_INT_LATCHED_STS                = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_INT_LATCHED_STS                 = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_INT_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_INT_LATCHED_STS                 = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "FG_SOC_INT_PENDING_STS"
      sgroup "FG_SOC_INT_PENDING_STS (at 0x4019)"
        set &access:&cmd_addr %l (0x8040190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTINT_PENDING_STS        = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_INT_PENDING_STS            = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_INT_PENDING_STS           = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_INT_PENDING_STS                = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_INT_PENDING_STS                = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_INT_PENDING_STS                 = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_INT_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_INT_PENDING_STS                 = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "FG_SOC_INT_MID_SEL"
      sgroup "FG_SOC_INT_MID_SEL (at 0x401a)"
        set &access:&cmd_addr %l (0x80401a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x401a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "FG_SOC_INT_PRIORITY"
      sgroup "FG_SOC_INT_PRIORITY (at 0x401b)"
        set &access:&cmd_addr %l (0x80401b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x401b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "FG_SOC_BOOT_MOD"
      sgroup "FG_SOC_BOOT_MOD (at 0x4050)"
        set &access:&cmd_addr %l (0x8040500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PREVENT_OTP_SYS_RELOAD                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PREVENT_OTP_PROFILE_RELOAD               = " "0 (DO_NOT_PREVENT_OTP_PROFILE_RELOAD),1 (PREVENT_OTP_PROFILE_RELOAD)"
    tree.end
    tree "FG_SOC_RESTART"
      sgroup "FG_SOC_RESTART (at 0x4051)"
        set &access:&cmd_addr %l (0x8040510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   REDO_BATID_DURING_FIRST_EST              = " "0 (FALSE),1 (TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   RERUN_FIRST_EST                          = " "0 (FALSE),1 (TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RELOAD_PROFILE                           = " "0 (FALSE),1 (TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RELOAD_SYS                               = " "0 (FALSE),1 (TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GO                                       = " "0 (DO_NOT_EXECUTE_SEQUENCE),1 (EXECUTE_SEQUENCE)"
    tree.end
    tree "FG_SOC_FG_WDOG_EXP"
      sgroup "FG_SOC_FG_WDOG_EXP (at 0x4052)"
        set &access:&cmd_addr %l (0x8040520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CLR                                      = " "0, 1"
    tree.end
    tree "FG_SOC_STS_CLR"
      sgroup "FG_SOC_STS_CLR (at 0x4053)"
        set &access:&cmd_addr %l (0x8040530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CYCLE_STRETCH_CLR                        = " "0, 1"
    tree.end
    tree "FG_SOC_SPARE_FG"
      sgroup "FG_SOC_SPARE_FG (at 0x4054)"
        set &access:&cmd_addr %l (0x8040540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CTL                                      = "
    tree.end
    tree "FG_SOC_ALG_ST"
      sgroup "FG_SOC_ALG_ST (at 0x40cf)"
        set &access:&cmd_addr %l (0x8040cf0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40cf0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CMP                                      = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   ST_MAC                                   = "
    tree.end
    tree "FG_SOC_SEC_ACCESS"
      sgroup "FG_SOC_SEC_ACCESS (at 0x40d0)"
        set &access:&cmd_addr %l (0x8040d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "FG_SOC_PERPH_RESET_CTL2"
      sgroup "FG_SOC_PERPH_RESET_CTL2 (at 0x40d9)"
        set &access:&cmd_addr %l (0x8040d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "FG_SOC_PERPH_RESET_CTL3"
      sgroup "FG_SOC_PERPH_RESET_CTL3 (at 0x40da)"
        set &access:&cmd_addr %l (0x8040da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "FG_SOC_PERPH_RESET_CTL4"
      sgroup "FG_SOC_PERPH_RESET_CTL4 (at 0x40db)"
        set &access:&cmd_addr %l (0x8040db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "FG_SOC_INT_TEST1"
      sgroup "FG_SOC_INT_TEST1 (at 0x40e0)"
        set &access:&cmd_addr %l (0x8040e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "FG_SOC_INT_TEST_VAL"
      sgroup "FG_SOC_INT_TEST_VAL (at 0x40e1)"
        set &access:&cmd_addr %l (0x8040e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FALLBK_NEW_BATTINT_TEST_VAL           = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SW_FALLBK_OCV_INT_TEST_VAL               = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FIRST_EST_DONE_INT_TEST_VAL              = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DELTA_SOC_INT_TEST_VAL                   = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EMPTY_SOC_INT_TEST_VAL                   = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FULL_SOC_INT_TEST_VAL                    = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LOW_SOC_INT_TEST_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HIGH_SOC_INT_TEST_VAL                    = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "FG_SOC_ADC_TST1"
      sgroup "FG_SOC_ADC_TST1 (at 0x40e2)"
        set &access:&cmd_addr %l (0x8040e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CTL                                      = "
    tree.end
    tree "FG_SOC_ADC_TST2"
      sgroup "FG_SOC_ADC_TST2 (at 0x40e3)"
        set &access:&cmd_addr %l (0x8040e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CTL                                      = "
    tree.end
    tree "FG_SOC_ADC_TST3"
      sgroup "FG_SOC_ADC_TST3 (at 0x40e4)"
        set &access:&cmd_addr %l (0x8040e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CTL                                      = "
    tree.end
    tree "FG_SOC_ADC_TST4"
      sgroup "FG_SOC_ADC_TST4 (at 0x40e5)"
        set &access:&cmd_addr %l (0x8040e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CTL                                      = "
    tree.end
    tree "FG_SOC_ADC_TST5"
      sgroup "FG_SOC_ADC_TST5 (at 0x40e6)"
        set &access:&cmd_addr %l (0x8040e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CTL                                      = "
    tree.end
    tree "FG_SOC_ADC_TST6"
      sgroup "FG_SOC_ADC_TST6 (at 0x40e7)"
        set &access:&cmd_addr %l (0x8040e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CTL                                      = "
    tree.end
    tree "FG_SOC_VADC_DATA0"
      sgroup "FG_SOC_VADC_DATA0 (at 0x40e8)"
        set &access:&cmd_addr %l (0x8040e80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   BYTE_7_0                                 = "
    tree.end
    tree "FG_SOC_BCL_TST0"
      sgroup "FG_SOC_BCL_TST0 (at 0x40e9)"
        set &access:&cmd_addr %l (0x8040e90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   FORCE_BCL_MODE                           = " "0, 1, 2, 3"
    tree.end
    tree "FG_SOC_DBG_CFG"
      sgroup "FG_SOC_DBG_CFG (at 0x40ea)"
        set &access:&cmd_addr %l (0x8040ea0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40ea0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CFG                                      = "
    tree.end
    tree "FG_SOC_ALG_STS_CMP"
      sgroup "FG_SOC_ALG_STS_CMP (at 0x40eb)"
        set &access:&cmd_addr %l (0x8040eb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40eb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   ALG_ST_TRACKER                           = "
    tree.end
    tree "FG_SOC_TEST_DT"
      sgroup "FG_SOC_TEST_DT (at 0x40ec)"
        set &access:&cmd_addr %l (0x8040ec0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40ec0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FORCE_TRIM_COPY_DONE                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ADC_REAL_CONV                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ADC_CONV_I_TYPE                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ADC_CONV_I                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ADC_V_SOURCE_SEL                         = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ADC_CONV_V_USE_SOURCE                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_CONV_V                               = " "0, 1"
    tree.end
    tree "FG_SOC_TEST_CLK_MANAGER"
      sgroup "FG_SOC_TEST_CLK_MANAGER (at 0x40ed)"
        set &access:&cmd_addr %l (0x8040ed0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40ed0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MUX_EN                                   = " "0 (MUX_DISABLED),1 (MUX_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   CTRL                                     = " "0 (NO_CLOCK_PROVIDED),1 (USE_STANDBY_CLOCK),2 (USE_MAIN_OSC),3 (INVALID_SELECTION)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   MUX_BITS                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "FG_SOC_TRIM_NUM"
      sgroup "FG_SOC_TRIM_NUM (at 0x40f0)"
        set &access:&cmd_addr %l (0x8040f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "FG_SOC_FG_PBS_TRIG"
      sgroup "FG_SOC_FG_PBS_TRIG (at 0x40f1)"
        set &access:&cmd_addr %l (0x8040f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DTEST_SEL_EN                             = " "0 (ENABLE_DTEST_FOR_PBS_DISABLE),1 (ENABLE_DTEST_FOR_PBS_ENABLE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   INV                                      = " "0 (INVERT_DTEST_DISABLE),1 (INVERT_DTEST_ENABLE)"
    tree.end
    tree "FG_SOC_FG_PBS_TRIG_MUX"
      sgroup "FG_SOC_FG_PBS_TRIG_MUX (at 0x40f2)"
        set &access:&cmd_addr %l (0x8040f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SEL                                      = "
    tree.end
    tree "FG_SOC_FG_RESET"
      sgroup "FG_SOC_FG_RESET (at 0x40f3)"
        set &access:&cmd_addr %l (0x8040f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CMD                                      = " "0 (FG_NOT_IN_RESET),1 (FG_IN_RESET)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TYPE_SEL                                 = " "0 (HYBRID_DVDD_RB_RAW),1 (HYBRID_DVDD_RB)"
    tree.end
    tree "FG_SOC_FG_CYA_CFG"
      sgroup "FG_SOC_FG_CYA_CFG (at 0x40f4)"
        set &access:&cmd_addr %l (0x8040f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FG_WDOG_EN                               = " "0 (FG_WDOG_DISABLED),1 (FG_WDOG_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LCSMB_TRIM                               = " "0 (DO_NOT_USE_ADC_LOW_CURRENT_MODE),1 (USE_ADC_LOW_CURRENT_MODE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   I_ADC_SRC_MUX_SEL                        = " "0 (I_ADC_SRC_FROM_FG),1 (I_ADC_SRC_FROM_FG_CYA)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   I_ADC_SRC_SEL                            = " "0 (I_ADC_FROM_BATFET),1 (I_ADC_FROM_ISENSE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   V_BCL_ADC_BIT_SEL                        = " "0 (I_BCL_ADC_7_BIT_LONG),1 (I_BCL_ADC_8_BIT_LONG)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   I_BCL_ADC_BIT_SEL                        = " "0 (I_BCL_ADC_7_BIT_LONG),1 (I_BCL_ADC_8_BIT_LONG)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   V_ADC_CMP_POL_TRIM                       = " "0 (V_ADC_POS_IS_POS),1 (V_ADC_POS_IS_NEG)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   I_ADC_CMP_POL_TRIM                       = " "0 (I_ADC_DISCH_POS),1 (I_ADC_DISCH_NEG)"
    tree.end
    tree "FG_SOC_LOW_PWR_CFG"
      sgroup "FG_SOC_LOW_PWR_CFG (at 0x40f5)"
        set &access:&cmd_addr %l (0x8040f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SLEEP_EN                                 = " "0 (SLEEP_IS_DISABLED),1 (SLEEP_IS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LO_FRQ_CLKSWITCH_EN                      = " "0 (LO_FRQ_CLKSWITCH_DISABLED),1 (LO_FRQ_CLKSWITCH_ENABLED)"
    tree.end
    tree "FG_SOC_BCL_V_GAIN_BATT_TRIM"
      sgroup "FG_SOC_BCL_V_GAIN_BATT_TRIM (at 0x40f6)"
        set &access:&cmd_addr %l (0x8040f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VAL                                      = "
    tree.end
    tree "FG_SOC_BCL_I_GAIN_RSENSE_TRIM"
      sgroup "FG_SOC_BCL_I_GAIN_RSENSE_TRIM (at 0x40f7)"
        set &access:&cmd_addr %l (0x8040f70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VAL                                      = "
    tree.end
    tree "FG_SOC_BCL_I_OFFSET_RSENSE_TRIM"
      sgroup "FG_SOC_BCL_I_OFFSET_RSENSE_TRIM (at 0x40f8)"
        set &access:&cmd_addr %l (0x8040f80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VAL                                      = "
    tree.end
    tree "FG_SOC_BCL_I_GAIN_BATFET_TRIM"
      sgroup "FG_SOC_BCL_I_GAIN_BATFET_TRIM (at 0x40f9)"
        set &access:&cmd_addr %l (0x8040f90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VAL                                      = "
    tree.end
    tree "FG_SOC_BCL_I_OFFSET_BATFET_TRIM"
      sgroup "FG_SOC_BCL_I_OFFSET_BATFET_TRIM (at 0x40fa)"
        set &access:&cmd_addr %l (0x8040fa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40fa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VAL                                      = "
    tree.end
  tree.end
tree.end
tree "FLASH1"
  tree "FLASH1"
    tree "FLASH1_REVISION1"
      sgroup "FLASH1_REVISION1 (at 0x1d300)"
        set &access:&cmd_addr %l (0x80d3000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "FLASH1_REVISION2"
      sgroup "FLASH1_REVISION2 (at 0x1d301)"
        set &access:&cmd_addr %l (0x80d3010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "FLASH1_REVISION3"
      sgroup "FLASH1_REVISION3 (at 0x1d302)"
        set &access:&cmd_addr %l (0x80d3020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "FLASH1_REVISION4"
      sgroup "FLASH1_REVISION4 (at 0x1d303)"
        set &access:&cmd_addr %l (0x80d3030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "FLASH1_PERPH_TYPE"
      sgroup "FLASH1_PERPH_TYPE (at 0x1d304)"
        set &access:&cmd_addr %l (0x80d3040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "FLASH1_PERPH_SUBTYPE"
      sgroup "FLASH1_PERPH_SUBTYPE (at 0x1d305)"
        set &access:&cmd_addr %l (0x80d3050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "FLASH1_LED_FAULT_STATUS"
      sgroup "FLASH1_LED_FAULT_STATUS (at 0x1d308)"
        set &access:&cmd_addr %l (0x80d3080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_OK_FAULT                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   THERMAL_DERATE                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED2_OPEN_FAULT                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_OPEN_FAULT                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_SHORT_FAULT                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED1_SHORT_FAULT                         = " "0, 1"
    tree.end
    tree "FLASH1_LED1_IRAMP_STATUS"
      sgroup "FLASH1_LED1_IRAMP_STATUS (at 0x1d309)"
        set &access:&cmd_addr %l (0x80d3090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED1_RAMP_CURRENT                        = "
    tree.end
    tree "FLASH1_LED2_IRAMP_STATUS"
      sgroup "FLASH1_LED2_IRAMP_STATUS (at 0x1d30a)"
        set &access:&cmd_addr %l (0x80d30a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd30a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED2_RAMP_CURRENT                        = "
    tree.end
    tree "FLASH1_LED1_MASK_RAMP_STATUS"
      sgroup "FLASH1_LED1_MASK_RAMP_STATUS (at 0x1d30b)"
        set &access:&cmd_addr %l (0x80d30b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd30b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED1_MASK_CLIP_CURRENT                   = "
    tree.end
    tree "FLASH1_LED2_MASK_RAMP_STATUS"
      sgroup "FLASH1_LED2_MASK_RAMP_STATUS (at 0x1d30c)"
        set &access:&cmd_addr %l (0x80d30c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd30c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED2_MASK_CLIP_CURRENT                   = "
    tree.end
    tree "FLASH1_INT_RT_STS"
      sgroup "FLASH1_INT_RT_STS (at 0x1d310)"
        set &access:&cmd_addr %l (0x80d3100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_RT_STS                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_RT_STS                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_RT_STS                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_RT_STS                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_RT_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_RT_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_RT_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_RT_STS                  = " "0, 1"
    tree.end
    tree "FLASH1_INT_SET_TYPE"
      sgroup "FLASH1_INT_SET_TYPE (at 0x1d311)"
        set &access:&cmd_addr %l (0x80d3110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_TYPE                            = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_TYPE                             = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_TYPE                    = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_TYPE                    = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_TYPE                    = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_TYPE                    = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "FLASH1_INT_POLARITY_HIGH"
      sgroup "FLASH1_INT_POLARITY_HIGH (at 0x1d312)"
        set &access:&cmd_addr %l (0x80d3120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_HIGH                            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_HIGH                    = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "FLASH1_INT_POLARITY_LOW"
      sgroup "FLASH1_INT_POLARITY_LOW (at 0x1d313)"
        set &access:&cmd_addr %l (0x80d3130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_LOW                             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_LOW                     = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "FLASH1_INT_LATCHED_CLR"
      sgroup "FLASH1_INT_LATCHED_CLR (at 0x1d314)"
        set &access:&cmd_addr %l (0x80d3140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_LATCHED_CLR                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_LATCHED_CLR                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_LATCHED_CLR             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_LATCHED_CLR             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_LATCHED_CLR             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_LATCHED_CLR             = " "0, 1"
    tree.end
    tree "FLASH1_INT_EN_SET"
      sgroup "FLASH1_INT_EN_SET (at 0x1d315)"
        set &access:&cmd_addr %l (0x80d3150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_EN_SET                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FLASH1_INT_EN_CLR"
      sgroup "FLASH1_INT_EN_CLR (at 0x1d316)"
        set &access:&cmd_addr %l (0x80d3160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_EN_CLR                  = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "FLASH1_INT_LATCHED_STS"
      sgroup "FLASH1_INT_LATCHED_STS (at 0x1d318)"
        set &access:&cmd_addr %l (0x80d3180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_LATCHED_STS             = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "FLASH1_INT_PENDING_STS"
      sgroup "FLASH1_INT_PENDING_STS (at 0x1d319)"
        set &access:&cmd_addr %l (0x80d3190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_PENDING_STS                     = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_PENDING_STS             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "FLASH1_INT_MID_SEL"
      sgroup "FLASH1_INT_MID_SEL (at 0x1d31a)"
        set &access:&cmd_addr %l (0x80d31a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd31a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "FLASH1_INT_PRIORITY"
      sgroup "FLASH1_INT_PRIORITY (at 0x1d31b)"
        set &access:&cmd_addr %l (0x80d31b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd31b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "FLASH1_FLASH_SAFETY_TIMER"
      sgroup "FLASH1_FLASH_SAFETY_TIMER (at 0x1d340)"
        set &access:&cmd_addr %l (0x80d3400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   FLASH_TIMER_DURATION                     = "
    tree.end
    tree "FLASH1_MAX_FLSH_CURRENT"
      sgroup "FLASH1_MAX_FLSH_CURRENT (at 0x1d341)"
        set &access:&cmd_addr %l (0x80d3410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MAX_LED_CURRENT                          = "
    tree.end
    tree "FLASH1_LED1_CURRENT_PRGM"
      sgroup "FLASH1_LED1_CURRENT_PRGM (at 0x1d342)"
        set &access:&cmd_addr %l (0x80d3420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED1_CURRENT_CONTROL                     = "
    tree.end
    tree "FLASH1_LED2_CURRENT_PRGM"
      sgroup "FLASH1_LED2_CURRENT_PRGM (at 0x1d343)"
        set &access:&cmd_addr %l (0x80d3430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED2_CURRENT_CONTROL                     = "
    tree.end
    tree "FLASH1_MASK_CLAMP_CURRENT"
      sgroup "FLASH1_MASK_CLAMP_CURRENT (at 0x1d344)"
        set &access:&cmd_addr %l (0x80d3440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MASK_CURRENT                             = "
    tree.end
    tree "FLASH1_ENABLE_CONTROL"
      sgroup "FLASH1_ENABLE_CONTROL (at 0x1d346)"
        set &access:&cmd_addr %l (0x80d3460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODULE_ENABLE                            = " "0 (MOD_DIS),1 (MOD_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LED1_DRVR_SEL                            = " "0 (TORCH_EN),1 (FLASH_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED2_DRVR_SEL                            = " "0 (TORCH_EN),1 (FLASH_EN)"
    tree.end
    tree "FLASH1_LED_STROBE_CONTROL"
      sgroup "FLASH1_LED_STROBE_CONTROL (at 0x1d347)"
        set &access:&cmd_addr %l (0x80d3470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LED1_OUTPUT                           = " "0 (LED1_DIS),1 (LED1_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_LED2_OUTPUT                           = " "0 (LED2_DIS),1 (LED2_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   HW_SW_STROBE_SEL                         = " "0 (STROBE_SW),1 (STROBE_HW)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HW_STROBE_TRIGGER                        = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HW_STROBE_POLARITY                       = " "0 (ACTIVE_LOW),1 (ACTIVE_HIGH)"
    tree.end
    tree "FLASH1_LED_TMR_CONTROL"
      sgroup "FLASH1_LED_TMR_CONTROL (at 0x1d348)"
        set &access:&cmd_addr %l (0x80d3480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TIMER1_SEL                               = " "0 (LED1_TIMER_FLASH),1 (LED1_TIMER_WTCHDG)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TIMER2_SEL                               = " "0 (LED2_TIMER_FLASH),1 (LED2_TIMER_WTCHDG)"
    tree.end
    tree "FLASH1_WATCHDOG_TIMER"
      sgroup "FLASH1_WATCHDOG_TIMER (at 0x1d349)"
        set &access:&cmd_addr %l (0x80d3490|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3490|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   WATCHDOG_TIMER_DURATION                  = "
    tree.end
    tree "FLASH1_FLASH_HEADRM_PRGM"
      sgroup "FLASH1_FLASH_HEADRM_PRGM (at 0x1d34a)"
        set &access:&cmd_addr %l (0x80d34a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FLSH_DRVR_HEADROOM                       = " "0 (HEADRM_250MV),1 (HEADRM_300MV),2 (HEADRM_400MV),3 (HEADRM_500MV)"
    tree.end
    tree "FLASH1_STARTUP_DELAY"
      sgroup "FLASH1_STARTUP_DELAY (at 0x1d34b)"
        set &access:&cmd_addr %l (0x80d34b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   STARTUP_DELAY                            = " "0 (STRTUP_DLY_10US),1 (STRTUP_DLY_32US),2 (STRTUP_DLY_64US),3 (STRTUP_DLY_128US)"
    tree.end
    tree "FLASH1_MASK_ENABLE"
      sgroup "FLASH1_MASK_ENABLE (at 0x1d34c)"
        set &access:&cmd_addr %l (0x80d34c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_MASK3                                 = " "0 (MASK3_DIS),1 (MASK3_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_MASK2                                 = " "0 (MASK2_DIS),1 (MASK2_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_MASK1                                 = " "0 (VPH_DROOP_DIS),1 (VPH_DROOP_EN)"
    tree.end
    tree "FLASH1_LED1_FINE_CURRENT_PRGM"
      sgroup "FLASH1_LED1_FINE_CURRENT_PRGM (at 0x1d34d)"
        set &access:&cmd_addr %l (0x80d34d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED1_FINE_CURRENT_CONTROL                = "
    tree.end
    tree "FLASH1_LED2_FINE_CURRENT_PRGM"
      sgroup "FLASH1_LED2_FINE_CURRENT_PRGM (at 0x1d34e)"
        set &access:&cmd_addr %l (0x80d34e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED2_FINE_CURRENT_CONTROL                = "
    tree.end
    tree "FLASH1_VREG_OK_FORCE"
      sgroup "FLASH1_VREG_OK_FORCE (at 0x1d34f)"
        set &access:&cmd_addr %l (0x80d34f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd34f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_FORCE_VREG_OK                         = " "0 (VREGOK_0),1 (VREGOK_1)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FOLLOW_HW_VREG_OK                        = " "0 (VREGOK_SW),1 (VREGOK_HW)"
    tree.end
    tree "FLASH1_MASK_CONFIG"
      sgroup "FLASH1_MASK_CONFIG (at 0x1d350)"
        set &access:&cmd_addr %l (0x80d3500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MASK3_POLARITY                           = " "0 (MASK3_ACTIVE_LOW),1 (MASK3_ACTIVE_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MASK2_POLARITY                           = " "0 (MASK2_ACTIVE_LOW),1 (MASK2_ACTIVE_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MASK1_POLARITY                           = " "0 (MASK1_ACTIVE_LOW),1 (MASK1_ACTIVE_HIGH)"
    tree.end
    tree "FLASH1_FAULT_DETECT"
      sgroup "FLASH1_FAULT_DETECT (at 0x1d351)"
        set &access:&cmd_addr %l (0x80d3510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_SELF_CHECK                            = " "0 (SELF_CHECK_DIS),1 (SELF_CHECK_EN)"
    tree.end
    tree "FLASH1_THERMAL_DERATE"
      sgroup "FLASH1_THERMAL_DERATE (at 0x1d352)"
        set &access:&cmd_addr %l (0x80d3520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_THERMAL_DERATE                        = " "0 (THERM_DERATE_DIS),1 (THERM_DERATE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   DERATE_RATE                              = " "0 (RATE_1_PERCENT),1 (RATE_1P25_PERCENT),2 (RATE_2_PERCENT),3 (RATE_2P5_PERCENT),4 (RATE_5_PERCENT),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DERATE_THRESHOLD                         = " "0 (THRESHOLD_80C),1 (THRESHOLD_90C),2 (THRESHOLD_100C),3 (THRESHOLD_110C),4 (THRESHOLD_120C),5 (THRESHOLD_130C),6 (reserved),7 (reserved)"
    tree.end
    tree "FLASH1_PWM_DIMMING"
      sgroup "FLASH1_PWM_DIMMING (at 0x1d353)"
        set &access:&cmd_addr %l (0x80d3530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PWM_DIMMING                           = " "0 (PWM_DIM_DIS),1 (PWM_DIM_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FULL_SCALE_CURRENT                   = " "0 (PWMDIMMING_12P5MA),1 (PWMDIMMING_25MA),2 (PWMDIMMING_37P5MA),3 (PWMDIMMING_50MA),4 (PWMDIMMING_62P5MA),5 (PWMDIMMING_75MA),6 (PWMDIMMING_87P5MA),7 (PWMDIMMING_100MA)"
    tree.end
    tree "FLASH1_LED_CURRENT_RAMP"
      sgroup "FLASH1_LED_CURRENT_RAMP (at 0x1d354)"
        set &access:&cmd_addr %l (0x80d3540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_RAMP                                  = " "0 (RAMP_DIS),1 (RAMP_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   RAMP_UP_STEP                             = " "0 (RAMP_UP_STEP_0P2US),1 (RAMP_UP_STEP_0P4US),2 (RAMP_UP_STEP_0P8US),3 (RAMP_UP_STEP_1P6US),4 (RAMP_UP_STEP_3P3US),5 (RAMP_UP_STEP_6P7US),6 (RAMP_UP_STEP_13P5US),7 (RAMP_UP_STEP_27US)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RAMP_DN_STEP                             = " "0 (RAMP_DN_STEP_0P2US),1 (RAMP_DN_STEP_0P4US),2 (RAMP_DN_STEP_0P8US),3 (RAMP_DN_STEP_1P6US),4 (RAMP_DN_STEP_3P3US),5 (RAMP_DN_STEP_6P7US),6 (RAMP_DN_STEP_13P5US),7 (RAMP_DN_STEP_27US)"
    tree.end
    tree "FLASH1_ALT_RAMP_DN"
      sgroup "FLASH1_ALT_RAMP_DN (at 0x1d355)"
        set &access:&cmd_addr %l (0x80d3550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ALTERNATE_RAMP_DN                        = " "0 (ALT_RMP_DWN_0P2US),1 (ALT_RMP_DWN_0P4US),2 (ALT_RMP_DWN_0P8US),3 (ALT_RMP_DWN_1P6US)"
    tree.end
    tree "FLASH1_WATCHDOG_PET"
      sgroup "FLASH1_WATCHDOG_PET (at 0x1d356)"
        set &access:&cmd_addr %l (0x80d3560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PET_WATCHDOG                             = " "0, 1"
    tree.end
    tree "FLASH1_STROBE_DEBOUNCE"
      sgroup "FLASH1_STROBE_DEBOUNCE (at 0x1d357)"
        set &access:&cmd_addr %l (0x80d3570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEBOUNCE_TIME_STROBE                     = " "0 (STROBE_DEBOUNCE_0US),1 (STROBE_DEBOUNCE_10US),2 (STROBE_DEBOUNCE_32US),3 (STROBE_DEBOUNCE_64US)"
    tree.end
    tree "FLASH1_MASK_DEBOUNCE"
      sgroup "FLASH1_MASK_DEBOUNCE (at 0x1d358)"
        set &access:&cmd_addr %l (0x80d3580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   DEBOUNCE_TIME_MASK1                      = " "0 (MASK1_DEBOUNCE_0US),1 (MASK1_DEBOUNCE_10US),2 (MASK1_DEBOUNCE_32US),3 (MASK1_DEBOUNCE_64US)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEBOUNCE_TIME_OTHER_MASKS                = " "0 (OTHER_MASK_DEBOUNCE_0US),1 (OTHER_MASK_DEBOUNCE_10US),2 (OTHER_MASK_DEBOUNCE_32US),3 (OTHER_MASK_DEBOUNCE_64US)"
    tree.end
    tree "FLASH1_FAULT_DEBOUNCE"
      sgroup "FLASH1_FAULT_DEBOUNCE (at 0x1d359)"
        set &access:&cmd_addr %l (0x80d3590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   DEBOUNCE_TIME_LED1_OPEN                  = " "0 (LED1_OPEN_DEBOUNCE_0US),1 (LED1_OPEN_DEBOUNCE_10US),2 (LED1_OPEN_DEBOUNCE_32US),3 (LED1_OPEN_DEBOUNCE_64US)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   DEBOUNCE_TIME_LED2_OPEN                  = " "0 (LED2_OPEN_DEBOUNCE_0US),1 (LED2_OPEN_DEBOUNCE_10US),2 (LED2_OPEN_DEBOUNCE_32US),3 (LED2_OPEN_DEBOUNCE_64US)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEBOUNCE_TIME_LED1_SHORT                 = " "0 (LED1_SHORT_DEBOUNCE_0US),1 (LED1_SHORT_DEBOUNCE_10US),2 (LED1_SHORT_DEBOUNCE_32US),3 (LED1_SHORT_DEBOUNCE_64US)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEBOUNCE_TIME_LED2_SHORT                 = " "0 (LED2_SHORT_DEBOUNCE_0US),1 (LED2_SHORT_DEBOUNCE_10US),2 (LED2_SHORT_DEBOUNCE_32US),3 (LED2_SHORT_DEBOUNCE_64US)"
    tree.end
    tree "FLASH1_VPH_PWR_DROOP"
      sgroup "FLASH1_VPH_PWR_DROOP (at 0x1d35a)"
        set &access:&cmd_addr %l (0x80d35a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd35a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_VPH_PWR_DROOP                         = " "0 (VPH_DROOP_DIS),1 (VPHDROOP_EN)"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   VPH_PWR_DROOP_THRESHOLD                  = " "0 (VDIP_THRES_2P5V),1 (VDIP_THRES_2P6V),2 (VDIP_THRES_2P7V),3 (VDIP_THRES_2P8V),4 (VDIP_THRES_2P9V),5 (VDIP_THRES_3V),6 (VDIP_THRES_3P1V),7 (VDIP_THRES_3P2V)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEBOUNCE_TIME_VPH_PWR_DROOP              = " "0 (VPH_DROOP_DEBOUNCE_0US),1 (VPH_DROOP_DEBOUNCE_10US),2 (VPH_DROOP_DEBOUNCE_32US),3 (VPH_DROOP_DEBOUNCE_64US)"
    tree.end
    tree "FLASH1_MASK_RAMP_CTRL"
      sgroup "FLASH1_MASK_RAMP_CTRL (at 0x1d35b)"
        set &access:&cmd_addr %l (0x80d35b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd35b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MASK_RAMP_CTRL                           = " "0 (MASK_RAMP_DIS),1 (MASK_RAMP_EN)"
    tree.end
    tree "FLASH1_LED1_HDRM_SNS_CTRL"
      sgroup "FLASH1_LED1_HDRM_SNS_CTRL (at 0x1d35c)"
        set &access:&cmd_addr %l (0x80d35c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd35c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED1_HDRM_SNS_EN                         = " "0 (LED1_HR_SNS_DIS),1 (LED1_HR_SNS_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_GAIN_CORRECTION                     = " "0 (LED1_GAIN_CORR_HW),1 (LED1_GAIN_CORR_SW)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LED1_HDRM_SNS_THRESHOLD                  = " "0 (LED1_HR_SNS_THRES_700MV),1 (LED1_HR_SNS_THRES_1000MV),2 (reserved),3 (reserved)"
    tree.end
    tree "FLASH1_LED2_HDRM_SNS_CTRL"
      sgroup "FLASH1_LED2_HDRM_SNS_CTRL (at 0x1d35d)"
        set &access:&cmd_addr %l (0x80d35d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd35d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED2_HDRM_SNS_EN                         = " "0 (LED2_HR_SNS_DIS),1 (LED2_HR_SNS_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED2_GAIN_CORRECTION                     = " "0 (LED2_GAIN_CORR_HW),1 (LED2_GAIN_CORR_SW)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LED2_HDRM_SNS_THRESHOLD                  = " "0 (LED2_HR_SNS_THRES_700MV),1 (LED2_HR_SNS_THRES_1000MV),2 (reserved),3 (reserved)"
    tree.end
    tree "FLASH1_SEC_ACCESS"
      sgroup "FLASH1_SEC_ACCESS (at 0x1d3d0)"
        set &access:&cmd_addr %l (0x80d3d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "FLASH1_PERPH_RESET_CTL2"
      sgroup "FLASH1_PERPH_RESET_CTL2 (at 0x1d3d9)"
        set &access:&cmd_addr %l (0x80d3d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (IGNORE),1 (FOLLOW)"
    tree.end
    tree "FLASH1_PERPH_RESET_CTL3"
      sgroup "FLASH1_PERPH_RESET_CTL3 (at 0x1d3da)"
        set &access:&cmd_addr %l (0x80d3da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (IGNORE),1 (FOLLOW)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (IGNORE),1 (FOLLOW)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (IGNORE),1 (FOLLOW)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (IGNORE),1 (FOLLOW)"
    tree.end
    tree "FLASH1_PERPH_RESET_CTL4"
      sgroup "FLASH1_PERPH_RESET_CTL4 (at 0x1d3db)"
        set &access:&cmd_addr %l (0x80d3db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NO_RESET),1 (LOCAL_SOFT_RESET)"
    tree.end
    tree "FLASH1_INT_TEST1"
      sgroup "FLASH1_INT_TEST1 (at 0x1d3e0)"
        set &access:&cmd_addr %l (0x80d3e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "FLASH1_INT_TEST_VAL"
      sgroup "FLASH1_INT_TEST_VAL (at 0x1d3e1)"
        set &access:&cmd_addr %l (0x80d3e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FLSH_EXP_TEST_VAL                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DOG_EXP_TEST_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LED_FLT_TEST_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   VPH_DROOP_TEST_VAL                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LED1_RMP_UP_DONE_TEST_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LED1_RMP_DN_DONE_TEST_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LED2_RMP_UP_DONE_TEST_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_RMP_DN_DONE_TEST_VAL                = " "0, 1"
    tree.end
    tree "FLASH1_TEST1"
      sgroup "FLASH1_TEST1 (at 0x1d3e2)"
        set &access:&cmd_addr %l (0x80d3e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "FLASH1_TEST2"
      sgroup "FLASH1_TEST2 (at 0x1d3e3)"
        set &access:&cmd_addr %l (0x80d3e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   FLSH_ATEST_CTRL                          = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "FLASH1_TEST3"
      sgroup "FLASH1_TEST3 (at 0x1d3e4)"
        set &access:&cmd_addr %l (0x80d3e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_WDOG_TIMER                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_SFTY_TIMER                            = " "0, 1"
    tree.end
    tree "FLASH1_TEST4"
      sgroup "FLASH1_TEST4 (at 0x1d3e5)"
        set &access:&cmd_addr %l (0x80d3e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CLKRATE_TEST                             = " "0, 1"
    tree.end
    tree "FLASH1_TEST5"
      sgroup "FLASH1_TEST5 (at 0x1d3e6)"
        set &access:&cmd_addr %l (0x80d3e60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LED1_SEGMENT_CTRL                        = "
    tree.end
    tree "FLASH1_TEST6"
      sgroup "FLASH1_TEST6 (at 0x1d3e7)"
        set &access:&cmd_addr %l (0x80d3e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LED2_SEGMENT_CTRL                        = "
    tree.end
    tree "FLASH1_TRIM_NUM"
      sgroup "FLASH1_TRIM_NUM (at 0x1d3f0)"
        set &access:&cmd_addr %l (0x80d3f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "FLASH1_TRIM1"
      sgroup "FLASH1_TRIM1 (at 0x1d3f1)"
        set &access:&cmd_addr %l (0x80d3f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LED1_CURR_TRIM_VIN                       = "
    tree.end
    tree "FLASH1_TRIM2"
      sgroup "FLASH1_TRIM2 (at 0x1d3f2)"
        set &access:&cmd_addr %l (0x80d3f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LED1_CURR_TRIM_VREG                      = "
    tree.end
    tree "FLASH1_TRIM3"
      sgroup "FLASH1_TRIM3 (at 0x1d3f3)"
        set &access:&cmd_addr %l (0x80d3f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LED2_CURR_TRIM_VIN                       = "
    tree.end
    tree "FLASH1_TRIM4"
      sgroup "FLASH1_TRIM4 (at 0x1d3f4)"
        set &access:&cmd_addr %l (0x80d3f40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd3f40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LED2_CURR_TRIM_VREG                      = "
    tree.end
  tree.end
tree.end
tree "GPIO1"
  tree "GPIO1"
    tree "GPIO1_REVISION1"
      sgroup "GPIO1_REVISION1 (at 0xc000)"
        set &access:&cmd_addr %l (0x80c0000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO1_REVISION2"
      sgroup "GPIO1_REVISION2 (at 0xc001)"
        set &access:&cmd_addr %l (0x80c0010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO1_REVISION3"
      sgroup "GPIO1_REVISION3 (at 0xc002)"
        set &access:&cmd_addr %l (0x80c0020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO1_REVISION4"
      sgroup "GPIO1_REVISION4 (at 0xc003)"
        set &access:&cmd_addr %l (0x80c0030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO1_PERPH_TYPE"
      sgroup "GPIO1_PERPH_TYPE (at 0xc004)"
        set &access:&cmd_addr %l (0x80c0040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO1_PERPH_SUBTYPE"
      sgroup "GPIO1_PERPH_SUBTYPE (at 0xc005)"
        set &access:&cmd_addr %l (0x80c0050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO1_STATUS1"
      sgroup "GPIO1_STATUS1 (at 0xc008)"
        set &access:&cmd_addr %l (0x80c0080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO1_INT_RT_STS"
      sgroup "GPIO1_INT_RT_STS (at 0xc010)"
        set &access:&cmd_addr %l (0x80c0100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO1_INT_SET_TYPE"
      sgroup "GPIO1_INT_SET_TYPE (at 0xc011)"
        set &access:&cmd_addr %l (0x80c0110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO1_INT_POLARITY_HIGH"
      sgroup "GPIO1_INT_POLARITY_HIGH (at 0xc012)"
        set &access:&cmd_addr %l (0x80c0120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO1_INT_POLARITY_LOW"
      sgroup "GPIO1_INT_POLARITY_LOW (at 0xc013)"
        set &access:&cmd_addr %l (0x80c0130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO1_INT_LATCHED_CLR"
      sgroup "GPIO1_INT_LATCHED_CLR (at 0xc014)"
        set &access:&cmd_addr %l (0x80c0140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO1_INT_EN_SET"
      sgroup "GPIO1_INT_EN_SET (at 0xc015)"
        set &access:&cmd_addr %l (0x80c0150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO1_INT_EN_CLR"
      sgroup "GPIO1_INT_EN_CLR (at 0xc016)"
        set &access:&cmd_addr %l (0x80c0160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO1_INT_LATCHED_STS"
      sgroup "GPIO1_INT_LATCHED_STS (at 0xc018)"
        set &access:&cmd_addr %l (0x80c0180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO1_INT_PENDING_STS"
      sgroup "GPIO1_INT_PENDING_STS (at 0xc019)"
        set &access:&cmd_addr %l (0x80c0190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO1_INT_MID_SEL"
      sgroup "GPIO1_INT_MID_SEL (at 0xc01a)"
        set &access:&cmd_addr %l (0x80c01a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc01a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO1_INT_PRIORITY"
      sgroup "GPIO1_INT_PRIORITY (at 0xc01b)"
        set &access:&cmd_addr %l (0x80c01b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc01b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO1_MODE_CTL"
      sgroup "GPIO1_MODE_CTL (at 0xc040)"
        set &access:&cmd_addr %l (0x80c0400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO1_DIG_VIN_CTL"
      sgroup "GPIO1_DIG_VIN_CTL (at 0xc041)"
        set &access:&cmd_addr %l (0x80c0410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO1_DIG_PULL_CTL"
      sgroup "GPIO1_DIG_PULL_CTL (at 0xc042)"
        set &access:&cmd_addr %l (0x80c0420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO1_DIG_IN_CTL"
      sgroup "GPIO1_DIG_IN_CTL (at 0xc043)"
        set &access:&cmd_addr %l (0x80c0430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO1_DIG_OUT_CTL"
      sgroup "GPIO1_DIG_OUT_CTL (at 0xc045)"
        set &access:&cmd_addr %l (0x80c0450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO1_EN_CTL"
      sgroup "GPIO1_EN_CTL (at 0xc046)"
        set &access:&cmd_addr %l (0x80c0460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO1_SEC_ACCESS"
      sgroup "GPIO1_SEC_ACCESS (at 0xc0d0)"
        set &access:&cmd_addr %l (0x80c0d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO1_PERPH_RESET_CTL1"
      sgroup "GPIO1_PERPH_RESET_CTL1 (at 0xc0d8)"
        set &access:&cmd_addr %l (0x80c0d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO1_PERPH_RESET_CTL2"
      sgroup "GPIO1_PERPH_RESET_CTL2 (at 0xc0d9)"
        set &access:&cmd_addr %l (0x80c0d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO1_PERPH_RESET_CTL3"
      sgroup "GPIO1_PERPH_RESET_CTL3 (at 0xc0da)"
        set &access:&cmd_addr %l (0x80c0da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO1_PERPH_RESET_CTL4"
      sgroup "GPIO1_PERPH_RESET_CTL4 (at 0xc0db)"
        set &access:&cmd_addr %l (0x80c0db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO10"
  tree "GPIO10"
    tree "GPIO10_REVISION1"
      sgroup "GPIO10_REVISION1 (at 0xc900)"
        set &access:&cmd_addr %l (0x80c9000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO10_REVISION2"
      sgroup "GPIO10_REVISION2 (at 0xc901)"
        set &access:&cmd_addr %l (0x80c9010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO10_REVISION3"
      sgroup "GPIO10_REVISION3 (at 0xc902)"
        set &access:&cmd_addr %l (0x80c9020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO10_REVISION4"
      sgroup "GPIO10_REVISION4 (at 0xc903)"
        set &access:&cmd_addr %l (0x80c9030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO10_PERPH_TYPE"
      sgroup "GPIO10_PERPH_TYPE (at 0xc904)"
        set &access:&cmd_addr %l (0x80c9040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO10_PERPH_SUBTYPE"
      sgroup "GPIO10_PERPH_SUBTYPE (at 0xc905)"
        set &access:&cmd_addr %l (0x80c9050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO10_STATUS1"
      sgroup "GPIO10_STATUS1 (at 0xc908)"
        set &access:&cmd_addr %l (0x80c9080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO10_INT_RT_STS"
      sgroup "GPIO10_INT_RT_STS (at 0xc910)"
        set &access:&cmd_addr %l (0x80c9100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO10_INT_SET_TYPE"
      sgroup "GPIO10_INT_SET_TYPE (at 0xc911)"
        set &access:&cmd_addr %l (0x80c9110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO10_INT_POLARITY_HIGH"
      sgroup "GPIO10_INT_POLARITY_HIGH (at 0xc912)"
        set &access:&cmd_addr %l (0x80c9120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO10_INT_POLARITY_LOW"
      sgroup "GPIO10_INT_POLARITY_LOW (at 0xc913)"
        set &access:&cmd_addr %l (0x80c9130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO10_INT_LATCHED_CLR"
      sgroup "GPIO10_INT_LATCHED_CLR (at 0xc914)"
        set &access:&cmd_addr %l (0x80c9140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO10_INT_EN_SET"
      sgroup "GPIO10_INT_EN_SET (at 0xc915)"
        set &access:&cmd_addr %l (0x80c9150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO10_INT_EN_CLR"
      sgroup "GPIO10_INT_EN_CLR (at 0xc916)"
        set &access:&cmd_addr %l (0x80c9160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO10_INT_LATCHED_STS"
      sgroup "GPIO10_INT_LATCHED_STS (at 0xc918)"
        set &access:&cmd_addr %l (0x80c9180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO10_INT_PENDING_STS"
      sgroup "GPIO10_INT_PENDING_STS (at 0xc919)"
        set &access:&cmd_addr %l (0x80c9190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO10_INT_MID_SEL"
      sgroup "GPIO10_INT_MID_SEL (at 0xc91a)"
        set &access:&cmd_addr %l (0x80c91a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc91a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO10_INT_PRIORITY"
      sgroup "GPIO10_INT_PRIORITY (at 0xc91b)"
        set &access:&cmd_addr %l (0x80c91b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc91b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO10_MODE_CTL"
      sgroup "GPIO10_MODE_CTL (at 0xc940)"
        set &access:&cmd_addr %l (0x80c9400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO10_DIG_VIN_CTL"
      sgroup "GPIO10_DIG_VIN_CTL (at 0xc941)"
        set &access:&cmd_addr %l (0x80c9410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO10_DIG_PULL_CTL"
      sgroup "GPIO10_DIG_PULL_CTL (at 0xc942)"
        set &access:&cmd_addr %l (0x80c9420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO10_DIG_IN_CTL"
      sgroup "GPIO10_DIG_IN_CTL (at 0xc943)"
        set &access:&cmd_addr %l (0x80c9430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO10_DIG_OUT_CTL"
      sgroup "GPIO10_DIG_OUT_CTL (at 0xc945)"
        set &access:&cmd_addr %l (0x80c9450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO10_EN_CTL"
      sgroup "GPIO10_EN_CTL (at 0xc946)"
        set &access:&cmd_addr %l (0x80c9460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO10_SEC_ACCESS"
      sgroup "GPIO10_SEC_ACCESS (at 0xc9d0)"
        set &access:&cmd_addr %l (0x80c9d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO10_PERPH_RESET_CTL1"
      sgroup "GPIO10_PERPH_RESET_CTL1 (at 0xc9d8)"
        set &access:&cmd_addr %l (0x80c9d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO10_PERPH_RESET_CTL2"
      sgroup "GPIO10_PERPH_RESET_CTL2 (at 0xc9d9)"
        set &access:&cmd_addr %l (0x80c9d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO10_PERPH_RESET_CTL3"
      sgroup "GPIO10_PERPH_RESET_CTL3 (at 0xc9da)"
        set &access:&cmd_addr %l (0x80c9da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO10_PERPH_RESET_CTL4"
      sgroup "GPIO10_PERPH_RESET_CTL4 (at 0xc9db)"
        set &access:&cmd_addr %l (0x80c9db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc9db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO2"
  tree "GPIO2"
    tree "GPIO2_REVISION1"
      sgroup "GPIO2_REVISION1 (at 0xc100)"
        set &access:&cmd_addr %l (0x80c1000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO2_REVISION2"
      sgroup "GPIO2_REVISION2 (at 0xc101)"
        set &access:&cmd_addr %l (0x80c1010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO2_REVISION3"
      sgroup "GPIO2_REVISION3 (at 0xc102)"
        set &access:&cmd_addr %l (0x80c1020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO2_REVISION4"
      sgroup "GPIO2_REVISION4 (at 0xc103)"
        set &access:&cmd_addr %l (0x80c1030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO2_PERPH_TYPE"
      sgroup "GPIO2_PERPH_TYPE (at 0xc104)"
        set &access:&cmd_addr %l (0x80c1040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO2_PERPH_SUBTYPE"
      sgroup "GPIO2_PERPH_SUBTYPE (at 0xc105)"
        set &access:&cmd_addr %l (0x80c1050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO2_STATUS1"
      sgroup "GPIO2_STATUS1 (at 0xc108)"
        set &access:&cmd_addr %l (0x80c1080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO2_INT_RT_STS"
      sgroup "GPIO2_INT_RT_STS (at 0xc110)"
        set &access:&cmd_addr %l (0x80c1100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO2_INT_SET_TYPE"
      sgroup "GPIO2_INT_SET_TYPE (at 0xc111)"
        set &access:&cmd_addr %l (0x80c1110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO2_INT_POLARITY_HIGH"
      sgroup "GPIO2_INT_POLARITY_HIGH (at 0xc112)"
        set &access:&cmd_addr %l (0x80c1120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO2_INT_POLARITY_LOW"
      sgroup "GPIO2_INT_POLARITY_LOW (at 0xc113)"
        set &access:&cmd_addr %l (0x80c1130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO2_INT_LATCHED_CLR"
      sgroup "GPIO2_INT_LATCHED_CLR (at 0xc114)"
        set &access:&cmd_addr %l (0x80c1140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO2_INT_EN_SET"
      sgroup "GPIO2_INT_EN_SET (at 0xc115)"
        set &access:&cmd_addr %l (0x80c1150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO2_INT_EN_CLR"
      sgroup "GPIO2_INT_EN_CLR (at 0xc116)"
        set &access:&cmd_addr %l (0x80c1160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO2_INT_LATCHED_STS"
      sgroup "GPIO2_INT_LATCHED_STS (at 0xc118)"
        set &access:&cmd_addr %l (0x80c1180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO2_INT_PENDING_STS"
      sgroup "GPIO2_INT_PENDING_STS (at 0xc119)"
        set &access:&cmd_addr %l (0x80c1190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO2_INT_MID_SEL"
      sgroup "GPIO2_INT_MID_SEL (at 0xc11a)"
        set &access:&cmd_addr %l (0x80c11a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc11a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO2_INT_PRIORITY"
      sgroup "GPIO2_INT_PRIORITY (at 0xc11b)"
        set &access:&cmd_addr %l (0x80c11b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc11b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO2_MODE_CTL"
      sgroup "GPIO2_MODE_CTL (at 0xc140)"
        set &access:&cmd_addr %l (0x80c1400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO2_DIG_VIN_CTL"
      sgroup "GPIO2_DIG_VIN_CTL (at 0xc141)"
        set &access:&cmd_addr %l (0x80c1410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO2_DIG_PULL_CTL"
      sgroup "GPIO2_DIG_PULL_CTL (at 0xc142)"
        set &access:&cmd_addr %l (0x80c1420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO2_DIG_IN_CTL"
      sgroup "GPIO2_DIG_IN_CTL (at 0xc143)"
        set &access:&cmd_addr %l (0x80c1430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO2_DIG_OUT_CTL"
      sgroup "GPIO2_DIG_OUT_CTL (at 0xc145)"
        set &access:&cmd_addr %l (0x80c1450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO2_EN_CTL"
      sgroup "GPIO2_EN_CTL (at 0xc146)"
        set &access:&cmd_addr %l (0x80c1460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO2_SEC_ACCESS"
      sgroup "GPIO2_SEC_ACCESS (at 0xc1d0)"
        set &access:&cmd_addr %l (0x80c1d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO2_PERPH_RESET_CTL1"
      sgroup "GPIO2_PERPH_RESET_CTL1 (at 0xc1d8)"
        set &access:&cmd_addr %l (0x80c1d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO2_PERPH_RESET_CTL2"
      sgroup "GPIO2_PERPH_RESET_CTL2 (at 0xc1d9)"
        set &access:&cmd_addr %l (0x80c1d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO2_PERPH_RESET_CTL3"
      sgroup "GPIO2_PERPH_RESET_CTL3 (at 0xc1da)"
        set &access:&cmd_addr %l (0x80c1da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO2_PERPH_RESET_CTL4"
      sgroup "GPIO2_PERPH_RESET_CTL4 (at 0xc1db)"
        set &access:&cmd_addr %l (0x80c1db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc1db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO3"
  tree "GPIO3"
    tree "GPIO3_REVISION1"
      sgroup "GPIO3_REVISION1 (at 0xc200)"
        set &access:&cmd_addr %l (0x80c2000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO3_REVISION2"
      sgroup "GPIO3_REVISION2 (at 0xc201)"
        set &access:&cmd_addr %l (0x80c2010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO3_REVISION3"
      sgroup "GPIO3_REVISION3 (at 0xc202)"
        set &access:&cmd_addr %l (0x80c2020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO3_REVISION4"
      sgroup "GPIO3_REVISION4 (at 0xc203)"
        set &access:&cmd_addr %l (0x80c2030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO3_PERPH_TYPE"
      sgroup "GPIO3_PERPH_TYPE (at 0xc204)"
        set &access:&cmd_addr %l (0x80c2040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO3_PERPH_SUBTYPE"
      sgroup "GPIO3_PERPH_SUBTYPE (at 0xc205)"
        set &access:&cmd_addr %l (0x80c2050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO3_STATUS1"
      sgroup "GPIO3_STATUS1 (at 0xc208)"
        set &access:&cmd_addr %l (0x80c2080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO3_INT_RT_STS"
      sgroup "GPIO3_INT_RT_STS (at 0xc210)"
        set &access:&cmd_addr %l (0x80c2100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO3_INT_SET_TYPE"
      sgroup "GPIO3_INT_SET_TYPE (at 0xc211)"
        set &access:&cmd_addr %l (0x80c2110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO3_INT_POLARITY_HIGH"
      sgroup "GPIO3_INT_POLARITY_HIGH (at 0xc212)"
        set &access:&cmd_addr %l (0x80c2120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO3_INT_POLARITY_LOW"
      sgroup "GPIO3_INT_POLARITY_LOW (at 0xc213)"
        set &access:&cmd_addr %l (0x80c2130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO3_INT_LATCHED_CLR"
      sgroup "GPIO3_INT_LATCHED_CLR (at 0xc214)"
        set &access:&cmd_addr %l (0x80c2140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO3_INT_EN_SET"
      sgroup "GPIO3_INT_EN_SET (at 0xc215)"
        set &access:&cmd_addr %l (0x80c2150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO3_INT_EN_CLR"
      sgroup "GPIO3_INT_EN_CLR (at 0xc216)"
        set &access:&cmd_addr %l (0x80c2160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO3_INT_LATCHED_STS"
      sgroup "GPIO3_INT_LATCHED_STS (at 0xc218)"
        set &access:&cmd_addr %l (0x80c2180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO3_INT_PENDING_STS"
      sgroup "GPIO3_INT_PENDING_STS (at 0xc219)"
        set &access:&cmd_addr %l (0x80c2190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO3_INT_MID_SEL"
      sgroup "GPIO3_INT_MID_SEL (at 0xc21a)"
        set &access:&cmd_addr %l (0x80c21a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc21a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO3_INT_PRIORITY"
      sgroup "GPIO3_INT_PRIORITY (at 0xc21b)"
        set &access:&cmd_addr %l (0x80c21b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc21b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO3_MODE_CTL"
      sgroup "GPIO3_MODE_CTL (at 0xc240)"
        set &access:&cmd_addr %l (0x80c2400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO3_DIG_VIN_CTL"
      sgroup "GPIO3_DIG_VIN_CTL (at 0xc241)"
        set &access:&cmd_addr %l (0x80c2410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO3_DIG_PULL_CTL"
      sgroup "GPIO3_DIG_PULL_CTL (at 0xc242)"
        set &access:&cmd_addr %l (0x80c2420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO3_DIG_IN_CTL"
      sgroup "GPIO3_DIG_IN_CTL (at 0xc243)"
        set &access:&cmd_addr %l (0x80c2430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO3_DIG_OUT_CTL"
      sgroup "GPIO3_DIG_OUT_CTL (at 0xc245)"
        set &access:&cmd_addr %l (0x80c2450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO3_EN_CTL"
      sgroup "GPIO3_EN_CTL (at 0xc246)"
        set &access:&cmd_addr %l (0x80c2460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO3_SEC_ACCESS"
      sgroup "GPIO3_SEC_ACCESS (at 0xc2d0)"
        set &access:&cmd_addr %l (0x80c2d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO3_PERPH_RESET_CTL1"
      sgroup "GPIO3_PERPH_RESET_CTL1 (at 0xc2d8)"
        set &access:&cmd_addr %l (0x80c2d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO3_PERPH_RESET_CTL2"
      sgroup "GPIO3_PERPH_RESET_CTL2 (at 0xc2d9)"
        set &access:&cmd_addr %l (0x80c2d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO3_PERPH_RESET_CTL3"
      sgroup "GPIO3_PERPH_RESET_CTL3 (at 0xc2da)"
        set &access:&cmd_addr %l (0x80c2da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO3_PERPH_RESET_CTL4"
      sgroup "GPIO3_PERPH_RESET_CTL4 (at 0xc2db)"
        set &access:&cmd_addr %l (0x80c2db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc2db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO4"
  tree "GPIO4"
    tree "GPIO4_REVISION1"
      sgroup "GPIO4_REVISION1 (at 0xc300)"
        set &access:&cmd_addr %l (0x80c3000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO4_REVISION2"
      sgroup "GPIO4_REVISION2 (at 0xc301)"
        set &access:&cmd_addr %l (0x80c3010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO4_REVISION3"
      sgroup "GPIO4_REVISION3 (at 0xc302)"
        set &access:&cmd_addr %l (0x80c3020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO4_REVISION4"
      sgroup "GPIO4_REVISION4 (at 0xc303)"
        set &access:&cmd_addr %l (0x80c3030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO4_PERPH_TYPE"
      sgroup "GPIO4_PERPH_TYPE (at 0xc304)"
        set &access:&cmd_addr %l (0x80c3040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO4_PERPH_SUBTYPE"
      sgroup "GPIO4_PERPH_SUBTYPE (at 0xc305)"
        set &access:&cmd_addr %l (0x80c3050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO4_STATUS1"
      sgroup "GPIO4_STATUS1 (at 0xc308)"
        set &access:&cmd_addr %l (0x80c3080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO4_INT_RT_STS"
      sgroup "GPIO4_INT_RT_STS (at 0xc310)"
        set &access:&cmd_addr %l (0x80c3100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO4_INT_SET_TYPE"
      sgroup "GPIO4_INT_SET_TYPE (at 0xc311)"
        set &access:&cmd_addr %l (0x80c3110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO4_INT_POLARITY_HIGH"
      sgroup "GPIO4_INT_POLARITY_HIGH (at 0xc312)"
        set &access:&cmd_addr %l (0x80c3120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO4_INT_POLARITY_LOW"
      sgroup "GPIO4_INT_POLARITY_LOW (at 0xc313)"
        set &access:&cmd_addr %l (0x80c3130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO4_INT_LATCHED_CLR"
      sgroup "GPIO4_INT_LATCHED_CLR (at 0xc314)"
        set &access:&cmd_addr %l (0x80c3140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO4_INT_EN_SET"
      sgroup "GPIO4_INT_EN_SET (at 0xc315)"
        set &access:&cmd_addr %l (0x80c3150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO4_INT_EN_CLR"
      sgroup "GPIO4_INT_EN_CLR (at 0xc316)"
        set &access:&cmd_addr %l (0x80c3160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO4_INT_LATCHED_STS"
      sgroup "GPIO4_INT_LATCHED_STS (at 0xc318)"
        set &access:&cmd_addr %l (0x80c3180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO4_INT_PENDING_STS"
      sgroup "GPIO4_INT_PENDING_STS (at 0xc319)"
        set &access:&cmd_addr %l (0x80c3190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO4_INT_MID_SEL"
      sgroup "GPIO4_INT_MID_SEL (at 0xc31a)"
        set &access:&cmd_addr %l (0x80c31a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc31a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO4_INT_PRIORITY"
      sgroup "GPIO4_INT_PRIORITY (at 0xc31b)"
        set &access:&cmd_addr %l (0x80c31b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc31b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO4_MODE_CTL"
      sgroup "GPIO4_MODE_CTL (at 0xc340)"
        set &access:&cmd_addr %l (0x80c3400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO4_DIG_VIN_CTL"
      sgroup "GPIO4_DIG_VIN_CTL (at 0xc341)"
        set &access:&cmd_addr %l (0x80c3410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO4_DIG_PULL_CTL"
      sgroup "GPIO4_DIG_PULL_CTL (at 0xc342)"
        set &access:&cmd_addr %l (0x80c3420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO4_DIG_IN_CTL"
      sgroup "GPIO4_DIG_IN_CTL (at 0xc343)"
        set &access:&cmd_addr %l (0x80c3430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO4_DIG_OUT_CTL"
      sgroup "GPIO4_DIG_OUT_CTL (at 0xc345)"
        set &access:&cmd_addr %l (0x80c3450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO4_EN_CTL"
      sgroup "GPIO4_EN_CTL (at 0xc346)"
        set &access:&cmd_addr %l (0x80c3460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO4_SEC_ACCESS"
      sgroup "GPIO4_SEC_ACCESS (at 0xc3d0)"
        set &access:&cmd_addr %l (0x80c3d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO4_PERPH_RESET_CTL1"
      sgroup "GPIO4_PERPH_RESET_CTL1 (at 0xc3d8)"
        set &access:&cmd_addr %l (0x80c3d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO4_PERPH_RESET_CTL2"
      sgroup "GPIO4_PERPH_RESET_CTL2 (at 0xc3d9)"
        set &access:&cmd_addr %l (0x80c3d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO4_PERPH_RESET_CTL3"
      sgroup "GPIO4_PERPH_RESET_CTL3 (at 0xc3da)"
        set &access:&cmd_addr %l (0x80c3da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO4_PERPH_RESET_CTL4"
      sgroup "GPIO4_PERPH_RESET_CTL4 (at 0xc3db)"
        set &access:&cmd_addr %l (0x80c3db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc3db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO5"
  tree "GPIO5"
    tree "GPIO5_REVISION1"
      sgroup "GPIO5_REVISION1 (at 0xc400)"
        set &access:&cmd_addr %l (0x80c4000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO5_REVISION2"
      sgroup "GPIO5_REVISION2 (at 0xc401)"
        set &access:&cmd_addr %l (0x80c4010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO5_REVISION3"
      sgroup "GPIO5_REVISION3 (at 0xc402)"
        set &access:&cmd_addr %l (0x80c4020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO5_REVISION4"
      sgroup "GPIO5_REVISION4 (at 0xc403)"
        set &access:&cmd_addr %l (0x80c4030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO5_PERPH_TYPE"
      sgroup "GPIO5_PERPH_TYPE (at 0xc404)"
        set &access:&cmd_addr %l (0x80c4040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO5_PERPH_SUBTYPE"
      sgroup "GPIO5_PERPH_SUBTYPE (at 0xc405)"
        set &access:&cmd_addr %l (0x80c4050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO5_STATUS1"
      sgroup "GPIO5_STATUS1 (at 0xc408)"
        set &access:&cmd_addr %l (0x80c4080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO5_INT_RT_STS"
      sgroup "GPIO5_INT_RT_STS (at 0xc410)"
        set &access:&cmd_addr %l (0x80c4100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO5_INT_SET_TYPE"
      sgroup "GPIO5_INT_SET_TYPE (at 0xc411)"
        set &access:&cmd_addr %l (0x80c4110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO5_INT_POLARITY_HIGH"
      sgroup "GPIO5_INT_POLARITY_HIGH (at 0xc412)"
        set &access:&cmd_addr %l (0x80c4120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO5_INT_POLARITY_LOW"
      sgroup "GPIO5_INT_POLARITY_LOW (at 0xc413)"
        set &access:&cmd_addr %l (0x80c4130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO5_INT_LATCHED_CLR"
      sgroup "GPIO5_INT_LATCHED_CLR (at 0xc414)"
        set &access:&cmd_addr %l (0x80c4140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO5_INT_EN_SET"
      sgroup "GPIO5_INT_EN_SET (at 0xc415)"
        set &access:&cmd_addr %l (0x80c4150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO5_INT_EN_CLR"
      sgroup "GPIO5_INT_EN_CLR (at 0xc416)"
        set &access:&cmd_addr %l (0x80c4160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO5_INT_LATCHED_STS"
      sgroup "GPIO5_INT_LATCHED_STS (at 0xc418)"
        set &access:&cmd_addr %l (0x80c4180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO5_INT_PENDING_STS"
      sgroup "GPIO5_INT_PENDING_STS (at 0xc419)"
        set &access:&cmd_addr %l (0x80c4190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO5_INT_MID_SEL"
      sgroup "GPIO5_INT_MID_SEL (at 0xc41a)"
        set &access:&cmd_addr %l (0x80c41a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc41a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO5_INT_PRIORITY"
      sgroup "GPIO5_INT_PRIORITY (at 0xc41b)"
        set &access:&cmd_addr %l (0x80c41b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc41b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO5_MODE_CTL"
      sgroup "GPIO5_MODE_CTL (at 0xc440)"
        set &access:&cmd_addr %l (0x80c4400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO5_DIG_VIN_CTL"
      sgroup "GPIO5_DIG_VIN_CTL (at 0xc441)"
        set &access:&cmd_addr %l (0x80c4410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO5_DIG_PULL_CTL"
      sgroup "GPIO5_DIG_PULL_CTL (at 0xc442)"
        set &access:&cmd_addr %l (0x80c4420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO5_DIG_IN_CTL"
      sgroup "GPIO5_DIG_IN_CTL (at 0xc443)"
        set &access:&cmd_addr %l (0x80c4430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO5_DIG_OUT_CTL"
      sgroup "GPIO5_DIG_OUT_CTL (at 0xc445)"
        set &access:&cmd_addr %l (0x80c4450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO5_EN_CTL"
      sgroup "GPIO5_EN_CTL (at 0xc446)"
        set &access:&cmd_addr %l (0x80c4460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO5_SEC_ACCESS"
      sgroup "GPIO5_SEC_ACCESS (at 0xc4d0)"
        set &access:&cmd_addr %l (0x80c4d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO5_PERPH_RESET_CTL1"
      sgroup "GPIO5_PERPH_RESET_CTL1 (at 0xc4d8)"
        set &access:&cmd_addr %l (0x80c4d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO5_PERPH_RESET_CTL2"
      sgroup "GPIO5_PERPH_RESET_CTL2 (at 0xc4d9)"
        set &access:&cmd_addr %l (0x80c4d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO5_PERPH_RESET_CTL3"
      sgroup "GPIO5_PERPH_RESET_CTL3 (at 0xc4da)"
        set &access:&cmd_addr %l (0x80c4da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO5_PERPH_RESET_CTL4"
      sgroup "GPIO5_PERPH_RESET_CTL4 (at 0xc4db)"
        set &access:&cmd_addr %l (0x80c4db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc4db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO6"
  tree "GPIO6"
    tree "GPIO6_REVISION1"
      sgroup "GPIO6_REVISION1 (at 0xc500)"
        set &access:&cmd_addr %l (0x80c5000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO6_REVISION2"
      sgroup "GPIO6_REVISION2 (at 0xc501)"
        set &access:&cmd_addr %l (0x80c5010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO6_REVISION3"
      sgroup "GPIO6_REVISION3 (at 0xc502)"
        set &access:&cmd_addr %l (0x80c5020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO6_REVISION4"
      sgroup "GPIO6_REVISION4 (at 0xc503)"
        set &access:&cmd_addr %l (0x80c5030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO6_PERPH_TYPE"
      sgroup "GPIO6_PERPH_TYPE (at 0xc504)"
        set &access:&cmd_addr %l (0x80c5040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO6_PERPH_SUBTYPE"
      sgroup "GPIO6_PERPH_SUBTYPE (at 0xc505)"
        set &access:&cmd_addr %l (0x80c5050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO6_STATUS1"
      sgroup "GPIO6_STATUS1 (at 0xc508)"
        set &access:&cmd_addr %l (0x80c5080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO6_INT_RT_STS"
      sgroup "GPIO6_INT_RT_STS (at 0xc510)"
        set &access:&cmd_addr %l (0x80c5100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO6_INT_SET_TYPE"
      sgroup "GPIO6_INT_SET_TYPE (at 0xc511)"
        set &access:&cmd_addr %l (0x80c5110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO6_INT_POLARITY_HIGH"
      sgroup "GPIO6_INT_POLARITY_HIGH (at 0xc512)"
        set &access:&cmd_addr %l (0x80c5120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO6_INT_POLARITY_LOW"
      sgroup "GPIO6_INT_POLARITY_LOW (at 0xc513)"
        set &access:&cmd_addr %l (0x80c5130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO6_INT_LATCHED_CLR"
      sgroup "GPIO6_INT_LATCHED_CLR (at 0xc514)"
        set &access:&cmd_addr %l (0x80c5140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO6_INT_EN_SET"
      sgroup "GPIO6_INT_EN_SET (at 0xc515)"
        set &access:&cmd_addr %l (0x80c5150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO6_INT_EN_CLR"
      sgroup "GPIO6_INT_EN_CLR (at 0xc516)"
        set &access:&cmd_addr %l (0x80c5160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO6_INT_LATCHED_STS"
      sgroup "GPIO6_INT_LATCHED_STS (at 0xc518)"
        set &access:&cmd_addr %l (0x80c5180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO6_INT_PENDING_STS"
      sgroup "GPIO6_INT_PENDING_STS (at 0xc519)"
        set &access:&cmd_addr %l (0x80c5190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO6_INT_MID_SEL"
      sgroup "GPIO6_INT_MID_SEL (at 0xc51a)"
        set &access:&cmd_addr %l (0x80c51a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc51a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO6_INT_PRIORITY"
      sgroup "GPIO6_INT_PRIORITY (at 0xc51b)"
        set &access:&cmd_addr %l (0x80c51b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc51b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO6_MODE_CTL"
      sgroup "GPIO6_MODE_CTL (at 0xc540)"
        set &access:&cmd_addr %l (0x80c5400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO6_DIG_VIN_CTL"
      sgroup "GPIO6_DIG_VIN_CTL (at 0xc541)"
        set &access:&cmd_addr %l (0x80c5410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO6_DIG_PULL_CTL"
      sgroup "GPIO6_DIG_PULL_CTL (at 0xc542)"
        set &access:&cmd_addr %l (0x80c5420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO6_DIG_IN_CTL"
      sgroup "GPIO6_DIG_IN_CTL (at 0xc543)"
        set &access:&cmd_addr %l (0x80c5430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO6_DIG_OUT_CTL"
      sgroup "GPIO6_DIG_OUT_CTL (at 0xc545)"
        set &access:&cmd_addr %l (0x80c5450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO6_EN_CTL"
      sgroup "GPIO6_EN_CTL (at 0xc546)"
        set &access:&cmd_addr %l (0x80c5460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO6_SEC_ACCESS"
      sgroup "GPIO6_SEC_ACCESS (at 0xc5d0)"
        set &access:&cmd_addr %l (0x80c5d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO6_PERPH_RESET_CTL1"
      sgroup "GPIO6_PERPH_RESET_CTL1 (at 0xc5d8)"
        set &access:&cmd_addr %l (0x80c5d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO6_PERPH_RESET_CTL2"
      sgroup "GPIO6_PERPH_RESET_CTL2 (at 0xc5d9)"
        set &access:&cmd_addr %l (0x80c5d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO6_PERPH_RESET_CTL3"
      sgroup "GPIO6_PERPH_RESET_CTL3 (at 0xc5da)"
        set &access:&cmd_addr %l (0x80c5da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO6_PERPH_RESET_CTL4"
      sgroup "GPIO6_PERPH_RESET_CTL4 (at 0xc5db)"
        set &access:&cmd_addr %l (0x80c5db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc5db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO7"
  tree "GPIO7"
    tree "GPIO7_REVISION1"
      sgroup "GPIO7_REVISION1 (at 0xc600)"
        set &access:&cmd_addr %l (0x80c6000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO7_REVISION2"
      sgroup "GPIO7_REVISION2 (at 0xc601)"
        set &access:&cmd_addr %l (0x80c6010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO7_REVISION3"
      sgroup "GPIO7_REVISION3 (at 0xc602)"
        set &access:&cmd_addr %l (0x80c6020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO7_REVISION4"
      sgroup "GPIO7_REVISION4 (at 0xc603)"
        set &access:&cmd_addr %l (0x80c6030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO7_PERPH_TYPE"
      sgroup "GPIO7_PERPH_TYPE (at 0xc604)"
        set &access:&cmd_addr %l (0x80c6040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO7_PERPH_SUBTYPE"
      sgroup "GPIO7_PERPH_SUBTYPE (at 0xc605)"
        set &access:&cmd_addr %l (0x80c6050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO7_STATUS1"
      sgroup "GPIO7_STATUS1 (at 0xc608)"
        set &access:&cmd_addr %l (0x80c6080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO7_INT_RT_STS"
      sgroup "GPIO7_INT_RT_STS (at 0xc610)"
        set &access:&cmd_addr %l (0x80c6100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO7_INT_SET_TYPE"
      sgroup "GPIO7_INT_SET_TYPE (at 0xc611)"
        set &access:&cmd_addr %l (0x80c6110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO7_INT_POLARITY_HIGH"
      sgroup "GPIO7_INT_POLARITY_HIGH (at 0xc612)"
        set &access:&cmd_addr %l (0x80c6120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO7_INT_POLARITY_LOW"
      sgroup "GPIO7_INT_POLARITY_LOW (at 0xc613)"
        set &access:&cmd_addr %l (0x80c6130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO7_INT_LATCHED_CLR"
      sgroup "GPIO7_INT_LATCHED_CLR (at 0xc614)"
        set &access:&cmd_addr %l (0x80c6140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO7_INT_EN_SET"
      sgroup "GPIO7_INT_EN_SET (at 0xc615)"
        set &access:&cmd_addr %l (0x80c6150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO7_INT_EN_CLR"
      sgroup "GPIO7_INT_EN_CLR (at 0xc616)"
        set &access:&cmd_addr %l (0x80c6160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO7_INT_LATCHED_STS"
      sgroup "GPIO7_INT_LATCHED_STS (at 0xc618)"
        set &access:&cmd_addr %l (0x80c6180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO7_INT_PENDING_STS"
      sgroup "GPIO7_INT_PENDING_STS (at 0xc619)"
        set &access:&cmd_addr %l (0x80c6190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO7_INT_MID_SEL"
      sgroup "GPIO7_INT_MID_SEL (at 0xc61a)"
        set &access:&cmd_addr %l (0x80c61a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc61a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO7_INT_PRIORITY"
      sgroup "GPIO7_INT_PRIORITY (at 0xc61b)"
        set &access:&cmd_addr %l (0x80c61b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc61b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO7_MODE_CTL"
      sgroup "GPIO7_MODE_CTL (at 0xc640)"
        set &access:&cmd_addr %l (0x80c6400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO7_DIG_VIN_CTL"
      sgroup "GPIO7_DIG_VIN_CTL (at 0xc641)"
        set &access:&cmd_addr %l (0x80c6410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO7_DIG_PULL_CTL"
      sgroup "GPIO7_DIG_PULL_CTL (at 0xc642)"
        set &access:&cmd_addr %l (0x80c6420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO7_DIG_IN_CTL"
      sgroup "GPIO7_DIG_IN_CTL (at 0xc643)"
        set &access:&cmd_addr %l (0x80c6430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO7_DIG_OUT_CTL"
      sgroup "GPIO7_DIG_OUT_CTL (at 0xc645)"
        set &access:&cmd_addr %l (0x80c6450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO7_EN_CTL"
      sgroup "GPIO7_EN_CTL (at 0xc646)"
        set &access:&cmd_addr %l (0x80c6460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO7_SEC_ACCESS"
      sgroup "GPIO7_SEC_ACCESS (at 0xc6d0)"
        set &access:&cmd_addr %l (0x80c6d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO7_PERPH_RESET_CTL1"
      sgroup "GPIO7_PERPH_RESET_CTL1 (at 0xc6d8)"
        set &access:&cmd_addr %l (0x80c6d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO7_PERPH_RESET_CTL2"
      sgroup "GPIO7_PERPH_RESET_CTL2 (at 0xc6d9)"
        set &access:&cmd_addr %l (0x80c6d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO7_PERPH_RESET_CTL3"
      sgroup "GPIO7_PERPH_RESET_CTL3 (at 0xc6da)"
        set &access:&cmd_addr %l (0x80c6da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO7_PERPH_RESET_CTL4"
      sgroup "GPIO7_PERPH_RESET_CTL4 (at 0xc6db)"
        set &access:&cmd_addr %l (0x80c6db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc6db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO8"
  tree "GPIO8"
    tree "GPIO8_REVISION1"
      sgroup "GPIO8_REVISION1 (at 0xc700)"
        set &access:&cmd_addr %l (0x80c7000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO8_REVISION2"
      sgroup "GPIO8_REVISION2 (at 0xc701)"
        set &access:&cmd_addr %l (0x80c7010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO8_REVISION3"
      sgroup "GPIO8_REVISION3 (at 0xc702)"
        set &access:&cmd_addr %l (0x80c7020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO8_REVISION4"
      sgroup "GPIO8_REVISION4 (at 0xc703)"
        set &access:&cmd_addr %l (0x80c7030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO8_PERPH_TYPE"
      sgroup "GPIO8_PERPH_TYPE (at 0xc704)"
        set &access:&cmd_addr %l (0x80c7040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO8_PERPH_SUBTYPE"
      sgroup "GPIO8_PERPH_SUBTYPE (at 0xc705)"
        set &access:&cmd_addr %l (0x80c7050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO8_STATUS1"
      sgroup "GPIO8_STATUS1 (at 0xc708)"
        set &access:&cmd_addr %l (0x80c7080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO8_INT_RT_STS"
      sgroup "GPIO8_INT_RT_STS (at 0xc710)"
        set &access:&cmd_addr %l (0x80c7100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO8_INT_SET_TYPE"
      sgroup "GPIO8_INT_SET_TYPE (at 0xc711)"
        set &access:&cmd_addr %l (0x80c7110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO8_INT_POLARITY_HIGH"
      sgroup "GPIO8_INT_POLARITY_HIGH (at 0xc712)"
        set &access:&cmd_addr %l (0x80c7120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO8_INT_POLARITY_LOW"
      sgroup "GPIO8_INT_POLARITY_LOW (at 0xc713)"
        set &access:&cmd_addr %l (0x80c7130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO8_INT_LATCHED_CLR"
      sgroup "GPIO8_INT_LATCHED_CLR (at 0xc714)"
        set &access:&cmd_addr %l (0x80c7140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO8_INT_EN_SET"
      sgroup "GPIO8_INT_EN_SET (at 0xc715)"
        set &access:&cmd_addr %l (0x80c7150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO8_INT_EN_CLR"
      sgroup "GPIO8_INT_EN_CLR (at 0xc716)"
        set &access:&cmd_addr %l (0x80c7160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO8_INT_LATCHED_STS"
      sgroup "GPIO8_INT_LATCHED_STS (at 0xc718)"
        set &access:&cmd_addr %l (0x80c7180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO8_INT_PENDING_STS"
      sgroup "GPIO8_INT_PENDING_STS (at 0xc719)"
        set &access:&cmd_addr %l (0x80c7190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO8_INT_MID_SEL"
      sgroup "GPIO8_INT_MID_SEL (at 0xc71a)"
        set &access:&cmd_addr %l (0x80c71a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc71a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO8_INT_PRIORITY"
      sgroup "GPIO8_INT_PRIORITY (at 0xc71b)"
        set &access:&cmd_addr %l (0x80c71b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc71b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO8_MODE_CTL"
      sgroup "GPIO8_MODE_CTL (at 0xc740)"
        set &access:&cmd_addr %l (0x80c7400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO8_DIG_VIN_CTL"
      sgroup "GPIO8_DIG_VIN_CTL (at 0xc741)"
        set &access:&cmd_addr %l (0x80c7410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO8_DIG_PULL_CTL"
      sgroup "GPIO8_DIG_PULL_CTL (at 0xc742)"
        set &access:&cmd_addr %l (0x80c7420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO8_DIG_IN_CTL"
      sgroup "GPIO8_DIG_IN_CTL (at 0xc743)"
        set &access:&cmd_addr %l (0x80c7430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO8_DIG_OUT_CTL"
      sgroup "GPIO8_DIG_OUT_CTL (at 0xc745)"
        set &access:&cmd_addr %l (0x80c7450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO8_EN_CTL"
      sgroup "GPIO8_EN_CTL (at 0xc746)"
        set &access:&cmd_addr %l (0x80c7460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO8_SEC_ACCESS"
      sgroup "GPIO8_SEC_ACCESS (at 0xc7d0)"
        set &access:&cmd_addr %l (0x80c7d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO8_PERPH_RESET_CTL1"
      sgroup "GPIO8_PERPH_RESET_CTL1 (at 0xc7d8)"
        set &access:&cmd_addr %l (0x80c7d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO8_PERPH_RESET_CTL2"
      sgroup "GPIO8_PERPH_RESET_CTL2 (at 0xc7d9)"
        set &access:&cmd_addr %l (0x80c7d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO8_PERPH_RESET_CTL3"
      sgroup "GPIO8_PERPH_RESET_CTL3 (at 0xc7da)"
        set &access:&cmd_addr %l (0x80c7da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO8_PERPH_RESET_CTL4"
      sgroup "GPIO8_PERPH_RESET_CTL4 (at 0xc7db)"
        set &access:&cmd_addr %l (0x80c7db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc7db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "GPIO9"
  tree "GPIO9"
    tree "GPIO9_REVISION1"
      sgroup "GPIO9_REVISION1 (at 0xc800)"
        set &access:&cmd_addr %l (0x80c8000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "GPIO9_REVISION2"
      sgroup "GPIO9_REVISION2 (at 0xc801)"
        set &access:&cmd_addr %l (0x80c8010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "GPIO9_REVISION3"
      sgroup "GPIO9_REVISION3 (at 0xc802)"
        set &access:&cmd_addr %l (0x80c8020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "GPIO9_REVISION4"
      sgroup "GPIO9_REVISION4 (at 0xc803)"
        set &access:&cmd_addr %l (0x80c8030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "GPIO9_PERPH_TYPE"
      sgroup "GPIO9_PERPH_TYPE (at 0xc804)"
        set &access:&cmd_addr %l (0x80c8040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "GPIO9_PERPH_SUBTYPE"
      sgroup "GPIO9_PERPH_SUBTYPE (at 0xc805)"
        set &access:&cmd_addr %l (0x80c8050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "GPIO9_STATUS1"
      sgroup "GPIO9_STATUS1 (at 0xc808)"
        set &access:&cmd_addr %l (0x80c8080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GPIO_OK                                  = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_VAL                                 = " "0 (GPIO_INPUT_LOW),1 (GPIO_INPUT_HIGH)"
    tree.end
    tree "GPIO9_INT_RT_STS"
      sgroup "GPIO9_INT_RT_STS (at 0xc810)"
        set &access:&cmd_addr %l (0x80c8100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_STS                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "GPIO9_INT_SET_TYPE"
      sgroup "GPIO9_INT_SET_TYPE (at 0xc811)"
        set &access:&cmd_addr %l (0x80c8110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "GPIO9_INT_POLARITY_HIGH"
      sgroup "GPIO9_INT_POLARITY_HIGH (at 0xc812)"
        set &access:&cmd_addr %l (0x80c8120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO9_INT_POLARITY_LOW"
      sgroup "GPIO9_INT_POLARITY_LOW (at 0xc813)"
        set &access:&cmd_addr %l (0x80c8130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "GPIO9_INT_LATCHED_CLR"
      sgroup "GPIO9_INT_LATCHED_CLR (at 0xc814)"
        set &access:&cmd_addr %l (0x80c8140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "GPIO9_INT_EN_SET"
      sgroup "GPIO9_INT_EN_SET (at 0xc815)"
        set &access:&cmd_addr %l (0x80c8150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO9_INT_EN_CLR"
      sgroup "GPIO9_INT_EN_CLR (at 0xc816)"
        set &access:&cmd_addr %l (0x80c8160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "GPIO9_INT_LATCHED_STS"
      sgroup "GPIO9_INT_LATCHED_STS (at 0xc818)"
        set &access:&cmd_addr %l (0x80c8180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "GPIO9_INT_PENDING_STS"
      sgroup "GPIO9_INT_PENDING_STS (at 0xc819)"
        set &access:&cmd_addr %l (0x80c8190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPIO_IN_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "GPIO9_INT_MID_SEL"
      sgroup "GPIO9_INT_MID_SEL (at 0xc81a)"
        set &access:&cmd_addr %l (0x80c81a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc81a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "GPIO9_INT_PRIORITY"
      sgroup "GPIO9_INT_PRIORITY (at 0xc81b)"
        set &access:&cmd_addr %l (0x80c81b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc81b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "GPIO9_MODE_CTL"
      sgroup "GPIO9_MODE_CTL (at 0xc840)"
        set &access:&cmd_addr %l (0x80c8400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (RESERVED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "GPIO9_DIG_VIN_CTL"
      sgroup "GPIO9_DIG_VIN_CTL (at 0xc841)"
        set &access:&cmd_addr %l (0x80c8410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (VIN4),5 (VIN5),6 (VIN6),7 (VIN7)"
    tree.end
    tree "GPIO9_DIG_PULL_CTL"
      sgroup "GPIO9_DIG_PULL_CTL (at 0xc842)"
        set &access:&cmd_addr %l (0x80c8420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (PULLUP_30UA),1 (PULLUP_1P5UA),2 (PULLUP_31P5UA),3 (PULLUP_1P5UA_30UA_BOOST),4 (PULLDOWN_10UA),5 (NO_PULL),6 (RESERVED),7 (reserved)"
    tree.end
    tree "GPIO9_DIG_IN_CTL"
      sgroup "GPIO9_DIG_IN_CTL (at 0xc843)"
        set &access:&cmd_addr %l (0x80c8430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "GPIO9_DIG_OUT_CTL"
      sgroup "GPIO9_DIG_OUT_CTL (at 0xc845)"
        set &access:&cmd_addr %l (0x80c8450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OUTPUT_TYPE                              = " "0 (CMOS),1 (OPEN_HIGH),2 (OPEN_LOW),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OUTPUT_DRV_SEL                           = " "0 (RESERVED),1 (LOW),2 (MED),3 (HIGH)"
    tree.end
    tree "GPIO9_EN_CTL"
      sgroup "GPIO9_EN_CTL (at 0xc846)"
        set &access:&cmd_addr %l (0x80c8460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (GPIO_DISABLED),1 (GPIO_ENABLED)"
    tree.end
    tree "GPIO9_SEC_ACCESS"
      sgroup "GPIO9_SEC_ACCESS (at 0xc8d0)"
        set &access:&cmd_addr %l (0x80c8d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "GPIO9_PERPH_RESET_CTL1"
      sgroup "GPIO9_PERPH_RESET_CTL1 (at 0xc8d8)"
        set &access:&cmd_addr %l (0x80c8d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "GPIO9_PERPH_RESET_CTL2"
      sgroup "GPIO9_PERPH_RESET_CTL2 (at 0xc8d9)"
        set &access:&cmd_addr %l (0x80c8d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO9_PERPH_RESET_CTL3"
      sgroup "GPIO9_PERPH_RESET_CTL3 (at 0xc8da)"
        set &access:&cmd_addr %l (0x80c8da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "GPIO9_PERPH_RESET_CTL4"
      sgroup "GPIO9_PERPH_RESET_CTL4 (at 0xc8db)"
        set &access:&cmd_addr %l (0x80c8db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc8db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "HAPTICS"
  tree "HAPTICS"
    tree "HAPTICS_REVISION1"
      sgroup "HAPTICS_REVISION1 (at 0x1c000)"
        set &access:&cmd_addr %l (0x80c0000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "HAPTICS_REVISION2"
      sgroup "HAPTICS_REVISION2 (at 0x1c001)"
        set &access:&cmd_addr %l (0x80c0010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "HAPTICS_REVISION3"
      sgroup "HAPTICS_REVISION3 (at 0x1c002)"
        set &access:&cmd_addr %l (0x80c0020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "HAPTICS_REVISION4"
      sgroup "HAPTICS_REVISION4 (at 0x1c003)"
        set &access:&cmd_addr %l (0x80c0030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "HAPTICS_PERPH_TYPE"
      sgroup "HAPTICS_PERPH_TYPE (at 0x1c004)"
        set &access:&cmd_addr %l (0x80c0040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "HAPTICS_PERPH_SUBTYPE"
      sgroup "HAPTICS_PERPH_SUBTYPE (at 0x1c005)"
        set &access:&cmd_addr %l (0x80c0050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "HAPTICS_STATUS_1"
      sgroup "HAPTICS_STATUS_1 (at 0x1c00a)"
        set &access:&cmd_addr %l (0x80c00a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc00a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_STS                                   = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   AUTO_RES_ERROR                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SC_FLAG                                  = " "0 (NO_SC),1 (SC_DET)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OC_FLAG                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   BUSY                                     = " "0 (IDLE),1 (BUSY)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PLAY_STS                                 = " "0, 1"
    tree.end
    tree "HAPTICS_LRA_AUTO_RES_LO"
      sgroup "HAPTICS_LRA_AUTO_RES_LO (at 0x1c00b)"
        set &access:&cmd_addr %l (0x80c00b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc00b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PERIOD                                   = "
    tree.end
    tree "HAPTICS_LRA_AUTO_RES_HI"
      sgroup "HAPTICS_LRA_AUTO_RES_HI (at 0x1c00c)"
        set &access:&cmd_addr %l (0x80c00c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc00c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PERIOD                                   = "
    tree.end
    tree "HAPTICS_INT_RT_STS"
      sgroup "HAPTICS_INT_RT_STS (at 0x1c010)"
        set &access:&cmd_addr %l (0x80c0100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_RT_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_RT_STS                            = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "HAPTICS_INT_SET_TYPE"
      sgroup "HAPTICS_INT_SET_TYPE (at 0x1c011)"
        set &access:&cmd_addr %l (0x80c0110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_SET_TYPE                        = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_SET_TYPE                          = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "HAPTICS_INT_POLARITY_HIGH"
      sgroup "HAPTICS_INT_POLARITY_HIGH (at 0x1c012)"
        set &access:&cmd_addr %l (0x80c0120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_POLARITY_HIGH                   = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_POLARITY_HIGH                     = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "HAPTICS_INT_POLARITY_LOW"
      sgroup "HAPTICS_INT_POLARITY_LOW (at 0x1c013)"
        set &access:&cmd_addr %l (0x80c0130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_POLARITY_LOW                    = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_POLARITY_LOW                      = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "HAPTICS_INT_LATCHED_CLR"
      sgroup "HAPTICS_INT_LATCHED_CLR (at 0x1c014)"
        set &access:&cmd_addr %l (0x80c0140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_LATCHED_CLR                     = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_LATCHED_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "HAPTICS_INT_EN_SET"
      sgroup "HAPTICS_INT_EN_SET (at 0x1c015)"
        set &access:&cmd_addr %l (0x80c0150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_EN_SET                          = " "0 (reserved),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_EN_SET                            = " "0 (reserved),1 (INT_ENABLED)"
    tree.end
    tree "HAPTICS_INT_EN_CLR"
      sgroup "HAPTICS_INT_EN_CLR (at 0x1c016)"
        set &access:&cmd_addr %l (0x80c0160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_EN_CLR                          = " "0 (reserved),1 (INT_DISABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_EN_CLR                            = " "0 (reserved),1 (INT_DISABLED)"
    tree.end
    tree "HAPTICS_INT_LATCHED_STS"
      sgroup "HAPTICS_INT_LATCHED_STS (at 0x1c018)"
        set &access:&cmd_addr %l (0x80c0180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "HAPTICS_INT_PENDING_STS"
      sgroup "HAPTICS_INT_PENDING_STS (at 0x1c019)"
        set &access:&cmd_addr %l (0x80c0190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_PENDING_STS                     = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "HAPTICS_INT_MID_SEL"
      sgroup "HAPTICS_INT_MID_SEL (at 0x1c01a)"
        set &access:&cmd_addr %l (0x80c01a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc01a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "HAPTICS_INT_PRIORITY"
      sgroup "HAPTICS_INT_PRIORITY (at 0x1c01b)"
        set &access:&cmd_addr %l (0x80c01b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc01b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "HAPTICS_EN_CTL1"
      sgroup "HAPTICS_EN_CTL1 (at 0x1c046)"
        set &access:&cmd_addr %l (0x80c0460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   HAPTICS_EN                               = " "0 (HAPTICS_DIS),1 (HAPTICS_EN)"
    tree.end
    tree "HAPTICS_EN_CTL2"
      sgroup "HAPTICS_EN_CTL2 (at 0x1c048)"
        set &access:&cmd_addr %l (0x80c0480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DERATE_OTST2_EN                          = " "0 (DERATE_OTST2_DIS),1 (DERATE_OTST2_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DERATE_HIGH_IBAT_EN                      = " "0 (DERATE_HIGH_IBAT_DIS),1 (DERATE_HIGH_IBAT_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DERATE_HIGH_TEMP_EN                      = " "0 (DERATE_HIGH_TEMP_DIS),1 (DERATE_HIGH_TEMP_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DERATE_LOW_VBAT_EN                       = " "0 (DERATE_LOW_VBAT_DIS),1 (DERATE_LOW_VBAT_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   BRAKE_EN                                 = " "0 (BRAKING_DIS),1 (BRAKING_EN)"
    tree.end
    tree "HAPTICS_EN_CTL3"
      sgroup "HAPTICS_EN_CTL3 (at 0x1c04a)"
        set &access:&cmd_addr %l (0x80c04a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc04a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   HBRIDGE_EN                               = " "0 (HIGH_Z),1 (HBRIDGE_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PWM_SIGNAL_EN                            = " "0 (PWM_ZERO),1 (PWM_SIGNAL_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILIM_EN                                  = " "0 (ILIM_DIS),1 (ILIM_EN)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ILIM_CC_EN                               = " "0 (CC_EN),1 (CC_DIS)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   AUTO_RES_RBIAS_EN                        = " "0 (RBIAS_DIS),1 (RBIAS_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DAC_EN                                   = " "0 (DAC_DIS),1 (DAC_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ZX_HYST_EN                               = " "0 (ZX_HYST_DIS),1 (ZX_HYST_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_CTL_EN                               = " "0 (PWM_DIS),1 (PWM_CTL_EN)"
    tree.end
    tree "HAPTICS_CFG1"
      sgroup "HAPTICS_CFG1 (at 0x1c04c)"
        set &access:&cmd_addr %l (0x80c04c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc04c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ACTUATOR_TYPE                            = " "0 (LRA),1 (ERM)"
    tree.end
    tree "HAPTICS_CFG2"
      sgroup "HAPTICS_CFG2 (at 0x1c04d)"
        set &access:&cmd_addr %l (0x80c04d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc04d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LRA_RES_TYPE                             = " "0 (SINUSOID),1 (SQUARE)"
    tree.end
    tree "HAPTICS_SEL"
      sgroup "HAPTICS_SEL (at 0x1c04e)"
        set &access:&cmd_addr %l (0x80c04e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc04e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   WF_SOURCE                                = " "0 (VMAX),1 (BUFFER),2 (AUDIO),3 (EXT_PWM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TRIGGER                                  = " "0 (HAPTICS_PLAY),1 (LINE_IN)"
    tree.end
    tree "HAPTICS_AUTO_RES_CFG"
      sgroup "HAPTICS_AUTO_RES_CFG (at 0x1c04f)"
        set &access:&cmd_addr %l (0x80c04f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc04f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   LRA_AUTO_RES_MODE                        = " "0 (NO_AUTO_RES),1 (ZXD),2 (QWD),3 (MAX_QWD),4 (ZXD_EOP),5 (reserved),6 (reserved),7 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   LRA_HIGH_Z                               = " "0 (NO_HIGHZ),1 (HIGHZ_OPT1),2 (HIGHZ_OPT2),3 (HIGHZ_OPT3)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LRA_RES_CALIB                            = " "0 (FOUR_PERIODS),1 (EIGHT_PERIODS),2 (SIXTEEN_PERIODS),3 (THIRTYTWO_PERIODS)"
    tree.end
    tree "HAPTICS_SLEW_CFG"
      sgroup "HAPTICS_SLEW_CFG (at 0x1c050)"
        set &access:&cmd_addr %l (0x80c0500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SLEW_RATE                                = " "0 (SLEW_6NS),1 (SLEW_16NS)"
    tree.end
    tree "HAPTICS_VMAX_CFG"
      sgroup "HAPTICS_VMAX_CFG (at 0x1c051)"
        set &access:&cmd_addr %l (0x80c0510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   VMAX                                     = "
    tree.end
    tree "HAPTICS_ILIM_CFG"
      sgroup "HAPTICS_ILIM_CFG (at 0x1c052)"
        set &access:&cmd_addr %l (0x80c0520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_SEL                                 = " "0 (ILIM_400MA),1 (ILIM_800MA)"
    tree.end
    tree "HAPTICS_SC_DEB_CFG"
      sgroup "HAPTICS_SC_DEB_CFG (at 0x1c053)"
        set &access:&cmd_addr %l (0x80c0530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SC_DEB                                   = " "0 (NO_DEB),1 (DEB_8CLK),2 (DEB_16CLK),3 (DEB_32CLK),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "HAPTICS_RATE_CFG1"
      sgroup "HAPTICS_RATE_CFG1 (at 0x1c054)"
        set &access:&cmd_addr %l (0x80c0540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RATE_7_0                                 = "
    tree.end
    tree "HAPTICS_RATE_CFG2"
      sgroup "HAPTICS_RATE_CFG2 (at 0x1c055)"
        set &access:&cmd_addr %l (0x80c0550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RATE_11_8                                = "
    tree.end
    tree "HAPTICS_INTERNAL_PWM"
      sgroup "HAPTICS_INTERNAL_PWM (at 0x1c056)"
        set &access:&cmd_addr %l (0x80c0560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FREQ_SEL                                 = " "0 (PWM_253KHZ),1 (PWM_505KHZ),2 (PWM_739KHZ),3 (PWM_1076KHZ)"
    tree.end
    tree "HAPTICS_EXTERNAL_PWM"
      sgroup "HAPTICS_EXTERNAL_PWM (at 0x1c057)"
        set &access:&cmd_addr %l (0x80c0570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FREQ_SEL                                 = " "0 (EXT_PWM_25KHZ),1 (EXT_PWM_50KHZ),2 (EXT_PWM_75KHZ),3 (EXT_PWM_100KHZ)"
    tree.end
    tree "HAPTICS_PWM"
      sgroup "HAPTICS_PWM (at 0x1c058)"
        set &access:&cmd_addr %l (0x80c0580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CAP_SEL                                  = " "0 (PWM_CAP_26PF),1 (PWM_CAP_13PF),2 (PWM_CAP_8P7PF),3 (PWM_CAP_6P5PF)"
    tree.end
    tree "HAPTICS_SC_CLR"
      sgroup "HAPTICS_SC_CLR (at 0x1c059)"
        set &access:&cmd_addr %l (0x80c0590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_CLR                                   = " "0 (SC_DIS),1 (SC_CLR)"
    tree.end
    tree "HAPTICS_BRAKE"
      sgroup "HAPTICS_BRAKE (at 0x1c05c)"
        set &access:&cmd_addr %l (0x80c05c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc05c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   PATTERN4                                 = " "0 (ZERO),1 (VMAX_DIV4),2 (VMAX_DIV2),3 (VMAX)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   PATTERN3                                 = " "0 (ZERO),1 (VMAX_DIV4),2 (VMAX_DIV2),3 (VMAX)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PATTERN2                                 = " "0 (ZERO),1 (VMAX_DIV4),2 (VMAX_DIV2),3 (VMAX)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PATTERN1                                 = " "0 (ZERO),1 (VMAX_DIV4),2 (VMAX_DIV2),3 (VMAX)"
    tree.end
    tree "HAPTICS_WF_REPEAT"
      sgroup "HAPTICS_WF_REPEAT (at 0x1c05e)"
        set &access:&cmd_addr %l (0x80c05e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc05e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   WF_REPEAT                                = " "0 (WF_REPEAT_1_TIMES),1 (WF_REPEAT_2_TIMES),2 (WF_REPEAT_4_TIMES),3 (WF_REPEAT_8_TIMES),4 (WF_REPEAT_16_TIMES),5 (WF_REPEAT_32_TIMES),6 (WF_REPEAT_64_TIMES),7 (WF_REPEAT_128_TIMES)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   WF_REPEAT_RSVD                           = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   WF_S_REPEAT                              = " "0 (WF_S_REPEAT_1_TIMES),1 (WF_S_REPEAT_2_TIMES),2 (WF_S_REPEAT_4_TIMES),3 (WF_S_REPEAT_8_TIMES)"
    tree.end
    tree "HAPTICS_WF_S1"
      sgroup "HAPTICS_WF_S1 (at 0x1c060)"
        set &access:&cmd_addr %l (0x80c0600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SIGN                                     = " "0 (FORWARD),1 (REVERSE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVD                                      = " "0 (OVD_1X),1 (OVD_2X)"
      textline ""
      hexmask.long.byte 0x0 0x1--0x5 1 "  [ 5: 1]   AMP                                      = "
    tree.end
    tree "HAPTICS_WF_S2"
      sgroup "HAPTICS_WF_S2 (at 0x1c061)"
        set &access:&cmd_addr %l (0x80c0610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SIGN                                     = " "0 (FORWARD),1 (REVERSE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVD                                      = " "0 (OVD_1X),1 (OVD_2X)"
      textline ""
      hexmask.long.byte 0x0 0x1--0x5 1 "  [ 5: 1]   AMP                                      = "
    tree.end
    tree "HAPTICS_WF_S3"
      sgroup "HAPTICS_WF_S3 (at 0x1c062)"
        set &access:&cmd_addr %l (0x80c0620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SIGN                                     = " "0 (FORWARD),1 (REVERSE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVD                                      = " "0 (OVD_1X),1 (OVD_2X)"
      textline ""
      hexmask.long.byte 0x0 0x1--0x5 1 "  [ 5: 1]   AMP                                      = "
    tree.end
    tree "HAPTICS_WF_S4"
      sgroup "HAPTICS_WF_S4 (at 0x1c063)"
        set &access:&cmd_addr %l (0x80c0630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SIGN                                     = " "0 (FORWARD),1 (REVERSE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVD                                      = " "0 (OVD_1X),1 (OVD_2X)"
      textline ""
      hexmask.long.byte 0x0 0x1--0x5 1 "  [ 5: 1]   AMP                                      = "
    tree.end
    tree "HAPTICS_WF_S5"
      sgroup "HAPTICS_WF_S5 (at 0x1c064)"
        set &access:&cmd_addr %l (0x80c0640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SIGN                                     = " "0 (FORWARD),1 (REVERSE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVD                                      = " "0 (OVD_1X),1 (OVD_2X)"
      textline ""
      hexmask.long.byte 0x0 0x1--0x5 1 "  [ 5: 1]   AMP                                      = "
    tree.end
    tree "HAPTICS_WF_S6"
      sgroup "HAPTICS_WF_S6 (at 0x1c065)"
        set &access:&cmd_addr %l (0x80c0650|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0650|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SIGN                                     = " "0 (FORWARD),1 (REVERSE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVD                                      = " "0 (OVD_1X),1 (OVD_2X)"
      textline ""
      hexmask.long.byte 0x0 0x1--0x5 1 "  [ 5: 1]   AMP                                      = "
    tree.end
    tree "HAPTICS_WF_S7"
      sgroup "HAPTICS_WF_S7 (at 0x1c066)"
        set &access:&cmd_addr %l (0x80c0660|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0660|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SIGN                                     = " "0 (FORWARD),1 (REVERSE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVD                                      = " "0 (OVD_1X),1 (OVD_2X)"
      textline ""
      hexmask.long.byte 0x0 0x1--0x5 1 "  [ 5: 1]   AMP                                      = "
    tree.end
    tree "HAPTICS_WF_S8"
      sgroup "HAPTICS_WF_S8 (at 0x1c067)"
        set &access:&cmd_addr %l (0x80c0670|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0670|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SIGN                                     = " "0 (FORWARD),1 (REVERSE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVD                                      = " "0 (OVD_1X),1 (OVD_2X)"
      textline ""
      hexmask.long.byte 0x0 0x1--0x5 1 "  [ 5: 1]   AMP                                      = "
    tree.end
    tree "HAPTICS_PLAY"
      sgroup "HAPTICS_PLAY (at 0x1c070)"
        set &access:&cmd_addr %l (0x80c0700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PLAY                                     = " "0 (STOP),1 (PLAY)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PAUSE                                    = " "0 (CONTINUE),1 (PAUSE)"
    tree.end
    tree "HAPTICS_SEC_ACCESS"
      sgroup "HAPTICS_SEC_ACCESS (at 0x1c0d0)"
        set &access:&cmd_addr %l (0x80c0d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "HAPTICS_PERPH_RESET_CTL2"
      sgroup "HAPTICS_PERPH_RESET_CTL2 (at 0x1c0d9)"
        set &access:&cmd_addr %l (0x80c0d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (IGNORE),1 (FOLLOW)"
    tree.end
    tree "HAPTICS_PERPH_RESET_CTL3"
      sgroup "HAPTICS_PERPH_RESET_CTL3 (at 0x1c0da)"
        set &access:&cmd_addr %l (0x80c0da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (IGNORE),1 (FOLLOW)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (IGNORE),1 (FOLLOW)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (IGNORE),1 (FOLLOW)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (IGNORE),1 (FOLLOW)"
    tree.end
    tree "HAPTICS_PERPH_RESET_CTL4"
      sgroup "HAPTICS_PERPH_RESET_CTL4 (at 0x1c0db)"
        set &access:&cmd_addr %l (0x80c0db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NO_RESET),1 (LOCAL_SOFT_RESET)"
    tree.end
    tree "HAPTICS_SPARE"
      sgroup "HAPTICS_SPARE (at 0x1c0df)"
        set &access:&cmd_addr %l (0x80c0df0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0df0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "HAPTICS_INT_TEST1"
      sgroup "HAPTICS_INT_TEST1 (at 0x1c0e0)"
        set &access:&cmd_addr %l (0x80c0e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "HAPTICS_INT_TEST_VAL"
      sgroup "HAPTICS_INT_TEST_VAL (at 0x1c0e1)"
        set &access:&cmd_addr %l (0x80c0e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PLAY_INT_VAL                             = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_INT_VAL                               = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "HAPTICS_TEST1"
      sgroup "HAPTICS_TEST1 (at 0x1c0e2)"
        set &access:&cmd_addr %l (0x80c0e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST_SEL                                = "
    tree.end
    tree "HAPTICS_TEST2"
      sgroup "HAPTICS_TEST2 (at 0x1c0e3)"
        set &access:&cmd_addr %l (0x80c0e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   AUTO_RES_EN                              = " "0 (AUTO_RES_DIS),1 (AUTO_RES_EN)"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   EXT_PWM_DTEST_SEL                        = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
    tree "HAPTICS_TEST3"
      sgroup "HAPTICS_TEST3 (at 0x1c0e4)"
        set &access:&cmd_addr %l (0x80c0e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   TM_ILIM_100MA                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TM_HI_Z                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TM_PFET_P_ON                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TM_NFET_P_ON                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TM_PFET_M_ON                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TM_NFET_M_ON                             = " "0, 1"
    tree.end
    tree "HAPTICS_TRIM_NUM"
      sgroup "HAPTICS_TRIM_NUM (at 0x1c0f0)"
        set &access:&cmd_addr %l (0x80c0f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "HAPTICS_REF_BUFF_TRIM"
      sgroup "HAPTICS_REF_BUFF_TRIM (at 0x1c0f1)"
        set &access:&cmd_addr %l (0x80c0f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (DIS_TRIM),1 (EN_TRIM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CALIB                                    = " "0 (DIS_CAL),1 (EN_CAL)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   CODE                                     = "
    tree.end
    tree "HAPTICS_ERR_AMP_TRIM"
      sgroup "HAPTICS_ERR_AMP_TRIM (at 0x1c0f2)"
        set &access:&cmd_addr %l (0x80c0f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xc0f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN                                       = " "0 (DIS_TRIM),1 (EN_TRIM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CALIB                                    = " "0 (DIS_CAL),1 (EN_CAL)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   CODE                                     = "
    tree.end
  tree.end
tree.end
tree "IBB"
  tree "IBB"
    tree "IBB_REVISION1"
      sgroup "IBB_REVISION1 (at 0x1dc00)"
        set &access:&cmd_addr %l (0x80dc000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "IBB_REVISION2"
      sgroup "IBB_REVISION2 (at 0x1dc01)"
        set &access:&cmd_addr %l (0x80dc010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "IBB_REVISION3"
      sgroup "IBB_REVISION3 (at 0x1dc02)"
        set &access:&cmd_addr %l (0x80dc020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "IBB_REVISION4"
      sgroup "IBB_REVISION4 (at 0x1dc03)"
        set &access:&cmd_addr %l (0x80dc030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "IBB_PERPH_TYPE"
      sgroup "IBB_PERPH_TYPE (at 0x1dc04)"
        set &access:&cmd_addr %l (0x80dc040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "IBB_PERPH_SUBTYPE"
      sgroup "IBB_PERPH_SUBTYPE (at 0x1dc05)"
        set &access:&cmd_addr %l (0x80dc050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "IBB_STATUS1"
      sgroup "IBB_STATUS1 (at 0x1dc08)"
        set &access:&cmd_addr %l (0x80dc080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (VREG_NOTOK),1 (VREG_OK)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SC_DETECT                                = " "0 (MODULE_NO_SC_FAULT),1 (MODULE_SHORT_CIRCUIT)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILIMIT_ERROR                             = " "0 (NO_ILIMIT_ERROR),1 (ILIMIT_ERROR)"
    tree.end
    tree "IBB_STATUS2"
      sgroup "IBB_STATUS2 (at 0x1dc09)"
        set &access:&cmd_addr %l (0x80dc090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   CURRENT_OUTPUT_VOLTAGE                   = "
    tree.end
    tree "IBB_STATUS3"
      sgroup "IBB_STATUS3 (at 0x1dc0a)"
        set &access:&cmd_addr %l (0x80dc0a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc0a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IBB_STATUS                               = "
    tree.end
    tree "IBB_INT_RT_STS"
      sgroup "IBB_INT_RT_STS (at 0x1dc10)"
        set &access:&cmd_addr %l (0x80dc100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_RT_STS                    = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_RT_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_RT_STS                      = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_RT_STS                       = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "IBB_INT_SET_TYPE"
      sgroup "IBB_INT_SET_TYPE (at 0x1dc11)"
        set &access:&cmd_addr %l (0x80dc110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_TYPE                      = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_TYPE                            = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_TYPE                        = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_TYPE                         = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "IBB_INT_POLARITY_HIGH"
      sgroup "IBB_INT_POLARITY_HIGH (at 0x1dc12)"
        set &access:&cmd_addr %l (0x80dc120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_HIGH                      = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_HIGH                            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_HIGH                        = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_HIGH                         = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "IBB_INT_POLARITY_LOW"
      sgroup "IBB_INT_POLARITY_LOW (at 0x1dc13)"
        set &access:&cmd_addr %l (0x80dc130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_LOW                       = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_LOW                             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_LOW                         = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_LOW                          = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "IBB_INT_LATCHED_CLR"
      sgroup "IBB_INT_LATCHED_CLR (at 0x1dc14)"
        set &access:&cmd_addr %l (0x80dc140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_LATCHED_CLR               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_LATCHED_CLR                  = " "0, 1"
    tree.end
    tree "IBB_INT_EN_SET"
      sgroup "IBB_INT_EN_SET (at 0x1dc15)"
        set &access:&cmd_addr %l (0x80dc150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_EN_SET                    = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_EN_SET                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "IBB_INT_EN_CLR"
      sgroup "IBB_INT_EN_CLR (at 0x1dc16)"
        set &access:&cmd_addr %l (0x80dc160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_EN_CLR                    = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_EN_CLR                      = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "IBB_INT_LATCHED_STS"
      sgroup "IBB_INT_LATCHED_STS (at 0x1dc18)"
        set &access:&cmd_addr %l (0x80dc180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_LATCHED_STS               = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_LATCHED_STS                 = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "IBB_INT_PENDING_STS"
      sgroup "IBB_INT_PENDING_STS (at 0x1dc19)"
        set &access:&cmd_addr %l (0x80dc190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_PENDING_STS               = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_PENDING_STS                     = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_PENDING_STS                 = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "IBB_INT_MID_SEL"
      sgroup "IBB_INT_MID_SEL (at 0x1dc1a)"
        set &access:&cmd_addr %l (0x80dc1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "IBB_INT_PRIORITY"
      sgroup "IBB_INT_PRIORITY (at 0x1dc1b)"
        set &access:&cmd_addr %l (0x80dc1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "IBB_OUTPUT_VOLTAGE"
      sgroup "IBB_OUTPUT_VOLTAGE (at 0x1dc41)"
        set &access:&cmd_addr %l (0x80dc410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVERRIDE_OUTPUT_VOLTAGE                  = " "0 (DEFAULT_OUTPUT_VOLTAGE),1 (OVERRIDE_OUTPUT_VOLTAGE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SET_OUTPUT_VOLTAGE                       = "
    tree.end
    tree "IBB_RING_SUPPRESSION_CTL"
      sgroup "IBB_RING_SUPPRESSION_CTL (at 0x1dc42)"
        set &access:&cmd_addr %l (0x80dc420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ENABLE_RING_SUPPRESSION                  = " "0 (RING_SUPPRESSION_DISABLED),1 (RING_SUPPRESSION_ENABLED)"
    tree.end
    tree "IBB_VREF_SEL"
      sgroup "IBB_VREF_SEL (at 0x1dc43)"
        set &access:&cmd_addr %l (0x80dc430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREF_SEL                                 = " "0 (SUMMIT_BG),1 (PMIC_BG)"
    tree.end
    tree "IBB_LCD_AMOLED_SEL"
      sgroup "IBB_LCD_AMOLED_SEL (at 0x1dc44)"
        set &access:&cmd_addr %l (0x80dc440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LCD_AMOLED_SELECT                        = " "0 (LCD_MODE),1 (AMOLED_MODE)"
    tree.end
    tree "IBB_MODULE_RDY"
      sgroup "IBB_MODULE_RDY (at 0x1dc45)"
        set &access:&cmd_addr %l (0x80dc450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODULE_RDY                               = " "0 (IBB_NOT_RDY),1 (IBB_RDY)"
    tree.end
    tree "IBB_ENABLE_CTL"
      sgroup "IBB_ENABLE_CTL (at 0x1dc46)"
        set &access:&cmd_addr %l (0x80dc460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODULE_EN                                = " "0 (MODULE_DIS),1 (MODULE_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SWIRE_RDY                                = " "0 (SWIRE_NOT_RDY),1 (SWIRE_RDY)"
    tree.end
    tree "IBB_PD_CTL"
      sgroup "IBB_PD_CTL (at 0x1dc47)"
        set &access:&cmd_addr %l (0x80dc470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ENABLE_PD                                = " "0 (PD_DISABLE),1 (PD_ENABLE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PD_STRENGTH                              = " "0 (PD_FULLSTRENGTH),1 (PD_HALFSTRENGTH)"
    tree.end
    tree "IBB_CLK_DIV"
      sgroup "IBB_CLK_DIV (at 0x1dc48)"
        set &access:&cmd_addr %l (0x80dc480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "IBB_IPLIMIT_STARTUP_CTL_1"
      sgroup "IBB_IPLIMIT_STARTUP_CTL_1 (at 0x1dc49)"
        set &access:&cmd_addr %l (0x80dc490|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc490|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_IPLIMIT_STEPPER                       = " "0 (DIS_IPLIMIT_STEPPER),1 (EN_IPLIMIT_STEPPER)"
    tree.end
    tree "IBB_IPLIMIT_STARTUP_CTL_2"
      sgroup "IBB_IPLIMIT_STARTUP_CTL_2 (at 0x1dc4a)"
        set &access:&cmd_addr %l (0x80dc4a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc4a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   STARTUP_IPLIMIT                          = "
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   CURRENT_STEP_SIZE                        = " "0 (MA50),1 (MA100),2 (MA150),3 (MA200)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   IPLIMIT_STEPPER_CYCLES                   = " "0 (CYCLES_PER_STEP_8),1 (CYCLES_PER_STEP_16),2 (CYCLES_PER_STEP_32),3 (CYCLES_PER_STEP_64)"
    tree.end
    tree "IBB_CURRENT_LIMIT"
      sgroup "IBB_CURRENT_LIMIT (at 0x1dc4b)"
        set &access:&cmd_addr %l (0x80dc4b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc4b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CURRENT_LIMIT                         = " "0 (ILIM_DIS),1 (ILIM_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   ILIMIT_COUNT                             = " "0 (CYC8),1 (CYC16),2 (CYC32),3 (CYC64)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   SET_CURRENT_MAX                          = "
    tree.end
    tree "IBB_CURRENT_SENSE"
      sgroup "IBB_CURRENT_SENSE (at 0x1dc4c)"
        set &access:&cmd_addr %l (0x80dc4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SEL_C_COMP                               = " "0 (CURR_SNS_COMP_CAP_50FF),1 (CURR_SNS_COMP_CAP_70FF)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ISENSE_GAIN                              = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "IBB_LOOP_COMP_CTL"
      sgroup "IBB_LOOP_COMP_CTL (at 0x1dc4d)"
        set &access:&cmd_addr %l (0x80dc4d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc4d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   LOOP_COMP_CAP                            = " "0 (COMP_CAP_96PF),1 (COMP_CAP_106PF),2 (COMP_CAP_116PF),3 (COMP_CAP_126PF)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LOOP_COMP_RES                            = "
    tree.end
    tree "IBB_SLOPE_COMP_CURRENT"
      sgroup "IBB_SLOPE_COMP_CURRENT (at 0x1dc4e)"
        set &access:&cmd_addr %l (0x80dc4e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc4e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SLOPE_COMP_CURRENT                       = " "0 (COMP_CURR_0P25UA),1 (COMP_CURR_0P5UA),2 (COMP_CURR_0P75UA),3 (COMP_CURR_1UA),4 (COMP_CURR_1P25UA),5 (COMP_CURR_1P5UA),6 (COMP_CURR_1P75UA),7 (COMP_CURR_2UA)"
    tree.end
    tree "IBB_INZERO_CTL"
      sgroup "IBB_INZERO_CTL (at 0x1dc4f)"
        set &access:&cmd_addr %l (0x80dc4f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc4f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   INZERO_DELAY                             = " "0 (NS70),1 (NS35_1),2 (NS35_2),3 (NS25)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OVERRIDE_VOLTAGE_OFFSET                  = " "0 (DEFAULT_VOLTAGE_OFFSET),1 (OVERRIDE_VOLTAGE_OFFSET)"
      textline ""
      bitfld.long 0x0 0x1--0x3 "  [ 3: 1]   VOLTAGE_OFFSET                           = " "0 (VOFF_0MV),1 (VOFF_M1MV),2 (VOFF_M4MV),3 (VOFF_M8MV),4 (VOFF_1MV),5 (VOFF_4MV),6 (VOFF_6MV),7 (VOFF_8MV)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ZX_DETECT_ON                             = " "0 (INZERODET_ZERO),1 (INZERODET_EN)"
    tree.end
    tree "IBB_PS_CTL"
      sgroup "IBB_PS_CTL (at 0x1dc50)"
        set &access:&cmd_addr %l (0x80dc500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PS                                    = " "0 (DIS_PS),1 (EN_PS)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PS_THRESHOLD                             = " "0 (UA0),1 (UA0P5),2 (UA1),3 (UA1P5),4 (UA2),5 (UA2P5),6 (UA3),7 (UA3P5)"
    tree.end
    tree "IBB_PWM_CTL_1"
      sgroup "IBB_PWM_CTL_1 (at 0x1dc51)"
        set &access:&cmd_addr %l (0x80dc510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UNLIMITED_DUTY_CYCLE                     = " "0 (LIMITED_DUTY_CYCLE),1 (UNLIMITED_DUTY_CYCLE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   MAX_DUTY_CYCLE                           = " "0 (NS26),1 (NS52),2 (NS78),3 (NS104)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MIN_DUTY_CYCLE                           = " "0 (NS26),1 (NS52),2 (NS78),3 (NS104)"
    tree.end
    tree "IBB_PWM_CTL_2"
      sgroup "IBB_PWM_CTL_2 (at 0x1dc52)"
        set &access:&cmd_addr %l (0x80dc520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x2--0x5 1 "  [ 5: 2]   ERR_AMP_GAIN                             = "
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   IPLIMIT_BLANK_TIME                       = " "0 (NS20_1),1 (NS14),2 (NS20_2),3 (NS40)"
    tree.end
    tree "IBB_RDSON_MNGMNT"
      sgroup "IBB_RDSON_MNGMNT (at 0x1dc53)"
        set &access:&cmd_addr %l (0x80dc530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NFET_SLEW                                = " "0 (NFET_HALF_SLEW),1 (NFET_FULL_SLEW)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFET_SLEW                                = " "0 (PFET_HALF_SLEW),1 (PFET_FULL_SLEW)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OVERRIDE_NFET_SW_SIZE                    = " "0 (DEFAULT_NFET_SW_SIZE),1 (OVERRIDE_NFET_SW_SIZE)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   NFET_SW_SIZE                             = " "0 (LCD_NFET_HALF_SIZE),1 (LCD_NFET_FULL_SIZE),2 (AMOLED_NFET_HALF_SIZE),3 (AMOLED_NFET_FULL_SIZE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OVERRIDE_PFET_SW_SIZE                    = " "0 (DEFAULT_PFET_SW_SIZE),1 (OVERRIDE_PFET_SW_SIZE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFET_SW_SIZE                             = " "0 (LCD_PFET_HALF_SIZE),1 (LCD_PFET_FULL_SIZE),2 (AMOLED_PFET_HALF_SIZE),3 (AMOLED_PFET_FULL_SIZE)"
    tree.end
    tree "IBB_SHORT_CIRCUIT_CTL"
      sgroup "IBB_SHORT_CIRCUIT_CTL (at 0x1dc54)"
        set &access:&cmd_addr %l (0x80dc540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SHORT_CIRCUIT_DEB                        = " "0 (US2),1 (US4),2 (US16),3 (US32)"
    tree.end
    tree "IBB_VREG_OK_CTL"
      sgroup "IBB_VREG_OK_CTL (at 0x1dc55)"
        set &access:&cmd_addr %l (0x80dc550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_VREG_NOT_OK_BLANK                     = " "0 (DIS_VREG_NOT_OK_BLANKING),1 (EN_VREG_NOT_OK_BLANKING)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   VREG_NOT_OK_BLANKTIME                    = " "0 (MS8),1 (MS16),2 (MS32),3 (MS64)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VREG_OK_DEB                              = " "0 (US2),1 (US4),2 (US8),3 (US16)"
    tree.end
    tree "IBB_NONOVERLAP_TIME_1"
      sgroup "IBB_NONOVERLAP_TIME_1 (at 0x1dc56)"
        set &access:&cmd_addr %l (0x80dc560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVERRIDE_NONOVERLAP                      = " "0 (DEFAULT_NONOVERLAP_TIME),1 (OVERRIDE_NONOVERLAP_TIME)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   NONOVERLAP_PFET                          = " "0 (GATE_DELAY_8),1 (GATE_DELAY_6),2 (GATE_DELAY_4),3 (GATE_DELAY_2),4 (GATE_DELAY_22),5 (GATE_DELAY_18),6 (GATE_DELAY_14),7 (GATE_DELAY_10)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NONOVERLAP_NFET                          = " "0 (GATE_DELAY_8),1 (GATE_DELAY_6),2 (GATE_DELAY_4),3 (GATE_DELAY_2),4 (GATE_DELAY_22),5 (GATE_DELAY_18),6 (GATE_DELAY_14),7 (GATE_DELAY_10)"
    tree.end
    tree "IBB_NONOVERLAP_TIME_2"
      sgroup "IBB_NONOVERLAP_TIME_2 (at 0x1dc57)"
        set &access:&cmd_addr %l (0x80dc570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   P2N_MUX_SEL                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   N2P_MUX_SEL                              = " "0, 1"
    tree.end
    tree "IBB_PWRUP_PWRDN_CTL_1"
      sgroup "IBB_PWRUP_PWRDN_CTL_1 (at 0x1dc58)"
        set &access:&cmd_addr %l (0x80dc580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PWRUP_DLY1_SRC                           = " "0 (BIAS_ACTIVE),1 (LAB_VREG_OK)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_PWRUP_DLY1                            = " "0 (DIS_PWRUP_DLY1),1 (EN_PWRUP_DLY1)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   PWRUP_DLY1                               = " "0 (MS1),1 (MS2),2 (MS4),3 (MS8)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWRDN_DLY2_SRC                           = " "0 (IBB_DIS),1 (IBB_DISCHARGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWRDN_DLY2                               = " "0 (MS1),1 (MS2),2 (MS4),3 (MS8)"
    tree.end
    tree "IBB_PWRUP_PWRDN_CTL_2"
      sgroup "IBB_PWRUP_PWRDN_CTL_2 (at 0x1dc59)"
        set &access:&cmd_addr %l (0x80dc590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WAIT_MBG_OK                              = " "0 (DIS_WAIT_MBG_OK),1 (EN_WAIT_MBG_OK)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   IBB_DIS_DLY                              = " "0 (MS0),1 (MS1),2 (MS2),3 (MS4)"
    tree.end
    tree "IBB_SWIRE_CTL"
      sgroup "IBB_SWIRE_CTL (at 0x1dc5a)"
        set &access:&cmd_addr %l (0x80dc5a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc5a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   OUTPUT_VOLTAGE_AT_ONE_PULSE              = "
    tree.end
    tree "IBB_OUTPUT_VOLTAGE_INTL"
      sgroup "IBB_OUTPUT_VOLTAGE_INTL (at 0x1dc5b)"
        set &access:&cmd_addr %l (0x80dc5b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc5b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SET_OUTPUT_VOLTAGE_INTERNAL              = "
    tree.end
    tree "IBB_OUTPUT_SLEW_CTL"
      sgroup "IBB_OUTPUT_SLEW_CTL (at 0x1dc5c)"
        set &access:&cmd_addr %l (0x80dc5c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc5c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DIGITAL_SLEW_CTL                      = " "0 (DISABLE),1 (ENABLE)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   STEP_INTERVAL_TIME                       = " "0 (MS0P25),1 (MS0P5),2 (MS1),3 (MS2),4 (MS4),5 (MS8),6 (MS16),7 (MS32)"
    tree.end
    tree "IBB_OUTPUT_VOLTAGE_DIS_AFVC_THRESHOLD"
      sgroup "IBB_OUTPUT_VOLTAGE_DIS_AFVC_THRESHOLD (at 0x1dc5d)"
        set &access:&cmd_addr %l (0x80dc5d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc5d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SET_OUTPUT_VOLTAGE_DIS_AFVC_THRESHOLD    = "
    tree.end
    tree "IBB_RAMP_OFFSET"
      sgroup "IBB_RAMP_OFFSET (at 0x1dc5e)"
        set &access:&cmd_addr %l (0x80dc5e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc5e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RAMP_OFFSET                              = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "IBB_SOFT_START_CTL"
      sgroup "IBB_SOFT_START_CTL (at 0x1dc5f)"
        set &access:&cmd_addr %l (0x80dc5f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc5f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SOFT_START                               = " "0, 1, 2, 3"
    tree.end
    tree "IBB_SPARE_CTL"
      sgroup "IBB_SPARE_CTL (at 0x1dc60)"
        set &access:&cmd_addr %l (0x80dc600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   UNDEFINED_LV                             = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x1--0x3 "  [ 3: 1]   SPARES                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DIS_SHORT_CIRCUIT_PROTECTION             = " "0 (EN_SCP),1 (DIS_SCP)"
    tree.end
    tree "IBB_NLIMIT_DAC"
      sgroup "IBB_NLIMIT_DAC (at 0x1dc61)"
        set &access:&cmd_addr %l (0x80dc610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdc610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NLIMIT_DAC                               = " "0 (MA0),1 (MA80),2 (MA160),3 (MA240),4 (MA320),5 (MA400),6 (MA480),7 (MA560)"
    tree.end
    tree "IBB_SEC_ACCESS"
      sgroup "IBB_SEC_ACCESS (at 0x1dcd0)"
        set &access:&cmd_addr %l (0x80dcd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "IBB_PERPH_RESET_CTL1"
      sgroup "IBB_PERPH_RESET_CTL1 (at 0x1dcd8)"
        set &access:&cmd_addr %l (0x80dcd80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcd80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "IBB_PERPH_RESET_CTL2"
      sgroup "IBB_PERPH_RESET_CTL2 (at 0x1dcd9)"
        set &access:&cmd_addr %l (0x80dcd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "IBB_PERPH_RESET_CTL3"
      sgroup "IBB_PERPH_RESET_CTL3 (at 0x1dcda)"
        set &access:&cmd_addr %l (0x80dcda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "IBB_PERPH_RESET_CTL4"
      sgroup "IBB_PERPH_RESET_CTL4 (at 0x1dcdb)"
        set &access:&cmd_addr %l (0x80dcdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "IBB_INT_TEST1"
      sgroup "IBB_INT_TEST1 (at 0x1dce0)"
        set &access:&cmd_addr %l (0x80dce00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "IBB_INT_TEST_VAL"
      sgroup "IBB_INT_TEST_VAL (at 0x1dce1)"
        set &access:&cmd_addr %l (0x80dce10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FAULT_SHUTDOWN_TEST_VAL                  = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_ERROR_TEST_VAL                        = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIMIT_ERROR_TEST_VAL                    = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_NOT_OK_TEST_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "IBB_DTEST1_ACCESS"
      sgroup "IBB_DTEST1_ACCESS (at 0x1dce2)"
        set &access:&cmd_addr %l (0x80dce20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST1_ACCESS                            = "
    tree.end
    tree "IBB_DTEST2_ACCESS"
      sgroup "IBB_DTEST2_ACCESS (at 0x1dce3)"
        set &access:&cmd_addr %l (0x80dce30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST2_ACCESS                            = "
    tree.end
    tree "IBB_DTEST3_ACCESS"
      sgroup "IBB_DTEST3_ACCESS (at 0x1dce4)"
        set &access:&cmd_addr %l (0x80dce40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST3_ACCESS                            = "
    tree.end
    tree "IBB_DTEST4_ACCESS"
      sgroup "IBB_DTEST4_ACCESS (at 0x1dce5)"
        set &access:&cmd_addr %l (0x80dce50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST4_ACCESS                            = "
    tree.end
    tree "IBB_ATEST1_ACCESS"
      sgroup "IBB_ATEST1_ACCESS (at 0x1dce6)"
        set &access:&cmd_addr %l (0x80dce60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST1_ACCESS                            = " "0 (NO_SIGNAL),1 (ATEST_GM_2UA),2 (ATEST_BIAS1UA),3 (DISCHARGE_RAMP_ATEST),4 (PREAMP_TRIM_OUT),5 (RESERVED),6 (PWM_COMP),7 (BKSP1)"
    tree.end
    tree "IBB_ATEST2_ACCESS"
      sgroup "IBB_ATEST2_ACCESS (at 0x1dce7)"
        set &access:&cmd_addr %l (0x80dce70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST2_ACCESS                            = " "0 (NO_SIGNAL),1 (RESERVED),2 (VREF_BUFFF_TRIM2_OUT),3 (VREF),4 (ERROR_AMP_OUT_TRIM),5 (PWR_DRV_ATEST),6 (IPLIMIT),7 (KSP2)"
    tree.end
    tree "IBB_ATEST3_ACCESS"
      sgroup "IBB_ATEST3_ACCESS (at 0x1dce8)"
        set &access:&cmd_addr %l (0x80dce80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST3_ACCESS                            = " "0 (NO_SIGNAL),1 (REF_CAP_CHARGED),2 (TOP_RES_1),3 (DIVIDER_TOP),4 (IBB_VREF),5 (INM_PREAMP),6 (BOT_RES_1),7 (DAC_OUT)"
    tree.end
    tree "IBB_ATEST4_ACCESS"
      sgroup "IBB_ATEST4_ACCESS (at 0x1dce9)"
        set &access:&cmd_addr %l (0x80dce90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdce90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST4_ACCESS                            = " "0 (NO_SIGNAL),1 (RESERVED),2 (PSKIP_THRESHOLD),3 (VFLOAT),4 (VREG_OK),5 (RING_KILL_MV),6 (PULSE_SKIP),7 (N_OFF_LV)"
    tree.end
    tree "IBB_TEST_CTL_1"
      sgroup "IBB_TEST_CTL_1 (at 0x1dcea)"
        set &access:&cmd_addr %l (0x80dcea0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcea0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FORCE_OFF_WIRTE_ONCE                     = " "0 (NOT_FORCE_OFF),1 (FORCE_OFF)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_OUTPUT_VOLTAGE_TEST                   = " "0 (DIS),1 (EN)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OUTPUT_VOLTAGE_TEST_MODE                 = " "0 (VM6P1),1 (VM6P2),2 (VM6P3),3 (VM6P4)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RDSON_TEST                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PFET_CTL                                 = " "0 (OFF),1 (ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NFET_CTL                                 = " "0 (OFF),1 (ON)"
    tree.end
    tree "IBB_TEST_CTL_2"
      sgroup "IBB_TEST_CTL_2 (at 0x1dceb)"
        set &access:&cmd_addr %l (0x80dceb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdceb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODULE_FORCE_ON                          = " "0 (NOT_FORCE_ON),1 (FORCE_ON)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FORCE_PWR_STAGE_OFF                      = " "0 (NOT_FORCE_OFF),1 (FORCE_OFF)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ERRAMP_TRIM_DIS                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ERRAMP_TRIM_CALIB                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DIS_TRIM_INZERO_OFFSET                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DISABLE_PREAMP_TRIM                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CALIB_BUFF_TRIM                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CALIB_PREAMP_TRIM                        = " "0, 1"
    tree.end
    tree "IBB_DEBOUNCER_OVERRIDE"
      sgroup "IBB_DEBOUNCER_OVERRIDE (at 0x1dcec)"
        set &access:&cmd_addr %l (0x80dcec0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcec0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   DEB_ILIMIT                               = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEB_VREG_OK                              = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEB_SC                                   = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "IBB_TEST_CTL_3"
      sgroup "IBB_TEST_CTL_3 (at 0x1dced)"
        set &access:&cmd_addr %l (0x80dced0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdced0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   STATUS3_CTRL_SEL                         = "
    tree.end
    tree "IBB_TRIM_NUM"
      sgroup "IBB_TRIM_NUM (at 0x1dcf0)"
        set &access:&cmd_addr %l (0x80dcf00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcf00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_NUM                                 = "
    tree.end
    tree "IBB_TRIM_CTL1"
      sgroup "IBB_TRIM_CTL1 (at 0x1dcf1)"
        set &access:&cmd_addr %l (0x80dcf10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcf10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   ERR_AMP_OFFSET_TRIM                      = "
    tree.end
    tree "IBB_TRIM_CTL2"
      sgroup "IBB_TRIM_CTL2 (at 0x1dcf2)"
        set &access:&cmd_addr %l (0x80dcf20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcf20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_BIAS_GM                             = "
    tree.end
    tree "IBB_TRIM_CTL3"
      sgroup "IBB_TRIM_CTL3 (at 0x1dcf3)"
        set &access:&cmd_addr %l (0x80dcf30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcf30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_PREAMP_OFFSET                       = "
    tree.end
    tree "IBB_TRIM_CTL4"
      sgroup "IBB_TRIM_CTL4 (at 0x1dcf4)"
        set &access:&cmd_addr %l (0x80dcf40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcf40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_INZERO_OFFSET                       = "
    tree.end
    tree "IBB_TRIM_CTL5"
      sgroup "IBB_TRIM_CTL5 (at 0x1dcf5)"
        set &access:&cmd_addr %l (0x80dcf50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdcf50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_REF_DAC_BUFF                        = "
    tree.end
  tree.end
tree.end
tree "INT"
  tree "INT"
    tree "INT_REVISION1"
      sgroup "INT_REVISION1 (at 0x500)"
        set &access:&cmd_addr %l (0x8005000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "INT_REVISION2"
      sgroup "INT_REVISION2 (at 0x501)"
        set &access:&cmd_addr %l (0x8005010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "INT_PERPH_TYPE"
      sgroup "INT_PERPH_TYPE (at 0x504)"
        set &access:&cmd_addr %l (0x8005040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "INT_PERPH_SUBTYPE"
      sgroup "INT_PERPH_SUBTYPE (at 0x505)"
        set &access:&cmd_addr %l (0x8005050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "INT_STATUS1"
      sgroup "INT_STATUS1 (at 0x508)"
        set &access:&cmd_addr %l (0x8005080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CLK_REQ                                  = " "0 (NO_CLOCK_REQ),1 (CLOCK_REQUESTED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEND_REQ                                 = " "0 (NO_SEND_REQ),1 (SEND_REQUESTED)"
    tree.end
    tree "INT_STATUS2"
      sgroup "INT_STATUS2 (at 0x509)"
        set &access:&cmd_addr %l (0x8005090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LAST_WINNER                              = "
    tree.end
    tree "INT_INT_RESEND_ALL"
      sgroup "INT_INT_RESEND_ALL (at 0x540)"
        set &access:&cmd_addr %l (0x8005400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_RESEND_ALL                           = " "0 (reserved),1 (RESEND_ALL)"
    tree.end
    tree "INT_EN_CTL1"
      sgroup "INT_EN_CTL1 (at 0x546)"
        set &access:&cmd_addr %l (0x8005460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INTR_EN                                  = " "0 (PERIPHERAL_DISABLED),1 (PERIPHERAL_ENABLED)"
    tree.end
    tree "INT_SEC_ACCESS"
      sgroup "INT_SEC_ACCESS (at 0x5d0)"
        set &access:&cmd_addr %l (0x8005d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "INT_PERPH_RESET_CTL1"
      sgroup "INT_PERPH_RESET_CTL1 (at 0x5d8)"
        set &access:&cmd_addr %l (0x8005d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "INT_PERPH_RESET_CTL2"
      sgroup "INT_PERPH_RESET_CTL2 (at 0x5d9)"
        set &access:&cmd_addr %l (0x8005d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "INT_PERPH_RESET_CTL3"
      sgroup "INT_PERPH_RESET_CTL3 (at 0x5da)"
        set &access:&cmd_addr %l (0x8005da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "INT_PERPH_RESET_CTL4"
      sgroup "INT_PERPH_RESET_CTL4 (at 0x5db)"
        set &access:&cmd_addr %l (0x8005db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "INT_TEST1"
      sgroup "INT_TEST1 (at 0x5e0)"
        set &access:&cmd_addr %l (0x8005e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x5e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST_EN                                 = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
  tree.end
tree.end
tree "LAB"
  tree "LAB"
    tree "LAB_REVISION1"
      sgroup "LAB_REVISION1 (at 0x1de00)"
        set &access:&cmd_addr %l (0x80de000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LAB_REVISION2"
      sgroup "LAB_REVISION2 (at 0x1de01)"
        set &access:&cmd_addr %l (0x80de010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LAB_REVISION3"
      sgroup "LAB_REVISION3 (at 0x1de02)"
        set &access:&cmd_addr %l (0x80de020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LAB_REVISION4"
      sgroup "LAB_REVISION4 (at 0x1de03)"
        set &access:&cmd_addr %l (0x80de030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LAB_PERPH_TYPE"
      sgroup "LAB_PERPH_TYPE (at 0x1de04)"
        set &access:&cmd_addr %l (0x80de040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LAB_PERPH_SUBTYPE"
      sgroup "LAB_PERPH_SUBTYPE (at 0x1de05)"
        set &access:&cmd_addr %l (0x80de050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LAB_STATUS1"
      sgroup "LAB_STATUS1 (at 0x1de08)"
        set &access:&cmd_addr %l (0x80de080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (VREG_NOTOK),1 (VREG_OK)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SC_DETECT                                = " "0 (MODULE_NO_SC_FAULT),1 (MODULE_SHORT_CIRCUIT)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   LAB_STATUS                               = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "LAB_INT_RT_STS"
      sgroup "LAB_INT_RT_STS (at 0x1de10)"
        set &access:&cmd_addr %l (0x80de100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_RT_STS                          = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "LAB_INT_SET_TYPE"
      sgroup "LAB_INT_SET_TYPE (at 0x1de11)"
        set &access:&cmd_addr %l (0x80de110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_TYPE                            = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LAB_INT_POLARITY_HIGH"
      sgroup "LAB_INT_POLARITY_HIGH (at 0x1de12)"
        set &access:&cmd_addr %l (0x80de120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_HIGH                            = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LAB_INT_POLARITY_LOW"
      sgroup "LAB_INT_POLARITY_LOW (at 0x1de13)"
        set &access:&cmd_addr %l (0x80de130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_LOW                             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LAB_INT_LATCHED_CLR"
      sgroup "LAB_INT_LATCHED_CLR (at 0x1de14)"
        set &access:&cmd_addr %l (0x80de140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LAB_INT_EN_SET"
      sgroup "LAB_INT_EN_SET (at 0x1de15)"
        set &access:&cmd_addr %l (0x80de150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_EN_SET                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LAB_INT_EN_CLR"
      sgroup "LAB_INT_EN_CLR (at 0x1de16)"
        set &access:&cmd_addr %l (0x80de160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_EN_CLR                          = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LAB_INT_LATCHED_STS"
      sgroup "LAB_INT_LATCHED_STS (at 0x1de18)"
        set &access:&cmd_addr %l (0x80de180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_LATCHED_STS                     = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LAB_INT_PENDING_STS"
      sgroup "LAB_INT_PENDING_STS (at 0x1de19)"
        set &access:&cmd_addr %l (0x80de190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_PENDING_STS                     = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LAB_INT_MID_SEL"
      sgroup "LAB_INT_MID_SEL (at 0x1de1a)"
        set &access:&cmd_addr %l (0x80de1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LAB_INT_PRIORITY"
      sgroup "LAB_INT_PRIORITY (at 0x1de1b)"
        set &access:&cmd_addr %l (0x80de1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LAB_OUTPUT_VOLTAGE"
      sgroup "LAB_OUTPUT_VOLTAGE (at 0x1de41)"
        set &access:&cmd_addr %l (0x80de410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVERRIDE_OUTPUT_VOLTAGE                  = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SET_OUTPUT_VOLTAGE                       = "
    tree.end
    tree "LAB_RING_SUPPRESSION_CTL"
      sgroup "LAB_RING_SUPPRESSION_CTL (at 0x1de42)"
        set &access:&cmd_addr %l (0x80de420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ENABLE_RING_SUPPRESSION                  = " "0, 1"
    tree.end
    tree "LAB_VREF_SEL"
      sgroup "LAB_VREF_SEL (at 0x1de43)"
        set &access:&cmd_addr %l (0x80de430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREF_SEL                                 = " "0 (SUMMIT_BG),1 (PMIC_BG)"
    tree.end
    tree "LAB_LCD_AMOLED_SEL"
      sgroup "LAB_LCD_AMOLED_SEL (at 0x1de44)"
        set &access:&cmd_addr %l (0x80de440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LCD_AMOLED_SELECT                        = " "0 (LCD_MODE),1 (AMOLED_MODE)"
    tree.end
    tree "LAB_MODULE_RDY"
      sgroup "LAB_MODULE_RDY (at 0x1de45)"
        set &access:&cmd_addr %l (0x80de450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODULE_RDY                               = " "0 (LAB_NOT_RDY),1 (LAB_RDY)"
    tree.end
    tree "LAB_ENABLE_CTL"
      sgroup "LAB_ENABLE_CTL (at 0x1de46)"
        set &access:&cmd_addr %l (0x80de460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODULE_EN                                = " "0 (MODULE_DIS),1 (MODULE_EN)"
    tree.end
    tree "LAB_PD_CTL"
      sgroup "LAB_PD_CTL (at 0x1de47)"
        set &access:&cmd_addr %l (0x80de470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DIS_PULLDOWN                             = " "0 (EN_PD),1 (DIS_PD)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PD_STRENGTH                              = " "0 (PD_WEAK),1 (PD_STRONG)"
    tree.end
    tree "LAB_CLK_DIV"
      sgroup "LAB_CLK_DIV (at 0x1de48)"
        set &access:&cmd_addr %l (0x80de480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "LAB_IBB_EN_RDY"
      sgroup "LAB_IBB_EN_RDY (at 0x1de49)"
        set &access:&cmd_addr %l (0x80de490|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde490|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   IBB_EN_RDY                               = " "0 (IBB_EN_NOT_RDY),1 (IBB_EN_RDY)"
    tree.end
    tree "LAB_CURRENT_LIMIT"
      sgroup "LAB_CURRENT_LIMIT (at 0x1de4b)"
        set &access:&cmd_addr %l (0x80de4b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde4b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CURRENT_LIMIT                         = " "0 (ILIM_DIS),1 (ILIM_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OVERRIDE_CURRENT_MAX                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SET_CURRENT_MAX                          = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LAB_CURRENT_SENSE"
      sgroup "LAB_CURRENT_SENSE (at 0x1de4c)"
        set &access:&cmd_addr %l (0x80de4c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde4c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ISENSE_TAP                               = " "0 (X0P8),1 (X0P9),2 (X1),3 (X1P1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ISENSE_GAIN                              = " "0 (X0P5),1 (X1),2 (X1P5),3 (X2)"
    tree.end
    tree "LAB_LOOP_COMP_CTL"
      sgroup "LAB_LOOP_COMP_CTL (at 0x1de4d)"
        set &access:&cmd_addr %l (0x80de4d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde4d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   LOOP_COMP_CAP                            = " "0 (COMP_CAP_16PF),1 (COMP_CAP_24PF),2 (COMP_CAP_32PF),3 (COMP_CAP_40PF)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LOOP_COMP_RES                            = " "0 (COMP_RES_100K),1 (COMP_RES_200K),2 (COMP_RES_500K),3 (COMP_RES_600K)"
    tree.end
    tree "LAB_SLOPE_COMP_CURRENT"
      sgroup "LAB_SLOPE_COMP_CURRENT (at 0x1de4e)"
        set &access:&cmd_addr %l (0x80de4e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde4e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x3 "  [ 3: 1]   SLOPE_COMP_CURRENT                       = " "0 (COMP_CURR_4P5UA),1 (COMP_CURR_4UA),2 (COMP_CURR_3P5UA),3 (COMP_CURR_3UA),4 (COMP_CURR_2P5UA),5 (COMP_CURR_2UA),6 (COMP_CURR_1P5UA),7 (COMP_CURR_1UA)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SLOPE_COMP_DOUBLER                       = " "0 (DO_NOT_DOUBLE),1 (DOUBLE)"
    tree.end
    tree "LAB_IP_ZERO_DETECTOR"
      sgroup "LAB_IP_ZERO_DETECTOR (at 0x1de4f)"
        set &access:&cmd_addr %l (0x80de4f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde4f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   VOLTAGE_OFFSET                           = " "0 (VOFF_0MV),1 (VOFF_1P5MV),2 (VOFF_3MV),3 (VOFF_4P5MV)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ZX_DETECT_ON                             = " "0 (IPZERODET_ZERO),1 (IPZERODET_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   AUTOZERO_ON                              = " "0 (AUTO_ZERORING_DISABLED),1 (AUTO_ZEROING_ENABLED)"
    tree.end
    tree "LAB_PS_CTL"
      sgroup "LAB_PS_CTL (at 0x1de50)"
        set &access:&cmd_addr %l (0x80de500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PS                                    = " "0 (PWM),1 (PULSE_SKIP)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SEL_DIG_PS                               = " "0 (ANALOG_PS),1 (DIGITAL_PS)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SEL_PS_TABLE                             = " "0 (PS_TABLE_0),1 (PS_TABLE_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PS_THRESHOLD                             = " "0 (MA20),1 (MA30),2 (MA40),3 (MA50)"
    tree.end
    tree "LAB_PWM_CTL_1"
      sgroup "LAB_PWM_CTL_1 (at 0x1de51)"
        set &access:&cmd_addr %l (0x80de510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_MAX_DUTY_CYCLE                        = " "0 (DIS_MAX_DUTY),1 (EN_MAX_DUTY)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_D_MODULATION                          = " "0 (DIS_D_MODULATION),1 (EN_D_MODULATION)"
    tree.end
    tree "LAB_PWM_CTL_2"
      sgroup "LAB_PWM_CTL_2 (at 0x1de52)"
        set &access:&cmd_addr %l (0x80de520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ERR_AMP_GAIN                             = " "0 (LOW_GAIN),1 (HIGH_GAIN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_AUTO_ASYNC                            = " "0 (DIS_AUTO_AYSNC),1 (EN_AUTO_ASYNC)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   BLANK_TIME                               = " "0 (NS5),1 (NS10),2 (NS20),3 (NS35)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MIN_DUTY_CYCLE                           = " "0 (PCT3P9),1 (PCT5P8),2 (PCT7P7),3 (PCT9P2)"
    tree.end
    tree "LAB_RDSON_MNGMNT"
      sgroup "LAB_RDSON_MNGMNT (at 0x1de53)"
        set &access:&cmd_addr %l (0x80de530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   NFET_SLEW                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PFET_SLEW                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   NFET_SW_SIZE                             = " "0 (RDSON_QUARTER),1 (RDSON_HALF),2 (RDSON_THREE_FOURTH),3 (RDSON_FULLSIZE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFET_SW_SIZE                             = " "0 (RDSON_QUARTER),1 (RDSON_HALF),2 (RDSON_THREE_FOURTH),3 (RDSON_FULLSIZE)"
    tree.end
    tree "LAB_SHORT_CIRCUIT_CTL"
      sgroup "LAB_SHORT_CIRCUIT_CTL (at 0x1de54)"
        set &access:&cmd_addr %l (0x80de540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SHORT_CIRCUIT_DEB                        = " "0 (US2),1 (US4),2 (US16),3 (US32)"
    tree.end
    tree "LAB_VREG_OK_CTL"
      sgroup "LAB_VREG_OK_CTL (at 0x1de55)"
        set &access:&cmd_addr %l (0x80de550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VREG_OK_DEB                              = " "0 (US10),1 (US20),2 (US30),3 (US40)"
    tree.end
    tree "LAB_AFVC"
      sgroup "LAB_AFVC (at 0x1de5d)"
        set &access:&cmd_addr %l (0x80de5d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde5d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   AFVC_ENABLE                              = " "0 (AFVC_DIS),1 (AFVC_EN)"
    tree.end
    tree "LAB_PRECHARGE_CTL"
      sgroup "LAB_PRECHARGE_CTL (at 0x1de5e)"
        set &access:&cmd_addr %l (0x80de5e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde5e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FAST_PRECHARGE                           = " "0 (SLOW_PRECHARGE),1 (FAST_PRECHARGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SELECT_THE_MAX_PRECHARGE_TIME            = " "0 (US200),1 (US300),2 (US400),3 (US500)"
    tree.end
    tree "LAB_SOFT_START_CTL"
      sgroup "LAB_SOFT_START_CTL (at 0x1de5f)"
        set &access:&cmd_addr %l (0x80de5f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde5f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SELECT_THE_MAX_SOFT_START_TIME           = " "0 (US200),1 (US400),2 (US600),3 (US800)"
    tree.end
    tree "LAB_SPARE_CTL"
      sgroup "LAB_SPARE_CTL (at 0x1de60)"
        set &access:&cmd_addr %l (0x80de600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xde600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x3 "  [ 3: 1]   SPARES                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DIS_SHORT_CIRCUIT_PROTECTION             = " "0 (EN_SCP),1 (DIS_SCP)"
    tree.end
    tree "LAB_SEC_ACCESS"
      sgroup "LAB_SEC_ACCESS (at 0x1ded0)"
        set &access:&cmd_addr %l (0x80ded00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xded00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LAB_PERPH_RESET_CTL1"
      sgroup "LAB_PERPH_RESET_CTL1 (at 0x1ded8)"
        set &access:&cmd_addr %l (0x80ded80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xded80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "LAB_PERPH_RESET_CTL2"
      sgroup "LAB_PERPH_RESET_CTL2 (at 0x1ded9)"
        set &access:&cmd_addr %l (0x80ded90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xded90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "LAB_PERPH_RESET_CTL3"
      sgroup "LAB_PERPH_RESET_CTL3 (at 0x1deda)"
        set &access:&cmd_addr %l (0x80deda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdeda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "LAB_PERPH_RESET_CTL4"
      sgroup "LAB_PERPH_RESET_CTL4 (at 0x1dedb)"
        set &access:&cmd_addr %l (0x80dedb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdedb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LAB_INT_TEST1"
      sgroup "LAB_INT_TEST1 (at 0x1dee0)"
        set &access:&cmd_addr %l (0x80dee00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LAB_INT_TEST_VAL"
      sgroup "LAB_INT_TEST_VAL (at 0x1dee1)"
        set &access:&cmd_addr %l (0x80dee10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SC_ERROR_TEST_VAL                        = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LAB_DTEST1_ACCESS"
      sgroup "LAB_DTEST1_ACCESS (at 0x1dee2)"
        set &access:&cmd_addr %l (0x80dee20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1_ACCESS                            = " "0 (NO_SIGNAL),1 (CURR_COMP),2 (DUTYCYCLE_COMP),3 (D0P3_COMP),4 (VREG_OK_COMP),5 (LAB_EN),6 (SHORT_ALARM),7 (PULSESKIP_COMP)"
    tree.end
    tree "LAB_DTEST2_ACCESS"
      sgroup "LAB_DTEST2_ACCESS (at 0x1dee3)"
        set &access:&cmd_addr %l (0x80dee30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2_ACCESS                            = " "0 (NO_SIGNAL),1 (SWIRE_LAB_EN),2 (NGATE),3 (CLOCK_19P2M),4 (ZX_COMP),5 (DIG_PS_2),6 (PRECHARGE_TIMEOUT),7 (PSLOW_COMP)"
    tree.end
    tree "LAB_DTEST3_ACCESS"
      sgroup "LAB_DTEST3_ACCESS (at 0x1dee4)"
        set &access:&cmd_addr %l (0x80dee40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3_ACCESS                            = " "0 (NO_SIGNAL),1 (EN_RISEDLY),2 (PGATE),3 (SENSE_SW_CNT),4 (SSEND_COMP),5 (DIG_PS_1),6 (CLK_19P2M_REQ),7 (CLK_DLY)"
    tree.end
    tree "LAB_DTEST4_ACCESS"
      sgroup "LAB_DTEST4_ACCESS (at 0x1dee5)"
        set &access:&cmd_addr %l (0x80dee50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4_ACCESS                            = " "0 (NO_SIGNAL),1 (VOK_DEBOUNCE),2 (SHORT_ALARM_DEBOUNCE),3 (DIS_CHG_FNC),4 (ILIMIT_COMP),5 (DIG_PS_0),6 (CLK_MASK),7 (MAXD)"
    tree.end
    tree "LAB_ATEST1_ACCESS"
      sgroup "LAB_ATEST1_ACCESS (at 0x1dee6)"
        set &access:&cmd_addr %l (0x80dee60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST1_ACCESS                            = " "0 (NO_SIGNAL),1 (ERRAMP_OUT),2 (VREF1P25_BUF),3 (PFET_D),4 (VBSP_UNTRIM),5 (VC_TRIM_OUT),6 (PVDD_DIV_D0P3),7 (NO_SIGNAL_2)"
    tree.end
    tree "LAB_ATEST2_ACCESS"
      sgroup "LAB_ATEST2_ACCESS (at 0x1dee7)"
        set &access:&cmd_addr %l (0x80dee70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST2_ACCESS                            = " "0 (NO_SIGNAL),1 (VOUT_DIV),2 (VOUT_DIV_VOKCOMP),3 (PVDD_DIV_DUTYLOW),4 (VOUT_1P25),5 (PVDD_DIV_CURR),6 (PGND),7 (VREF_ERRAMP)"
    tree.end
    tree "LAB_ATEST3_ACCESS"
      sgroup "LAB_ATEST3_ACCESS (at 0x1dee8)"
        set &access:&cmd_addr %l (0x80dee80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST3_ACCESS                            = " "0 (NO_SIGNAL),1 (VREF_EA_SS),2 (VREF_PS),3 (NFET_DSNS)"
    tree.end
    tree "LAB_ATEST4_ACCESS"
      sgroup "LAB_ATEST4_ACCESS (at 0x1dee9)"
        set &access:&cmd_addr %l (0x80dee90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdee90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST4_ACCESS                            = " "0 (NO_SIGNAL),1 (VREF_SSEND_COMP),2 (PFET_S),3 (IMAX_VREF)"
    tree.end
    tree "LAB_TEST_CTL"
      sgroup "LAB_TEST_CTL (at 0x1deea)"
        set &access:&cmd_addr %l (0x80deea0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdeea0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PFET_OVERRIDE                         = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFET_CTL                                 = " "0 (OFF),1 (ON)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_NFET_OVERRIDE                         = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NFET_CTL                                 = " "0 (OFF),1 (ON)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FORCE_OFF_WIRTE_ONCE                     = " "0 (NOT_FORCE_OFF),1 (FORCE_OFF)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MODULE_FORCE_ON                          = " "0 (NOT_FORCE_ON),1 (FORCE_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SCALE_ILIM                               = " "0 (X1),1 (X0P5),2 (X0P33),3 (X0P25)"
    tree.end
    tree "LAB_DEBOUNCER_OVERRIDE"
      sgroup "LAB_DEBOUNCER_OVERRIDE (at 0x1deeb)"
        set &access:&cmd_addr %l (0x80deeb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdeeb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEB_VREG_OK                              = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DEB_SC                                   = " "0 (NO_OVERRIDE),1 (BYPASS_DEBOUNCER),2 (OVERRIDE_TO_0),3 (OVERRIDE_TO_1)"
    tree.end
    tree "LAB_TRIM_NUM"
      sgroup "LAB_TRIM_NUM (at 0x1def0)"
        set &access:&cmd_addr %l (0x80def00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdef00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LAB_TRIM_CTL1"
      sgroup "LAB_TRIM_CTL1 (at 0x1def1)"
        set &access:&cmd_addr %l (0x80def10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xdef10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIM_EN                                  = " "0 (TRIM_ENB),1 (TRIM_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIM_VALUE_SIGN                          = " "0 (NEG_OFFS_ADDING),1 (POS_OFFS_ADDING)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ERR_AMP_OFFSET_TRIM                      = "
    tree.end
  tree.end
tree.end
tree "LDO1"
  tree "LDO1"
    tree "LDO1_REVISION1"
      sgroup "LDO1_REVISION1 (at 0x14000)"
        set &access:&cmd_addr %l (0x8040000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LDO1_REVISION2"
      sgroup "LDO1_REVISION2 (at 0x14001)"
        set &access:&cmd_addr %l (0x8040010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LDO1_REVISION3"
      sgroup "LDO1_REVISION3 (at 0x14002)"
        set &access:&cmd_addr %l (0x8040020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "LDO1_REVISION4"
      sgroup "LDO1_REVISION4 (at 0x14003)"
        set &access:&cmd_addr %l (0x8040030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "LDO1_PERPH_TYPE"
      sgroup "LDO1_PERPH_TYPE (at 0x14004)"
        set &access:&cmd_addr %l (0x8040040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LDO1_PERPH_SUBTYPE"
      sgroup "LDO1_PERPH_SUBTYPE (at 0x14005)"
        set &access:&cmd_addr %l (0x8040050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LDO1_STATUS1"
      sgroup "LDO1_STATUS1 (at 0x14008)"
        set &access:&cmd_addr %l (0x8040080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (LDO_VOLTAGE_LOW),1 (LDO_VOLTAGE_OK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS_DETECTED                             = " "0 (UPPER_LIMIT_SETTING_OK),1 (UPPER_LIMIT_SETTING_ERR)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_OVERLIMIT)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE_DETECTED                      = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NOT_NPM_OR_VOLTAGE_NOT_OK),1 (NPM_VOLTAGE_OK)"
    tree.end
    tree "LDO1_STATUS2"
      sgroup "LDO1_STATUS2 (at 0x14009)"
        set &access:&cmd_addr %l (0x8040090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFTSTART_DONE                           = " "0 (SOFTSTART_NOT_DONE),1 (SOFTSTART_DONE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_CURRENT_DETECTED                    = " "0 (NO_OVER_CURRENT_DETECTED),1 (OVER_CURRENT_DETECTED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   VREG_ON                                  = " "0 (LDO_OFF),1 (LDO_ON)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LDO_RANGE_EXT                            = " "0 (LDO_RANGE_NOT_EXTENDED),1 (LDO_RANGE_EXTENDED)"
    tree.end
    tree "LDO1_STATUS3"
      sgroup "LDO1_STATUS3 (at 0x1400a)"
        set &access:&cmd_addr %l (0x80400a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x400a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LDO_RANGE_SEL                            = " "0 (LDO_RANGE_NOT_SELECTED),1 (LDO_RANGE_SELECTED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LDO_VSET                                 = "
    tree.end
    tree "LDO1_INT_RT_STS"
      sgroup "LDO1_INT_RT_STS (at 0x14010)"
        set &access:&cmd_addr %l (0x8040100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_RT_STS                       = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_RT_STS                           = " "0 (LDO_ENABLE_ERR),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO1_INT_SET_TYPE"
      sgroup "LDO1_INT_SET_TYPE (at 0x14011)"
        set &access:&cmd_addr %l (0x8040110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TYPE                         = " "0 (LIMIT_ERROR_EDGE_TRIGGERED),1 (LIMIT_ERROR_LEVEL_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TYPE                             = " "0 (VREG_OK_EDGE_TRIGGERED),1 (VREG_OK_LEVEL_TRIGGERED)"
    tree.end
    tree "LDO1_INT_POLARITY_HIGH"
      sgroup "LDO1_INT_POLARITY_HIGH (at 0x14012)"
        set &access:&cmd_addr %l (0x8040120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_HIGH                         = " "0 (LIMIT_ERROR_HIGH_DISABLED),1 (LIMIT_ERROR_HIGH_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_HIGH                             = " "0 (VREG_OK_LOW_DISABLED),1 (VREG_OK_LOW_TRIGGERED)"
    tree.end
    tree "LDO1_INT_POLARITY_LOW"
      sgroup "LDO1_INT_POLARITY_LOW (at 0x14013)"
        set &access:&cmd_addr %l (0x8040130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LOW                          = " "0 (LIMIT_ERROR_FALLING_TRIGGERED),1 (LIMIT_ERROR_RISING_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LOW                              = " "0 (VREG_OK_FALLING_TRIGGERED),1 (VREG_OK_RISING_TRIGGERED)"
    tree.end
    tree "LDO1_INT_LATCHED_CLR"
      sgroup "LDO1_INT_LATCHED_CLR (at 0x14014)"
        set &access:&cmd_addr %l (0x8040140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_CLR                  = " "0 (LIMIT_ERROR_NOT_REARM),1 (LIMIT_ERROR_REARM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_CLR                      = " "0 (VREG_OK_ERROR_NOT_REARM),1 (VREG_OK_ERROR_REARM)"
    tree.end
    tree "LDO1_INT_EN_SET"
      sgroup "LDO1_INT_EN_SET (at 0x14015)"
        set &access:&cmd_addr %l (0x8040150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_SET                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_SET                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO1_INT_EN_CLR"
      sgroup "LDO1_INT_EN_CLR (at 0x14016)"
        set &access:&cmd_addr %l (0x8040160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_EN_CLR                       = " "0 (LIMIT_ERROR_DISABLED),1 (LIMIT_ERROR_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_EN_CLR                           = " "0 (VREG_OK_ERROR_DISABLED),1 (VREG_OK_ERROR_ENABLED)"
    tree.end
    tree "LDO1_INT_LATCHED_STS"
      sgroup "LDO1_INT_LATCHED_STS (at 0x14018)"
        set &access:&cmd_addr %l (0x8040180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_LATCHED_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_LATCHED_STS                      = " "0 (LDO_VOLTAGE_OK),1 (LDO_VOLTAGE_LOW)"
    tree.end
    tree "LDO1_INT_PENDING_STS"
      sgroup "LDO1_INT_PENDING_STS (at 0x14019)"
        set &access:&cmd_addr %l (0x8040190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_PENDING_STS                  = " "0 (VOLTAGE_LEVEL_SETTING_OK),1 (VOLTAGE_LEVEL_SETTING_UNDERLIMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_PENDING_STS                      = " "0 (LDO_ENABLE_FALSE),1 (LDO_ENABLE_SUCCESS)"
    tree.end
    tree "LDO1_INT_MID_SEL"
      sgroup "LDO1_INT_MID_SEL (at 0x1401a)"
        set &access:&cmd_addr %l (0x80401a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x401a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_SEL_0),1 (INT_MID_SEL_1),2 (reserved),3 (reserved)"
    tree.end
    tree "LDO1_INT_PRIORITY"
      sgroup "LDO1_INT_PRIORITY (at 0x1401b)"
        set &access:&cmd_addr %l (0x80401b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x401b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_SR),1 (INT_PRIORITY_A)"
    tree.end
    tree "LDO1_VOLTAGE_CTL1"
      sgroup "LDO1_VOLTAGE_CTL1 (at 0x14040)"
        set &access:&cmd_addr %l (0x8040400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   RANGE                                    = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO1_VOLTAGE_CTL2"
      sgroup "LDO1_VOLTAGE_CTL2 (at 0x14041)"
        set &access:&cmd_addr %l (0x8040410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VSET                                     = "
    tree.end
    tree "LDO1_MODE_CTL2"
      sgroup "LDO1_MODE_CTL2 (at 0x14045)"
        set &access:&cmd_addr %l (0x8040450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (FORCED_NPM_FALSE),1 (FORCED_NPM)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BYPASS_ACT                               = " "0 (BYPASS_ACT_FALSE),1 (BYPASS_ACT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BYPASS_EN                                = " "0 (BYPASS_DISABLED),1 (BYPASS_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   NPM_FOLLOW_HW_EN3                        = " "0 (NPM_FOLLOW_HW_EN3_FALSE),1 (NPM_FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   NPM_FOLLOW_HW_EN2                        = " "0 (NPM_FOLLOW_HW_EN2_FALSE),1 (NPM_FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FOLLOW_HW_EN1                        = " "0 (NPM_FOLLOW_HW_EN1_FALSE),1 (NPM_FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NPM_FOLLOW_HW_EN0                        = " "0 (NPM_FOLLOW_HW_EN0_FALSE),1 (NPM_FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO1_EN_CTL"
      sgroup "LDO1_EN_CTL (at 0x14046)"
        set &access:&cmd_addr %l (0x8040460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_LDO_INT                               = " "0 (EN_LDO_INT_FALSE),1 (EN_LDO_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HW_EN3                            = " "0 (FOLLOW_HW_EN3_FALSE),1 (FOLLOW_HW_EN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HW_EN2                            = " "0 (FOLLOW_HW_EN2_FALSE),1 (FOLLOW_HW_EN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HW_EN1                            = " "0 (FOLLOW_HW_EN1_FALSE),1 (FOLLOW_HW_EN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HW_EN0                            = " "0 (FOLLOW_HW_EN0_FALSE),1 (FOLLOW_HW_EN0_TRUE)"
    tree.end
    tree "LDO1_PD_CTL"
      sgroup "LDO1_PD_CTL (at 0x14048)"
        set &access:&cmd_addr %l (0x8040480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PULLDN_EN                                = " "0 (PULLDN_DIABLED),1 (PULLDN_ENABLED)"
    tree.end
    tree "LDO1_CURRENT_LIM_CTL"
      sgroup "LDO1_CURRENT_LIM_CTL (at 0x1404a)"
        set &access:&cmd_addr %l (0x80404a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x404a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_DISABLED),1 (CURRENT_LIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CURRENT_LIM_TESTMODE_EN                  = " "0 (CURRENT_LIM_TESTMODE_DISABLED),1 (CURRENT_LIM_TESTMODE_ENABLED)"
    tree.end
    tree "LDO1_SOFT_START_CTL"
      sgroup "LDO1_SOFT_START_CTL (at 0x1404c)"
        set &access:&cmd_addr %l (0x80404c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x404c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START                               = " "0 (SOFT_START_DISABLED),1 (SOFT_START_ENABLED)"
    tree.end
    tree "LDO1_CONFIG_CTL"
      sgroup "LDO1_CONFIG_CTL (at 0x14052)"
        set &access:&cmd_addr %l (0x8040520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   CLAMP_CTRL                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLAMP_EN                                 = " "0 (CLAMP_DISABLED),1 (CLAMP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CASCADE                                  = " "0 (CASCADE_FALSE),1 (CASCADE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ACT_BYPASS_BUFF_EN                       = " "0 (ACT_BYPASS_BUFF_DISABLED),1 (ACT_BYPASS_BUFF_ENABLED)"
    tree.end
    tree "LDO1_LL_VOLTAGE_CTL1"
      sgroup "LDO1_LL_VOLTAGE_CTL1 (at 0x14068)"
        set &access:&cmd_addr %l (0x8040680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO1_LL_VOLTAGE_CTL2"
      sgroup "LDO1_LL_VOLTAGE_CTL2 (at 0x14069)"
        set &access:&cmd_addr %l (0x8040690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   LL_VSET                                  = "
    tree.end
    tree "LDO1_UL_VOLTAGE_CTL1"
      sgroup "LDO1_UL_VOLTAGE_CTL1 (at 0x1406a)"
        set &access:&cmd_addr %l (0x80406a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x406a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UL_RANGE                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LDO1_UL_VOLTAGE_CTL2"
      sgroup "LDO1_UL_VOLTAGE_CTL2 (at 0x1406b)"
        set &access:&cmd_addr %l (0x80406b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x406b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   UL_VSET                                  = "
    tree.end
    tree "LDO1_SEC_ACCESS"
      sgroup "LDO1_SEC_ACCESS (at 0x140d0)"
        set &access:&cmd_addr %l (0x8040d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LDO1_PERPH_RESET_CTL1"
      sgroup "LDO1_PERPH_RESET_CTL1 (at 0x140d8)"
        set &access:&cmd_addr %l (0x8040d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "LDO1_PERPH_RESET_CTL2"
      sgroup "LDO1_PERPH_RESET_CTL2 (at 0x140d9)"
        set &access:&cmd_addr %l (0x8040d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RB_FALSE),1 (FOLLOW_GLOBAL_SOFT_RB_TRUE)"
    tree.end
    tree "LDO1_PERPH_RESET_CTL3"
      sgroup "LDO1_PERPH_RESET_CTL3 (at 0x140da)"
        set &access:&cmd_addr %l (0x8040da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "LDO1_PERPH_RESET_CTL4"
      sgroup "LDO1_PERPH_RESET_CTL4 (at 0x140db)"
        set &access:&cmd_addr %l (0x8040db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "LDO1_INT_TEST1"
      sgroup "LDO1_INT_TEST1 (at 0x140e0)"
        set &access:&cmd_addr %l (0x8040e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LDO1_INT_TEST_VAL"
      sgroup "LDO1_INT_TEST_VAL (at 0x140e1)"
        set &access:&cmd_addr %l (0x8040e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_TEST_VAL                     = " "0 (LIMIT_ERROR_TEST_VAL_0),1 (LIMIT_ERROR_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_TEST_VAL                         = " "0 (VREG_OK_TEST_VAL_0),1 (VREG_OK_TEST_VAL_1)"
    tree.end
    tree "LDO1_TEST1"
      sgroup "LDO1_TEST1 (at 0x140e2)"
        set &access:&cmd_addr %l (0x8040e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ATEST2                                   = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST1                                   = "
    tree.end
    tree "LDO1_TEST2"
      sgroup "LDO1_TEST2 (at 0x140e3)"
        set &access:&cmd_addr %l (0x8040e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   I_TST_EN                                 = " "0 (I_TST_DISABLED),1 (I_TST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "LDO1_TRIM_NUM"
      sgroup "LDO1_TRIM_NUM (at 0x140f0)"
        set &access:&cmd_addr %l (0x8040f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "LDO1_TRIM_CTRL"
      sgroup "LDO1_TRIM_CTRL (at 0x140f1)"
        set &access:&cmd_addr %l (0x8040f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x40f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIM_CTRL                                = "
    tree.end
  tree.end
tree.end
tree "LPG_CHAN1"
  tree "LPG_CHAN1"
    tree "LPG_CHAN1_REVISION1"
      sgroup "LPG_CHAN1_REVISION1 (at 0x1b100)"
        set &access:&cmd_addr %l (0x80b1000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN1_REVISION2"
      sgroup "LPG_CHAN1_REVISION2 (at 0x1b101)"
        set &access:&cmd_addr %l (0x80b1010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN1_PERPH_TYPE"
      sgroup "LPG_CHAN1_PERPH_TYPE (at 0x1b104)"
        set &access:&cmd_addr %l (0x80b1040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN1_PERPH_SUBTYPE"
      sgroup "LPG_CHAN1_PERPH_SUBTYPE (at 0x1b105)"
        set &access:&cmd_addr %l (0x80b1050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN1_INT_RT_STS"
      sgroup "LPG_CHAN1_INT_RT_STS (at 0x1b110)"
        set &access:&cmd_addr %l (0x80b1100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN1_INT_SET_TYPE"
      sgroup "LPG_CHAN1_INT_SET_TYPE (at 0x1b111)"
        set &access:&cmd_addr %l (0x80b1110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN1_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN1_INT_POLARITY_HIGH (at 0x1b112)"
        set &access:&cmd_addr %l (0x80b1120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_POLARITY_LOW"
      sgroup "LPG_CHAN1_INT_POLARITY_LOW (at 0x1b113)"
        set &access:&cmd_addr %l (0x80b1130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_LATCHED_CLR"
      sgroup "LPG_CHAN1_INT_LATCHED_CLR (at 0x1b114)"
        set &access:&cmd_addr %l (0x80b1140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN1_INT_EN_SET"
      sgroup "LPG_CHAN1_INT_EN_SET (at 0x1b115)"
        set &access:&cmd_addr %l (0x80b1150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_EN_CLR"
      sgroup "LPG_CHAN1_INT_EN_CLR (at 0x1b116)"
        set &access:&cmd_addr %l (0x80b1160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_LATCHED_STS"
      sgroup "LPG_CHAN1_INT_LATCHED_STS (at 0x1b118)"
        set &access:&cmd_addr %l (0x80b1180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN1_INT_PENDING_STS"
      sgroup "LPG_CHAN1_INT_PENDING_STS (at 0x1b119)"
        set &access:&cmd_addr %l (0x80b1190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN1_INT_MID_SEL"
      sgroup "LPG_CHAN1_INT_MID_SEL (at 0x1b11a)"
        set &access:&cmd_addr %l (0x80b11a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb11a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN1_INT_PRIORITY"
      sgroup "LPG_CHAN1_INT_PRIORITY (at 0x1b11b)"
        set &access:&cmd_addr %l (0x80b11b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb11b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN1_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN1_LPG_PATTERN_CONFIG (at 0x1b140)"
        set &access:&cmd_addr %l (0x80b1400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN1_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN1_LPG_PWM_SIZE_CLK (at 0x1b141)"
        set &access:&cmd_addr %l (0x80b1410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN1_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN1_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b142)"
        set &access:&cmd_addr %l (0x80b1420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN1_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN1_LPG_PWM_TYPE_CONFIG (at 0x1b143)"
        set &access:&cmd_addr %l (0x80b1430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
    tree.end
    tree "LPG_CHAN1_PWM_VALUE_LSB"
      sgroup "LPG_CHAN1_PWM_VALUE_LSB (at 0x1b144)"
        set &access:&cmd_addr %l (0x80b1440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN1_PWM_VALUE_MSB"
      sgroup "LPG_CHAN1_PWM_VALUE_MSB (at 0x1b145)"
        set &access:&cmd_addr %l (0x80b1450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN1_ENABLE_CONTROL"
      sgroup "LPG_CHAN1_ENABLE_CONTROL (at 0x1b146)"
        set &access:&cmd_addr %l (0x80b1460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_SLICE                                 = " "0 (SLICE_DIS),1 (SLICE_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN1_PWM_SYNC"
      sgroup "LPG_CHAN1_PWM_SYNC (at 0x1b147)"
        set &access:&cmd_addr %l (0x80b1470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SYNC_PWM                                 = " "0 (NO_SYNC),1 (SYNC)"
    tree.end
    tree "LPG_CHAN1_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN1_RAMP_STEP_DURATION_LSB (at 0x1b150)"
        set &access:&cmd_addr %l (0x80b1500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN1_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN1_RAMP_STEP_DURATION_MSB (at 0x1b151)"
        set &access:&cmd_addr %l (0x80b1510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN1_PAUSE_HI_MULTIPLIER"
      sgroup "LPG_CHAN1_PAUSE_HI_MULTIPLIER (at 0x1b152)"
        set &access:&cmd_addr %l (0x80b1520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT                            = "
    tree.end
    tree "LPG_CHAN1_PAUSE_LO_MULTIPLIER"
      sgroup "LPG_CHAN1_PAUSE_LO_MULTIPLIER (at 0x1b154)"
        set &access:&cmd_addr %l (0x80b1540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT                            = "
    tree.end
    tree "LPG_CHAN1_HI_INDEX"
      sgroup "LPG_CHAN1_HI_INDEX (at 0x1b156)"
        set &access:&cmd_addr %l (0x80b1560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN1_LO_INDEX"
      sgroup "LPG_CHAN1_LO_INDEX (at 0x1b157)"
        set &access:&cmd_addr %l (0x80b1570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN1_SEC_ACCESS"
      sgroup "LPG_CHAN1_SEC_ACCESS (at 0x1b1d0)"
        set &access:&cmd_addr %l (0x80b1d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN1_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN1_PERPH_RESET_CTL2 (at 0x1b1d9)"
        set &access:&cmd_addr %l (0x80b1d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN1_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN1_PERPH_RESET_CTL3 (at 0x1b1da)"
        set &access:&cmd_addr %l (0x80b1da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN1_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN1_PERPH_RESET_CTL4 (at 0x1b1db)"
        set &access:&cmd_addr %l (0x80b1db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN1_INT_TEST1"
      sgroup "LPG_CHAN1_INT_TEST1 (at 0x1b1e0)"
        set &access:&cmd_addr %l (0x80b1e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN1_INT_TEST_VAL"
      sgroup "LPG_CHAN1_INT_TEST_VAL (at 0x1b1e1)"
        set &access:&cmd_addr %l (0x80b1e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN1_TEST1"
      sgroup "LPG_CHAN1_TEST1 (at 0x1b1e2)"
        set &access:&cmd_addr %l (0x80b1e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN1_TEST2"
      sgroup "LPG_CHAN1_TEST2 (at 0x1b1e3)"
        set &access:&cmd_addr %l (0x80b1e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN1_TEST3"
      sgroup "LPG_CHAN1_TEST3 (at 0x1b1e4)"
        set &access:&cmd_addr %l (0x80b1e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN1_TEST4"
      sgroup "LPG_CHAN1_TEST4 (at 0x1b1e5)"
        set &access:&cmd_addr %l (0x80b1e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb1e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "LPG_CHAN2"
  tree "LPG_CHAN2"
    tree "LPG_CHAN2_REVISION1"
      sgroup "LPG_CHAN2_REVISION1 (at 0x1b200)"
        set &access:&cmd_addr %l (0x80b2000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN2_REVISION2"
      sgroup "LPG_CHAN2_REVISION2 (at 0x1b201)"
        set &access:&cmd_addr %l (0x80b2010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN2_PERPH_TYPE"
      sgroup "LPG_CHAN2_PERPH_TYPE (at 0x1b204)"
        set &access:&cmd_addr %l (0x80b2040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN2_PERPH_SUBTYPE"
      sgroup "LPG_CHAN2_PERPH_SUBTYPE (at 0x1b205)"
        set &access:&cmd_addr %l (0x80b2050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN2_INT_RT_STS"
      sgroup "LPG_CHAN2_INT_RT_STS (at 0x1b210)"
        set &access:&cmd_addr %l (0x80b2100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN2_INT_SET_TYPE"
      sgroup "LPG_CHAN2_INT_SET_TYPE (at 0x1b211)"
        set &access:&cmd_addr %l (0x80b2110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN2_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN2_INT_POLARITY_HIGH (at 0x1b212)"
        set &access:&cmd_addr %l (0x80b2120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_POLARITY_LOW"
      sgroup "LPG_CHAN2_INT_POLARITY_LOW (at 0x1b213)"
        set &access:&cmd_addr %l (0x80b2130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_LATCHED_CLR"
      sgroup "LPG_CHAN2_INT_LATCHED_CLR (at 0x1b214)"
        set &access:&cmd_addr %l (0x80b2140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN2_INT_EN_SET"
      sgroup "LPG_CHAN2_INT_EN_SET (at 0x1b215)"
        set &access:&cmd_addr %l (0x80b2150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_EN_CLR"
      sgroup "LPG_CHAN2_INT_EN_CLR (at 0x1b216)"
        set &access:&cmd_addr %l (0x80b2160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_LATCHED_STS"
      sgroup "LPG_CHAN2_INT_LATCHED_STS (at 0x1b218)"
        set &access:&cmd_addr %l (0x80b2180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN2_INT_PENDING_STS"
      sgroup "LPG_CHAN2_INT_PENDING_STS (at 0x1b219)"
        set &access:&cmd_addr %l (0x80b2190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN2_INT_MID_SEL"
      sgroup "LPG_CHAN2_INT_MID_SEL (at 0x1b21a)"
        set &access:&cmd_addr %l (0x80b21a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb21a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN2_INT_PRIORITY"
      sgroup "LPG_CHAN2_INT_PRIORITY (at 0x1b21b)"
        set &access:&cmd_addr %l (0x80b21b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb21b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN2_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN2_LPG_PATTERN_CONFIG (at 0x1b240)"
        set &access:&cmd_addr %l (0x80b2400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN2_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN2_LPG_PWM_SIZE_CLK (at 0x1b241)"
        set &access:&cmd_addr %l (0x80b2410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN2_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN2_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b242)"
        set &access:&cmd_addr %l (0x80b2420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN2_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN2_LPG_PWM_TYPE_CONFIG (at 0x1b243)"
        set &access:&cmd_addr %l (0x80b2430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
    tree.end
    tree "LPG_CHAN2_PWM_VALUE_LSB"
      sgroup "LPG_CHAN2_PWM_VALUE_LSB (at 0x1b244)"
        set &access:&cmd_addr %l (0x80b2440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN2_PWM_VALUE_MSB"
      sgroup "LPG_CHAN2_PWM_VALUE_MSB (at 0x1b245)"
        set &access:&cmd_addr %l (0x80b2450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN2_ENABLE_CONTROL"
      sgroup "LPG_CHAN2_ENABLE_CONTROL (at 0x1b246)"
        set &access:&cmd_addr %l (0x80b2460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_SLICE                                 = " "0 (SLICE_DIS),1 (SLICE_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN2_PWM_SYNC"
      sgroup "LPG_CHAN2_PWM_SYNC (at 0x1b247)"
        set &access:&cmd_addr %l (0x80b2470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SYNC_PWM                                 = " "0 (NO_SYNC),1 (SYNC)"
    tree.end
    tree "LPG_CHAN2_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN2_RAMP_STEP_DURATION_LSB (at 0x1b250)"
        set &access:&cmd_addr %l (0x80b2500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN2_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN2_RAMP_STEP_DURATION_MSB (at 0x1b251)"
        set &access:&cmd_addr %l (0x80b2510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN2_PAUSE_HI_MULTIPLIER"
      sgroup "LPG_CHAN2_PAUSE_HI_MULTIPLIER (at 0x1b252)"
        set &access:&cmd_addr %l (0x80b2520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT                            = "
    tree.end
    tree "LPG_CHAN2_PAUSE_LO_MULTIPLIER"
      sgroup "LPG_CHAN2_PAUSE_LO_MULTIPLIER (at 0x1b254)"
        set &access:&cmd_addr %l (0x80b2540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT                            = "
    tree.end
    tree "LPG_CHAN2_HI_INDEX"
      sgroup "LPG_CHAN2_HI_INDEX (at 0x1b256)"
        set &access:&cmd_addr %l (0x80b2560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN2_LO_INDEX"
      sgroup "LPG_CHAN2_LO_INDEX (at 0x1b257)"
        set &access:&cmd_addr %l (0x80b2570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN2_SEC_ACCESS"
      sgroup "LPG_CHAN2_SEC_ACCESS (at 0x1b2d0)"
        set &access:&cmd_addr %l (0x80b2d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN2_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN2_PERPH_RESET_CTL2 (at 0x1b2d9)"
        set &access:&cmd_addr %l (0x80b2d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN2_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN2_PERPH_RESET_CTL3 (at 0x1b2da)"
        set &access:&cmd_addr %l (0x80b2da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN2_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN2_PERPH_RESET_CTL4 (at 0x1b2db)"
        set &access:&cmd_addr %l (0x80b2db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN2_INT_TEST1"
      sgroup "LPG_CHAN2_INT_TEST1 (at 0x1b2e0)"
        set &access:&cmd_addr %l (0x80b2e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN2_INT_TEST_VAL"
      sgroup "LPG_CHAN2_INT_TEST_VAL (at 0x1b2e1)"
        set &access:&cmd_addr %l (0x80b2e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN2_TEST1"
      sgroup "LPG_CHAN2_TEST1 (at 0x1b2e2)"
        set &access:&cmd_addr %l (0x80b2e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN2_TEST2"
      sgroup "LPG_CHAN2_TEST2 (at 0x1b2e3)"
        set &access:&cmd_addr %l (0x80b2e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN2_TEST3"
      sgroup "LPG_CHAN2_TEST3 (at 0x1b2e4)"
        set &access:&cmd_addr %l (0x80b2e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN2_TEST4"
      sgroup "LPG_CHAN2_TEST4 (at 0x1b2e5)"
        set &access:&cmd_addr %l (0x80b2e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb2e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "LPG_CHAN3"
  tree "LPG_CHAN3"
    tree "LPG_CHAN3_REVISION1"
      sgroup "LPG_CHAN3_REVISION1 (at 0x1b300)"
        set &access:&cmd_addr %l (0x80b3000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN3_REVISION2"
      sgroup "LPG_CHAN3_REVISION2 (at 0x1b301)"
        set &access:&cmd_addr %l (0x80b3010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN3_PERPH_TYPE"
      sgroup "LPG_CHAN3_PERPH_TYPE (at 0x1b304)"
        set &access:&cmd_addr %l (0x80b3040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN3_PERPH_SUBTYPE"
      sgroup "LPG_CHAN3_PERPH_SUBTYPE (at 0x1b305)"
        set &access:&cmd_addr %l (0x80b3050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN3_INT_RT_STS"
      sgroup "LPG_CHAN3_INT_RT_STS (at 0x1b310)"
        set &access:&cmd_addr %l (0x80b3100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN3_INT_SET_TYPE"
      sgroup "LPG_CHAN3_INT_SET_TYPE (at 0x1b311)"
        set &access:&cmd_addr %l (0x80b3110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN3_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN3_INT_POLARITY_HIGH (at 0x1b312)"
        set &access:&cmd_addr %l (0x80b3120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_POLARITY_LOW"
      sgroup "LPG_CHAN3_INT_POLARITY_LOW (at 0x1b313)"
        set &access:&cmd_addr %l (0x80b3130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_LATCHED_CLR"
      sgroup "LPG_CHAN3_INT_LATCHED_CLR (at 0x1b314)"
        set &access:&cmd_addr %l (0x80b3140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN3_INT_EN_SET"
      sgroup "LPG_CHAN3_INT_EN_SET (at 0x1b315)"
        set &access:&cmd_addr %l (0x80b3150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_EN_CLR"
      sgroup "LPG_CHAN3_INT_EN_CLR (at 0x1b316)"
        set &access:&cmd_addr %l (0x80b3160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_LATCHED_STS"
      sgroup "LPG_CHAN3_INT_LATCHED_STS (at 0x1b318)"
        set &access:&cmd_addr %l (0x80b3180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN3_INT_PENDING_STS"
      sgroup "LPG_CHAN3_INT_PENDING_STS (at 0x1b319)"
        set &access:&cmd_addr %l (0x80b3190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN3_INT_MID_SEL"
      sgroup "LPG_CHAN3_INT_MID_SEL (at 0x1b31a)"
        set &access:&cmd_addr %l (0x80b31a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb31a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN3_INT_PRIORITY"
      sgroup "LPG_CHAN3_INT_PRIORITY (at 0x1b31b)"
        set &access:&cmd_addr %l (0x80b31b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb31b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN3_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN3_LPG_PATTERN_CONFIG (at 0x1b340)"
        set &access:&cmd_addr %l (0x80b3400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN3_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN3_LPG_PWM_SIZE_CLK (at 0x1b341)"
        set &access:&cmd_addr %l (0x80b3410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN3_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN3_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b342)"
        set &access:&cmd_addr %l (0x80b3420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN3_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN3_LPG_PWM_TYPE_CONFIG (at 0x1b343)"
        set &access:&cmd_addr %l (0x80b3430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
    tree.end
    tree "LPG_CHAN3_PWM_VALUE_LSB"
      sgroup "LPG_CHAN3_PWM_VALUE_LSB (at 0x1b344)"
        set &access:&cmd_addr %l (0x80b3440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN3_PWM_VALUE_MSB"
      sgroup "LPG_CHAN3_PWM_VALUE_MSB (at 0x1b345)"
        set &access:&cmd_addr %l (0x80b3450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN3_ENABLE_CONTROL"
      sgroup "LPG_CHAN3_ENABLE_CONTROL (at 0x1b346)"
        set &access:&cmd_addr %l (0x80b3460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_SLICE                                 = " "0 (SLICE_DIS),1 (SLICE_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN3_PWM_SYNC"
      sgroup "LPG_CHAN3_PWM_SYNC (at 0x1b347)"
        set &access:&cmd_addr %l (0x80b3470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SYNC_PWM                                 = " "0 (NO_SYNC),1 (SYNC)"
    tree.end
    tree "LPG_CHAN3_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN3_RAMP_STEP_DURATION_LSB (at 0x1b350)"
        set &access:&cmd_addr %l (0x80b3500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN3_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN3_RAMP_STEP_DURATION_MSB (at 0x1b351)"
        set &access:&cmd_addr %l (0x80b3510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN3_PAUSE_HI_MULTIPLIER"
      sgroup "LPG_CHAN3_PAUSE_HI_MULTIPLIER (at 0x1b352)"
        set &access:&cmd_addr %l (0x80b3520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT                            = "
    tree.end
    tree "LPG_CHAN3_PAUSE_LO_MULTIPLIER"
      sgroup "LPG_CHAN3_PAUSE_LO_MULTIPLIER (at 0x1b354)"
        set &access:&cmd_addr %l (0x80b3540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT                            = "
    tree.end
    tree "LPG_CHAN3_HI_INDEX"
      sgroup "LPG_CHAN3_HI_INDEX (at 0x1b356)"
        set &access:&cmd_addr %l (0x80b3560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN3_LO_INDEX"
      sgroup "LPG_CHAN3_LO_INDEX (at 0x1b357)"
        set &access:&cmd_addr %l (0x80b3570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN3_SEC_ACCESS"
      sgroup "LPG_CHAN3_SEC_ACCESS (at 0x1b3d0)"
        set &access:&cmd_addr %l (0x80b3d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN3_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN3_PERPH_RESET_CTL2 (at 0x1b3d9)"
        set &access:&cmd_addr %l (0x80b3d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN3_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN3_PERPH_RESET_CTL3 (at 0x1b3da)"
        set &access:&cmd_addr %l (0x80b3da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN3_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN3_PERPH_RESET_CTL4 (at 0x1b3db)"
        set &access:&cmd_addr %l (0x80b3db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN3_INT_TEST1"
      sgroup "LPG_CHAN3_INT_TEST1 (at 0x1b3e0)"
        set &access:&cmd_addr %l (0x80b3e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN3_INT_TEST_VAL"
      sgroup "LPG_CHAN3_INT_TEST_VAL (at 0x1b3e1)"
        set &access:&cmd_addr %l (0x80b3e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN3_TEST1"
      sgroup "LPG_CHAN3_TEST1 (at 0x1b3e2)"
        set &access:&cmd_addr %l (0x80b3e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN3_TEST2"
      sgroup "LPG_CHAN3_TEST2 (at 0x1b3e3)"
        set &access:&cmd_addr %l (0x80b3e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN3_TEST3"
      sgroup "LPG_CHAN3_TEST3 (at 0x1b3e4)"
        set &access:&cmd_addr %l (0x80b3e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN3_TEST4"
      sgroup "LPG_CHAN3_TEST4 (at 0x1b3e5)"
        set &access:&cmd_addr %l (0x80b3e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb3e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "LPG_CHAN4"
  tree "LPG_CHAN4"
    tree "LPG_CHAN4_REVISION1"
      sgroup "LPG_CHAN4_REVISION1 (at 0x1b400)"
        set &access:&cmd_addr %l (0x80b4000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_CHAN4_REVISION2"
      sgroup "LPG_CHAN4_REVISION2 (at 0x1b401)"
        set &access:&cmd_addr %l (0x80b4010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_CHAN4_PERPH_TYPE"
      sgroup "LPG_CHAN4_PERPH_TYPE (at 0x1b404)"
        set &access:&cmd_addr %l (0x80b4040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_CHAN4_PERPH_SUBTYPE"
      sgroup "LPG_CHAN4_PERPH_SUBTYPE (at 0x1b405)"
        set &access:&cmd_addr %l (0x80b4050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_CHAN4_INT_RT_STS"
      sgroup "LPG_CHAN4_INT_RT_STS (at 0x1b410)"
        set &access:&cmd_addr %l (0x80b4100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_RT_STS                           = " "0, 1"
    tree.end
    tree "LPG_CHAN4_INT_SET_TYPE"
      sgroup "LPG_CHAN4_INT_SET_TYPE (at 0x1b411)"
        set &access:&cmd_addr %l (0x80b4110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TYPE                             = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "LPG_CHAN4_INT_POLARITY_HIGH"
      sgroup "LPG_CHAN4_INT_POLARITY_HIGH (at 0x1b412)"
        set &access:&cmd_addr %l (0x80b4120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_HIGH                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_POLARITY_LOW"
      sgroup "LPG_CHAN4_INT_POLARITY_LOW (at 0x1b413)"
        set &access:&cmd_addr %l (0x80b4130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LOW                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_LATCHED_CLR"
      sgroup "LPG_CHAN4_INT_LATCHED_CLR (at 0x1b414)"
        set &access:&cmd_addr %l (0x80b4140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "LPG_CHAN4_INT_EN_SET"
      sgroup "LPG_CHAN4_INT_EN_SET (at 0x1b415)"
        set &access:&cmd_addr %l (0x80b4150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_SET                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_EN_CLR"
      sgroup "LPG_CHAN4_INT_EN_CLR (at 0x1b416)"
        set &access:&cmd_addr %l (0x80b4160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_EN_CLR                           = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_LATCHED_STS"
      sgroup "LPG_CHAN4_INT_LATCHED_STS (at 0x1b418)"
        set &access:&cmd_addr %l (0x80b4180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_LATCHED_STS                      = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "LPG_CHAN4_INT_PENDING_STS"
      sgroup "LPG_CHAN4_INT_PENDING_STS (at 0x1b419)"
        set &access:&cmd_addr %l (0x80b4190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_PENDING_STS                      = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "LPG_CHAN4_INT_MID_SEL"
      sgroup "LPG_CHAN4_INT_MID_SEL (at 0x1b41a)"
        set &access:&cmd_addr %l (0x80b41a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb41a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "LPG_CHAN4_INT_PRIORITY"
      sgroup "LPG_CHAN4_INT_PRIORITY (at 0x1b41b)"
        set &access:&cmd_addr %l (0x80b41b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb41b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "LPG_CHAN4_LPG_PATTERN_CONFIG"
      sgroup "LPG_CHAN4_LPG_PATTERN_CONFIG (at 0x1b440)"
        set &access:&cmd_addr %l (0x80b4400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RAMP_DIRECTION                           = " "0 (RAMP_HI_TO_LO),1 (RAMP_LO_TO_HI)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PATTERN_REPEAT                           = " "0 (LOOPING_DIS),1 (LOOPING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RAMP_TOGGLE                              = " "0 (TOGGLE_START),1 (TOGGLE_INDEX)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_PAUSE_HI                              = " "0 (PAUSE_HI_DIS),1 (PAUSE_HI_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EN_PAUSE_LO                              = " "0 (PAUSE_LO_DIS),1 (PAUSE_LO_EN)"
    tree.end
    tree "LPG_CHAN4_LPG_PWM_SIZE_CLK"
      sgroup "LPG_CHAN4_LPG_PWM_SIZE_CLK (at 0x1b441)"
        set &access:&cmd_addr %l (0x80b4410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PWM_SIZE                                 = " "0 (PWM_6BIT),1 (PWM_9BIT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_FREQ_CLK_SELECT                      = " "0 (NOCLK),1 (CLK_1KHZ),2 (CLK_32KHZ),3 (CLK_19P2MHZ)"
    tree.end
    tree "LPG_CHAN4_LPG_PWM_FREQ_PREDIV_CLK"
      sgroup "LPG_CHAN4_LPG_PWM_FREQ_PREDIV_CLK (at 0x1b442)"
        set &access:&cmd_addr %l (0x80b4420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   PWM_FREQ_PRE_DIVIDE                      = " "0 (PREDIV_ONE),1 (PREDIV_THREE),2 (PREDIV_FIVE),3 (PREDIV_SIX)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PWM_FREQ_EXPONENT                        = " "0 (EXP_ZERO),1 (EXP_ONE),2 (EXP_TWO),3 (EXP_THREE),4 (EXP_FOUR),5 (EXP_FIVE),6 (EXP_SIX),7 (EXP_SEVEN)"
    tree.end
    tree "LPG_CHAN4_LPG_PWM_TYPE_CONFIG"
      sgroup "LPG_CHAN4_LPG_PWM_TYPE_CONFIG (at 0x1b443)"
        set &access:&cmd_addr %l (0x80b4430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_GLITCH_REMOVAL                        = " "0 (GLITCH_REMOVE_DIS),1 (GLITCH_REMOVE_EN)"
    tree.end
    tree "LPG_CHAN4_PWM_VALUE_LSB"
      sgroup "LPG_CHAN4_PWM_VALUE_LSB (at 0x1b444)"
        set &access:&cmd_addr %l (0x80b4440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PWM_VALUE_LSB                            = "
    tree.end
    tree "LPG_CHAN4_PWM_VALUE_MSB"
      sgroup "LPG_CHAN4_PWM_VALUE_MSB (at 0x1b445)"
        set &access:&cmd_addr %l (0x80b4450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PWM_VALUE_MSB                            = " "0, 1"
    tree.end
    tree "LPG_CHAN4_ENABLE_CONTROL"
      sgroup "LPG_CHAN4_ENABLE_CONTROL (at 0x1b446)"
        set &access:&cmd_addr %l (0x80b4460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_SLICE                                 = " "0 (SLICE_DIS),1 (SLICE_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PWM_OUTPUT                            = " "0 (TRISTATE),1 (BUFFER)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PWM_SRC_SELECT                           = " "0 (LUT),1 (PWM)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_RAMP_GEN                              = " "0 (RAMP_GEN_DIS),1 (RAMP_GEN_EN)"
    tree.end
    tree "LPG_CHAN4_PWM_SYNC"
      sgroup "LPG_CHAN4_PWM_SYNC (at 0x1b447)"
        set &access:&cmd_addr %l (0x80b4470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SYNC_PWM                                 = " "0 (NO_SYNC),1 (SYNC)"
    tree.end
    tree "LPG_CHAN4_RAMP_STEP_DURATION_LSB"
      sgroup "LPG_CHAN4_RAMP_STEP_DURATION_LSB (at 0x1b450)"
        set &access:&cmd_addr %l (0x80b4500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RAMP_STEP_DURATION_LSB                   = "
    tree.end
    tree "LPG_CHAN4_RAMP_STEP_DURATION_MSB"
      sgroup "LPG_CHAN4_RAMP_STEP_DURATION_MSB (at 0x1b451)"
        set &access:&cmd_addr %l (0x80b4510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RAMP_STEP_DURATION_MSB                   = " "0, 1"
    tree.end
    tree "LPG_CHAN4_PAUSE_HI_MULTIPLIER"
      sgroup "LPG_CHAN4_PAUSE_HI_MULTIPLIER (at 0x1b452)"
        set &access:&cmd_addr %l (0x80b4520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_HI_MULT                            = "
    tree.end
    tree "LPG_CHAN4_PAUSE_LO_MULTIPLIER"
      sgroup "LPG_CHAN4_PAUSE_LO_MULTIPLIER (at 0x1b454)"
        set &access:&cmd_addr %l (0x80b4540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PAUSE_LO_MULT                            = "
    tree.end
    tree "LPG_CHAN4_HI_INDEX"
      sgroup "LPG_CHAN4_HI_INDEX (at 0x1b456)"
        set &access:&cmd_addr %l (0x80b4560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   HI_INDEX                                 = "
    tree.end
    tree "LPG_CHAN4_LO_INDEX"
      sgroup "LPG_CHAN4_LO_INDEX (at 0x1b457)"
        set &access:&cmd_addr %l (0x80b4570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   LO_INDEX                                 = "
    tree.end
    tree "LPG_CHAN4_SEC_ACCESS"
      sgroup "LPG_CHAN4_SEC_ACCESS (at 0x1b4d0)"
        set &access:&cmd_addr %l (0x80b4d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_CHAN4_PERPH_RESET_CTL2"
      sgroup "LPG_CHAN4_PERPH_RESET_CTL2 (at 0x1b4d9)"
        set &access:&cmd_addr %l (0x80b4d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN4_PERPH_RESET_CTL3"
      sgroup "LPG_CHAN4_PERPH_RESET_CTL3 (at 0x1b4da)"
        set &access:&cmd_addr %l (0x80b4da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_CHAN4_PERPH_RESET_CTL4"
      sgroup "LPG_CHAN4_PERPH_RESET_CTL4 (at 0x1b4db)"
        set &access:&cmd_addr %l (0x80b4db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "LPG_CHAN4_INT_TEST1"
      sgroup "LPG_CHAN4_INT_TEST1 (at 0x1b4e0)"
        set &access:&cmd_addr %l (0x80b4e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "LPG_CHAN4_INT_TEST_VAL"
      sgroup "LPG_CHAN4_INT_TEST_VAL (at 0x1b4e1)"
        set &access:&cmd_addr %l (0x80b4e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LPG_INT_TEST_VAL                         = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "LPG_CHAN4_TEST1"
      sgroup "LPG_CHAN4_TEST1 (at 0x1b4e2)"
        set &access:&cmd_addr %l (0x80b4e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN4_TEST2"
      sgroup "LPG_CHAN4_TEST2 (at 0x1b4e3)"
        set &access:&cmd_addr %l (0x80b4e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST2                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN4_TEST3"
      sgroup "LPG_CHAN4_TEST3 (at 0x1b4e4)"
        set &access:&cmd_addr %l (0x80b4e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "LPG_CHAN4_TEST4"
      sgroup "LPG_CHAN4_TEST4 (at 0x1b4e5)"
        set &access:&cmd_addr %l (0x80b4e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb4e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST4                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "LPG_LUT"
  tree "LPG_LUT"
    tree "LPG_LUT_REVISION1"
      sgroup "LPG_LUT_REVISION1 (at 0x1b000)"
        set &access:&cmd_addr %l (0x80b0000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "LPG_LUT_REVISION2"
      sgroup "LPG_LUT_REVISION2 (at 0x1b001)"
        set &access:&cmd_addr %l (0x80b0010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "LPG_LUT_PERPH_TYPE"
      sgroup "LPG_LUT_PERPH_TYPE (at 0x1b004)"
        set &access:&cmd_addr %l (0x80b0040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "LPG_LUT_PERPH_SUBTYPE"
      sgroup "LPG_LUT_PERPH_SUBTYPE (at 0x1b005)"
        set &access:&cmd_addr %l (0x80b0050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "LPG_LUT_LUT0_LSB"
      sgroup "LPG_LUT_LUT0_LSB (at 0x1b040)"
        set &access:&cmd_addr %l (0x80b0400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT0_MSB"
      sgroup "LPG_LUT_LUT0_MSB (at 0x1b041)"
        set &access:&cmd_addr %l (0x80b0410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT1_LSB"
      sgroup "LPG_LUT_LUT1_LSB (at 0x1b042)"
        set &access:&cmd_addr %l (0x80b0420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT1_MSB"
      sgroup "LPG_LUT_LUT1_MSB (at 0x1b043)"
        set &access:&cmd_addr %l (0x80b0430|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0430|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT2_LSB"
      sgroup "LPG_LUT_LUT2_LSB (at 0x1b044)"
        set &access:&cmd_addr %l (0x80b0440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT2_MSB"
      sgroup "LPG_LUT_LUT2_MSB (at 0x1b045)"
        set &access:&cmd_addr %l (0x80b0450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT3_LSB"
      sgroup "LPG_LUT_LUT3_LSB (at 0x1b046)"
        set &access:&cmd_addr %l (0x80b0460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT3_MSB"
      sgroup "LPG_LUT_LUT3_MSB (at 0x1b047)"
        set &access:&cmd_addr %l (0x80b0470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT4_LSB"
      sgroup "LPG_LUT_LUT4_LSB (at 0x1b048)"
        set &access:&cmd_addr %l (0x80b0480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT4_MSB"
      sgroup "LPG_LUT_LUT4_MSB (at 0x1b049)"
        set &access:&cmd_addr %l (0x80b0490|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0490|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT5_LSB"
      sgroup "LPG_LUT_LUT5_LSB (at 0x1b04a)"
        set &access:&cmd_addr %l (0x80b04a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT5_MSB"
      sgroup "LPG_LUT_LUT5_MSB (at 0x1b04b)"
        set &access:&cmd_addr %l (0x80b04b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT6_LSB"
      sgroup "LPG_LUT_LUT6_LSB (at 0x1b04c)"
        set &access:&cmd_addr %l (0x80b04c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT6_MSB"
      sgroup "LPG_LUT_LUT6_MSB (at 0x1b04d)"
        set &access:&cmd_addr %l (0x80b04d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT7_LSB"
      sgroup "LPG_LUT_LUT7_LSB (at 0x1b04e)"
        set &access:&cmd_addr %l (0x80b04e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT7_MSB"
      sgroup "LPG_LUT_LUT7_MSB (at 0x1b04f)"
        set &access:&cmd_addr %l (0x80b04f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb04f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT8_LSB"
      sgroup "LPG_LUT_LUT8_LSB (at 0x1b050)"
        set &access:&cmd_addr %l (0x80b0500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT8_MSB"
      sgroup "LPG_LUT_LUT8_MSB (at 0x1b051)"
        set &access:&cmd_addr %l (0x80b0510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT9_LSB"
      sgroup "LPG_LUT_LUT9_LSB (at 0x1b052)"
        set &access:&cmd_addr %l (0x80b0520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT9_MSB"
      sgroup "LPG_LUT_LUT9_MSB (at 0x1b053)"
        set &access:&cmd_addr %l (0x80b0530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT10_LSB"
      sgroup "LPG_LUT_LUT10_LSB (at 0x1b054)"
        set &access:&cmd_addr %l (0x80b0540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT10_MSB"
      sgroup "LPG_LUT_LUT10_MSB (at 0x1b055)"
        set &access:&cmd_addr %l (0x80b0550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT11_LSB"
      sgroup "LPG_LUT_LUT11_LSB (at 0x1b056)"
        set &access:&cmd_addr %l (0x80b0560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT11_MSB"
      sgroup "LPG_LUT_LUT11_MSB (at 0x1b057)"
        set &access:&cmd_addr %l (0x80b0570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT12_LSB"
      sgroup "LPG_LUT_LUT12_LSB (at 0x1b058)"
        set &access:&cmd_addr %l (0x80b0580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT12_MSB"
      sgroup "LPG_LUT_LUT12_MSB (at 0x1b059)"
        set &access:&cmd_addr %l (0x80b0590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT13_LSB"
      sgroup "LPG_LUT_LUT13_LSB (at 0x1b05a)"
        set &access:&cmd_addr %l (0x80b05a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT13_MSB"
      sgroup "LPG_LUT_LUT13_MSB (at 0x1b05b)"
        set &access:&cmd_addr %l (0x80b05b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT14_LSB"
      sgroup "LPG_LUT_LUT14_LSB (at 0x1b05c)"
        set &access:&cmd_addr %l (0x80b05c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT14_MSB"
      sgroup "LPG_LUT_LUT14_MSB (at 0x1b05d)"
        set &access:&cmd_addr %l (0x80b05d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT15_LSB"
      sgroup "LPG_LUT_LUT15_LSB (at 0x1b05e)"
        set &access:&cmd_addr %l (0x80b05e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT15_MSB"
      sgroup "LPG_LUT_LUT15_MSB (at 0x1b05f)"
        set &access:&cmd_addr %l (0x80b05f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb05f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT16_LSB"
      sgroup "LPG_LUT_LUT16_LSB (at 0x1b060)"
        set &access:&cmd_addr %l (0x80b0600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT16_MSB"
      sgroup "LPG_LUT_LUT16_MSB (at 0x1b061)"
        set &access:&cmd_addr %l (0x80b0610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT17_LSB"
      sgroup "LPG_LUT_LUT17_LSB (at 0x1b062)"
        set &access:&cmd_addr %l (0x80b0620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT17_MSB"
      sgroup "LPG_LUT_LUT17_MSB (at 0x1b063)"
        set &access:&cmd_addr %l (0x80b0630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT18_LSB"
      sgroup "LPG_LUT_LUT18_LSB (at 0x1b064)"
        set &access:&cmd_addr %l (0x80b0640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT18_MSB"
      sgroup "LPG_LUT_LUT18_MSB (at 0x1b065)"
        set &access:&cmd_addr %l (0x80b0650|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0650|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT19_LSB"
      sgroup "LPG_LUT_LUT19_LSB (at 0x1b066)"
        set &access:&cmd_addr %l (0x80b0660|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0660|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT19_MSB"
      sgroup "LPG_LUT_LUT19_MSB (at 0x1b067)"
        set &access:&cmd_addr %l (0x80b0670|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0670|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT20_LSB"
      sgroup "LPG_LUT_LUT20_LSB (at 0x1b068)"
        set &access:&cmd_addr %l (0x80b0680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT20_MSB"
      sgroup "LPG_LUT_LUT20_MSB (at 0x1b069)"
        set &access:&cmd_addr %l (0x80b0690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT21_LSB"
      sgroup "LPG_LUT_LUT21_LSB (at 0x1b06a)"
        set &access:&cmd_addr %l (0x80b06a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT21_MSB"
      sgroup "LPG_LUT_LUT21_MSB (at 0x1b06b)"
        set &access:&cmd_addr %l (0x80b06b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT22_LSB"
      sgroup "LPG_LUT_LUT22_LSB (at 0x1b06c)"
        set &access:&cmd_addr %l (0x80b06c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT22_MSB"
      sgroup "LPG_LUT_LUT22_MSB (at 0x1b06d)"
        set &access:&cmd_addr %l (0x80b06d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT23_LSB"
      sgroup "LPG_LUT_LUT23_LSB (at 0x1b06e)"
        set &access:&cmd_addr %l (0x80b06e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT23_MSB"
      sgroup "LPG_LUT_LUT23_MSB (at 0x1b06f)"
        set &access:&cmd_addr %l (0x80b06f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb06f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_LUT24_LSB"
      sgroup "LPG_LUT_LUT24_LSB (at 0x1b070)"
        set &access:&cmd_addr %l (0x80b0700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA                                     = "
    tree.end
    tree "LPG_LUT_LUT24_MSB"
      sgroup "LPG_LUT_LUT24_MSB (at 0x1b071)"
        set &access:&cmd_addr %l (0x80b0710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DATA                                     = " "0, 1"
    tree.end
    tree "LPG_LUT_RAMP_CONTROL"
      sgroup "LPG_LUT_RAMP_CONTROL (at 0x1b0c8)"
        set &access:&cmd_addr %l (0x80b0c80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0c80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S8_RAMP_START                            = " "0 (S8_RAMP_DIS),1 (S8_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   S7_RAMP_START                            = " "0 (S7_RAMP_DIS),1 (S7_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   S6_RAMP_START                            = " "0 (S6_RAMP_DIS),1 (S6_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   S5_RAMP_START                            = " "0 (S5_RAMP_DIS),1 (S5_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   S4_RAMP_START                            = " "0 (S4_RAMP_DIS),1 (S4_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   S3_RAMP_START                            = " "0 (S3_RAMP_DIS),1 (S3_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   S2_RAMP_START                            = " "0 (S2_RAMP_DIS),1 (S2_RAMP_START)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   S1_RAMP_START                            = " "0 (S1_RAMP_DIS),1 (S1_RAMP_START)"
    tree.end
    tree "LPG_LUT_SEC_ACCESS"
      sgroup "LPG_LUT_SEC_ACCESS (at 0x1b0d0)"
        set &access:&cmd_addr %l (0x80b0d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "LPG_LUT_PERPH_RESET_CTL2"
      sgroup "LPG_LUT_PERPH_RESET_CTL2 (at 0x1b0d9)"
        set &access:&cmd_addr %l (0x80b0d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_LUT_PERPH_RESET_CTL3"
      sgroup "LPG_LUT_PERPH_RESET_CTL3 (at 0x1b0da)"
        set &access:&cmd_addr %l (0x80b0da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "LPG_LUT_PERPH_RESET_CTL4"
      sgroup "LPG_LUT_PERPH_RESET_CTL4 (at 0x1b0db)"
        set &access:&cmd_addr %l (0x80b0db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xb0db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
  tree.end
tree.end
tree "MBG1"
  tree "MBG1"
    tree "MBG1_REVISION1"
      sgroup "MBG1_REVISION1 (at 0x2c00)"
        set &access:&cmd_addr %l (0x802c000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MBG1_REVISION2"
      sgroup "MBG1_REVISION2 (at 0x2c01)"
        set &access:&cmd_addr %l (0x802c010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MBG1_REVISION3"
      sgroup "MBG1_REVISION3 (at 0x2c02)"
        set &access:&cmd_addr %l (0x802c020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MBG1_REVISION4"
      sgroup "MBG1_REVISION4 (at 0x2c03)"
        set &access:&cmd_addr %l (0x802c030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MBG1_PERPH_TYPE"
      sgroup "MBG1_PERPH_TYPE (at 0x2c04)"
        set &access:&cmd_addr %l (0x802c040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MBG1_PERPH_SUBTYPE"
      sgroup "MBG1_PERPH_SUBTYPE (at 0x2c05)"
        set &access:&cmd_addr %l (0x802c050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MBG1_STATUS1"
      sgroup "MBG1_STATUS1 (at 0x2c08)"
        set &access:&cmd_addr %l (0x802c080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MBG_OK                                   = " "0 (MBG_NOT_OK),1 (MBG_OK)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (MBG_LPM),1 (MBG_NPM)"
    tree.end
    tree "MBG1_MODE_CTRL"
      sgroup "MBG1_MODE_CTRL (at 0x2c44)"
        set &access:&cmd_addr %l (0x802c440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FORCE_NPM                                = " "0 (NO_FORCE_LPM),1 (FORCE_NPM)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   NPM_FOLLOW_SLEEPB                        = " "0 (NO_FOLLOW),1 (FOLLOW_SLEEP_B)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FORCE_FASTVBG                            = " "0 (NORMAL_MODE),1 (FORCE_FAST_VBG)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FORCE_MBGCC_EN                           = " "0 (CC_DISABLED),1 (CC_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FORCE_IPTAT_EN                           = " "0 (NO_FORCE_IPTAT),1 (FORCE_IPTAT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FORCE_IREF_EN                            = " "0 (NO_FORCE_IREF),1 (FORCE_IREF)"
    tree.end
    tree "MBG1_EN_CTL"
      sgroup "MBG1_EN_CTL (at 0x2c46)"
        set &access:&cmd_addr %l (0x802c460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2c460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MBG_EN                                   = " "0 (MBG_DISABLED),1 (MBG_ENABLED)"
    tree.end
    tree "MBG1_SEC_ACCESS"
      sgroup "MBG1_SEC_ACCESS (at 0x2cd0)"
        set &access:&cmd_addr %l (0x802cd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MBG1_PERPH_RESET_CTL1"
      sgroup "MBG1_PERPH_RESET_CTL1 (at 0x2cd8)"
        set &access:&cmd_addr %l (0x802cd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MBG1_PERPH_RESET_CTL2"
      sgroup "MBG1_PERPH_RESET_CTL2 (at 0x2cd9)"
        set &access:&cmd_addr %l (0x802cd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "MBG1_PERPH_RESET_CTL3"
      sgroup "MBG1_PERPH_RESET_CTL3 (at 0x2cda)"
        set &access:&cmd_addr %l (0x802cda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "MBG1_PERPH_RESET_CTL4"
      sgroup "MBG1_PERPH_RESET_CTL4 (at 0x2cdb)"
        set &access:&cmd_addr %l (0x802cdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "MBG1_TEST1"
      sgroup "MBG1_TEST1 (at 0x2ce2)"
        set &access:&cmd_addr %l (0x802ce20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2ce20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   ATEST1                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST2                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "MBG1_TEST2"
      sgroup "MBG1_TEST2 (at 0x2ce3)"
        set &access:&cmd_addr %l (0x802ce30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2ce30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DIS_BUFFS                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DISCON_CAPS                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   OB_FAST_TRIM_MODE_EN                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MBG_CC_RES_TRIM                          = " "0, 1, 2, 3"
    tree.end
    tree "MBG1_TRIM_NUM"
      sgroup "MBG1_TRIM_NUM (at 0x2cf0)"
        set &access:&cmd_addr %l (0x802cf00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "MBG1_MBG_TRIM1"
      sgroup "MBG1_MBG_TRIM1 (at 0x2cf1)"
        set &access:&cmd_addr %l (0x802cf10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   VBG0_TRIM                                = "
    tree.end
    tree "MBG1_MBG_TRIM2"
      sgroup "MBG1_MBG_TRIM2 (at 0x2cf2)"
        set &access:&cmd_addr %l (0x802cf20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   ISLEEP_TRIM                              = "
    tree.end
    tree "MBG1_MBG_TRIM3"
      sgroup "MBG1_MBG_TRIM3 (at 0x2cf3)"
        set &access:&cmd_addr %l (0x802cf30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   IPTAT_TRIM                               = "
    tree.end
    tree "MBG1_MBG_TRIM4"
      sgroup "MBG1_MBG_TRIM4 (at 0x2cf4)"
        set &access:&cmd_addr %l (0x802cf40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   MBG_CC_TRIM                              = "
    tree.end
    tree "MBG1_MBG_TRIM5"
      sgroup "MBG1_MBG_TRIM5 (at 0x2cf5)"
        set &access:&cmd_addr %l (0x802cf50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   IREF_TRIM                                = "
    tree.end
    tree "MBG1_MBG_TRIM6"
      sgroup "MBG1_MBG_TRIM6 (at 0x2cf6)"
        set &access:&cmd_addr %l (0x802cf60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   VBG1P25_TRIM                             = "
    tree.end
    tree "MBG1_MBG_TRIM7"
      sgroup "MBG1_MBG_TRIM7 (at 0x2cf7)"
        set &access:&cmd_addr %l (0x802cf70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VBG0P625_TRIM                            = "
    tree.end
    tree "MBG1_MBG_TRIM8"
      sgroup "MBG1_MBG_TRIM8 (at 0x2cf8)"
        set &access:&cmd_addr %l (0x802cf80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x2cf80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VBG0P3125_TRIM                           = "
    tree.end
  tree.end
tree.end
tree "MISC"
  tree "MISC"
    tree "MISC_REVISION1"
      sgroup "MISC_REVISION1 (at 0x900)"
        set &access:&cmd_addr %l (0x8009000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MISC_REVISION2"
      sgroup "MISC_REVISION2 (at 0x901)"
        set &access:&cmd_addr %l (0x8009010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MISC_REVISION3"
      sgroup "MISC_REVISION3 (at 0x902)"
        set &access:&cmd_addr %l (0x8009020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MISC_REVISION4"
      sgroup "MISC_REVISION4 (at 0x903)"
        set &access:&cmd_addr %l (0x8009030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MISC_PERPH_TYPE"
      sgroup "MISC_PERPH_TYPE (at 0x904)"
        set &access:&cmd_addr %l (0x8009040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MISC_PERPH_SUBTYPE"
      sgroup "MISC_PERPH_SUBTYPE (at 0x905)"
        set &access:&cmd_addr %l (0x8009050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MISC_STATUS2"
      sgroup "MISC_STATUS2 (at 0x909)"
        set &access:&cmd_addr %l (0x8009090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST                                    = "
    tree.end
    tree "MISC_XVDD_DVDD_SRC_CTL"
      sgroup "MISC_XVDD_DVDD_SRC_CTL (at 0x942)"
        set &access:&cmd_addr %l (0x8009420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   XVDD_DVDD_SRC_CTRL                       = " "0 (USE_LDO),1 (reserved),2 (DO_NOT_USE_LDO),3 (reserved)"
    tree.end
    tree "MISC_DTEST_DRV_CTL"
      sgroup "MISC_DTEST_DRV_CTL (at 0x943)"
        set &access:&cmd_addr %l (0x8009430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_DRV_EN                             = "
    tree.end
    tree "MISC_DTEST_DRV_VAL"
      sgroup "MISC_DTEST_DRV_VAL (at 0x944)"
        set &access:&cmd_addr %l (0x8009440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_VAL                                = "
    tree.end
    tree "MISC_BUCK_CMN_CTL1"
      sgroup "MISC_BUCK_CMN_CTL1 (at 0x945)"
        set &access:&cmd_addr %l (0x8009450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   VPRE_CHARGE_SEL                          = " "0 (VPRE_CHARGE_LOW_RANGE_0P35V),1 (VPRE_CHARGE_LOW_RANGE_0P40V),2 (VPRE_CHARGE_LOW_RANGE_0P45V),3 (VPRE_CHARGE_LOW_RANGE_0P50V)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BYPASS_IBG_DLY                           = " "0 (BYPASS_IBG_DLY_DISABLED),1 (BYPASS_IBG_DLY_ENABLED)"
    tree.end
    tree "MISC_MISC_CTL1"
      sgroup "MISC_MISC_CTL1 (at 0x946)"
        set &access:&cmd_addr %l (0x8009460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MISC_CTL                                 = "
    tree.end
    tree "MISC_LED_IZTC_CTL"
      sgroup "MISC_LED_IZTC_CTL (at 0x947)"
        set &access:&cmd_addr %l (0x8009470|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9470|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_ATEST_LED_IZTC                        = " "0 (ATEST_IZTC_DISABLED),1 (ATEST_IZTC_ENABLED)"
    tree.end
    tree "MISC_TX_GTR_THRES_CTL"
      sgroup "MISC_TX_GTR_THRES_CTL (at 0x94a)"
        set &access:&cmd_addr %l (0x80094a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x94a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TX_GTR_THRES_REG                         = " "0 (TRANSMIT_OVER),1 (GSM_TRANSMIT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TX_GTR_THRES_SEL                         = " "0, 1"
    tree.end
    tree "MISC_SEC_ACCESS"
      sgroup "MISC_SEC_ACCESS (at 0x9d0)"
        set &access:&cmd_addr %l (0x8009d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MISC_PERPH_RESET_CTL2"
      sgroup "MISC_PERPH_RESET_CTL2 (at 0x9d9)"
        set &access:&cmd_addr %l (0x8009d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "MISC_PERPH_RESET_CTL3"
      sgroup "MISC_PERPH_RESET_CTL3 (at 0x9da)"
        set &access:&cmd_addr %l (0x8009da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "MISC_PERPH_RESET_CTL4"
      sgroup "MISC_PERPH_RESET_CTL4 (at 0x9db)"
        set &access:&cmd_addr %l (0x8009db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "MISC_TEST_ACCESS"
      sgroup "MISC_TEST_ACCESS (at 0x9e0)"
        set &access:&cmd_addr %l (0x8009e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TEST_ACCESS_EN                           = " "0 (TEST_ACCESS_DISABLED),1 (TEST_ACCESS_ENABLED)"
    tree.end
    tree "MISC_TRIM_NUM"
      sgroup "MISC_TRIM_NUM (at 0x9f0)"
        set &access:&cmd_addr %l (0x8009f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "MISC_IZTC_TRIM"
      sgroup "MISC_IZTC_TRIM (at 0x9f1)"
        set &access:&cmd_addr %l (0x8009f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IZTC_TRIM                                = "
    tree.end
    tree "MISC_IZTC_TRIM_PROCESS"
      sgroup "MISC_IZTC_TRIM_PROCESS (at 0x9f2)"
        set &access:&cmd_addr %l (0x8009f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x9f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IZTC_TRIM_PROCESS                        = "
    tree.end
  tree.end
tree.end
tree "MPP1"
  tree "MPP1"
    tree "MPP1_REVISION1"
      sgroup "MPP1_REVISION1 (at 0xa000)"
        set &access:&cmd_addr %l (0x80a0000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP1_REVISION2"
      sgroup "MPP1_REVISION2 (at 0xa001)"
        set &access:&cmd_addr %l (0x80a0010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP1_REVISION3"
      sgroup "MPP1_REVISION3 (at 0xa002)"
        set &access:&cmd_addr %l (0x80a0020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP1_REVISION4"
      sgroup "MPP1_REVISION4 (at 0xa003)"
        set &access:&cmd_addr %l (0x80a0030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP1_PERPH_TYPE"
      sgroup "MPP1_PERPH_TYPE (at 0xa004)"
        set &access:&cmd_addr %l (0x80a0040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP1_PERPH_SUBTYPE"
      sgroup "MPP1_PERPH_SUBTYPE (at 0xa005)"
        set &access:&cmd_addr %l (0x80a0050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP1_STATUS1"
      sgroup "MPP1_STATUS1 (at 0xa008)"
        set &access:&cmd_addr %l (0x80a0080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP1_INT_RT_STS"
      sgroup "MPP1_INT_RT_STS (at 0xa010)"
        set &access:&cmd_addr %l (0x80a0100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP1_INT_SET_TYPE"
      sgroup "MPP1_INT_SET_TYPE (at 0xa011)"
        set &access:&cmd_addr %l (0x80a0110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP1_INT_POLARITY_HIGH"
      sgroup "MPP1_INT_POLARITY_HIGH (at 0xa012)"
        set &access:&cmd_addr %l (0x80a0120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP1_INT_POLARITY_LOW"
      sgroup "MPP1_INT_POLARITY_LOW (at 0xa013)"
        set &access:&cmd_addr %l (0x80a0130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP1_INT_LATCHED_CLR"
      sgroup "MPP1_INT_LATCHED_CLR (at 0xa014)"
        set &access:&cmd_addr %l (0x80a0140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP1_INT_EN_SET"
      sgroup "MPP1_INT_EN_SET (at 0xa015)"
        set &access:&cmd_addr %l (0x80a0150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP1_INT_EN_CLR"
      sgroup "MPP1_INT_EN_CLR (at 0xa016)"
        set &access:&cmd_addr %l (0x80a0160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP1_INT_LATCHED_STS"
      sgroup "MPP1_INT_LATCHED_STS (at 0xa018)"
        set &access:&cmd_addr %l (0x80a0180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP1_INT_PENDING_STS"
      sgroup "MPP1_INT_PENDING_STS (at 0xa019)"
        set &access:&cmd_addr %l (0x80a0190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP1_INT_MID_SEL"
      sgroup "MPP1_INT_MID_SEL (at 0xa01a)"
        set &access:&cmd_addr %l (0x80a01a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa01a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP1_INT_PRIORITY"
      sgroup "MPP1_INT_PRIORITY (at 0xa01b)"
        set &access:&cmd_addr %l (0x80a01b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa01b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP1_MODE_CTL"
      sgroup "MPP1_MODE_CTL (at 0xa040)"
        set &access:&cmd_addr %l (0x80a0400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP1_DIG_VIN_CTL"
      sgroup "MPP1_DIG_VIN_CTL (at 0xa041)"
        set &access:&cmd_addr %l (0x80a0410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP1_DIG_PULL_CTL"
      sgroup "MPP1_DIG_PULL_CTL (at 0xa042)"
        set &access:&cmd_addr %l (0x80a0420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP1_DIG_IN_CTL"
      sgroup "MPP1_DIG_IN_CTL (at 0xa043)"
        set &access:&cmd_addr %l (0x80a0430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP1_EN_CTL"
      sgroup "MPP1_EN_CTL (at 0xa046)"
        set &access:&cmd_addr %l (0x80a0460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP1_ANA_OUT_CTL"
      sgroup "MPP1_ANA_OUT_CTL (at 0xa048)"
        set &access:&cmd_addr %l (0x80a0480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP1_ANA_IN_CTL"
      sgroup "MPP1_ANA_IN_CTL (at 0xa04a)"
        set &access:&cmd_addr %l (0x80a04a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa04a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP1_SINK_CTL"
      sgroup "MPP1_SINK_CTL (at 0xa04c)"
        set &access:&cmd_addr %l (0x80a04c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa04c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP1_SEC_ACCESS"
      sgroup "MPP1_SEC_ACCESS (at 0xa0d0)"
        set &access:&cmd_addr %l (0x80a0d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP1_PERPH_RESET_CTL1"
      sgroup "MPP1_PERPH_RESET_CTL1 (at 0xa0d8)"
        set &access:&cmd_addr %l (0x80a0d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP1_PERPH_RESET_CTL2"
      sgroup "MPP1_PERPH_RESET_CTL2 (at 0xa0d9)"
        set &access:&cmd_addr %l (0x80a0d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP1_PERPH_RESET_CTL3"
      sgroup "MPP1_PERPH_RESET_CTL3 (at 0xa0da)"
        set &access:&cmd_addr %l (0x80a0da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP1_PERPH_RESET_CTL4"
      sgroup "MPP1_PERPH_RESET_CTL4 (at 0xa0db)"
        set &access:&cmd_addr %l (0x80a0db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa0db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP2"
  tree "MPP2"
    tree "MPP2_REVISION1"
      sgroup "MPP2_REVISION1 (at 0xa100)"
        set &access:&cmd_addr %l (0x80a1000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP2_REVISION2"
      sgroup "MPP2_REVISION2 (at 0xa101)"
        set &access:&cmd_addr %l (0x80a1010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP2_REVISION3"
      sgroup "MPP2_REVISION3 (at 0xa102)"
        set &access:&cmd_addr %l (0x80a1020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP2_REVISION4"
      sgroup "MPP2_REVISION4 (at 0xa103)"
        set &access:&cmd_addr %l (0x80a1030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP2_PERPH_TYPE"
      sgroup "MPP2_PERPH_TYPE (at 0xa104)"
        set &access:&cmd_addr %l (0x80a1040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP2_PERPH_SUBTYPE"
      sgroup "MPP2_PERPH_SUBTYPE (at 0xa105)"
        set &access:&cmd_addr %l (0x80a1050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP2_STATUS1"
      sgroup "MPP2_STATUS1 (at 0xa108)"
        set &access:&cmd_addr %l (0x80a1080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP2_INT_RT_STS"
      sgroup "MPP2_INT_RT_STS (at 0xa110)"
        set &access:&cmd_addr %l (0x80a1100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP2_INT_SET_TYPE"
      sgroup "MPP2_INT_SET_TYPE (at 0xa111)"
        set &access:&cmd_addr %l (0x80a1110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP2_INT_POLARITY_HIGH"
      sgroup "MPP2_INT_POLARITY_HIGH (at 0xa112)"
        set &access:&cmd_addr %l (0x80a1120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP2_INT_POLARITY_LOW"
      sgroup "MPP2_INT_POLARITY_LOW (at 0xa113)"
        set &access:&cmd_addr %l (0x80a1130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP2_INT_LATCHED_CLR"
      sgroup "MPP2_INT_LATCHED_CLR (at 0xa114)"
        set &access:&cmd_addr %l (0x80a1140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP2_INT_EN_SET"
      sgroup "MPP2_INT_EN_SET (at 0xa115)"
        set &access:&cmd_addr %l (0x80a1150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP2_INT_EN_CLR"
      sgroup "MPP2_INT_EN_CLR (at 0xa116)"
        set &access:&cmd_addr %l (0x80a1160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP2_INT_LATCHED_STS"
      sgroup "MPP2_INT_LATCHED_STS (at 0xa118)"
        set &access:&cmd_addr %l (0x80a1180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP2_INT_PENDING_STS"
      sgroup "MPP2_INT_PENDING_STS (at 0xa119)"
        set &access:&cmd_addr %l (0x80a1190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP2_INT_MID_SEL"
      sgroup "MPP2_INT_MID_SEL (at 0xa11a)"
        set &access:&cmd_addr %l (0x80a11a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa11a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP2_INT_PRIORITY"
      sgroup "MPP2_INT_PRIORITY (at 0xa11b)"
        set &access:&cmd_addr %l (0x80a11b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa11b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP2_MODE_CTL"
      sgroup "MPP2_MODE_CTL (at 0xa140)"
        set &access:&cmd_addr %l (0x80a1400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP2_DIG_VIN_CTL"
      sgroup "MPP2_DIG_VIN_CTL (at 0xa141)"
        set &access:&cmd_addr %l (0x80a1410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP2_DIG_PULL_CTL"
      sgroup "MPP2_DIG_PULL_CTL (at 0xa142)"
        set &access:&cmd_addr %l (0x80a1420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP2_DIG_IN_CTL"
      sgroup "MPP2_DIG_IN_CTL (at 0xa143)"
        set &access:&cmd_addr %l (0x80a1430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP2_EN_CTL"
      sgroup "MPP2_EN_CTL (at 0xa146)"
        set &access:&cmd_addr %l (0x80a1460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP2_ANA_OUT_CTL"
      sgroup "MPP2_ANA_OUT_CTL (at 0xa148)"
        set &access:&cmd_addr %l (0x80a1480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP2_ANA_IN_CTL"
      sgroup "MPP2_ANA_IN_CTL (at 0xa14a)"
        set &access:&cmd_addr %l (0x80a14a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa14a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP2_SINK_CTL"
      sgroup "MPP2_SINK_CTL (at 0xa14c)"
        set &access:&cmd_addr %l (0x80a14c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa14c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP2_SEC_ACCESS"
      sgroup "MPP2_SEC_ACCESS (at 0xa1d0)"
        set &access:&cmd_addr %l (0x80a1d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP2_PERPH_RESET_CTL1"
      sgroup "MPP2_PERPH_RESET_CTL1 (at 0xa1d8)"
        set &access:&cmd_addr %l (0x80a1d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP2_PERPH_RESET_CTL2"
      sgroup "MPP2_PERPH_RESET_CTL2 (at 0xa1d9)"
        set &access:&cmd_addr %l (0x80a1d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP2_PERPH_RESET_CTL3"
      sgroup "MPP2_PERPH_RESET_CTL3 (at 0xa1da)"
        set &access:&cmd_addr %l (0x80a1da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP2_PERPH_RESET_CTL4"
      sgroup "MPP2_PERPH_RESET_CTL4 (at 0xa1db)"
        set &access:&cmd_addr %l (0x80a1db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa1db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP3"
  tree "MPP3"
    tree "MPP3_REVISION1"
      sgroup "MPP3_REVISION1 (at 0xa200)"
        set &access:&cmd_addr %l (0x80a2000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP3_REVISION2"
      sgroup "MPP3_REVISION2 (at 0xa201)"
        set &access:&cmd_addr %l (0x80a2010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP3_REVISION3"
      sgroup "MPP3_REVISION3 (at 0xa202)"
        set &access:&cmd_addr %l (0x80a2020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP3_REVISION4"
      sgroup "MPP3_REVISION4 (at 0xa203)"
        set &access:&cmd_addr %l (0x80a2030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP3_PERPH_TYPE"
      sgroup "MPP3_PERPH_TYPE (at 0xa204)"
        set &access:&cmd_addr %l (0x80a2040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP3_PERPH_SUBTYPE"
      sgroup "MPP3_PERPH_SUBTYPE (at 0xa205)"
        set &access:&cmd_addr %l (0x80a2050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP3_STATUS1"
      sgroup "MPP3_STATUS1 (at 0xa208)"
        set &access:&cmd_addr %l (0x80a2080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP3_INT_RT_STS"
      sgroup "MPP3_INT_RT_STS (at 0xa210)"
        set &access:&cmd_addr %l (0x80a2100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP3_INT_SET_TYPE"
      sgroup "MPP3_INT_SET_TYPE (at 0xa211)"
        set &access:&cmd_addr %l (0x80a2110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP3_INT_POLARITY_HIGH"
      sgroup "MPP3_INT_POLARITY_HIGH (at 0xa212)"
        set &access:&cmd_addr %l (0x80a2120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP3_INT_POLARITY_LOW"
      sgroup "MPP3_INT_POLARITY_LOW (at 0xa213)"
        set &access:&cmd_addr %l (0x80a2130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP3_INT_LATCHED_CLR"
      sgroup "MPP3_INT_LATCHED_CLR (at 0xa214)"
        set &access:&cmd_addr %l (0x80a2140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP3_INT_EN_SET"
      sgroup "MPP3_INT_EN_SET (at 0xa215)"
        set &access:&cmd_addr %l (0x80a2150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP3_INT_EN_CLR"
      sgroup "MPP3_INT_EN_CLR (at 0xa216)"
        set &access:&cmd_addr %l (0x80a2160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP3_INT_LATCHED_STS"
      sgroup "MPP3_INT_LATCHED_STS (at 0xa218)"
        set &access:&cmd_addr %l (0x80a2180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP3_INT_PENDING_STS"
      sgroup "MPP3_INT_PENDING_STS (at 0xa219)"
        set &access:&cmd_addr %l (0x80a2190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP3_INT_MID_SEL"
      sgroup "MPP3_INT_MID_SEL (at 0xa21a)"
        set &access:&cmd_addr %l (0x80a21a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa21a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP3_INT_PRIORITY"
      sgroup "MPP3_INT_PRIORITY (at 0xa21b)"
        set &access:&cmd_addr %l (0x80a21b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa21b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP3_MODE_CTL"
      sgroup "MPP3_MODE_CTL (at 0xa240)"
        set &access:&cmd_addr %l (0x80a2400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP3_DIG_VIN_CTL"
      sgroup "MPP3_DIG_VIN_CTL (at 0xa241)"
        set &access:&cmd_addr %l (0x80a2410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP3_DIG_PULL_CTL"
      sgroup "MPP3_DIG_PULL_CTL (at 0xa242)"
        set &access:&cmd_addr %l (0x80a2420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP3_DIG_IN_CTL"
      sgroup "MPP3_DIG_IN_CTL (at 0xa243)"
        set &access:&cmd_addr %l (0x80a2430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP3_EN_CTL"
      sgroup "MPP3_EN_CTL (at 0xa246)"
        set &access:&cmd_addr %l (0x80a2460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP3_ANA_OUT_CTL"
      sgroup "MPP3_ANA_OUT_CTL (at 0xa248)"
        set &access:&cmd_addr %l (0x80a2480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP3_ANA_IN_CTL"
      sgroup "MPP3_ANA_IN_CTL (at 0xa24a)"
        set &access:&cmd_addr %l (0x80a24a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa24a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP3_SINK_CTL"
      sgroup "MPP3_SINK_CTL (at 0xa24c)"
        set &access:&cmd_addr %l (0x80a24c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa24c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP3_SEC_ACCESS"
      sgroup "MPP3_SEC_ACCESS (at 0xa2d0)"
        set &access:&cmd_addr %l (0x80a2d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP3_PERPH_RESET_CTL1"
      sgroup "MPP3_PERPH_RESET_CTL1 (at 0xa2d8)"
        set &access:&cmd_addr %l (0x80a2d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP3_PERPH_RESET_CTL2"
      sgroup "MPP3_PERPH_RESET_CTL2 (at 0xa2d9)"
        set &access:&cmd_addr %l (0x80a2d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP3_PERPH_RESET_CTL3"
      sgroup "MPP3_PERPH_RESET_CTL3 (at 0xa2da)"
        set &access:&cmd_addr %l (0x80a2da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP3_PERPH_RESET_CTL4"
      sgroup "MPP3_PERPH_RESET_CTL4 (at 0xa2db)"
        set &access:&cmd_addr %l (0x80a2db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa2db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "MPP4"
  tree "MPP4"
    tree "MPP4_REVISION1"
      sgroup "MPP4_REVISION1 (at 0xa300)"
        set &access:&cmd_addr %l (0x80a3000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "MPP4_REVISION2"
      sgroup "MPP4_REVISION2 (at 0xa301)"
        set &access:&cmd_addr %l (0x80a3010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "MPP4_REVISION3"
      sgroup "MPP4_REVISION3 (at 0xa302)"
        set &access:&cmd_addr %l (0x80a3020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "MPP4_REVISION4"
      sgroup "MPP4_REVISION4 (at 0xa303)"
        set &access:&cmd_addr %l (0x80a3030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "MPP4_PERPH_TYPE"
      sgroup "MPP4_PERPH_TYPE (at 0xa304)"
        set &access:&cmd_addr %l (0x80a3040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "MPP4_PERPH_SUBTYPE"
      sgroup "MPP4_PERPH_SUBTYPE (at 0xa305)"
        set &access:&cmd_addr %l (0x80a3050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "MPP4_STATUS1"
      sgroup "MPP4_STATUS1 (at 0xa308)"
        set &access:&cmd_addr %l (0x80a3080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MPP_OK                                   = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_VAL                                  = " "0 (MPP_INPUT_LOW),1 (MPP_INPUT_HIGH)"
    tree.end
    tree "MPP4_INT_RT_STS"
      sgroup "MPP4_INT_RT_STS (at 0xa310)"
        set &access:&cmd_addr %l (0x80a3100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_STS                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "MPP4_INT_SET_TYPE"
      sgroup "MPP4_INT_SET_TYPE (at 0xa311)"
        set &access:&cmd_addr %l (0x80a3110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_TYPE                              = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "MPP4_INT_POLARITY_HIGH"
      sgroup "MPP4_INT_POLARITY_HIGH (at 0xa312)"
        set &access:&cmd_addr %l (0x80a3120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_HIGH                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "MPP4_INT_POLARITY_LOW"
      sgroup "MPP4_INT_POLARITY_LOW (at 0xa313)"
        set &access:&cmd_addr %l (0x80a3130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LOW                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "MPP4_INT_LATCHED_CLR"
      sgroup "MPP4_INT_LATCHED_CLR (at 0xa314)"
        set &access:&cmd_addr %l (0x80a3140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_CLR                       = " "0, 1"
    tree.end
    tree "MPP4_INT_EN_SET"
      sgroup "MPP4_INT_EN_SET (at 0xa315)"
        set &access:&cmd_addr %l (0x80a3150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_SET                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP4_INT_EN_CLR"
      sgroup "MPP4_INT_EN_CLR (at 0xa316)"
        set &access:&cmd_addr %l (0x80a3160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_EN_CLR                            = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "MPP4_INT_LATCHED_STS"
      sgroup "MPP4_INT_LATCHED_STS (at 0xa318)"
        set &access:&cmd_addr %l (0x80a3180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_LATCHED_STS                       = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "MPP4_INT_PENDING_STS"
      sgroup "MPP4_INT_PENDING_STS (at 0xa319)"
        set &access:&cmd_addr %l (0x80a3190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPP_IN_PENDING_STS                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "MPP4_INT_MID_SEL"
      sgroup "MPP4_INT_MID_SEL (at 0xa31a)"
        set &access:&cmd_addr %l (0x80a31a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa31a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "MPP4_INT_PRIORITY"
      sgroup "MPP4_INT_PRIORITY (at 0xa31b)"
        set &access:&cmd_addr %l (0x80a31b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa31b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "MPP4_MODE_CTL"
      sgroup "MPP4_MODE_CTL (at 0xa340)"
        set &access:&cmd_addr %l (0x80a3400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   MODE                                     = " "0 (DIGITAL_INPUT),1 (DIGITAL_OUTPUT),2 (DIGITAL_IN_AND_OUT),3 (BIDIRECTIONAL),4 (ANALOG_INPUT),5 (ANALOG_OUTPUT),6 (CURRENT_SINK),7 (RESERVED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   EN_AND_SOURCE_SEL                        = "
    tree.end
    tree "MPP4_DIG_VIN_CTL"
      sgroup "MPP4_DIG_VIN_CTL (at 0xa341)"
        set &access:&cmd_addr %l (0x80a3410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VOLTAGE_SEL                              = " "0 (VIN0),1 (VIN1),2 (VIN2),3 (VIN3),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP4_DIG_PULL_CTL"
      sgroup "MPP4_DIG_PULL_CTL (at 0xa342)"
        set &access:&cmd_addr %l (0x80a3420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PULLUP_SEL                               = " "0 (R600OHM),1 (OPEN),2 (R10KOHM),3 (R30KOHM),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "MPP4_DIG_IN_CTL"
      sgroup "MPP4_DIG_IN_CTL (at 0xa343)"
        set &access:&cmd_addr %l (0x80a3430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DTEST4                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DTEST3                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DTEST2                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DTEST1                                   = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
    tree.end
    tree "MPP4_EN_CTL"
      sgroup "MPP4_EN_CTL (at 0xa346)"
        set &access:&cmd_addr %l (0x80a3460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (MPP_DISABLED),1 (MPP_ENABLED)"
    tree.end
    tree "MPP4_ANA_OUT_CTL"
      sgroup "MPP4_ANA_OUT_CTL (at 0xa348)"
        set &access:&cmd_addr %l (0x80a3480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   REF_SEL                                  = " "0 (VREF_1V25),1 (VREF_0V625),2 (VREF_0V3125),3 (PAIRED_MPP),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP4_ANA_IN_CTL"
      sgroup "MPP4_ANA_IN_CTL (at 0xa34a)"
        set &access:&cmd_addr %l (0x80a34a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa34a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ROUTE_SEL                                = " "0 (HKADC5),1 (HKADC6),2 (HKADC7),3 (HKADC8),4 (ATEST1),5 (ATEST2),6 (ATEST3),7 (ATEST4)"
    tree.end
    tree "MPP4_SINK_CTL"
      sgroup "MPP4_SINK_CTL (at 0xa34c)"
        set &access:&cmd_addr %l (0x80a34c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa34c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_SEL                              = " "0 (CURRENT_5MA),1 (CURRENT_10MA),2 (CURRENT_15MA),3 (CURRENT_20MA),4 (CURRENT_25MA),5 (CURRENT_30MA),6 (CURRENT_35MA),7 (CURRENT_40MA)"
    tree.end
    tree "MPP4_SEC_ACCESS"
      sgroup "MPP4_SEC_ACCESS (at 0xa3d0)"
        set &access:&cmd_addr %l (0x80a3d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "MPP4_PERPH_RESET_CTL1"
      sgroup "MPP4_PERPH_RESET_CTL1 (at 0xa3d8)"
        set &access:&cmd_addr %l (0x80a3d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "MPP4_PERPH_RESET_CTL2"
      sgroup "MPP4_PERPH_RESET_CTL2 (at 0xa3d9)"
        set &access:&cmd_addr %l (0x80a3d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP4_PERPH_RESET_CTL3"
      sgroup "MPP4_PERPH_RESET_CTL3 (at 0xa3da)"
        set &access:&cmd_addr %l (0x80a3da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "MPP4_PERPH_RESET_CTL4"
      sgroup "MPP4_PERPH_RESET_CTL4 (at 0xa3db)"
        set &access:&cmd_addr %l (0x80a3db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xa3db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT0"
  tree "PBS_CLIENT0"
    tree "PBS_CLIENT0_REVISION1"
      sgroup "PBS_CLIENT0_REVISION1 (at 0x7100)"
        set &access:&cmd_addr %l (0x8071000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT0_REVISION2"
      sgroup "PBS_CLIENT0_REVISION2 (at 0x7101)"
        set &access:&cmd_addr %l (0x8071010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT0_REVISION3"
      sgroup "PBS_CLIENT0_REVISION3 (at 0x7102)"
        set &access:&cmd_addr %l (0x8071020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT0_REVISION4"
      sgroup "PBS_CLIENT0_REVISION4 (at 0x7103)"
        set &access:&cmd_addr %l (0x8071030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT0_PERPH_TYPE"
      sgroup "PBS_CLIENT0_PERPH_TYPE (at 0x7104)"
        set &access:&cmd_addr %l (0x8071040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT0_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT0_PERPH_SUBTYPE (at 0x7105)"
        set &access:&cmd_addr %l (0x8071050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT0_STATUS0"
      sgroup "PBS_CLIENT0_STATUS0 (at 0x7108)"
        set &access:&cmd_addr %l (0x8071080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_STATUS1"
      sgroup "PBS_CLIENT0_STATUS1 (at 0x7109)"
        set &access:&cmd_addr %l (0x8071090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT0_INT_RT_STS"
      sgroup "PBS_CLIENT0_INT_RT_STS (at 0x7110)"
        set &access:&cmd_addr %l (0x8071100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT0_INT_SET_TYPE"
      sgroup "PBS_CLIENT0_INT_SET_TYPE (at 0x7111)"
        set &access:&cmd_addr %l (0x8071110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT0_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT0_INT_POLARITY_HIGH (at 0x7112)"
        set &access:&cmd_addr %l (0x8071120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT0_INT_POLARITY_LOW (at 0x7113)"
        set &access:&cmd_addr %l (0x8071130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT0_INT_LATCHED_CLR (at 0x7114)"
        set &access:&cmd_addr %l (0x8071140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT0_INT_EN_SET"
      sgroup "PBS_CLIENT0_INT_EN_SET (at 0x7115)"
        set &access:&cmd_addr %l (0x8071150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_EN_CLR"
      sgroup "PBS_CLIENT0_INT_EN_CLR (at 0x7116)"
        set &access:&cmd_addr %l (0x8071160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_LATCHED_STS"
      sgroup "PBS_CLIENT0_INT_LATCHED_STS (at 0x7118)"
        set &access:&cmd_addr %l (0x8071180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT0_INT_PENDING_STS"
      sgroup "PBS_CLIENT0_INT_PENDING_STS (at 0x7119)"
        set &access:&cmd_addr %l (0x8071190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT0_INT_MID_SEL"
      sgroup "PBS_CLIENT0_INT_MID_SEL (at 0x711a)"
        set &access:&cmd_addr %l (0x80711a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x711a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT0_INT_PRIORITY"
      sgroup "PBS_CLIENT0_INT_PRIORITY (at 0x711b)"
        set &access:&cmd_addr %l (0x80711b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x711b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT0_TRIG_CFG"
      sgroup "PBS_CLIENT0_TRIG_CFG (at 0x7140)"
        set &access:&cmd_addr %l (0x8071400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT0_TRIG_CTL"
      sgroup "PBS_CLIENT0_TRIG_CTL (at 0x7142)"
        set &access:&cmd_addr %l (0x8071420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT0_EN_CTL"
      sgroup "PBS_CLIENT0_EN_CTL (at 0x7146)"
        set &access:&cmd_addr %l (0x8071460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_SEC_ACCESS"
      sgroup "PBS_CLIENT0_SEC_ACCESS (at 0x71d0)"
        set &access:&cmd_addr %l (0x8071d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT0_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT0_PERPH_RESET_CTL1 (at 0x71d8)"
        set &access:&cmd_addr %l (0x8071d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT0_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT0_PERPH_RESET_CTL2 (at 0x71d9)"
        set &access:&cmd_addr %l (0x8071d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT0_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT0_PERPH_RESET_CTL3 (at 0x71da)"
        set &access:&cmd_addr %l (0x8071da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT0_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT0_PERPH_RESET_CTL4 (at 0x71db)"
        set &access:&cmd_addr %l (0x8071db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT0_INT_TEST1"
      sgroup "PBS_CLIENT0_INT_TEST1 (at 0x71e0)"
        set &access:&cmd_addr %l (0x8071e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT0_INT_TEST_VAL"
      sgroup "PBS_CLIENT0_INT_TEST_VAL (at 0x71e1)"
        set &access:&cmd_addr %l (0x8071e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x71e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT1"
  tree "PBS_CLIENT1"
    tree "PBS_CLIENT1_REVISION1"
      sgroup "PBS_CLIENT1_REVISION1 (at 0x7200)"
        set &access:&cmd_addr %l (0x8072000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT1_REVISION2"
      sgroup "PBS_CLIENT1_REVISION2 (at 0x7201)"
        set &access:&cmd_addr %l (0x8072010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT1_REVISION3"
      sgroup "PBS_CLIENT1_REVISION3 (at 0x7202)"
        set &access:&cmd_addr %l (0x8072020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT1_REVISION4"
      sgroup "PBS_CLIENT1_REVISION4 (at 0x7203)"
        set &access:&cmd_addr %l (0x8072030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT1_PERPH_TYPE"
      sgroup "PBS_CLIENT1_PERPH_TYPE (at 0x7204)"
        set &access:&cmd_addr %l (0x8072040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT1_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT1_PERPH_SUBTYPE (at 0x7205)"
        set &access:&cmd_addr %l (0x8072050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT1_STATUS0"
      sgroup "PBS_CLIENT1_STATUS0 (at 0x7208)"
        set &access:&cmd_addr %l (0x8072080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_STATUS1"
      sgroup "PBS_CLIENT1_STATUS1 (at 0x7209)"
        set &access:&cmd_addr %l (0x8072090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT1_INT_RT_STS"
      sgroup "PBS_CLIENT1_INT_RT_STS (at 0x7210)"
        set &access:&cmd_addr %l (0x8072100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT1_INT_SET_TYPE"
      sgroup "PBS_CLIENT1_INT_SET_TYPE (at 0x7211)"
        set &access:&cmd_addr %l (0x8072110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT1_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT1_INT_POLARITY_HIGH (at 0x7212)"
        set &access:&cmd_addr %l (0x8072120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT1_INT_POLARITY_LOW (at 0x7213)"
        set &access:&cmd_addr %l (0x8072130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT1_INT_LATCHED_CLR (at 0x7214)"
        set &access:&cmd_addr %l (0x8072140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT1_INT_EN_SET"
      sgroup "PBS_CLIENT1_INT_EN_SET (at 0x7215)"
        set &access:&cmd_addr %l (0x8072150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_EN_CLR"
      sgroup "PBS_CLIENT1_INT_EN_CLR (at 0x7216)"
        set &access:&cmd_addr %l (0x8072160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_LATCHED_STS"
      sgroup "PBS_CLIENT1_INT_LATCHED_STS (at 0x7218)"
        set &access:&cmd_addr %l (0x8072180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT1_INT_PENDING_STS"
      sgroup "PBS_CLIENT1_INT_PENDING_STS (at 0x7219)"
        set &access:&cmd_addr %l (0x8072190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT1_INT_MID_SEL"
      sgroup "PBS_CLIENT1_INT_MID_SEL (at 0x721a)"
        set &access:&cmd_addr %l (0x80721a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x721a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT1_INT_PRIORITY"
      sgroup "PBS_CLIENT1_INT_PRIORITY (at 0x721b)"
        set &access:&cmd_addr %l (0x80721b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x721b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT1_TRIG_CFG"
      sgroup "PBS_CLIENT1_TRIG_CFG (at 0x7240)"
        set &access:&cmd_addr %l (0x8072400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT1_TRIG_CTL"
      sgroup "PBS_CLIENT1_TRIG_CTL (at 0x7242)"
        set &access:&cmd_addr %l (0x8072420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT1_EN_CTL"
      sgroup "PBS_CLIENT1_EN_CTL (at 0x7246)"
        set &access:&cmd_addr %l (0x8072460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_SEC_ACCESS"
      sgroup "PBS_CLIENT1_SEC_ACCESS (at 0x72d0)"
        set &access:&cmd_addr %l (0x8072d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT1_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT1_PERPH_RESET_CTL1 (at 0x72d8)"
        set &access:&cmd_addr %l (0x8072d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT1_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT1_PERPH_RESET_CTL2 (at 0x72d9)"
        set &access:&cmd_addr %l (0x8072d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT1_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT1_PERPH_RESET_CTL3 (at 0x72da)"
        set &access:&cmd_addr %l (0x8072da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT1_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT1_PERPH_RESET_CTL4 (at 0x72db)"
        set &access:&cmd_addr %l (0x8072db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT1_INT_TEST1"
      sgroup "PBS_CLIENT1_INT_TEST1 (at 0x72e0)"
        set &access:&cmd_addr %l (0x8072e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT1_INT_TEST_VAL"
      sgroup "PBS_CLIENT1_INT_TEST_VAL (at 0x72e1)"
        set &access:&cmd_addr %l (0x8072e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x72e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT10"
  tree "PBS_CLIENT10"
    tree "PBS_CLIENT10_REVISION1"
      sgroup "PBS_CLIENT10_REVISION1 (at 0x7b00)"
        set &access:&cmd_addr %l (0x807b000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT10_REVISION2"
      sgroup "PBS_CLIENT10_REVISION2 (at 0x7b01)"
        set &access:&cmd_addr %l (0x807b010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT10_REVISION3"
      sgroup "PBS_CLIENT10_REVISION3 (at 0x7b02)"
        set &access:&cmd_addr %l (0x807b020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT10_REVISION4"
      sgroup "PBS_CLIENT10_REVISION4 (at 0x7b03)"
        set &access:&cmd_addr %l (0x807b030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT10_PERPH_TYPE"
      sgroup "PBS_CLIENT10_PERPH_TYPE (at 0x7b04)"
        set &access:&cmd_addr %l (0x807b040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT10_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT10_PERPH_SUBTYPE (at 0x7b05)"
        set &access:&cmd_addr %l (0x807b050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT10_STATUS0"
      sgroup "PBS_CLIENT10_STATUS0 (at 0x7b08)"
        set &access:&cmd_addr %l (0x807b080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_STATUS1"
      sgroup "PBS_CLIENT10_STATUS1 (at 0x7b09)"
        set &access:&cmd_addr %l (0x807b090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT10_INT_RT_STS"
      sgroup "PBS_CLIENT10_INT_RT_STS (at 0x7b10)"
        set &access:&cmd_addr %l (0x807b100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT10_INT_SET_TYPE"
      sgroup "PBS_CLIENT10_INT_SET_TYPE (at 0x7b11)"
        set &access:&cmd_addr %l (0x807b110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT10_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT10_INT_POLARITY_HIGH (at 0x7b12)"
        set &access:&cmd_addr %l (0x807b120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT10_INT_POLARITY_LOW (at 0x7b13)"
        set &access:&cmd_addr %l (0x807b130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT10_INT_LATCHED_CLR (at 0x7b14)"
        set &access:&cmd_addr %l (0x807b140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT10_INT_EN_SET"
      sgroup "PBS_CLIENT10_INT_EN_SET (at 0x7b15)"
        set &access:&cmd_addr %l (0x807b150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_EN_CLR"
      sgroup "PBS_CLIENT10_INT_EN_CLR (at 0x7b16)"
        set &access:&cmd_addr %l (0x807b160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_LATCHED_STS"
      sgroup "PBS_CLIENT10_INT_LATCHED_STS (at 0x7b18)"
        set &access:&cmd_addr %l (0x807b180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT10_INT_PENDING_STS"
      sgroup "PBS_CLIENT10_INT_PENDING_STS (at 0x7b19)"
        set &access:&cmd_addr %l (0x807b190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT10_INT_MID_SEL"
      sgroup "PBS_CLIENT10_INT_MID_SEL (at 0x7b1a)"
        set &access:&cmd_addr %l (0x807b1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT10_INT_PRIORITY"
      sgroup "PBS_CLIENT10_INT_PRIORITY (at 0x7b1b)"
        set &access:&cmd_addr %l (0x807b1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT10_TRIG_CFG"
      sgroup "PBS_CLIENT10_TRIG_CFG (at 0x7b40)"
        set &access:&cmd_addr %l (0x807b400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT10_TRIG_CTL"
      sgroup "PBS_CLIENT10_TRIG_CTL (at 0x7b42)"
        set &access:&cmd_addr %l (0x807b420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT10_EN_CTL"
      sgroup "PBS_CLIENT10_EN_CTL (at 0x7b46)"
        set &access:&cmd_addr %l (0x807b460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7b460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_SEC_ACCESS"
      sgroup "PBS_CLIENT10_SEC_ACCESS (at 0x7bd0)"
        set &access:&cmd_addr %l (0x807bd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT10_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT10_PERPH_RESET_CTL1 (at 0x7bd8)"
        set &access:&cmd_addr %l (0x807bd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT10_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT10_PERPH_RESET_CTL2 (at 0x7bd9)"
        set &access:&cmd_addr %l (0x807bd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT10_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT10_PERPH_RESET_CTL3 (at 0x7bda)"
        set &access:&cmd_addr %l (0x807bda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT10_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT10_PERPH_RESET_CTL4 (at 0x7bdb)"
        set &access:&cmd_addr %l (0x807bdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7bdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT10_INT_TEST1"
      sgroup "PBS_CLIENT10_INT_TEST1 (at 0x7be0)"
        set &access:&cmd_addr %l (0x807be00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7be00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT10_INT_TEST_VAL"
      sgroup "PBS_CLIENT10_INT_TEST_VAL (at 0x7be1)"
        set &access:&cmd_addr %l (0x807be10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7be10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT11"
  tree "PBS_CLIENT11"
    tree "PBS_CLIENT11_REVISION1"
      sgroup "PBS_CLIENT11_REVISION1 (at 0x7c00)"
        set &access:&cmd_addr %l (0x807c000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT11_REVISION2"
      sgroup "PBS_CLIENT11_REVISION2 (at 0x7c01)"
        set &access:&cmd_addr %l (0x807c010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT11_REVISION3"
      sgroup "PBS_CLIENT11_REVISION3 (at 0x7c02)"
        set &access:&cmd_addr %l (0x807c020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT11_REVISION4"
      sgroup "PBS_CLIENT11_REVISION4 (at 0x7c03)"
        set &access:&cmd_addr %l (0x807c030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT11_PERPH_TYPE"
      sgroup "PBS_CLIENT11_PERPH_TYPE (at 0x7c04)"
        set &access:&cmd_addr %l (0x807c040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT11_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT11_PERPH_SUBTYPE (at 0x7c05)"
        set &access:&cmd_addr %l (0x807c050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT11_STATUS0"
      sgroup "PBS_CLIENT11_STATUS0 (at 0x7c08)"
        set &access:&cmd_addr %l (0x807c080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_STATUS1"
      sgroup "PBS_CLIENT11_STATUS1 (at 0x7c09)"
        set &access:&cmd_addr %l (0x807c090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT11_INT_RT_STS"
      sgroup "PBS_CLIENT11_INT_RT_STS (at 0x7c10)"
        set &access:&cmd_addr %l (0x807c100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT11_INT_SET_TYPE"
      sgroup "PBS_CLIENT11_INT_SET_TYPE (at 0x7c11)"
        set &access:&cmd_addr %l (0x807c110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT11_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT11_INT_POLARITY_HIGH (at 0x7c12)"
        set &access:&cmd_addr %l (0x807c120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT11_INT_POLARITY_LOW (at 0x7c13)"
        set &access:&cmd_addr %l (0x807c130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT11_INT_LATCHED_CLR (at 0x7c14)"
        set &access:&cmd_addr %l (0x807c140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT11_INT_EN_SET"
      sgroup "PBS_CLIENT11_INT_EN_SET (at 0x7c15)"
        set &access:&cmd_addr %l (0x807c150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_EN_CLR"
      sgroup "PBS_CLIENT11_INT_EN_CLR (at 0x7c16)"
        set &access:&cmd_addr %l (0x807c160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_LATCHED_STS"
      sgroup "PBS_CLIENT11_INT_LATCHED_STS (at 0x7c18)"
        set &access:&cmd_addr %l (0x807c180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT11_INT_PENDING_STS"
      sgroup "PBS_CLIENT11_INT_PENDING_STS (at 0x7c19)"
        set &access:&cmd_addr %l (0x807c190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT11_INT_MID_SEL"
      sgroup "PBS_CLIENT11_INT_MID_SEL (at 0x7c1a)"
        set &access:&cmd_addr %l (0x807c1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT11_INT_PRIORITY"
      sgroup "PBS_CLIENT11_INT_PRIORITY (at 0x7c1b)"
        set &access:&cmd_addr %l (0x807c1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT11_TRIG_CFG"
      sgroup "PBS_CLIENT11_TRIG_CFG (at 0x7c40)"
        set &access:&cmd_addr %l (0x807c400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT11_TRIG_CTL"
      sgroup "PBS_CLIENT11_TRIG_CTL (at 0x7c42)"
        set &access:&cmd_addr %l (0x807c420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT11_EN_CTL"
      sgroup "PBS_CLIENT11_EN_CTL (at 0x7c46)"
        set &access:&cmd_addr %l (0x807c460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7c460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_SEC_ACCESS"
      sgroup "PBS_CLIENT11_SEC_ACCESS (at 0x7cd0)"
        set &access:&cmd_addr %l (0x807cd00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cd00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT11_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT11_PERPH_RESET_CTL1 (at 0x7cd8)"
        set &access:&cmd_addr %l (0x807cd80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cd80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT11_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT11_PERPH_RESET_CTL2 (at 0x7cd9)"
        set &access:&cmd_addr %l (0x807cd90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cd90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT11_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT11_PERPH_RESET_CTL3 (at 0x7cda)"
        set &access:&cmd_addr %l (0x807cda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT11_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT11_PERPH_RESET_CTL4 (at 0x7cdb)"
        set &access:&cmd_addr %l (0x807cdb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7cdb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT11_INT_TEST1"
      sgroup "PBS_CLIENT11_INT_TEST1 (at 0x7ce0)"
        set &access:&cmd_addr %l (0x807ce00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ce00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT11_INT_TEST_VAL"
      sgroup "PBS_CLIENT11_INT_TEST_VAL (at 0x7ce1)"
        set &access:&cmd_addr %l (0x807ce10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ce10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT2"
  tree "PBS_CLIENT2"
    tree "PBS_CLIENT2_REVISION1"
      sgroup "PBS_CLIENT2_REVISION1 (at 0x7300)"
        set &access:&cmd_addr %l (0x8073000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT2_REVISION2"
      sgroup "PBS_CLIENT2_REVISION2 (at 0x7301)"
        set &access:&cmd_addr %l (0x8073010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT2_REVISION3"
      sgroup "PBS_CLIENT2_REVISION3 (at 0x7302)"
        set &access:&cmd_addr %l (0x8073020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT2_REVISION4"
      sgroup "PBS_CLIENT2_REVISION4 (at 0x7303)"
        set &access:&cmd_addr %l (0x8073030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT2_PERPH_TYPE"
      sgroup "PBS_CLIENT2_PERPH_TYPE (at 0x7304)"
        set &access:&cmd_addr %l (0x8073040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT2_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT2_PERPH_SUBTYPE (at 0x7305)"
        set &access:&cmd_addr %l (0x8073050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT2_STATUS0"
      sgroup "PBS_CLIENT2_STATUS0 (at 0x7308)"
        set &access:&cmd_addr %l (0x8073080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_STATUS1"
      sgroup "PBS_CLIENT2_STATUS1 (at 0x7309)"
        set &access:&cmd_addr %l (0x8073090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT2_INT_RT_STS"
      sgroup "PBS_CLIENT2_INT_RT_STS (at 0x7310)"
        set &access:&cmd_addr %l (0x8073100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT2_INT_SET_TYPE"
      sgroup "PBS_CLIENT2_INT_SET_TYPE (at 0x7311)"
        set &access:&cmd_addr %l (0x8073110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT2_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT2_INT_POLARITY_HIGH (at 0x7312)"
        set &access:&cmd_addr %l (0x8073120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT2_INT_POLARITY_LOW (at 0x7313)"
        set &access:&cmd_addr %l (0x8073130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT2_INT_LATCHED_CLR (at 0x7314)"
        set &access:&cmd_addr %l (0x8073140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT2_INT_EN_SET"
      sgroup "PBS_CLIENT2_INT_EN_SET (at 0x7315)"
        set &access:&cmd_addr %l (0x8073150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_EN_CLR"
      sgroup "PBS_CLIENT2_INT_EN_CLR (at 0x7316)"
        set &access:&cmd_addr %l (0x8073160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_LATCHED_STS"
      sgroup "PBS_CLIENT2_INT_LATCHED_STS (at 0x7318)"
        set &access:&cmd_addr %l (0x8073180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT2_INT_PENDING_STS"
      sgroup "PBS_CLIENT2_INT_PENDING_STS (at 0x7319)"
        set &access:&cmd_addr %l (0x8073190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT2_INT_MID_SEL"
      sgroup "PBS_CLIENT2_INT_MID_SEL (at 0x731a)"
        set &access:&cmd_addr %l (0x80731a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x731a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT2_INT_PRIORITY"
      sgroup "PBS_CLIENT2_INT_PRIORITY (at 0x731b)"
        set &access:&cmd_addr %l (0x80731b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x731b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT2_TRIG_CFG"
      sgroup "PBS_CLIENT2_TRIG_CFG (at 0x7340)"
        set &access:&cmd_addr %l (0x8073400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT2_TRIG_CTL"
      sgroup "PBS_CLIENT2_TRIG_CTL (at 0x7342)"
        set &access:&cmd_addr %l (0x8073420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT2_EN_CTL"
      sgroup "PBS_CLIENT2_EN_CTL (at 0x7346)"
        set &access:&cmd_addr %l (0x8073460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_SEC_ACCESS"
      sgroup "PBS_CLIENT2_SEC_ACCESS (at 0x73d0)"
        set &access:&cmd_addr %l (0x8073d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT2_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT2_PERPH_RESET_CTL1 (at 0x73d8)"
        set &access:&cmd_addr %l (0x8073d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT2_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT2_PERPH_RESET_CTL2 (at 0x73d9)"
        set &access:&cmd_addr %l (0x8073d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT2_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT2_PERPH_RESET_CTL3 (at 0x73da)"
        set &access:&cmd_addr %l (0x8073da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT2_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT2_PERPH_RESET_CTL4 (at 0x73db)"
        set &access:&cmd_addr %l (0x8073db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT2_INT_TEST1"
      sgroup "PBS_CLIENT2_INT_TEST1 (at 0x73e0)"
        set &access:&cmd_addr %l (0x8073e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT2_INT_TEST_VAL"
      sgroup "PBS_CLIENT2_INT_TEST_VAL (at 0x73e1)"
        set &access:&cmd_addr %l (0x8073e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x73e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT3"
  tree "PBS_CLIENT3"
    tree "PBS_CLIENT3_REVISION1"
      sgroup "PBS_CLIENT3_REVISION1 (at 0x7400)"
        set &access:&cmd_addr %l (0x8074000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT3_REVISION2"
      sgroup "PBS_CLIENT3_REVISION2 (at 0x7401)"
        set &access:&cmd_addr %l (0x8074010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT3_REVISION3"
      sgroup "PBS_CLIENT3_REVISION3 (at 0x7402)"
        set &access:&cmd_addr %l (0x8074020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT3_REVISION4"
      sgroup "PBS_CLIENT3_REVISION4 (at 0x7403)"
        set &access:&cmd_addr %l (0x8074030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT3_PERPH_TYPE"
      sgroup "PBS_CLIENT3_PERPH_TYPE (at 0x7404)"
        set &access:&cmd_addr %l (0x8074040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT3_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT3_PERPH_SUBTYPE (at 0x7405)"
        set &access:&cmd_addr %l (0x8074050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT3_STATUS0"
      sgroup "PBS_CLIENT3_STATUS0 (at 0x7408)"
        set &access:&cmd_addr %l (0x8074080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_STATUS1"
      sgroup "PBS_CLIENT3_STATUS1 (at 0x7409)"
        set &access:&cmd_addr %l (0x8074090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT3_INT_RT_STS"
      sgroup "PBS_CLIENT3_INT_RT_STS (at 0x7410)"
        set &access:&cmd_addr %l (0x8074100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT3_INT_SET_TYPE"
      sgroup "PBS_CLIENT3_INT_SET_TYPE (at 0x7411)"
        set &access:&cmd_addr %l (0x8074110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT3_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT3_INT_POLARITY_HIGH (at 0x7412)"
        set &access:&cmd_addr %l (0x8074120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT3_INT_POLARITY_LOW (at 0x7413)"
        set &access:&cmd_addr %l (0x8074130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT3_INT_LATCHED_CLR (at 0x7414)"
        set &access:&cmd_addr %l (0x8074140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT3_INT_EN_SET"
      sgroup "PBS_CLIENT3_INT_EN_SET (at 0x7415)"
        set &access:&cmd_addr %l (0x8074150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_EN_CLR"
      sgroup "PBS_CLIENT3_INT_EN_CLR (at 0x7416)"
        set &access:&cmd_addr %l (0x8074160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_LATCHED_STS"
      sgroup "PBS_CLIENT3_INT_LATCHED_STS (at 0x7418)"
        set &access:&cmd_addr %l (0x8074180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT3_INT_PENDING_STS"
      sgroup "PBS_CLIENT3_INT_PENDING_STS (at 0x7419)"
        set &access:&cmd_addr %l (0x8074190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT3_INT_MID_SEL"
      sgroup "PBS_CLIENT3_INT_MID_SEL (at 0x741a)"
        set &access:&cmd_addr %l (0x80741a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x741a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT3_INT_PRIORITY"
      sgroup "PBS_CLIENT3_INT_PRIORITY (at 0x741b)"
        set &access:&cmd_addr %l (0x80741b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x741b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT3_TRIG_CFG"
      sgroup "PBS_CLIENT3_TRIG_CFG (at 0x7440)"
        set &access:&cmd_addr %l (0x8074400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT3_TRIG_CTL"
      sgroup "PBS_CLIENT3_TRIG_CTL (at 0x7442)"
        set &access:&cmd_addr %l (0x8074420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT3_EN_CTL"
      sgroup "PBS_CLIENT3_EN_CTL (at 0x7446)"
        set &access:&cmd_addr %l (0x8074460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_SEC_ACCESS"
      sgroup "PBS_CLIENT3_SEC_ACCESS (at 0x74d0)"
        set &access:&cmd_addr %l (0x8074d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT3_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT3_PERPH_RESET_CTL1 (at 0x74d8)"
        set &access:&cmd_addr %l (0x8074d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT3_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT3_PERPH_RESET_CTL2 (at 0x74d9)"
        set &access:&cmd_addr %l (0x8074d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT3_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT3_PERPH_RESET_CTL3 (at 0x74da)"
        set &access:&cmd_addr %l (0x8074da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT3_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT3_PERPH_RESET_CTL4 (at 0x74db)"
        set &access:&cmd_addr %l (0x8074db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT3_INT_TEST1"
      sgroup "PBS_CLIENT3_INT_TEST1 (at 0x74e0)"
        set &access:&cmd_addr %l (0x8074e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT3_INT_TEST_VAL"
      sgroup "PBS_CLIENT3_INT_TEST_VAL (at 0x74e1)"
        set &access:&cmd_addr %l (0x8074e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x74e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT4"
  tree "PBS_CLIENT4"
    tree "PBS_CLIENT4_REVISION1"
      sgroup "PBS_CLIENT4_REVISION1 (at 0x7500)"
        set &access:&cmd_addr %l (0x8075000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT4_REVISION2"
      sgroup "PBS_CLIENT4_REVISION2 (at 0x7501)"
        set &access:&cmd_addr %l (0x8075010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT4_REVISION3"
      sgroup "PBS_CLIENT4_REVISION3 (at 0x7502)"
        set &access:&cmd_addr %l (0x8075020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT4_REVISION4"
      sgroup "PBS_CLIENT4_REVISION4 (at 0x7503)"
        set &access:&cmd_addr %l (0x8075030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT4_PERPH_TYPE"
      sgroup "PBS_CLIENT4_PERPH_TYPE (at 0x7504)"
        set &access:&cmd_addr %l (0x8075040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT4_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT4_PERPH_SUBTYPE (at 0x7505)"
        set &access:&cmd_addr %l (0x8075050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT4_STATUS0"
      sgroup "PBS_CLIENT4_STATUS0 (at 0x7508)"
        set &access:&cmd_addr %l (0x8075080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_STATUS1"
      sgroup "PBS_CLIENT4_STATUS1 (at 0x7509)"
        set &access:&cmd_addr %l (0x8075090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT4_INT_RT_STS"
      sgroup "PBS_CLIENT4_INT_RT_STS (at 0x7510)"
        set &access:&cmd_addr %l (0x8075100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT4_INT_SET_TYPE"
      sgroup "PBS_CLIENT4_INT_SET_TYPE (at 0x7511)"
        set &access:&cmd_addr %l (0x8075110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT4_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT4_INT_POLARITY_HIGH (at 0x7512)"
        set &access:&cmd_addr %l (0x8075120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT4_INT_POLARITY_LOW (at 0x7513)"
        set &access:&cmd_addr %l (0x8075130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT4_INT_LATCHED_CLR (at 0x7514)"
        set &access:&cmd_addr %l (0x8075140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT4_INT_EN_SET"
      sgroup "PBS_CLIENT4_INT_EN_SET (at 0x7515)"
        set &access:&cmd_addr %l (0x8075150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_EN_CLR"
      sgroup "PBS_CLIENT4_INT_EN_CLR (at 0x7516)"
        set &access:&cmd_addr %l (0x8075160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_LATCHED_STS"
      sgroup "PBS_CLIENT4_INT_LATCHED_STS (at 0x7518)"
        set &access:&cmd_addr %l (0x8075180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT4_INT_PENDING_STS"
      sgroup "PBS_CLIENT4_INT_PENDING_STS (at 0x7519)"
        set &access:&cmd_addr %l (0x8075190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT4_INT_MID_SEL"
      sgroup "PBS_CLIENT4_INT_MID_SEL (at 0x751a)"
        set &access:&cmd_addr %l (0x80751a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x751a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT4_INT_PRIORITY"
      sgroup "PBS_CLIENT4_INT_PRIORITY (at 0x751b)"
        set &access:&cmd_addr %l (0x80751b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x751b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT4_TRIG_CFG"
      sgroup "PBS_CLIENT4_TRIG_CFG (at 0x7540)"
        set &access:&cmd_addr %l (0x8075400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT4_TRIG_CTL"
      sgroup "PBS_CLIENT4_TRIG_CTL (at 0x7542)"
        set &access:&cmd_addr %l (0x8075420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT4_EN_CTL"
      sgroup "PBS_CLIENT4_EN_CTL (at 0x7546)"
        set &access:&cmd_addr %l (0x8075460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_SEC_ACCESS"
      sgroup "PBS_CLIENT4_SEC_ACCESS (at 0x75d0)"
        set &access:&cmd_addr %l (0x8075d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT4_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT4_PERPH_RESET_CTL1 (at 0x75d8)"
        set &access:&cmd_addr %l (0x8075d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT4_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT4_PERPH_RESET_CTL2 (at 0x75d9)"
        set &access:&cmd_addr %l (0x8075d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT4_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT4_PERPH_RESET_CTL3 (at 0x75da)"
        set &access:&cmd_addr %l (0x8075da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT4_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT4_PERPH_RESET_CTL4 (at 0x75db)"
        set &access:&cmd_addr %l (0x8075db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT4_INT_TEST1"
      sgroup "PBS_CLIENT4_INT_TEST1 (at 0x75e0)"
        set &access:&cmd_addr %l (0x8075e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT4_INT_TEST_VAL"
      sgroup "PBS_CLIENT4_INT_TEST_VAL (at 0x75e1)"
        set &access:&cmd_addr %l (0x8075e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x75e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT5"
  tree "PBS_CLIENT5"
    tree "PBS_CLIENT5_REVISION1"
      sgroup "PBS_CLIENT5_REVISION1 (at 0x7600)"
        set &access:&cmd_addr %l (0x8076000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT5_REVISION2"
      sgroup "PBS_CLIENT5_REVISION2 (at 0x7601)"
        set &access:&cmd_addr %l (0x8076010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT5_REVISION3"
      sgroup "PBS_CLIENT5_REVISION3 (at 0x7602)"
        set &access:&cmd_addr %l (0x8076020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT5_REVISION4"
      sgroup "PBS_CLIENT5_REVISION4 (at 0x7603)"
        set &access:&cmd_addr %l (0x8076030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT5_PERPH_TYPE"
      sgroup "PBS_CLIENT5_PERPH_TYPE (at 0x7604)"
        set &access:&cmd_addr %l (0x8076040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT5_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT5_PERPH_SUBTYPE (at 0x7605)"
        set &access:&cmd_addr %l (0x8076050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT5_STATUS0"
      sgroup "PBS_CLIENT5_STATUS0 (at 0x7608)"
        set &access:&cmd_addr %l (0x8076080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_STATUS1"
      sgroup "PBS_CLIENT5_STATUS1 (at 0x7609)"
        set &access:&cmd_addr %l (0x8076090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT5_INT_RT_STS"
      sgroup "PBS_CLIENT5_INT_RT_STS (at 0x7610)"
        set &access:&cmd_addr %l (0x8076100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT5_INT_SET_TYPE"
      sgroup "PBS_CLIENT5_INT_SET_TYPE (at 0x7611)"
        set &access:&cmd_addr %l (0x8076110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT5_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT5_INT_POLARITY_HIGH (at 0x7612)"
        set &access:&cmd_addr %l (0x8076120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT5_INT_POLARITY_LOW (at 0x7613)"
        set &access:&cmd_addr %l (0x8076130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT5_INT_LATCHED_CLR (at 0x7614)"
        set &access:&cmd_addr %l (0x8076140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT5_INT_EN_SET"
      sgroup "PBS_CLIENT5_INT_EN_SET (at 0x7615)"
        set &access:&cmd_addr %l (0x8076150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_EN_CLR"
      sgroup "PBS_CLIENT5_INT_EN_CLR (at 0x7616)"
        set &access:&cmd_addr %l (0x8076160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_LATCHED_STS"
      sgroup "PBS_CLIENT5_INT_LATCHED_STS (at 0x7618)"
        set &access:&cmd_addr %l (0x8076180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT5_INT_PENDING_STS"
      sgroup "PBS_CLIENT5_INT_PENDING_STS (at 0x7619)"
        set &access:&cmd_addr %l (0x8076190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT5_INT_MID_SEL"
      sgroup "PBS_CLIENT5_INT_MID_SEL (at 0x761a)"
        set &access:&cmd_addr %l (0x80761a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x761a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT5_INT_PRIORITY"
      sgroup "PBS_CLIENT5_INT_PRIORITY (at 0x761b)"
        set &access:&cmd_addr %l (0x80761b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x761b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT5_TRIG_CFG"
      sgroup "PBS_CLIENT5_TRIG_CFG (at 0x7640)"
        set &access:&cmd_addr %l (0x8076400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT5_TRIG_CTL"
      sgroup "PBS_CLIENT5_TRIG_CTL (at 0x7642)"
        set &access:&cmd_addr %l (0x8076420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT5_EN_CTL"
      sgroup "PBS_CLIENT5_EN_CTL (at 0x7646)"
        set &access:&cmd_addr %l (0x8076460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_SEC_ACCESS"
      sgroup "PBS_CLIENT5_SEC_ACCESS (at 0x76d0)"
        set &access:&cmd_addr %l (0x8076d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT5_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT5_PERPH_RESET_CTL1 (at 0x76d8)"
        set &access:&cmd_addr %l (0x8076d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT5_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT5_PERPH_RESET_CTL2 (at 0x76d9)"
        set &access:&cmd_addr %l (0x8076d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT5_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT5_PERPH_RESET_CTL3 (at 0x76da)"
        set &access:&cmd_addr %l (0x8076da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT5_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT5_PERPH_RESET_CTL4 (at 0x76db)"
        set &access:&cmd_addr %l (0x8076db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT5_INT_TEST1"
      sgroup "PBS_CLIENT5_INT_TEST1 (at 0x76e0)"
        set &access:&cmd_addr %l (0x8076e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT5_INT_TEST_VAL"
      sgroup "PBS_CLIENT5_INT_TEST_VAL (at 0x76e1)"
        set &access:&cmd_addr %l (0x8076e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x76e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT6"
  tree "PBS_CLIENT6"
    tree "PBS_CLIENT6_REVISION1"
      sgroup "PBS_CLIENT6_REVISION1 (at 0x7700)"
        set &access:&cmd_addr %l (0x8077000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT6_REVISION2"
      sgroup "PBS_CLIENT6_REVISION2 (at 0x7701)"
        set &access:&cmd_addr %l (0x8077010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT6_REVISION3"
      sgroup "PBS_CLIENT6_REVISION3 (at 0x7702)"
        set &access:&cmd_addr %l (0x8077020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT6_REVISION4"
      sgroup "PBS_CLIENT6_REVISION4 (at 0x7703)"
        set &access:&cmd_addr %l (0x8077030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT6_PERPH_TYPE"
      sgroup "PBS_CLIENT6_PERPH_TYPE (at 0x7704)"
        set &access:&cmd_addr %l (0x8077040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT6_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT6_PERPH_SUBTYPE (at 0x7705)"
        set &access:&cmd_addr %l (0x8077050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT6_STATUS0"
      sgroup "PBS_CLIENT6_STATUS0 (at 0x7708)"
        set &access:&cmd_addr %l (0x8077080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_STATUS1"
      sgroup "PBS_CLIENT6_STATUS1 (at 0x7709)"
        set &access:&cmd_addr %l (0x8077090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT6_INT_RT_STS"
      sgroup "PBS_CLIENT6_INT_RT_STS (at 0x7710)"
        set &access:&cmd_addr %l (0x8077100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT6_INT_SET_TYPE"
      sgroup "PBS_CLIENT6_INT_SET_TYPE (at 0x7711)"
        set &access:&cmd_addr %l (0x8077110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT6_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT6_INT_POLARITY_HIGH (at 0x7712)"
        set &access:&cmd_addr %l (0x8077120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT6_INT_POLARITY_LOW (at 0x7713)"
        set &access:&cmd_addr %l (0x8077130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT6_INT_LATCHED_CLR (at 0x7714)"
        set &access:&cmd_addr %l (0x8077140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT6_INT_EN_SET"
      sgroup "PBS_CLIENT6_INT_EN_SET (at 0x7715)"
        set &access:&cmd_addr %l (0x8077150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_EN_CLR"
      sgroup "PBS_CLIENT6_INT_EN_CLR (at 0x7716)"
        set &access:&cmd_addr %l (0x8077160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_LATCHED_STS"
      sgroup "PBS_CLIENT6_INT_LATCHED_STS (at 0x7718)"
        set &access:&cmd_addr %l (0x8077180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT6_INT_PENDING_STS"
      sgroup "PBS_CLIENT6_INT_PENDING_STS (at 0x7719)"
        set &access:&cmd_addr %l (0x8077190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT6_INT_MID_SEL"
      sgroup "PBS_CLIENT6_INT_MID_SEL (at 0x771a)"
        set &access:&cmd_addr %l (0x80771a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x771a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT6_INT_PRIORITY"
      sgroup "PBS_CLIENT6_INT_PRIORITY (at 0x771b)"
        set &access:&cmd_addr %l (0x80771b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x771b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT6_TRIG_CFG"
      sgroup "PBS_CLIENT6_TRIG_CFG (at 0x7740)"
        set &access:&cmd_addr %l (0x8077400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT6_TRIG_CTL"
      sgroup "PBS_CLIENT6_TRIG_CTL (at 0x7742)"
        set &access:&cmd_addr %l (0x8077420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT6_EN_CTL"
      sgroup "PBS_CLIENT6_EN_CTL (at 0x7746)"
        set &access:&cmd_addr %l (0x8077460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_SEC_ACCESS"
      sgroup "PBS_CLIENT6_SEC_ACCESS (at 0x77d0)"
        set &access:&cmd_addr %l (0x8077d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT6_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT6_PERPH_RESET_CTL1 (at 0x77d8)"
        set &access:&cmd_addr %l (0x8077d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT6_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT6_PERPH_RESET_CTL2 (at 0x77d9)"
        set &access:&cmd_addr %l (0x8077d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT6_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT6_PERPH_RESET_CTL3 (at 0x77da)"
        set &access:&cmd_addr %l (0x8077da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT6_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT6_PERPH_RESET_CTL4 (at 0x77db)"
        set &access:&cmd_addr %l (0x8077db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT6_INT_TEST1"
      sgroup "PBS_CLIENT6_INT_TEST1 (at 0x77e0)"
        set &access:&cmd_addr %l (0x8077e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT6_INT_TEST_VAL"
      sgroup "PBS_CLIENT6_INT_TEST_VAL (at 0x77e1)"
        set &access:&cmd_addr %l (0x8077e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x77e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT7"
  tree "PBS_CLIENT7"
    tree "PBS_CLIENT7_REVISION1"
      sgroup "PBS_CLIENT7_REVISION1 (at 0x7800)"
        set &access:&cmd_addr %l (0x8078000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT7_REVISION2"
      sgroup "PBS_CLIENT7_REVISION2 (at 0x7801)"
        set &access:&cmd_addr %l (0x8078010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT7_REVISION3"
      sgroup "PBS_CLIENT7_REVISION3 (at 0x7802)"
        set &access:&cmd_addr %l (0x8078020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT7_REVISION4"
      sgroup "PBS_CLIENT7_REVISION4 (at 0x7803)"
        set &access:&cmd_addr %l (0x8078030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT7_PERPH_TYPE"
      sgroup "PBS_CLIENT7_PERPH_TYPE (at 0x7804)"
        set &access:&cmd_addr %l (0x8078040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT7_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT7_PERPH_SUBTYPE (at 0x7805)"
        set &access:&cmd_addr %l (0x8078050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT7_STATUS0"
      sgroup "PBS_CLIENT7_STATUS0 (at 0x7808)"
        set &access:&cmd_addr %l (0x8078080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_STATUS1"
      sgroup "PBS_CLIENT7_STATUS1 (at 0x7809)"
        set &access:&cmd_addr %l (0x8078090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT7_INT_RT_STS"
      sgroup "PBS_CLIENT7_INT_RT_STS (at 0x7810)"
        set &access:&cmd_addr %l (0x8078100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT7_INT_SET_TYPE"
      sgroup "PBS_CLIENT7_INT_SET_TYPE (at 0x7811)"
        set &access:&cmd_addr %l (0x8078110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT7_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT7_INT_POLARITY_HIGH (at 0x7812)"
        set &access:&cmd_addr %l (0x8078120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT7_INT_POLARITY_LOW (at 0x7813)"
        set &access:&cmd_addr %l (0x8078130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT7_INT_LATCHED_CLR (at 0x7814)"
        set &access:&cmd_addr %l (0x8078140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT7_INT_EN_SET"
      sgroup "PBS_CLIENT7_INT_EN_SET (at 0x7815)"
        set &access:&cmd_addr %l (0x8078150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_EN_CLR"
      sgroup "PBS_CLIENT7_INT_EN_CLR (at 0x7816)"
        set &access:&cmd_addr %l (0x8078160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_LATCHED_STS"
      sgroup "PBS_CLIENT7_INT_LATCHED_STS (at 0x7818)"
        set &access:&cmd_addr %l (0x8078180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT7_INT_PENDING_STS"
      sgroup "PBS_CLIENT7_INT_PENDING_STS (at 0x7819)"
        set &access:&cmd_addr %l (0x8078190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT7_INT_MID_SEL"
      sgroup "PBS_CLIENT7_INT_MID_SEL (at 0x781a)"
        set &access:&cmd_addr %l (0x80781a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x781a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT7_INT_PRIORITY"
      sgroup "PBS_CLIENT7_INT_PRIORITY (at 0x781b)"
        set &access:&cmd_addr %l (0x80781b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x781b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT7_TRIG_CFG"
      sgroup "PBS_CLIENT7_TRIG_CFG (at 0x7840)"
        set &access:&cmd_addr %l (0x8078400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT7_TRIG_CTL"
      sgroup "PBS_CLIENT7_TRIG_CTL (at 0x7842)"
        set &access:&cmd_addr %l (0x8078420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT7_EN_CTL"
      sgroup "PBS_CLIENT7_EN_CTL (at 0x7846)"
        set &access:&cmd_addr %l (0x8078460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_SEC_ACCESS"
      sgroup "PBS_CLIENT7_SEC_ACCESS (at 0x78d0)"
        set &access:&cmd_addr %l (0x8078d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT7_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT7_PERPH_RESET_CTL1 (at 0x78d8)"
        set &access:&cmd_addr %l (0x8078d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT7_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT7_PERPH_RESET_CTL2 (at 0x78d9)"
        set &access:&cmd_addr %l (0x8078d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT7_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT7_PERPH_RESET_CTL3 (at 0x78da)"
        set &access:&cmd_addr %l (0x8078da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT7_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT7_PERPH_RESET_CTL4 (at 0x78db)"
        set &access:&cmd_addr %l (0x8078db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT7_INT_TEST1"
      sgroup "PBS_CLIENT7_INT_TEST1 (at 0x78e0)"
        set &access:&cmd_addr %l (0x8078e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT7_INT_TEST_VAL"
      sgroup "PBS_CLIENT7_INT_TEST_VAL (at 0x78e1)"
        set &access:&cmd_addr %l (0x8078e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x78e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT8"
  tree "PBS_CLIENT8"
    tree "PBS_CLIENT8_REVISION1"
      sgroup "PBS_CLIENT8_REVISION1 (at 0x7900)"
        set &access:&cmd_addr %l (0x8079000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT8_REVISION2"
      sgroup "PBS_CLIENT8_REVISION2 (at 0x7901)"
        set &access:&cmd_addr %l (0x8079010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT8_REVISION3"
      sgroup "PBS_CLIENT8_REVISION3 (at 0x7902)"
        set &access:&cmd_addr %l (0x8079020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT8_REVISION4"
      sgroup "PBS_CLIENT8_REVISION4 (at 0x7903)"
        set &access:&cmd_addr %l (0x8079030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT8_PERPH_TYPE"
      sgroup "PBS_CLIENT8_PERPH_TYPE (at 0x7904)"
        set &access:&cmd_addr %l (0x8079040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT8_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT8_PERPH_SUBTYPE (at 0x7905)"
        set &access:&cmd_addr %l (0x8079050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT8_STATUS0"
      sgroup "PBS_CLIENT8_STATUS0 (at 0x7908)"
        set &access:&cmd_addr %l (0x8079080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_STATUS1"
      sgroup "PBS_CLIENT8_STATUS1 (at 0x7909)"
        set &access:&cmd_addr %l (0x8079090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT8_INT_RT_STS"
      sgroup "PBS_CLIENT8_INT_RT_STS (at 0x7910)"
        set &access:&cmd_addr %l (0x8079100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT8_INT_SET_TYPE"
      sgroup "PBS_CLIENT8_INT_SET_TYPE (at 0x7911)"
        set &access:&cmd_addr %l (0x8079110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT8_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT8_INT_POLARITY_HIGH (at 0x7912)"
        set &access:&cmd_addr %l (0x8079120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT8_INT_POLARITY_LOW (at 0x7913)"
        set &access:&cmd_addr %l (0x8079130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT8_INT_LATCHED_CLR (at 0x7914)"
        set &access:&cmd_addr %l (0x8079140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT8_INT_EN_SET"
      sgroup "PBS_CLIENT8_INT_EN_SET (at 0x7915)"
        set &access:&cmd_addr %l (0x8079150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_EN_CLR"
      sgroup "PBS_CLIENT8_INT_EN_CLR (at 0x7916)"
        set &access:&cmd_addr %l (0x8079160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_LATCHED_STS"
      sgroup "PBS_CLIENT8_INT_LATCHED_STS (at 0x7918)"
        set &access:&cmd_addr %l (0x8079180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT8_INT_PENDING_STS"
      sgroup "PBS_CLIENT8_INT_PENDING_STS (at 0x7919)"
        set &access:&cmd_addr %l (0x8079190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT8_INT_MID_SEL"
      sgroup "PBS_CLIENT8_INT_MID_SEL (at 0x791a)"
        set &access:&cmd_addr %l (0x80791a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x791a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT8_INT_PRIORITY"
      sgroup "PBS_CLIENT8_INT_PRIORITY (at 0x791b)"
        set &access:&cmd_addr %l (0x80791b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x791b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT8_TRIG_CFG"
      sgroup "PBS_CLIENT8_TRIG_CFG (at 0x7940)"
        set &access:&cmd_addr %l (0x8079400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT8_TRIG_CTL"
      sgroup "PBS_CLIENT8_TRIG_CTL (at 0x7942)"
        set &access:&cmd_addr %l (0x8079420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT8_EN_CTL"
      sgroup "PBS_CLIENT8_EN_CTL (at 0x7946)"
        set &access:&cmd_addr %l (0x8079460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_SEC_ACCESS"
      sgroup "PBS_CLIENT8_SEC_ACCESS (at 0x79d0)"
        set &access:&cmd_addr %l (0x8079d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT8_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT8_PERPH_RESET_CTL1 (at 0x79d8)"
        set &access:&cmd_addr %l (0x8079d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT8_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT8_PERPH_RESET_CTL2 (at 0x79d9)"
        set &access:&cmd_addr %l (0x8079d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT8_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT8_PERPH_RESET_CTL3 (at 0x79da)"
        set &access:&cmd_addr %l (0x8079da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT8_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT8_PERPH_RESET_CTL4 (at 0x79db)"
        set &access:&cmd_addr %l (0x8079db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT8_INT_TEST1"
      sgroup "PBS_CLIENT8_INT_TEST1 (at 0x79e0)"
        set &access:&cmd_addr %l (0x8079e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT8_INT_TEST_VAL"
      sgroup "PBS_CLIENT8_INT_TEST_VAL (at 0x79e1)"
        set &access:&cmd_addr %l (0x8079e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x79e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CLIENT9"
  tree "PBS_CLIENT9"
    tree "PBS_CLIENT9_REVISION1"
      sgroup "PBS_CLIENT9_REVISION1 (at 0x7a00)"
        set &access:&cmd_addr %l (0x807a000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CLIENT9_REVISION2"
      sgroup "PBS_CLIENT9_REVISION2 (at 0x7a01)"
        set &access:&cmd_addr %l (0x807a010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT9_REVISION3"
      sgroup "PBS_CLIENT9_REVISION3 (at 0x7a02)"
        set &access:&cmd_addr %l (0x807a020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CLIENT9_REVISION4"
      sgroup "PBS_CLIENT9_REVISION4 (at 0x7a03)"
        set &access:&cmd_addr %l (0x807a030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CLIENT9_PERPH_TYPE"
      sgroup "PBS_CLIENT9_PERPH_TYPE (at 0x7a04)"
        set &access:&cmd_addr %l (0x807a040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CLIENT9_PERPH_SUBTYPE"
      sgroup "PBS_CLIENT9_PERPH_SUBTYPE (at 0x7a05)"
        set &access:&cmd_addr %l (0x807a050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CLIENT9_STATUS0"
      sgroup "PBS_CLIENT9_STATUS0 (at 0x7a08)"
        set &access:&cmd_addr %l (0x807a080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIG_EN_STATUS                           = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   HW_TRIG_EN_STATUS                        = " "0 (HW_TRIGGER_DISABLED),1 (HW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_STATUS1"
      sgroup "PBS_CLIENT9_STATUS1 (at 0x7a09)"
        set &access:&cmd_addr %l (0x807a090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   COMP_STATUS                              = " "0 (EXECUTING),1 (NORMAL_COMPLETION),2 (ERROR_COMPLETION),3 (ABORT_COMPLETION)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TRIG_FSM_STATUS                          = "
    tree.end
    tree "PBS_CLIENT9_INT_RT_STS"
      sgroup "PBS_CLIENT9_INT_RT_STS (at 0x7a10)"
        set &access:&cmd_addr %l (0x807a100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_RT_STS                         = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PBS_CLIENT9_INT_SET_TYPE"
      sgroup "PBS_CLIENT9_INT_SET_TYPE (at 0x7a11)"
        set &access:&cmd_addr %l (0x807a110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TYPE                           = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TYPE                           = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PBS_CLIENT9_INT_POLARITY_HIGH"
      sgroup "PBS_CLIENT9_INT_POLARITY_HIGH (at 0x7a12)"
        set &access:&cmd_addr %l (0x807a120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_HIGH                           = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_POLARITY_LOW"
      sgroup "PBS_CLIENT9_INT_POLARITY_LOW (at 0x7a13)"
        set &access:&cmd_addr %l (0x807a130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LOW                            = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_LATCHED_CLR"
      sgroup "PBS_CLIENT9_INT_LATCHED_CLR (at 0x7a14)"
        set &access:&cmd_addr %l (0x807a140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_CLR                    = " "0, 1"
    tree.end
    tree "PBS_CLIENT9_INT_EN_SET"
      sgroup "PBS_CLIENT9_INT_EN_SET (at 0x7a15)"
        set &access:&cmd_addr %l (0x807a150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_SET                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_EN_CLR"
      sgroup "PBS_CLIENT9_INT_EN_CLR (at 0x7a16)"
        set &access:&cmd_addr %l (0x807a160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_EN_CLR                         = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_LATCHED_STS"
      sgroup "PBS_CLIENT9_INT_LATCHED_STS (at 0x7a18)"
        set &access:&cmd_addr %l (0x807a180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_LATCHED_STS                    = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "PBS_CLIENT9_INT_PENDING_STS"
      sgroup "PBS_CLIENT9_INT_PENDING_STS (at 0x7a19)"
        set &access:&cmd_addr %l (0x807a190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_PENDING_STS                    = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PBS_CLIENT9_INT_MID_SEL"
      sgroup "PBS_CLIENT9_INT_MID_SEL (at 0x7a1a)"
        set &access:&cmd_addr %l (0x807a1a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a1a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PBS_CLIENT9_INT_PRIORITY"
      sgroup "PBS_CLIENT9_INT_PRIORITY (at 0x7a1b)"
        set &access:&cmd_addr %l (0x807a1b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a1b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "PBS_CLIENT9_TRIG_CFG"
      sgroup "PBS_CLIENT9_TRIG_CFG (at 0x7a40)"
        set &access:&cmd_addr %l (0x807a400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_RE_EN                            = " "0 (RISING_EDGE_TRIGGER_IGNORED),1 (RISING_EDGE_TRIGGER_ARMED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TRIGGER_FE_EN                            = " "0 (FALLING_EDGE_TRIGGER_IGNORED),1 (FALLING_EDGE_TRIGGER_ARMED)"
    tree.end
    tree "PBS_CLIENT9_TRIG_CTL"
      sgroup "PBS_CLIENT9_TRIG_CTL (at 0x7a42)"
        set &access:&cmd_addr %l (0x807a420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIGGER                               = " "0, 1"
    tree.end
    tree "PBS_CLIENT9_EN_CTL"
      sgroup "PBS_CLIENT9_EN_CTL (at 0x7a46)"
        set &access:&cmd_addr %l (0x807a460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7a460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   TRIGGER_EN                               = " "0 (CLIENT_DISABLED),1 (CLIENT_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_SEC_ACCESS"
      sgroup "PBS_CLIENT9_SEC_ACCESS (at 0x7ad0)"
        set &access:&cmd_addr %l (0x807ad00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ad00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CLIENT9_PERPH_RESET_CTL1"
      sgroup "PBS_CLIENT9_PERPH_RESET_CTL1 (at 0x7ad8)"
        set &access:&cmd_addr %l (0x807ad80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ad80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "PBS_CLIENT9_PERPH_RESET_CTL2"
      sgroup "PBS_CLIENT9_PERPH_RESET_CTL2 (at 0x7ad9)"
        set &access:&cmd_addr %l (0x807ad90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ad90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT9_PERPH_RESET_CTL3"
      sgroup "PBS_CLIENT9_PERPH_RESET_CTL3 (at 0x7ada)"
        set &access:&cmd_addr %l (0x807ada0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ada0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CLIENT9_PERPH_RESET_CTL4"
      sgroup "PBS_CLIENT9_PERPH_RESET_CTL4 (at 0x7adb)"
        set &access:&cmd_addr %l (0x807adb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7adb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CLIENT9_INT_TEST1"
      sgroup "PBS_CLIENT9_INT_TEST1 (at 0x7ae0)"
        set &access:&cmd_addr %l (0x807ae00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ae00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "PBS_CLIENT9_INT_TEST_VAL"
      sgroup "PBS_CLIENT9_INT_TEST_VAL (at 0x7ae1)"
        set &access:&cmd_addr %l (0x807ae10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x7ae10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SEQ_ENDED_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SEQ_ERROR_TEST_VAL                       = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
  tree.end
tree.end
tree "PBS_CORE"
  tree "PBS_CORE"
    tree "PBS_CORE_REVISION1"
      sgroup "PBS_CORE_REVISION1 (at 0x7000)"
        set &access:&cmd_addr %l (0x8070000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PBS_CORE_REVISION2"
      sgroup "PBS_CORE_REVISION2 (at 0x7001)"
        set &access:&cmd_addr %l (0x8070010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PBS_CORE_REVISION3"
      sgroup "PBS_CORE_REVISION3 (at 0x7002)"
        set &access:&cmd_addr %l (0x8070020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PBS_CORE_REVISION4"
      sgroup "PBS_CORE_REVISION4 (at 0x7003)"
        set &access:&cmd_addr %l (0x8070030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PBS_CORE_PERPH_TYPE"
      sgroup "PBS_CORE_PERPH_TYPE (at 0x7004)"
        set &access:&cmd_addr %l (0x8070040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PBS_CORE_PERPH_SUBTYPE"
      sgroup "PBS_CORE_PERPH_SUBTYPE (at 0x7005)"
        set &access:&cmd_addr %l (0x8070050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PBS_CORE_SEQ_STATUS0"
      sgroup "PBS_CORE_SEQ_STATUS0 (at 0x7008)"
        set &access:&cmd_addr %l (0x8070080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   LAST_SEQ_COMP_STATUS                     = " "0 (RESERVED),1 (NORMAL),2 (ERROR),3 (ABORT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LAST_SEQ_COMP                            = "
    tree.end
    tree "PBS_CORE_SEQ_STATUS3"
      sgroup "PBS_CORE_SEQ_STATUS3 (at 0x7009)"
        set &access:&cmd_addr %l (0x8070090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PBS_MODE_STATUS                          = " "0 (NORMAL_MODE),1 (RIF_MEM_ACCESS_MODE)"
    tree.end
    tree "PBS_CORE_SEQ_PC_STATUS0"
      sgroup "PBS_CORE_SEQ_PC_STATUS0 (at 0x700a)"
        set &access:&cmd_addr %l (0x80700a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PC_LSB                                   = "
    tree.end
    tree "PBS_CORE_SEQ_PC_STATUS1"
      sgroup "PBS_CORE_SEQ_PC_STATUS1 (at 0x700b)"
        set &access:&cmd_addr %l (0x80700b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   PC_MSB                                   = "
    tree.end
    tree "PBS_CORE_SEQ_IR_STATUS0"
      sgroup "PBS_CORE_SEQ_IR_STATUS0 (at 0x700c)"
        set &access:&cmd_addr %l (0x80700c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IR_BYTE0                                 = "
    tree.end
    tree "PBS_CORE_SEQ_IR_STATUS1"
      sgroup "PBS_CORE_SEQ_IR_STATUS1 (at 0x700d)"
        set &access:&cmd_addr %l (0x80700d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IR_BYTE1                                 = "
    tree.end
    tree "PBS_CORE_SEQ_IR_STATUS2"
      sgroup "PBS_CORE_SEQ_IR_STATUS2 (at 0x700e)"
        set &access:&cmd_addr %l (0x80700e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IR_BYTE2                                 = "
    tree.end
    tree "PBS_CORE_SEQ_IR_STATUS3"
      sgroup "PBS_CORE_SEQ_IR_STATUS3 (at 0x700f)"
        set &access:&cmd_addr %l (0x80700f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x700f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   IR_BYTE3                                 = "
    tree.end
    tree "PBS_CORE_MEM_INTF_CFG"
      sgroup "PBS_CORE_MEM_INTF_CFG (at 0x7040)"
        set &access:&cmd_addr %l (0x8070400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RIF_MEM_ACCESS_EN                        = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PBS_CORE_MEM_INTF_CTL"
      sgroup "PBS_CORE_MEM_INTF_CTL (at 0x7041)"
        set &access:&cmd_addr %l (0x8070410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BURST                                    = " "0 (SINGLE_MODE),1 (BURST_MODE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   WR_EN                                    = " "0 (READ_ACCESS),1 (WRITE_ACCESS)"
    tree.end
    tree "PBS_CORE_MEM_INTF_ADDR_LSB"
      sgroup "PBS_CORE_MEM_INTF_ADDR_LSB (at 0x7042)"
        set &access:&cmd_addr %l (0x8070420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_ADDR_LSB                        = "
    tree.end
    tree "PBS_CORE_MEM_INTF_ADDR_MSB"
      sgroup "PBS_CORE_MEM_INTF_ADDR_MSB (at 0x7043)"
        set &access:&cmd_addr %l (0x8070430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_ADDR_MSB                        = "
    tree.end
    tree "PBS_CORE_MEM_INTF_WR_DATA0"
      sgroup "PBS_CORE_MEM_INTF_WR_DATA0 (at 0x7048)"
        set &access:&cmd_addr %l (0x8070480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_0                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_WR_DATA1"
      sgroup "PBS_CORE_MEM_INTF_WR_DATA1 (at 0x7049)"
        set &access:&cmd_addr %l (0x8070490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_1                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_WR_DATA2"
      sgroup "PBS_CORE_MEM_INTF_WR_DATA2 (at 0x704a)"
        set &access:&cmd_addr %l (0x80704a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_2                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_WR_DATA3"
      sgroup "PBS_CORE_MEM_INTF_WR_DATA3 (at 0x704b)"
        set &access:&cmd_addr %l (0x80704b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_WR_DATA_3                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_RD_DATA0"
      sgroup "PBS_CORE_MEM_INTF_RD_DATA0 (at 0x704c)"
        set &access:&cmd_addr %l (0x80704c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_0                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_RD_DATA1"
      sgroup "PBS_CORE_MEM_INTF_RD_DATA1 (at 0x704d)"
        set &access:&cmd_addr %l (0x80704d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_1                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_RD_DATA2"
      sgroup "PBS_CORE_MEM_INTF_RD_DATA2 (at 0x704e)"
        set &access:&cmd_addr %l (0x80704e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_2                       = "
    tree.end
    tree "PBS_CORE_MEM_INTF_RD_DATA3"
      sgroup "PBS_CORE_MEM_INTF_RD_DATA3 (at 0x704f)"
        set &access:&cmd_addr %l (0x80704f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x704f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MEM_INTF_RD_DATA_3                       = "
    tree.end
    tree "PBS_CORE_TRIG0_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG0_START_ADDR_LSB (at 0x7050)"
        set &access:&cmd_addr %l (0x8070500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG0_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG0_START_ADDR_MSB (at 0x7051)"
        set &access:&cmd_addr %l (0x8070510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG1_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG1_START_ADDR_LSB (at 0x7054)"
        set &access:&cmd_addr %l (0x8070540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG1_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG1_START_ADDR_MSB (at 0x7055)"
        set &access:&cmd_addr %l (0x8070550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG2_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG2_START_ADDR_LSB (at 0x7058)"
        set &access:&cmd_addr %l (0x8070580|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70580|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG2_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG2_START_ADDR_MSB (at 0x7059)"
        set &access:&cmd_addr %l (0x8070590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG3_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG3_START_ADDR_LSB (at 0x705c)"
        set &access:&cmd_addr %l (0x80705c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x705c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG3_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG3_START_ADDR_MSB (at 0x705d)"
        set &access:&cmd_addr %l (0x80705d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x705d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG4_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG4_START_ADDR_LSB (at 0x7060)"
        set &access:&cmd_addr %l (0x8070600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG4_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG4_START_ADDR_MSB (at 0x7061)"
        set &access:&cmd_addr %l (0x8070610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG5_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG5_START_ADDR_LSB (at 0x7064)"
        set &access:&cmd_addr %l (0x8070640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG5_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG5_START_ADDR_MSB (at 0x7065)"
        set &access:&cmd_addr %l (0x8070650|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70650|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG6_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG6_START_ADDR_LSB (at 0x7068)"
        set &access:&cmd_addr %l (0x8070680|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70680|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG6_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG6_START_ADDR_MSB (at 0x7069)"
        set &access:&cmd_addr %l (0x8070690|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70690|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG7_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG7_START_ADDR_LSB (at 0x706c)"
        set &access:&cmd_addr %l (0x80706c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x706c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG7_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG7_START_ADDR_MSB (at 0x706d)"
        set &access:&cmd_addr %l (0x80706d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x706d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG8_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG8_START_ADDR_LSB (at 0x7070)"
        set &access:&cmd_addr %l (0x8070700|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70700|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG8_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG8_START_ADDR_MSB (at 0x7071)"
        set &access:&cmd_addr %l (0x8070710|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70710|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG9_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG9_START_ADDR_LSB (at 0x7074)"
        set &access:&cmd_addr %l (0x8070740|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70740|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG9_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG9_START_ADDR_MSB (at 0x7075)"
        set &access:&cmd_addr %l (0x8070750|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70750|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG10_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG10_START_ADDR_LSB (at 0x7078)"
        set &access:&cmd_addr %l (0x8070780|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70780|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG10_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG10_START_ADDR_MSB (at 0x7079)"
        set &access:&cmd_addr %l (0x8070790|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70790|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG11_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG11_START_ADDR_LSB (at 0x707c)"
        set &access:&cmd_addr %l (0x80707c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x707c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG11_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG11_START_ADDR_MSB (at 0x707d)"
        set &access:&cmd_addr %l (0x80707d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x707d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG12_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG12_START_ADDR_LSB (at 0x7080)"
        set &access:&cmd_addr %l (0x8070800|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70800|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG12_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG12_START_ADDR_MSB (at 0x7081)"
        set &access:&cmd_addr %l (0x8070810|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70810|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG13_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG13_START_ADDR_LSB (at 0x7084)"
        set &access:&cmd_addr %l (0x8070840|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70840|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG13_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG13_START_ADDR_MSB (at 0x7085)"
        set &access:&cmd_addr %l (0x8070850|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70850|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG14_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG14_START_ADDR_LSB (at 0x7088)"
        set &access:&cmd_addr %l (0x8070880|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70880|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG14_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG14_START_ADDR_MSB (at 0x7089)"
        set &access:&cmd_addr %l (0x8070890|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70890|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_TRIG15_START_ADDR_LSB"
      sgroup "PBS_CORE_TRIG15_START_ADDR_LSB (at 0x708c)"
        set &access:&cmd_addr %l (0x80708c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x708c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_LSB                             = "
    tree.end
    tree "PBS_CORE_TRIG15_START_ADDR_MSB"
      sgroup "PBS_CORE_TRIG15_START_ADDR_MSB (at 0x708d)"
        set &access:&cmd_addr %l (0x80708d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x708d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEQ_ADDR_MSB                             = "
    tree.end
    tree "PBS_CORE_SEQ_STATUS1"
      sgroup "PBS_CORE_SEQ_STATUS1 (at 0x7090)"
        set &access:&cmd_addr %l (0x8070900|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70900|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   SEQ_IN_SERVICE                           = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LAST_SEQ_NORMAL                          = "
    tree.end
    tree "PBS_CORE_SEQ_STATUS2"
      sgroup "PBS_CORE_SEQ_STATUS2 (at 0x7091)"
        set &access:&cmd_addr %l (0x8070910|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70910|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   LAST_SEQ_ABORTED                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LAST_SEQ_ERROR                           = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_PC_STATUS0"
      sgroup "PBS_CORE_SEQ_ERR_PC_STATUS0 (at 0x7092)"
        set &access:&cmd_addr %l (0x8070920|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70920|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_PC_LSB                               = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_PC_STATUS1"
      sgroup "PBS_CORE_SEQ_ERR_PC_STATUS1 (at 0x7093)"
        set &access:&cmd_addr %l (0x8070930|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70930|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_PC_MSB                               = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_IR_STATUS0"
      sgroup "PBS_CORE_SEQ_ERR_IR_STATUS0 (at 0x7094)"
        set &access:&cmd_addr %l (0x8070940|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70940|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_IR_BYTE0                             = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_IR_STATUS1"
      sgroup "PBS_CORE_SEQ_ERR_IR_STATUS1 (at 0x7095)"
        set &access:&cmd_addr %l (0x8070950|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70950|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_IR_BYTE1                             = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_IR_STATUS2"
      sgroup "PBS_CORE_SEQ_ERR_IR_STATUS2 (at 0x7096)"
        set &access:&cmd_addr %l (0x8070960|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70960|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_IR_BYTE2                             = "
    tree.end
    tree "PBS_CORE_SEQ_ERR_IR_STATUS3"
      sgroup "PBS_CORE_SEQ_ERR_IR_STATUS3 (at 0x7097)"
        set &access:&cmd_addr %l (0x8070970|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70970|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERR_IR_BYTE3                             = "
    tree.end
    tree "PBS_CORE_SEC_ACCESS"
      sgroup "PBS_CORE_SEC_ACCESS (at 0x70d0)"
        set &access:&cmd_addr %l (0x8070d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PBS_CORE_PERPH_RESET_CTL2"
      sgroup "PBS_CORE_PERPH_RESET_CTL2 (at 0x70d9)"
        set &access:&cmd_addr %l (0x8070d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CORE_PERPH_RESET_CTL3"
      sgroup "PBS_CORE_PERPH_RESET_CTL3 (at 0x70da)"
        set &access:&cmd_addr %l (0x8070da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "PBS_CORE_PERPH_RESET_CTL4"
      sgroup "PBS_CORE_PERPH_RESET_CTL4 (at 0x70db)"
        set &access:&cmd_addr %l (0x8070db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PBS_CORE_SEQ_DEBUG_CFG"
      sgroup "PBS_CORE_SEQ_DEBUG_CFG (at 0x70e0)"
        set &access:&cmd_addr %l (0x8070e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DEBUG_EN                                 = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PBS_CORE_SEQ_DEBUG_NEXT"
      sgroup "PBS_CORE_SEQ_DEBUG_NEXT (at 0x70e1)"
        set &access:&cmd_addr %l (0x8070e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   NEXT_CMD                                 = " "0, 1"
    tree.end
    tree "PBS_CORE_OTP_CFG1"
      sgroup "PBS_CORE_OTP_CFG1 (at 0x70e2)"
        set &access:&cmd_addr %l (0x8070e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   VPP_SEL                                  = " "0 (DVDD),1 (VPP_EXT)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PPROG                                    = " "0 (OTP_PROGRAMMING_DISABLED),1 (OTP_PROGRAMMING_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PTM                                      = " "0 (REGULAR_MODES),1 (RESERVED),2 (MARGIN_1_READ_MODE),3 (MARGIN_2_READ_MODE)"
    tree.end
    tree "PBS_CORE_OTP_CFG2"
      sgroup "PBS_CORE_OTP_CFG2 (at 0x70e3)"
        set &access:&cmd_addr %l (0x8070e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   MARGIN_RD_WS                             = "
    tree.end
    tree "PBS_CORE_TEST1"
      sgroup "PBS_CORE_TEST1 (at 0x70e4)"
        set &access:&cmd_addr %l (0x8070e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x70e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DTEST4_EN                                = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DTEST3_EN                                = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DTEST2_EN                                = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DTEST1_EN                                = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
  tree.end
tree.end
tree "PON"
  tree "PON"
    tree "PON_REVISION1"
      sgroup "PON_REVISION1 (at 0x800)"
        set &access:&cmd_addr %l (0x8008000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "PON_REVISION2"
      sgroup "PON_REVISION2 (at 0x801)"
        set &access:&cmd_addr %l (0x8008010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "PON_REVISION3"
      sgroup "PON_REVISION3 (at 0x802)"
        set &access:&cmd_addr %l (0x8008020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "PON_REVISION4"
      sgroup "PON_REVISION4 (at 0x803)"
        set &access:&cmd_addr %l (0x8008030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "PON_PERPH_TYPE"
      sgroup "PON_PERPH_TYPE (at 0x804)"
        set &access:&cmd_addr %l (0x8008040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "PON_PERPH_SUBTYPE"
      sgroup "PON_PERPH_SUBTYPE (at 0x805)"
        set &access:&cmd_addr %l (0x8008050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "PON_PON_PBL_STATUS"
      sgroup "PON_PON_PBL_STATUS (at 0x807)"
        set &access:&cmd_addr %l (0x8008070|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8070|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DVDD_RB_OCCURRED                         = " "0 (NO_RESET),1 (RESET_OCCURRED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   XVDD_RB_OCCURRED                         = " "0 (NO_RESET),1 (RESET_OCCURRED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   POFF_FAULT_OCCURRED                      = " "0 (NO_FAULT),1 (FAULT_OCCURRED)"
    tree.end
    tree "PON_PON_REASON1"
      sgroup "PON_PON_REASON1 (at 0x808)"
        set &access:&cmd_addr %l (0x8008080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CBLPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PON1                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   USB_CHG                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DC_CHG                                   = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RTC                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SMPL                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HARD_RESET                               = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_WARM_RESET_REASON1"
      sgroup "PON_WARM_RESET_REASON1 (at 0x80a)"
        set &access:&cmd_addr %l (0x80080a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   RESIN_N                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   KPDPWR_AND_RESIN                         = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   GP2                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GP1                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PMIC_WD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PS_HOLD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_WARM_RESET_REASON2"
      sgroup "PON_WARM_RESET_REASON2 (at 0x80b)"
        set &access:&cmd_addr %l (0x80080b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TFT                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_POFF_REASON1"
      sgroup "PON_POFF_REASON1 (at 0x80c)"
        set &access:&cmd_addr %l (0x80080c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   RESIN_N                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   KPDPWR_AND_RESIN                         = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   GP2                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GP1                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PMIC_WD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PS_HOLD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_POFF_REASON2"
      sgroup "PON_POFF_REASON2 (at 0x80d)"
        set &access:&cmd_addr %l (0x80080d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STAGE3                                   = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OTST3                                    = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   UVLO                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TFT                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHARGER                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   AVDD_RB                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_SOFT_RESET_REASON1"
      sgroup "PON_SOFT_RESET_REASON1 (at 0x80e)"
        set &access:&cmd_addr %l (0x80080e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   RESIN_N                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   KPDPWR_AND_RESIN                         = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   GP2                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GP1                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PMIC_WD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PS_HOLD                                  = " "0 (reserved),1 (TRIGGER_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT                                     = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_SOFT_RESET_REASON2"
      sgroup "PON_SOFT_RESET_REASON2 (at 0x80f)"
        set &access:&cmd_addr %l (0x80080f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x80f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TFT                                      = " "0 (reserved),1 (TRIGGER_RECEIVED)"
    tree.end
    tree "PON_INT_RT_STS"
      sgroup "PON_INT_RT_STS (at 0x810)"
        set &access:&cmd_addr %l (0x8008100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (INT_RT_STATUS_LOW),1 (INT_RT_STATUS_HIGH)"
    tree.end
    tree "PON_INT_SET_TYPE"
      sgroup "PON_INT_SET_TYPE (at 0x811)"
        set &access:&cmd_addr %l (0x8008110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (LEVEL),1 (EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "PON_INT_POLARITY_HIGH"
      sgroup "PON_INT_POLARITY_HIGH (at 0x812)"
        set &access:&cmd_addr %l (0x8008120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "PON_INT_POLARITY_LOW"
      sgroup "PON_INT_POLARITY_LOW (at 0x813)"
        set &access:&cmd_addr %l (0x8008130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "PON_INT_LATCHED_CLR"
      sgroup "PON_INT_LATCHED_CLR (at 0x814)"
        set &access:&cmd_addr %l (0x8008140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0, 1"
    tree.end
    tree "PON_INT_EN_SET"
      sgroup "PON_INT_EN_SET (at 0x815)"
        set &access:&cmd_addr %l (0x8008150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PON_INT_EN_CLR"
      sgroup "PON_INT_EN_CLR (at 0x816)"
        set &access:&cmd_addr %l (0x8008160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (INT_DISABLED),1 (INT_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "PON_INT_LATCHED_STS"
      sgroup "PON_INT_LATCHED_STS (at 0x818)"
        set &access:&cmd_addr %l (0x8008180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (NO_INT_RECEIVED),1 (INTERRUPT_RECEIVED)"
    tree.end
    tree "PON_INT_PENDING_STS"
      sgroup "PON_INT_PENDING_STS (at 0x819)"
        set &access:&cmd_addr %l (0x8008190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "PON_INT_MID_SEL"
      sgroup "PON_INT_MID_SEL (at 0x81a)"
        set &access:&cmd_addr %l (0x80081a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x81a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "PON_INT_PRIORITY"
      sgroup "PON_INT_PRIORITY (at 0x81b)"
        set &access:&cmd_addr %l (0x80081b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x81b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "PON_KPDPWR_N_RESET_S1_TIMER"
      sgroup "PON_KPDPWR_N_RESET_S1_TIMER (at 0x840)"
        set &access:&cmd_addr %l (0x8008400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_KPDPWR_N_RESET_S2_TIMER"
      sgroup "PON_KPDPWR_N_RESET_S2_TIMER (at 0x841)"
        set &access:&cmd_addr %l (0x8008410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_KPDPWR_N_RESET_S2_CTL"
      sgroup "PON_KPDPWR_N_RESET_S2_CTL (at 0x842)"
        set &access:&cmd_addr %l (0x8008420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_KPDPWR_N_RESET_S2_CTL2"
      sgroup "PON_KPDPWR_N_RESET_S2_CTL2 (at 0x843)"
        set &access:&cmd_addr %l (0x8008430|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8430|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_RESIN_N_RESET_S1_TIMER"
      sgroup "PON_RESIN_N_RESET_S1_TIMER (at 0x844)"
        set &access:&cmd_addr %l (0x8008440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_RESIN_N_RESET_S2_TIMER"
      sgroup "PON_RESIN_N_RESET_S2_TIMER (at 0x845)"
        set &access:&cmd_addr %l (0x8008450|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8450|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_RESIN_N_RESET_S2_CTL"
      sgroup "PON_RESIN_N_RESET_S2_CTL (at 0x846)"
        set &access:&cmd_addr %l (0x8008460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_RESIN_N_RESET_S2_CTL2"
      sgroup "PON_RESIN_N_RESET_S2_CTL2 (at 0x847)"
        set &access:&cmd_addr %l (0x8008470|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8470|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_RESIN_AND_KPDPWR_RESET_S1_TIMER"
      sgroup "PON_RESIN_AND_KPDPWR_RESET_S1_TIMER (at 0x848)"
        set &access:&cmd_addr %l (0x8008480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_RESIN_AND_KPDPWR_RESET_S2_TIMER"
      sgroup "PON_RESIN_AND_KPDPWR_RESET_S2_TIMER (at 0x849)"
        set &access:&cmd_addr %l (0x8008490|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8490|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_RESIN_AND_KPDPWR_RESET_S2_CTL"
      sgroup "PON_RESIN_AND_KPDPWR_RESET_S2_CTL (at 0x84a)"
        set &access:&cmd_addr %l (0x80084a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_RESIN_AND_KPDPWR_RESET_S2_CTL2"
      sgroup "PON_RESIN_AND_KPDPWR_RESET_S2_CTL2 (at 0x84b)"
        set &access:&cmd_addr %l (0x80084b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_GP2_RESET_S1_TIMER"
      sgroup "PON_GP2_RESET_S1_TIMER (at 0x84c)"
        set &access:&cmd_addr %l (0x80084c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_GP2_RESET_S2_TIMER"
      sgroup "PON_GP2_RESET_S2_TIMER (at 0x84d)"
        set &access:&cmd_addr %l (0x80084d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_GP2_RESET_S2_CTL"
      sgroup "PON_GP2_RESET_S2_CTL (at 0x84e)"
        set &access:&cmd_addr %l (0x80084e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_GP2_RESET_S2_CTL2"
      sgroup "PON_GP2_RESET_S2_CTL2 (at 0x84f)"
        set &access:&cmd_addr %l (0x80084f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x84f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_GP1_RESET_S1_TIMER"
      sgroup "PON_GP1_RESET_S1_TIMER (at 0x850)"
        set &access:&cmd_addr %l (0x8008500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_GP1_RESET_S2_TIMER"
      sgroup "PON_GP1_RESET_S2_TIMER (at 0x851)"
        set &access:&cmd_addr %l (0x8008510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S2_TIMER                                 = " "0 (MS_0),1 (MS_10),2 (MS_50),3 (MS_100),4 (MS_250),5 (MS_500),6 (S_1),7 (S_2)"
    tree.end
    tree "PON_GP1_RESET_S2_CTL"
      sgroup "PON_GP1_RESET_S2_CTL (at 0x852)"
        set &access:&cmd_addr %l (0x8008520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_GP1_RESET_S2_CTL2"
      sgroup "PON_GP1_RESET_S2_CTL2 (at 0x853)"
        set &access:&cmd_addr %l (0x8008530|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8530|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_PMIC_WD_RESET_S1_TIMER"
      sgroup "PON_PMIC_WD_RESET_S1_TIMER (at 0x854)"
        set &access:&cmd_addr %l (0x8008540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   S1_TIMER                                 = "
    tree.end
    tree "PON_PMIC_WD_RESET_S2_TIMER"
      sgroup "PON_PMIC_WD_RESET_S2_TIMER (at 0x855)"
        set &access:&cmd_addr %l (0x8008550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   S2_TIMER                                 = "
    tree.end
    tree "PON_PMIC_WD_RESET_S2_CTL"
      sgroup "PON_PMIC_WD_RESET_S2_CTL (at 0x856)"
        set &access:&cmd_addr %l (0x8008560|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8560|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_PMIC_WD_RESET_S2_CTL2"
      sgroup "PON_PMIC_WD_RESET_S2_CTL2 (at 0x857)"
        set &access:&cmd_addr %l (0x8008570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_PMIC_WD_RESET_PET"
      sgroup "PON_PMIC_WD_RESET_PET (at 0x858)"
        set &access:&cmd_addr %l (0x8008580|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8580|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   WATCHDOG_PET                             = " "0 (reserved),1 (PET_WD)"
    tree.end
    tree "PON_PS_HOLD_RESET_CTL"
      sgroup "PON_PS_HOLD_RESET_CTL (at 0x85a)"
        set &access:&cmd_addr %l (0x80085a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x85a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_PS_HOLD_RESET_CTL2"
      sgroup "PON_PS_HOLD_RESET_CTL2 (at 0x85b)"
        set &access:&cmd_addr %l (0x80085b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x85b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_SW_RESET_S2_CTL"
      sgroup "PON_SW_RESET_S2_CTL (at 0x862)"
        set &access:&cmd_addr %l (0x8008620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_SW_RESET_S2_CTL2"
      sgroup "PON_SW_RESET_S2_CTL2 (at 0x863)"
        set &access:&cmd_addr %l (0x8008630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SW_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_SW_RESET_GO"
      sgroup "PON_SW_RESET_GO (at 0x864)"
        set &access:&cmd_addr %l (0x8008640|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8640|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SW_RESET_GO                              = "
    tree.end
    tree "PON_OVERTEMP_RESET_CTL"
      sgroup "PON_OVERTEMP_RESET_CTL (at 0x866)"
        set &access:&cmd_addr %l (0x8008660|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8660|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_OVERTEMP_RESET_CTL2"
      sgroup "PON_OVERTEMP_RESET_CTL2 (at 0x867)"
        set &access:&cmd_addr %l (0x8008670|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8670|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_RESERVED_FAULT_RESET_CTL"
      sgroup "PON_RESERVED_FAULT_RESET_CTL (at 0x868)"
        set &access:&cmd_addr %l (0x8008680|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8680|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_RESERVED_FAULT_RESET_CTL2"
      sgroup "PON_RESERVED_FAULT_RESET_CTL2 (at 0x869)"
        set &access:&cmd_addr %l (0x8008690|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8690|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_TFT_RESET_CTL"
      sgroup "PON_TFT_RESET_CTL (at 0x86a)"
        set &access:&cmd_addr %l (0x80086a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x86a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RESET_TYPE                               = "
    tree.end
    tree "PON_TFT_RESET_CTL2"
      sgroup "PON_TFT_RESET_CTL2 (at 0x86b)"
        set &access:&cmd_addr %l (0x80086b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x86b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   S2_RESET_EN                              = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_PULL_CTL"
      sgroup "PON_PULL_CTL (at 0x870)"
        set &access:&cmd_addr %l (0x8008700|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8700|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PON1_PD_EN                               = " "0 (PD_DISABLED),1 (PD_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_N_PU_EN                           = " "0 (PD_DISABLED),1 (PD_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   KPDPWR_N_PU_EN                           = " "0 (PD_DISABLED),1 (PD_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RESIN_N_PU_EN                            = " "0 (PD_DISABLED),1 (PD_ENABLED)"
    tree.end
    tree "PON_DEBOUNCE_CTL"
      sgroup "PON_DEBOUNCE_CTL (at 0x871)"
        set &access:&cmd_addr %l (0x8008710|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8710|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   WIPWR_DEBOUNCE                           = " "0 (IMMEDIATE),1 (MSEC_0P98),2 (MSEC_1P95),3 (MSEC_3P91),4 (MSEC_7P81),5 (MSEC_15P63),6 (MSEC_31P25),7 (MSEC_62P5)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DEBOUNCE                                 = " "0 (MS_15P6),1 (MS_31P2),2 (MS_62P5),3 (MS_125),4 (MS_250),5 (MS_500),6 (MS_1000),7 (MS_2000)"
    tree.end
    tree "PON_RESET_S3_SRC"
      sgroup "PON_RESET_S3_SRC (at 0x874)"
        set &access:&cmd_addr %l (0x8008740|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8740|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   RESET_S3_SOURCE                          = " "0 (KPDPWR_N),1 (RESIN_N),2 (KPDPWR_AND_RESIN),3 (KPDPWR_OR_RESIN)"
    tree.end
    tree "PON_RESET_S3_TIMER"
      sgroup "PON_RESET_S3_TIMER (at 0x875)"
        set &access:&cmd_addr %l (0x8008750|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8750|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   S3_TIMER                                 = " "0 (IMMEDIATE),1 (SEC_2),2 (SEC_4),3 (SEC_8),4 (SEC_16),5 (SEC_32),6 (SEC_64),7 (SEC_128)"
    tree.end
    tree "PON_PON_TRIGGER_EN"
      sgroup "PON_PON_TRIGGER_EN (at 0x880)"
        set &access:&cmd_addr %l (0x8008800|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8800|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   KPDPWR_N                                 = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CBLPWR_N                                 = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PON1                                     = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   USB_CHG                                  = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DC_CHG                                   = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RTC                                      = " "0 (DISABLED),1 (ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SMPL                                     = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_OPTION_BITS"
      sgroup "PON_OPTION_BITS (at 0x882)"
        set &access:&cmd_addr %l (0x8008820|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8820|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   KPDPWR_FEDGE_PON                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PON1_REDGE_PON                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   WIPWR_DEBOUNCE_DLY                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PON_WARM_REASON_CLEAR                    = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_WATCHDOG_LOCK"
      sgroup "PON_WATCHDOG_LOCK (at 0x883)"
        set &access:&cmd_addr %l (0x8008830|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8830|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PMIC_WD_LOCK                             = " "0 (WD_UNLOCKED),1 (WD_LOCKED)"
    tree.end
    tree "PON_UVLO"
      sgroup "PON_UVLO (at 0x888)"
        set &access:&cmd_addr %l (0x8008880|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8880|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   WIPWR_UVLO_DLY                           = " "0 (IMMEDIATE),1 (MSEC_0P98),2 (MSEC_1P95),3 (MSEC_3P91),4 (MSEC_7P81),5 (MSEC_15P63),6 (MSEC_31P25),7 (MSEC_62P5)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   UVLO_DLY                                 = " "0 (IMMEDIATE),1 (MSEC_0P98),2 (MSEC_1P95),3 (MSEC_3P91),4 (MSEC_7P81),5 (MSEC_15P63),6 (MSEC_31P25),7 (MSEC_62P5)"
    tree.end
    tree "PON_AVDD_VPH"
      sgroup "PON_AVDD_VPH (at 0x88a)"
        set &access:&cmd_addr %l (0x80088a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   AVDD_MODE_CTRL                           = " "0 (LPM),1 (AUTOM),2 (HPM1),3 (HPM2)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   AVDD_REF_OVR                             = " "0 (AUTO),1 (FORCE_MINI_BG)"
    tree.end
    tree "PON_DVDD_VPH"
      sgroup "PON_DVDD_VPH (at 0x88b)"
        set &access:&cmd_addr %l (0x80088b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DVDD_MODE_CTRL                           = " "0 (LPM),1 (AUTOM),2 (HPM1),3 (HPM2)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   XVDD_DVDD_SRC_CTRL                       = " "0 (DVDD_SRC_FROM_LDO),1 (DVDD_SRC_FROM_SMPS),2 (DVDD_SRC_FROM_PON_DVDDREG),3 (DVDD_SRC_FROM_PON_DVDDREG1)"
    tree.end
    tree "PON_PERPH_RB_SPARE"
      sgroup "PON_PERPH_RB_SPARE (at 0x88c)"
        set &access:&cmd_addr %l (0x80088c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SPARE                                    = "
    tree.end
    tree "PON_DVDD_RB_SPARE"
      sgroup "PON_DVDD_RB_SPARE (at 0x88d)"
        set &access:&cmd_addr %l (0x80088d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SPARE                                    = "
    tree.end
    tree "PON_XVDD_RB_SPARE"
      sgroup "PON_XVDD_RB_SPARE (at 0x88e)"
        set &access:&cmd_addr %l (0x80088e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SPARE                                    = "
    tree.end
    tree "PON_SOFT_RB_SPARE"
      sgroup "PON_SOFT_RB_SPARE (at 0x88f)"
        set &access:&cmd_addr %l (0x80088f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x88f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SPARE                                    = "
    tree.end
    tree "PON_PON1_INTERFACE"
      sgroup "PON_PON1_INTERFACE (at 0x890)"
        set &access:&cmd_addr %l (0x8008900|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8900|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PON_OUT                                  = " "0 (LOW),1 (HIGH)"
    tree.end
    tree "PON_PBS_INTERFACE"
      sgroup "PON_PBS_INTERFACE (at 0x891)"
        set &access:&cmd_addr %l (0x8008910|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8910|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ACK_NACK                                 = " "0 (NACK),1 (ACK)"
    tree.end
    tree "PON_DEBUG_CTL"
      sgroup "PON_DEBUG_CTL (at 0x894)"
        set &access:&cmd_addr %l (0x8008940|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8940|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DEBUG_CLOCK                              = " "0 (DISABLE),1 (ENABLE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEBUG_CLOCK_SRC                          = " "0 (RESIN_N),1 (CLK_50K)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SEL_DEBUG                                = "
    tree.end
    tree "PON_DEBUG_STATUS"
      sgroup "PON_DEBUG_STATUS (at 0x895)"
        set &access:&cmd_addr %l (0x8008950|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8950|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DEBUG_STATE                              = "
    tree.end
    tree "PON_SEC_ACCESS"
      sgroup "PON_SEC_ACCESS (at 0x8d0)"
        set &access:&cmd_addr %l (0x8008d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "PON_PERPH_RESET_CTL2"
      sgroup "PON_PERPH_RESET_CTL2 (at 0x8d9)"
        set &access:&cmd_addr %l (0x8008d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "PON_PERPH_RESET_CTL3"
      sgroup "PON_PERPH_RESET_CTL3 (at 0x8da)"
        set &access:&cmd_addr %l (0x8008da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "PON_PERPH_RESET_CTL4"
      sgroup "PON_PERPH_RESET_CTL4 (at 0x8db)"
        set &access:&cmd_addr %l (0x8008db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "PON_INT_TEST1"
      sgroup "PON_INT_TEST1 (at 0x8e0)"
        set &access:&cmd_addr %l (0x8008e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (DISABLED),1 (ENABLED)"
    tree.end
    tree "PON_INT_TEST_VAL"
      sgroup "PON_INT_TEST_VAL (at 0x8e1)"
        set &access:&cmd_addr %l (0x8008e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_RESET_OCCURED                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PMIC_WD_BARK                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   K_R_BARK                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   RESIN_BARK                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   KPDPWR_BARK                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CBLPWR_ON                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RESIN_ON                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   KPDPWR_ON                                = " "0, 1"
    tree.end
    tree "PON_TEST1"
      sgroup "PON_TEST1 (at 0x8e2)"
        set &access:&cmd_addr %l (0x8008e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UVLO_TEST_EN                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FORCE_VPH_MAX                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FORCE_AVDD_OK                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FAST_ON                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FORCE_ON                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BYPASS_TRIM_COPY                         = " "0, 1"
    tree.end
    tree "PON_TEST2"
      sgroup "PON_TEST2 (at 0x8e3)"
        set &access:&cmd_addr %l (0x8008e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ATEST2_AVDD                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   ATEST2_DVDD                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ATEST2_AVDD_OK                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ATEST1_VBG                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ATEST2_DVDD_INT                          = " "0, 1"
    tree.end
    tree "PON_TEST3"
      sgroup "PON_TEST3 (at 0x8e4)"
        set &access:&cmd_addr %l (0x8008e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   DTEST_EN                                 = "
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STAY_ON                                  = " "0, 1"
    tree.end
    tree "PON_TEST4"
      sgroup "PON_TEST4 (at 0x8e5)"
        set &access:&cmd_addr %l (0x8008e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   AVDD_ATEST1                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   RAW_AVDD_RB_SEL                          = " "0, 1, 2, 3"
    tree.end
    tree "PON_TEST5"
      sgroup "PON_TEST5 (at 0x8e6)"
        set &access:&cmd_addr %l (0x8008e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   MASK_DVDD_RB                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MASK_SHUTDOWN1_RB                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   MASK_SHUTDOWN2_RB                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MASK_WARM_RB                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MASK_GLOBAL_SOFT_RB                      = " "0, 1"
    tree.end
    tree "PON_VMAX_SEL"
      sgroup "PON_VMAX_SEL (at 0x8e7)"
        set &access:&cmd_addr %l (0x8008e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VMAX_SEL                                 = "
    tree.end
    tree "PON_TRIM_NUM"
      sgroup "PON_TRIM_NUM (at 0x8f0)"
        set &access:&cmd_addr %l (0x8008f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "PON_PON_TRIM"
      sgroup "PON_PON_TRIM (at 0x8f1)"
        set &access:&cmd_addr %l (0x8008f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PON_BG_TRIM                              = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   AVDD_REG_TRIM                            = "
    tree.end
    tree "PON_PON_CNTL_2_TRIM"
      sgroup "PON_PON_CNTL_2_TRIM (at 0x8f2)"
        set &access:&cmd_addr %l (0x8008f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   UVLO_THRESH                              = "
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   UVLO_VOLT_HYST                           = " "0, 1, 2, 3"
    tree.end
    tree "PON_PON_CNTL_3_TRIM"
      sgroup "PON_PON_CNTL_3_TRIM (at 0x8f3)"
        set &access:&cmd_addr %l (0x8008f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   AVDD_RB_THRESH                           = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   AVDD_RB_GLITCH_FILT                      = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FORCE_AVDD_RB_OK                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   RESET_S3_SOURCE                          = " "0, 1, 2, 3"
    tree.end
    tree "PON_PON_CNTL_4_TRIM"
      sgroup "PON_PON_CNTL_4_TRIM (at 0x8f4)"
        set &access:&cmd_addr %l (0x8008f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x8f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   RZ_HPM                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   RZ_LPM                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "REVID"
  tree "REVID"
    tree "REVID_REVISION1"
      sgroup "REVID_REVISION1 (at 0x100)"
        set &access:&cmd_addr %l (0x8001000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "REVID_REVISION2"
      sgroup "REVID_REVISION2 (at 0x101)"
        set &access:&cmd_addr %l (0x8001010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VARIANT                                  = "
    tree.end
    tree "REVID_REVISION3"
      sgroup "REVID_REVISION3 (at 0x102)"
        set &access:&cmd_addr %l (0x8001020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   METAL                                    = "
    tree.end
    tree "REVID_REVISION4"
      sgroup "REVID_REVISION4 (at 0x103)"
        set &access:&cmd_addr %l (0x8001030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ALL_LAYER                                = "
    tree.end
    tree "REVID_PERPH_TYPE"
      sgroup "REVID_PERPH_TYPE (at 0x104)"
        set &access:&cmd_addr %l (0x8001040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "REVID_PERPH_SUBTYPE"
      sgroup "REVID_PERPH_SUBTYPE (at 0x105)"
        set &access:&cmd_addr %l (0x8001050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "REVID_SEC_ACCESS"
      sgroup "REVID_SEC_ACCESS (at 0x1d0)"
        set &access:&cmd_addr %l (0x8001d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "REVID_TRIM_NUM"
      sgroup "REVID_TRIM_NUM (at 0x1f0)"
        set &access:&cmd_addr %l (0x8001f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "REVID_TP_REV"
      sgroup "REVID_TP_REV (at 0x1f1)"
        set &access:&cmd_addr %l (0x8001f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TP_REV                                   = "
    tree.end
    tree "REVID_FAB_ID"
      sgroup "REVID_FAB_ID (at 0x1f2)"
        set &access:&cmd_addr %l (0x8001f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   FAB_ID                                   = "
    tree.end
    tree "REVID_WAFER_ID"
      sgroup "REVID_WAFER_ID (at 0x1f3)"
        set &access:&cmd_addr %l (0x8001f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   WAFER_ID                                 = "
    tree.end
    tree "REVID_X_COORD"
      sgroup "REVID_X_COORD (at 0x1f4)"
        set &access:&cmd_addr %l (0x8001f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   X_COORD                                  = "
    tree.end
    tree "REVID_Y_COORD"
      sgroup "REVID_Y_COORD (at 0x1f5)"
        set &access:&cmd_addr %l (0x8001f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   Y_COORD                                  = "
    tree.end
    tree "REVID_LOT_ID_11_10"
      sgroup "REVID_LOT_ID_11_10 (at 0x1f6)"
        set &access:&cmd_addr %l (0x8001f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x2--0x7 1 "  [ 7: 2]   LOT_ID_11_5_0                            = "
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LOT_ID_10_5_4                            = " "0, 1, 2, 3"
    tree.end
    tree "REVID_LOT_ID_10_09"
      sgroup "REVID_LOT_ID_10_09 (at 0x1f7)"
        set &access:&cmd_addr %l (0x8001f70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   LOT_ID_10_3_0                            = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LOT_ID_09_5_2                            = "
    tree.end
    tree "REVID_LOT_ID_09_08"
      sgroup "REVID_LOT_ID_09_08 (at 0x1f8)"
        set &access:&cmd_addr %l (0x8001f80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   LOT_ID_09_1_0                            = " "0, 1, 2, 3"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LOT_ID_08_5_0                            = "
    tree.end
    tree "REVID_LOT_ID_07_06"
      sgroup "REVID_LOT_ID_07_06 (at 0x1f9)"
        set &access:&cmd_addr %l (0x8001f90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1f90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x2--0x7 1 "  [ 7: 2]   LOT_ID_07_5_0                            = "
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LOT_ID_06_5_4                            = " "0, 1, 2, 3"
    tree.end
    tree "REVID_LOT_ID_06_05"
      sgroup "REVID_LOT_ID_06_05 (at 0x1fa)"
        set &access:&cmd_addr %l (0x8001fa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   LOT_ID_06_3_0                            = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LOT_ID_05_5_2                            = "
    tree.end
    tree "REVID_LOT_ID_05_04"
      sgroup "REVID_LOT_ID_05_04 (at 0x1fb)"
        set &access:&cmd_addr %l (0x8001fb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   LOT_ID_05_1_0                            = " "0, 1, 2, 3"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LOT_ID_04_5_0                            = "
    tree.end
    tree "REVID_LOT_ID_03_02"
      sgroup "REVID_LOT_ID_03_02 (at 0x1fc)"
        set &access:&cmd_addr %l (0x8001fc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x2--0x7 1 "  [ 7: 2]   LOT_ID_03_5_0                            = "
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LOT_ID_02_5_4                            = " "0, 1, 2, 3"
    tree.end
    tree "REVID_LOT_ID_02_01"
      sgroup "REVID_LOT_ID_02_01 (at 0x1fd)"
        set &access:&cmd_addr %l (0x8001fd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   LOT_ID_02_3_0                            = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LOT_ID_01_5_2                            = "
    tree.end
    tree "REVID_LOT_ID_01_00"
      sgroup "REVID_LOT_ID_01_00 (at 0x1fe)"
        set &access:&cmd_addr %l (0x8001fe0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1fe0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   LOT_ID_01_1_0                            = " "0, 1, 2, 3"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LOT_ID_00_5_0                            = "
    tree.end
    tree "REVID_MFG_ID_SPARE"
      sgroup "REVID_MFG_ID_SPARE (at 0x1ff)"
        set &access:&cmd_addr %l (0x8001ff0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ff0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SPARE                                    = "
    tree.end
  tree.end
tree.end
tree "S1_CTRL"
  tree "S1_CTRL"
    tree "S1_CTRL_REVISION1"
      sgroup "S1_CTRL_REVISION1 (at 0x11400)"
        set &access:&cmd_addr %l (0x8014000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S1_CTRL_REVISION2"
      sgroup "S1_CTRL_REVISION2 (at 0x11401)"
        set &access:&cmd_addr %l (0x8014010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S1_CTRL_REVISION3"
      sgroup "S1_CTRL_REVISION3 (at 0x11402)"
        set &access:&cmd_addr %l (0x8014020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S1_CTRL_REVISION4"
      sgroup "S1_CTRL_REVISION4 (at 0x11403)"
        set &access:&cmd_addr %l (0x8014030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S1_CTRL_PERPH_TYPE"
      sgroup "S1_CTRL_PERPH_TYPE (at 0x11404)"
        set &access:&cmd_addr %l (0x8014040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S1_CTRL_PERPH_SUBTYPE"
      sgroup "S1_CTRL_PERPH_SUBTYPE (at 0x11405)"
        set &access:&cmd_addr %l (0x8014050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S1_CTRL_STATUS"
      sgroup "S1_CTRL_STATUS (at 0x11408)"
        set &access:&cmd_addr %l (0x8014080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_OK                                  = " "0 (VREG_OK_FALSE),1 (VREG_OK_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ILS                                      = " "0 (ILEGAL_LIMIT_STOP_FALSE),1 (ILEGAL_LIMIT_STOP_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   UL_VOLTAGE                               = " "0 (UL_INT_FALSE),1 (UL_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LL_VOLTAGE                               = " "0 (LL_INT_FALSE),1 (LL_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PS_TRUE                                  = " "0 (PS_FALSE),1 (PS_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_TRUE                                 = " "0 (NPM_VREGOK_FALSE),1 (NPM_VREGOK_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE                             = " "0 (STEPPER_DONE_FALSE),1 (STEPPER_DONE_TRUE)"
    tree.end
    tree "S1_CTRL_INT_RT_STS"
      sgroup "S1_CTRL_INT_RT_STS (at 0x11410)"
        set &access:&cmd_addr %l (0x8014100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_SET_TYPE"
      sgroup "S1_CTRL_INT_SET_TYPE (at 0x11411)"
        set &access:&cmd_addr %l (0x8014110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_POLARITY_HIGH"
      sgroup "S1_CTRL_INT_POLARITY_HIGH (at 0x11412)"
        set &access:&cmd_addr %l (0x8014120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_POLARITY_LOW"
      sgroup "S1_CTRL_INT_POLARITY_LOW (at 0x11413)"
        set &access:&cmd_addr %l (0x8014130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_LATCHED_CLR"
      sgroup "S1_CTRL_INT_LATCHED_CLR (at 0x11414)"
        set &access:&cmd_addr %l (0x8014140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_EN_SET"
      sgroup "S1_CTRL_INT_EN_SET (at 0x11415)"
        set &access:&cmd_addr %l (0x8014150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_EN_CLR"
      sgroup "S1_CTRL_INT_EN_CLR (at 0x11416)"
        set &access:&cmd_addr %l (0x8014160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_LATCHED_STS"
      sgroup "S1_CTRL_INT_LATCHED_STS (at 0x11418)"
        set &access:&cmd_addr %l (0x8014180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_PENDING_STS"
      sgroup "S1_CTRL_INT_PENDING_STS (at 0x11419)"
        set &access:&cmd_addr %l (0x8014190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT                            = " "0 (LIMIT_ERR_INT_FALSE),1 (LIMIT_ERR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT                              = " "0 (VREG_OK_INT_FALSE),1 (VREG_OK_INT_TRUE)"
    tree.end
    tree "S1_CTRL_INT_MID_SEL"
      sgroup "S1_CTRL_INT_MID_SEL (at 0x1141a)"
        set &access:&cmd_addr %l (0x80141a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x141a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (INT_MID_FALSE),1 (INT_MID_TRUE),2 (reserved),3 (reserved)"
    tree.end
    tree "S1_CTRL_INT_PRIORITY"
      sgroup "S1_CTRL_INT_PRIORITY (at 0x1141b)"
        set &access:&cmd_addr %l (0x80141b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x141b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_FALSE),1 (INT_PRIORITY_TRUE)"
    tree.end
    tree "S1_CTRL_VOLTAGE_CTL1"
      sgroup "S1_CTRL_VOLTAGE_CTL1 (at 0x11440)"
        set &access:&cmd_addr %l (0x8014400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RANGE                                    = " "0 (RANGE_HV_FALSE),1 (RANGE_HV_TRUE)"
    tree.end
    tree "S1_CTRL_VOLTAGE_CTL2"
      sgroup "S1_CTRL_VOLTAGE_CTL2 (at 0x11441)"
        set &access:&cmd_addr %l (0x8014410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S1_CTRL_PFM_CTL"
      sgroup "S1_CTRL_PFM_CTL (at 0x11444)"
        set &access:&cmd_addr %l (0x8014440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_VOLT_CTL                             = " "0 (PFM_VOLT_BOOST_FALSE),1 (PFM_VOLT_BOOST_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFM_IBOOST                               = " "0 (PFM_IBOOST_FALSE),1 (PFM_IBOOST_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PFM_TYPE_I                               = " "0 (PFM_ADVANCED),1 (PFM_LEGACY)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PFM_COMP_HYST                            = " "0 (PFM_HYST_3MV),1 (PFM_HYST_6MV)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PFM_COMP_PLS_FLTR                        = " "0 (PFM_COMP_PLS_FLTR_100NS),1 (PFM_COMP_PLS_FLTR_250NS)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PFM_IPLIM_CTRL                           = " "0 (PFM_IPLIM_CTRL_FALSE),1 (PFM_IPLIM_CTRL_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_IPLIM_DLY                            = " "0 (PFM_IPLIM_CTRL_75NS),1 (PFM_IPLIMI_CTRL_150NS),2 (PFM_IPLIM_CTRL_300NS),3 (PFM_IPLIM_CTRL_600NS)"
    tree.end
    tree "S1_CTRL_MODE_CTL"
      sgroup "S1_CTRL_MODE_CTL (at 0x11445)"
        set &access:&cmd_addr %l (0x8014450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PWM                                      = " "0 (PWM_NO_FORCE),1 (PWM_FORCE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_FALSE),1 (AUTO_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLLOW_PMIC_AWAKE                        = " "0 (FOLLOW_PMIC_AWAKE_FALSE),1 (FOLLOW_PMIC_AWAKE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HWEN3                             = " "0 (FOLLOW_HWEN3_FALSE),1 (FOLLOW_HWEN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HWEN2                             = " "0 (FOLLOW_HWEN2_FALSE),1 (FOLLOW_HWEN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HWEN1                             = " "0 (FOLLOW_HWEN1_FALSE),1 (FOLLOW_HWEN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HWEN0                             = " "0 (FOLLOW_HWEN0_FALSE),1 (FOLLOW_HWEN0_TRUE)"
    tree.end
    tree "S1_CTRL_EN_CTL"
      sgroup "S1_CTRL_EN_CTL (at 0x11446)"
        set &access:&cmd_addr %l (0x8014460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (BUCK_ENABLE_FALSE),1 (BUCK_ENABLE_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_HWEN3                             = " "0 (FOLLOW_HWEN3_FALSE),1 (FOLLOW_HWEN3_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_HWEN2                             = " "0 (FOLLOW_HWEN2_FALSE),1 (FOLLOW_HWEN2_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_HWEN1                             = " "0 (FOLLOW_HWEN1_FALSE),1 (FOLLOW_HWEN1_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_HWEN0                             = " "0 (FOLLOW_HWEN0_FALSE),1 (FOLLOW_HWEN0_TRUE)"
    tree.end
    tree "S1_CTRL_PD_CTL"
      sgroup "S1_CTRL_PD_CTL (at 0x11448)"
        set &access:&cmd_addr %l (0x8014480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (PD_ENABLE_FALSE),1 (PD_ENABLE_TRUE)"
    tree.end
    tree "S1_CTRL_COMP_CAP_CTL"
      sgroup "S1_CTRL_COMP_CAP_CTL (at 0x11451)"
        set &access:&cmd_addr %l (0x8014510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   POLE2_CTRL                               = " "0 (CP_CAP_0PF),1 (CP_CAP_1PF)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CZ_CTRL                                  = " "0 (CZ_CAP_30PF),1 (CZ_CAP_40PF),2 (CZ_CAP_50PF),3 (CZ_CAP_60PF)"
    tree.end
    tree "S1_CTRL_GM_CTL"
      sgroup "S1_CTRL_GM_CTL (at 0x11452)"
        set &access:&cmd_addr %l (0x8014520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   GM_CTL                                   = "
    tree.end
    tree "S1_CTRL_RZ_CTL"
      sgroup "S1_CTRL_RZ_CTL (at 0x11453)"
        set &access:&cmd_addr %l (0x8014530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RZ_CTL                                   = "
    tree.end
    tree "S1_CTRL_ISNS_CTRL"
      sgroup "S1_CTRL_ISNS_CTRL (at 0x11455)"
        set &access:&cmd_addr %l (0x8014550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SA_COMP_CAP                              = " "0 (SA_COMP_CAP_100FF),1 (SA_COMP_CAP_200FF)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_RES_IOS                             = " "0 (ISNS_RES_IOS_8KOHMS_24UA),1 (ISNS_RES_IOS_16KOHMS_12UA)"
    tree.end
    tree "S1_CTRL_SAW_CTL"
      sgroup "S1_CTRL_SAW_CTL (at 0x11456)"
        set &access:&cmd_addr %l (0x8014560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CURRENT_CTRL                             = " "0 (SAW_CURRENT_CTRL_1UA),1 (SAW_CURRENT_CTRL_2UA)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NSAW_CTRL                                = " "0 (NSAW_CTRL_4X),1 (NSAW_CTRL_8X),2 (NSAW_CTRL_12X),3 (NSAW_CTRL_16X),4 (NSAW_CTRL_20X),5 (NSAW_CTRL_24X),6 (NSAW_CTRL_28X),7 (NSAW_CTRL_32X)"
    tree.end
    tree "S1_CTRL_DMAX_CTL"
      sgroup "S1_CTRL_DMAX_CTL (at 0x11458)"
        set &access:&cmd_addr %l (0x8014580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DMAX_EN                                  = " "0 (DMAX_EN_FALSE),1 (DMAX_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DMAX_TIME_SEL                            = " "0 (DMAX_TIME_SEL_20NS),1 (DMAX_TIME_SEL_10NS)"
    tree.end
    tree "S1_CTRL_PULSE_SKIP_CTL"
      sgroup "S1_CTRL_PULSE_SKIP_CTL (at 0x11459)"
        set &access:&cmd_addr %l (0x8014590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PS_EN                                    = " "0 (PS_EN_FALSE),1 (PS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PS_TIME_HYST                             = " "0 (PS_TIME_HYST_2CYCLE),1 (PS_TIME_HYST_4CYCLE),2 (PS_TIME_HYST_8CYCLE),3 (PS_TIME_HYST_16CYLE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PSKIP_EXIT_SEL                           = " "0 (PSKIP_EXIT_SEL_ERR_AMP),1 (PSKIP_EXIT_VDIP_COMP)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PS_METHOD                                = " "0 (PS_METHOD_ILOAD),1 (PS_METHOD_ERR_AMP)"
    tree.end
    tree "S1_CTRL_PULSE_SKIP_THRES"
      sgroup "S1_CTRL_PULSE_SKIP_THRES (at 0x1145a)"
        set &access:&cmd_addr %l (0x80145a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x145a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x6 1 "  [ 6: 3]   PS_VRST                                  = "
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PS_VSET                                  = " "0 (PS_VSET_VRSET_450MV_ILOAD_THRESH_25MA),1 (PS_VSET_VRSET_475MV_ILOAD_THRESH_37P5MA),2 (PS_VSET_VRSET_500MV_ILOAD_THRESH_50MA),3 (PS_VSET_VRSET_525MV_ILOAD_THRESH_62P5MA),4 (PS_VSET_VRSET_550MV_ILOAD_THRESH_75MA),5 (PS_VSET_VRSET_575MV_ILOAD_THRESH_87P5MA),6 (PS_VSET_VRSET_600MV_ILOAD_THRESH_100MA),7 (PS_VSET_VRSET_625MV_ILOAD_THRESH_112P5MA)"
    tree.end
    tree "S1_CTRL_AUTO_MODE_CTL"
      sgroup "S1_CTRL_AUTO_MODE_CTL (at 0x1145b)"
        set &access:&cmd_addr %l (0x80145b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x145b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PWM_PFM_SEL                              = " "0 (PWM_PFM_SEL_PS_COMP),1 (PWM_PFM_SEL_INZERO)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PFM_PWM_SEL                              = " "0 (PFM_PWM_SEL_RESERVED),1 (PFM_PWM_SEL_VDIP_COMP),2 (PFM_PWM_SEL_IPLIM_CNTR),3 (PFM_PWM_SEL_VDIP_COMP_OR_IPLIM_CNTR)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   MODE_SEL_DLY                             = " "0 (MODE_SEL_DLY_4CYCLES),1 (MODE_SEL_DLY_8CYCLES),2 (MODE_SEL_DLY_16CYCLES),3 (MODE_SEL_DLY_16CYCLES_ALSO)"
    tree.end
    tree "S1_CTRL_INZERO_COUNT_CTL"
      sgroup "S1_CTRL_INZERO_COUNT_CTL (at 0x1145c)"
        set &access:&cmd_addr %l (0x80145c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x145c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   WINDOW_WIDTH                             = " "0 (WINDOW_WIDTH_1_COUNT),1 (WINDOW_WIDTH_2_COUNT),2 (WINDOW_WIDTH_4_COUNT),3 (WINDOW_WIDTH_8_COUNT),4 (WINDOW_WIDTH_16_COUNT),5 (WINDOW_WIDTH_32_COUNT),6 (WINDOW_WIDTH_64_COUNT),7 (WINDOW_WIDTH_128_COUNT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   THRESHOLD                                = "
    tree.end
    tree "S1_CTRL_PFM_COUNT_CTL"
      sgroup "S1_CTRL_PFM_COUNT_CTL (at 0x1145d)"
        set &access:&cmd_addr %l (0x80145d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x145d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   WINDOW_WIDTH                             = " "0 (WINDOW_WIDTH_1_COUNT),1 (WINDOW_WIDTH_2_COUNT),2 (WINDOW_WIDTH_4_COUNT),3 (WINDOW_WIDTH_8_COUNT),4 (WINDOW_WIDTH_16_COUNT),5 (WINDOW_WIDTH_32_COUNT),6 (WINDOW_WIDTH_64_COUNT),7 (WINDOW_WIDTH_128_COUNT)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   THRESHOLD                                = "
    tree.end
    tree "S1_CTRL_PS_VGA_CTL"
      sgroup "S1_CTRL_PS_VGA_CTL (at 0x1145e)"
        set &access:&cmd_addr %l (0x80145e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x145e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VGA_GAIN                                 = "
    tree.end
    tree "S1_CTRL_STEPPER_SS_CTL"
      sgroup "S1_CTRL_STEPPER_SS_CTL (at 0x11460)"
        set &access:&cmd_addr %l (0x8014600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STEPPER_EN                               = " "0 (STEPPER_EN_FALSE),1 (STEPPER_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   STEP                                     = " "0 (STEP_1_LSB),1 (STEP_2_LSB),2 (STEP_4_LSB),3 (STEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DELAY                                    = " "0 (DELAY_20_CLK_CYCLES),1 (DELAY_40_CLK_CYCLES),2 (DELAY_80_CLK_CYCLES),3 (DELAY_160_CLK_CYCLES),4 (DELAY_320_CLK_CYCLES),5 (DELAY_640_CLK_CYLES),6 (DELAY_1280_CLK_CYCLES),7 (DELAY_2560_CLK_CYCLES)"
    tree.end
    tree "S1_CTRL_STEPPER_VS_CTL"
      sgroup "S1_CTRL_STEPPER_VS_CTL (at 0x11461)"
        set &access:&cmd_addr %l (0x8014610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STEPPER_EN                               = " "0 (STEPPER_EN_FALSE),1 (STEPPER_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   STEP                                     = " "0 (STEP_1_LSB),1 (STEP_2_LSB),2 (STEP_4_LSB),3 (STEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DELAY                                    = " "0 (DELAY_20_CLK_CYCLES),1 (DELAY_40_CLK_CYCLES),2 (DELAY_80_CLK_CYCLES),3 (DELAY_160_CLK_CYCLES),4 (DELAY_320_CLK_CYCLES),5 (DELAY_640_CLK_CYLES),6 (DELAY_1280_CLK_CYCLES),7 (DELAY_2560_CLK_CYCLES)"
    tree.end
    tree "S1_CTRL_FT_CTL"
      sgroup "S1_CTRL_FT_CTL (at 0x11462)"
        set &access:&cmd_addr %l (0x8014620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FT_EN                                    = " "0 (FT_EN_FALSE),1 (FT_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   GM_BOOST                                 = " "0 (GM_BOOST_FALSE),1 (GM_BOOST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   NL_DEAD_ZONE                             = " "0 (NL_DEAD_ZONE_0A),1 (NL_DEAD_ZONE_0P125A),2 (NL_DEAD_ZONE_0P25A),3 (NL_DEAD_ZONE_0P375A),4 (NL_DEAD_ZONE_0P5A),5 (NL_DEAD_ZONE_0P625A),6 (NL_DEAD_ZONE_0P75A),7 (NL_DEAD_ZONE_0P875A)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   NL_CUR_CTL                               = " "0 (NL_CUR_CTL_0A),1 (NL_CUR_CTL_0P125A),2 (NL_CUR_CTL_0P25A),3 (NL_CUR_CTL_0P375A),4 (NL_CUR_CTL_0P5A),5 (NL_CUR_CTL_0P625A),6 (NL_CUR_CTL_0P75A),7 (NL_CUR_CTL_0P875A)"
    tree.end
    tree "S1_CTRL_QMODE_SHADOW"
      sgroup "S1_CTRL_QMODE_SHADOW (at 0x11463)"
        set &access:&cmd_addr %l (0x8014630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   FOLLOW_QM                                = " "0 (FOLLOW_QM_FALSE),1 (FOLLOW_QM_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   QMODE_PS_METHOD                          = " "0 (QMODE_PS_METHOD_ILOAD),1 (QMODE_PS_METHOD_ERRAMP)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   QMODE_PS_VRST                            = "
    tree.end
    tree "S1_CTRL_UL_LL_CTRL"
      sgroup "S1_CTRL_UL_LL_CTRL (at 0x11468)"
        set &access:&cmd_addr %l (0x8014680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UL_INT_EN                                = " "0 (UL_INT_EN_FALSE),1 (UL_INT_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LL_INT_EN                                = " "0 (LL_INT_EN_FALSE),1 (LL_INT_EN_TRUE)"
    tree.end
    tree "S1_CTRL_UL_VOLTAGE"
      sgroup "S1_CTRL_UL_VOLTAGE (at 0x11469)"
        set &access:&cmd_addr %l (0x8014690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S1_CTRL_LL_VOLTAGE"
      sgroup "S1_CTRL_LL_VOLTAGE (at 0x1146b)"
        set &access:&cmd_addr %l (0x80146b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x146b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   V_SET                                    = "
    tree.end
    tree "S1_CTRL_OCP"
      sgroup "S1_CTRL_OCP (at 0x1146c)"
        set &access:&cmd_addr %l (0x80146c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x146c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ENABLE                                   = " "0 (OCP_FALSE),1 (OCP_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OVER_RIDE                                = " "0 (OCP_TEST_MODE_FALSE),1 (OCP_TEST_MODE_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CLK_DIV                                  = " "0 (OCP_STARTUP_CLK_DIV_BY_2_FALSE),1 (OCP_STARTUP_CLK_DIV_BY_2_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LPM                                      = " "0 (OCP_LPM_DURING_PFM_FALSE),1 (OCP_LPM_DURING_PFM_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   IPLIMIT_COUNT                            = " "0 (OCP_IPLIMT_COUNT_4),1 (OCP_IPLIMIT_COUNT_8)"
    tree.end
    tree "S1_CTRL_CTLR_MISC"
      sgroup "S1_CTRL_CTLR_MISC (at 0x1147a)"
        set &access:&cmd_addr %l (0x80147a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x147a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SPARE_7                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SPARE_6                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SPARE_5                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SPARE_4                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPARE_3                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SPARE_2                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPARE_0                                  = " "0, 1"
    tree.end
    tree "S1_CTRL_SEC_ACCESS"
      sgroup "S1_CTRL_SEC_ACCESS (at 0x114d0)"
        set &access:&cmd_addr %l (0x8014d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S1_CTRL_PERPH_RESET_CTL1"
      sgroup "S1_CTRL_PERPH_RESET_CTL1 (at 0x114d8)"
        set &access:&cmd_addr %l (0x8014d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABLE_PRESET_FALSE),1 (ENABLE_PRESET_TRUE)"
    tree.end
    tree "S1_CTRL_PERPH_RESET_CTL2"
      sgroup "S1_CTRL_PERPH_RESET_CTL2 (at 0x114d9)"
        set &access:&cmd_addr %l (0x8014d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S1_CTRL_PERPH_RESET_CTL3"
      sgroup "S1_CTRL_PERPH_RESET_CTL3 (at 0x114da)"
        set &access:&cmd_addr %l (0x8014da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S1_CTRL_PERPH_RESET_CTL4"
      sgroup "S1_CTRL_PERPH_RESET_CTL4 (at 0x114db)"
        set &access:&cmd_addr %l (0x8014db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_ACTIVE_FALSE),1 (LOCAL_SOFT_RESET_ACTIVE_TRUE)"
    tree.end
    tree "S1_CTRL_INT_TEST1"
      sgroup "S1_CTRL_INT_TEST1 (at 0x114e0)"
        set &access:&cmd_addr %l (0x8014e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_EN_FALSE),1 (INT_TEST_MODE_EN_TRUE)"
    tree.end
    tree "S1_CTRL_INT_TEST_VAL"
      sgroup "S1_CTRL_INT_TEST_VAL (at 0x114e1)"
        set &access:&cmd_addr %l (0x8014e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERR_INT_TEST_VAL                   = " "0 (LIMIT_ERR_INT_TEST_VAL_ACTIVE_FALSE),1 (LIMIT_ERR_INT_TEST_VAL_ACTIVE_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_OK_INT_TEST_VAL                     = " "0, 1"
    tree.end
    tree "S1_CTRL_CTLR_TEST"
      sgroup "S1_CTRL_CTLR_TEST (at 0x114e2)"
        set &access:&cmd_addr %l (0x8014e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_SEL_ATEST1_NORMAL_ATEST2_NORMAL),1 (ATEST_SEL_ATEST1_VREF_LOCAL_BUFFER_ATEST2_AVSS),2 (ATEST_SEL_ATEST1_LOOP_FILTER_ATEST2_AVSS),3 (ATEST_SEL_ATEST1_VREF_OUT_ATEST2_AVSS_CLEAN),4 (ATEST_SEL_ATEST1_V_SAWTOOTH_ATEST2_AVDD),5 (ATEST_SEL_ATEST1_PULSE_SKIP_VGA_OUT_ATEST2_VREF_PULSE_SKIP_RESET),6 (ATEST_SEL_ATEST1_SLOPE_COMP_OUT_ATEST2_VREF_PULSE_SKIP_SET),7 (ATEST_SEL_ATEST1_RES_DIV_OUT_ATEST2_BUCK_FB_PAD)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DTEST_SEL                                = " "0 (DTEST_SEL_DTEST1_NORMAL_DTEST2_NORMAL),1 (DTEST_SEL_DTEST1_PWM_CLOCK_DTEST2_CLK_1P2M),2 (DTEST_SEL_DTEST1_PWM_COMP_DTEST2_OCP_DETECT),3 (DTEST_SEL_DTEST1_PULSE_SKIP_COMP_DTEST2_IPLIMIT_COMP_PFM),4 (DTEST_SEL_DTEST1_PFM_COMP_DTEST2_AUTOPFM_COUNT_DONE),5 (DTEST_SEL_DTEST1_MODE_DTEST2_INZ_COUNT_DONE),6 (DTEST_SEL_DTEST1_PULSE_SKIP_ENTER_DTEST2_PULSE_SKIP_EXIT),7 (DTEST_SEL_DTEST1_PFM_COMP_DTEST2_VDIP_COMP)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TRIM_CALIB_EN                            = " "0 (TRIM_CALIB_EN_FALSE),1 (TRIM_CALIB_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OPEN_LOOP_TEST_EN                        = " "0 (OPEN_LOOP_TEST_EN_FALSE),1 (OPEN_LOOP_TEST_EN_TRUE)"
    tree.end
    tree "S1_CTRL_TRIM_NUM"
      sgroup "S1_CTRL_TRIM_NUM (at 0x114f0)"
        set &access:&cmd_addr %l (0x8014f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "S1_CTRL_CTL_TRIM1"
      sgroup "S1_CTRL_CTL_TRIM1 (at 0x114f1)"
        set &access:&cmd_addr %l (0x8014f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   ERR_AMP_TRIM                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RES_DIV_TRIM                             = "
    tree.end
    tree "S1_CTRL_CTL_TRIM2"
      sgroup "S1_CTRL_CTL_TRIM2 (at 0x114f2)"
        set &access:&cmd_addr %l (0x8014f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PFM_COMP_TRIM                            = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VDIP_COMP_TRIM                           = "
    tree.end
    tree "S1_CTRL_CTL_TRIM3"
      sgroup "S1_CTRL_CTL_TRIM3 (at 0x114f3)"
        set &access:&cmd_addr %l (0x8014f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   VGA_PS_TRIM                              = "
    tree.end
    tree "S1_CTRL_CTL_TRIM4"
      sgroup "S1_CTRL_CTL_TRIM4 (at 0x114f4)"
        set &access:&cmd_addr %l (0x8014f40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PULL_DOWN_TRIM                           = " "0 (ACTIVE_PD_OFF),1 (ACTIVE_PD_ON)"
    tree.end
  tree.end
tree.end
tree "S1_FREQ"
  tree "S1_FREQ"
    tree "S1_FREQ_REVISION1"
      sgroup "S1_FREQ_REVISION1 (at 0x11600)"
        set &access:&cmd_addr %l (0x8016000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S1_FREQ_REVISION2"
      sgroup "S1_FREQ_REVISION2 (at 0x11601)"
        set &access:&cmd_addr %l (0x8016010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S1_FREQ_PERPH_TYPE"
      sgroup "S1_FREQ_PERPH_TYPE (at 0x11604)"
        set &access:&cmd_addr %l (0x8016040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S1_FREQ_PERPH_SUBTYPE"
      sgroup "S1_FREQ_PERPH_SUBTYPE (at 0x11605)"
        set &access:&cmd_addr %l (0x8016050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S1_FREQ_CLK_ENABLE"
      sgroup "S1_FREQ_CLK_ENABLE (at 0x11646)"
        set &access:&cmd_addr %l (0x8016460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "S1_FREQ_CLK_DIV"
      sgroup "S1_FREQ_CLK_DIV (at 0x11650)"
        set &access:&cmd_addr %l (0x8016500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "S1_FREQ_CLK_PHASE"
      sgroup "S1_FREQ_CLK_PHASE (at 0x11651)"
        set &access:&cmd_addr %l (0x8016510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "S1_FREQ_GANG_CTL1"
      sgroup "S1_FREQ_GANG_CTL1 (at 0x116c0)"
        set &access:&cmd_addr %l (0x8016c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S1_FREQ_GANG_CTL2"
      sgroup "S1_FREQ_GANG_CTL2 (at 0x116c1)"
        set &access:&cmd_addr %l (0x8016c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "S1_FREQ_SEC_ACCESS"
      sgroup "S1_FREQ_SEC_ACCESS (at 0x116d0)"
        set &access:&cmd_addr %l (0x8016d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S1_FREQ_PERPH_RESET_CTL2"
      sgroup "S1_FREQ_PERPH_RESET_CTL2 (at 0x116d9)"
        set &access:&cmd_addr %l (0x8016d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S1_FREQ_PERPH_RESET_CTL3"
      sgroup "S1_FREQ_PERPH_RESET_CTL3 (at 0x116da)"
        set &access:&cmd_addr %l (0x8016da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S1_FREQ_PERPH_RESET_CTL4"
      sgroup "S1_FREQ_PERPH_RESET_CTL4 (at 0x116db)"
        set &access:&cmd_addr %l (0x8016db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "S1_FREQ_TEST1"
      sgroup "S1_FREQ_TEST1 (at 0x116e2)"
        set &access:&cmd_addr %l (0x8016e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "S1_PS"
  tree "S1_PS"
    tree "S1_PS_REVISION1"
      sgroup "S1_PS_REVISION1 (at 0x11500)"
        set &access:&cmd_addr %l (0x8015000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S1_PS_REVISION2"
      sgroup "S1_PS_REVISION2 (at 0x11501)"
        set &access:&cmd_addr %l (0x8015010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S1_PS_REVISION3"
      sgroup "S1_PS_REVISION3 (at 0x11502)"
        set &access:&cmd_addr %l (0x8015020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S1_PS_REVISION4"
      sgroup "S1_PS_REVISION4 (at 0x11503)"
        set &access:&cmd_addr %l (0x8015030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S1_PS_PERPH_TYPE"
      sgroup "S1_PS_PERPH_TYPE (at 0x11504)"
        set &access:&cmd_addr %l (0x8015040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S1_PS_PERPH_SUBTYPE"
      sgroup "S1_PS_PERPH_SUBTYPE (at 0x11505)"
        set &access:&cmd_addr %l (0x8015050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S1_PS_PWM_CURRENT_LIM_CTL"
      sgroup "S1_PS_PWM_CURRENT_LIM_CTL (at 0x1154a)"
        set &access:&cmd_addr %l (0x80154a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x154a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_EN_FALSE),1 (CURRENT_LIM_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   CURRENT_LIM_AUTOINT_SEL                  = " "0 (CURRENT_LIM_AUTOINT_SEL_2X_2700MA_3X_3500MA),1 (CURRENT_LIM_AUTOINT_SEL_2X_2400MA_3X_3100MA),2 (CURRENT_LIM_AUTOINT_SEL_2X_2100MA_3X_2700MA),3 (CURRENT_LIM_AUTOINT_SEL_2X_1800MA_3X_2300MA),4 (CURRENT_LIM_AUTOINT_SEL_2X_1500MA_3X_1900MA),5 (CURRENT_LIM_AUTOINT_SEL_2X_1200MA_3X_1500MA),6 (CURRENT_LIM_AUTOINT_SEL_2X_900MA_3X_1100MA),7 (CURRENT_LIM_AUTOINT_SEL_2X_600MA_3X_700MA)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_LIM_PWM_SEL                      = " "0 (CURRENT_LIM_PWM_SEL_2X_2700MA_3X_3500MA),1 (CURRENT_LIM_PWM_SEL_2X_2400MA_3X_3100MA),2 (CURRENT_LIM_PWM_SEL_2X_2100MA_3X_2700MA),3 (CURRENT_LIM_PWM_SEL_2X_1800MA_3X_2300MA),4 (CURRENT_LIM_PWM_SEL_2X_1500MA_3X_1900MA),5 (CURRENT_LIM_PWM_SEL_2X_1200MA_3X_1500MA),6 (CURRENT_LIM_PWM_SEL_2X_900MA_3X_1100MA),7 (CURRENT_LIM_PWM_SEL_2X_600MA_3X_700MA)"
    tree.end
    tree "S1_PS_PFM_CURRENT_LIM_CTL"
      sgroup "S1_PS_PFM_CURRENT_LIM_CTL (at 0x1154b)"
        set &access:&cmd_addr %l (0x80154b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x154b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CURRENT_LIM_EN                           = " "0 (CURRENT_LIM_EN_FALSE),1 (CURRENT_LIM_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CURRENT_LIM_SEL                          = " "0 (CURRENT_LIM_SEL_600MA),1 (CURRENT_LIM_SEL_540MA),2 (CURRENT_LIM_SEL_480MA),3 (CURRENT_LIM_SEL_420MA),4 (CURRENT_LIM_SEL_360MA),5 (CURRENT_LIM_SEL_300MA),6 (CURRENT_LIM_SEL_240MA),7 (CURRENT_LIM_SEL_180MA)"
    tree.end
    tree "S1_PS_SOFT_START_CTL"
      sgroup "S1_PS_SOFT_START_CTL (at 0x1154c)"
        set &access:&cmd_addr %l (0x80154c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x154c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START_ILIM_STEP_EN                  = " "0 (SOFT_START_ILIM_STEP_EN_FALSE),1 (SOFT_START_ILIM_STEP_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SOFT_START_MODE_SEL                      = " "0 (SOFT_START_MODE_SEL_FAST),1 (SOFT_START_MODE_SEL_NORMAL)"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   SOFT_START_ILIM_SEL                      = " "0 (SOFT_START_ILIM_SEL_400MA),1 (SOFT_START_ILIM_SEL_600MA),2 (SOFT_START_ILIM_SEL_800MA),3 (SOFT_START_ILIM_SEL_1000MA)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT_START_ILIM_STEP_DLY                 = " "0 (SOFT_START_ILIM_STEP_DLY_FAST_20US_NORMAL_40US),1 (SOFT_START_ILIM_STEP_DLY_FAST_40US_NORMAL_80US)"
    tree.end
    tree "S1_PS_SWITCH_SIZE_CTL"
      sgroup "S1_PS_SWITCH_SIZE_CTL (at 0x11570)"
        set &access:&cmd_addr %l (0x8015700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   P_SWITCH_SIZE                            = " "0 (P_SWITCH_SIZE_1_DIV_8),1 (P_SWITCH_SIZE_1_DIV_4),2 (P_SWITCH_SIZE_1_DIV_2),3 (P_SWITCH_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   N_SWITCH_SIZE                            = " "0 (N_SWITCH_SIZE_1_DIV_8),1 (N_SWITCH_SIZE_1_DIV_4),2 (N_SWITCH_SIZE_1_DIV_2),3 (N_SWITCH_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   P_OFF_DRIVER_SIZE                        = " "0 (P_OFF_DRIVER_SIZE_1_DIV_2),1 (P_OFF_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   P_ON_DRIVER_SIZE                         = " "0 (P_ON_DRIVER_SIZE_1_DIV_2),1 (P_ON_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   N_ON_DRIVER_SIZE                         = " "0 (N_ON_DRIVER_SIZE_1_DIV_2),1 (N_ON_DRIVER_SIZE_1_DIV_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   N_OFF_DRIVER_SIZE                        = " "0 (N_OFF_DRIVER_SIZE_1_DIV_2),1 (N_OFF_DRIVER_SIZE_1_DIV_1)"
    tree.end
    tree "S1_PS_DEAD_TIME_CTRL1"
      sgroup "S1_PS_DEAD_TIME_CTRL1 (at 0x11571)"
        set &access:&cmd_addr %l (0x8015710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   DIG_DEADTIME_CTRL                        = " "0 (DIG_DEADTIME_CTRL_DISABLE),1 (DIG_DEADTIME_CTRL_1_NS),2 (DIG_DEADTIME_CTRL_1P5_NS),3 (DIG_DEADTIME_CTRL_2P5_NS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ANA_DEADTIME_CTRL                        = " "0 (ANA_DEADTIME_CTRL_DISABLE),1 (ANA_DEADTIME_CTRL_ENABLE)"
    tree.end
    tree "S1_PS_DEAD_TIME_CTRL2"
      sgroup "S1_PS_DEAD_TIME_CTRL2 (at 0x11572)"
        set &access:&cmd_addr %l (0x8015720|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15720|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PSW_DEAD_TIME                         = " "0 (EN_PSW_DEAD_TIME_DISABLE),1 (EN_PSW_DEAD_TIME_ENABLE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   EN_NSW_DEAD_TIME                         = " "0 (EN_NSW_DEAD_TIME_DISABLE),1 (EN_NSW_DEAD_TIME_ENABLE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   NSW_DEAD_TIME                            = " "0 (NSW_DEAD_TIME_1P5_NS),1 (NSW_DEAD_TIME_2P4_NS),2 (NSW_DEAD_TIME_3P3_NS),3 (NSW_DEAD_TIME_4P4_NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PSW_DEAD_TIME                            = " "0 (PSW_DEAD_TIME_2P0_NS),1 (PSW_DEAD_TIME_2P4_NS),2 (PSW_DEAD_TIME_3P2_NS),3 (PSW_DEAD_TIME_4P4_NS)"
    tree.end
    tree "S1_PS_BLNK_TIME_CTL"
      sgroup "S1_PS_BLNK_TIME_CTL (at 0x11573)"
        set &access:&cmd_addr %l (0x8015730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   MIN_PON                                  = " "0 (MIN_PON_DISABLED),1 (MIN_PON_15NS_OR_25NS),2 (MIN_PON_40NS_OR_50NS),3 (MIN_PON_60NS_OR_70NS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_BLNK_TIME                           = " "0 (ISNS_BLNK_TIME_15NS),1 (ISNS_BLNK_TIME_25NS)"
    tree.end
    tree "S1_PS_INZERO_CTL"
      sgroup "S1_PS_INZERO_CTL (at 0x11574)"
        set &access:&cmd_addr %l (0x8015740|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15740|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INZERO_EN                                = " "0 (INZERO_EN_FALSE),1 (INZERO_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   INZERO_OFFSET                            = " "0 (INZERO_OFFSET_NO_OFFSET),1 (INZERO_OFFSET_NEG_3MV),2 (INZERO_OFFSET_POS_1P5MV),3 (INZERO_OFFSET_POS_3MV)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   INZERO_FORCE                             = " "0 (INZERO_FORCE_DISABLE),1 (INZERO_FORCE_ENABLE)"
    tree.end
    tree "S1_PS_DIG_FSM_CTL"
      sgroup "S1_PS_DIG_FSM_CTL (at 0x11575)"
        set &access:&cmd_addr %l (0x8015750|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15750|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FSM_SEL                                  = " "0 (FSM_SEL_FMS2),1 (FSM_SEL_FMS1)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FSM_CTL4                                 = " "0 (FSM_CTL4_DISABLE_PULSE_FILTER_COMP1),1 (FSM_CTL4_ENABLE_PULSE_FILTER_COMP1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FSM_CTL3                                 = " "0 (FSM_CTL3_DISABLE_PULSE_FILTER_COMP1),1 (FSM_CTL3_ENABLE_PULSE_FILTER_COMP1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FSM_CTL2                                 = " "0 (FSM_CTL2_DISABLE_PULSE_FILTER_COMP2),1 (FSM_CTL2_ENABLE_PULSE_FILTER_COMP2)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FSM_CTL1                                 = " "0 (FSM_CTL1_DISABLE_PULSE_FILTER_INZERO_PS_COMP),1 (FMS_CTL1_ENABLE_PULSE_FILTER_INZERO_PS_COMP)"
    tree.end
    tree "S1_PS_PWR_STG_MISC"
      sgroup "S1_PS_PWR_STG_MISC (at 0x11579)"
        set &access:&cmd_addr %l (0x8015790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SPARE_7                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SPARE_6                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SPARE_5                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SPARE_4                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPARE_3                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SPARE_2                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SPARE_1                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ISNS_RATIO                               = " "0 (ISNS_RATIO_54P4K),1 (ISNS_RATIO_27P2K)"
    tree.end
    tree "S1_PS_SEC_ACCESS"
      sgroup "S1_PS_SEC_ACCESS (at 0x115d0)"
        set &access:&cmd_addr %l (0x8015d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S1_PS_PERPH_RESET_CTL2"
      sgroup "S1_PS_PERPH_RESET_CTL2 (at 0x115d9)"
        set &access:&cmd_addr %l (0x8015d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S1_PS_PERPH_RESET_CTL3"
      sgroup "S1_PS_PERPH_RESET_CTL3 (at 0x115da)"
        set &access:&cmd_addr %l (0x8015da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S1_PS_PERPH_RESET_CTL4"
      sgroup "S1_PS_PERPH_RESET_CTL4 (at 0x115db)"
        set &access:&cmd_addr %l (0x8015db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "S1_PS_FORCE_FET_TEST"
      sgroup "S1_PS_FORCE_FET_TEST (at 0x115e3)"
        set &access:&cmd_addr %l (0x8015e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   KELVIN_SENSING_TEST_EN                   = " "0 (KELVIN_SENSING_TEST_NMOS_RON),1 (KELVIN_SENSING_TEST_PMOS_RON)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FORCE_PFET_NFET                          = " "0 (FORCE_PFET_NFET_NORMAL),1 (FORCE_PFET_NFET_NMOS_ON_PMOS_OFF),2 (FORCE_PFET_NFET_PMOS_ON_NMOS_OFF),3 (FORCE_BOTH_PMOS_NMOS_OFF)"
    tree.end
    tree "S1_PS_PWR_STG_TEST"
      sgroup "S1_PS_PWR_STG_TEST (at 0x115e4)"
        set &access:&cmd_addr %l (0x8015e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   ATEST_SEL                                = " "0 (ATEST_SEL_ATEST1_NORMAL_ATEST2_NORMAL),1 (ATEST_SEL_ATEST1_RESERVED1_ATEST2_RESERVED1),2 (ATEST_SEL_ATEST1_RESERVED2_ATEST2_RESERVED2),3 (ATEST_SEL_ATEST1_RESERVED3_ATEST2_RESERVED3),4 (ATEST_SEL_ATEST1_RESERVED4_ATEST2_RESERVED4),5 (ATEST_SEL_ATEST1_RESERVED5_ATEST2_RESERVED5),6 (ATEST_SEL_ATEST1_KELVIN_SENSE1_ATEST2_KELVIN_SENSE2),7 (ATEST_SEL_ATEST1_RESERVED7_ATEST2_RESERVED7)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   DTEST_SEL                                = " "0 (DTEST_SEL_DTEST1_NORMAL_DTEST2_NORMAL),1 (DTEST_SEL_DTEST1_END_MIN_PON_DTEST2_FSM_STATE_0),2 (DTEST_SEL_DTEST1_IPLIMIT_TIMER1_DTEST2_FSM_STATE_1),3 (DTEST_SEL_DTEST1_IPLIMIT_TIMER2_DTEST2_FSM_STATE_2),4 (DTEST_SEL_DTEST1_INZERO_COMP_NMOS_DTEST2_FSM_STATE_3),5 (DTEST_SEL_DTEST1_IPLIMIT_COMP_PMOS_DTEST2_FSM_STATE_4),6 (DTEST_SEL_DTEST1_PMOS_DRIVE_SIGNAL_DTEST2_PGATE_BLANKING_PMOS),7 (DTEST_SEL_DTEST1_NMOS_DRIVE_SIGNAL_DTEST2_INZERO_COMP_EXTEND)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TRIM_CALIB_EN                            = " "0 (TRIM_CALIB_EN_FALSE),1 (TRIM_CALIB_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OPEN_LOOP_TEST_EN                        = " "0 (OPEN_LOOP_TEST_EN_FALSE),1 (OPEN_LOOP_TEST_EN_TRUE)"
    tree.end
    tree "S1_PS_TRIM_NUM"
      sgroup "S1_PS_TRIM_NUM (at 0x115f0)"
        set &access:&cmd_addr %l (0x8015f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "S1_PS_PS_TRIM1"
      sgroup "S1_PS_PS_TRIM1 (at 0x115f1)"
        set &access:&cmd_addr %l (0x8015f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   IPLIM_TRIM                               = " "0, 1, 2, 3"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   INZERO_TRIM                              = "
    tree.end
    tree "S1_PS_PS_TRIM2"
      sgroup "S1_PS_PS_TRIM2 (at 0x115f2)"
        set &access:&cmd_addr %l (0x8015f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x15f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SOFT_START_ILIM_STEP_DLY_TRIM            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   SOFT_START_MODE_SEL_TRIM                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SOFT_START_IPLIM_STEP_EN_TRIM            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   SOFT_START_IPLIM_TRIM                    = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   IPLIM_TRIM_OPT                           = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "S2_CTRL"
  tree "S2_CTRL"
    tree "S2_CTRL_REVISION1"
      sgroup "S2_CTRL_REVISION1 (at 0x11700)"
        set &access:&cmd_addr %l (0x8017000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S2_CTRL_REVISION2"
      sgroup "S2_CTRL_REVISION2 (at 0x11701)"
        set &access:&cmd_addr %l (0x8017010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S2_CTRL_REVISION3"
      sgroup "S2_CTRL_REVISION3 (at 0x11702)"
        set &access:&cmd_addr %l (0x8017020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S2_CTRL_REVISION4"
      sgroup "S2_CTRL_REVISION4 (at 0x11703)"
        set &access:&cmd_addr %l (0x8017030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S2_CTRL_PERPH_TYPE"
      sgroup "S2_CTRL_PERPH_TYPE (at 0x11704)"
        set &access:&cmd_addr %l (0x8017040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S2_CTRL_PERPH_SUBTYPE"
      sgroup "S2_CTRL_PERPH_SUBTYPE (at 0x11705)"
        set &access:&cmd_addr %l (0x8017050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S2_CTRL_STATUS_1"
      sgroup "S2_CTRL_STATUS_1 (at 0x11708)"
        set &access:&cmd_addr %l (0x8017080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_READY_FLAG                          = " "0 (VREG_READY_FLAG_FALSE),1 (VREG_READY_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VREG_FAULT_FLAG                          = " "0 (VREG_FAULT_FLAG_FALSE),1 (VREG_FAULT_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FLAG                                 = " "0 (NPM_FLAG_FALSE),1 (NPM_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE_FLAG                        = " "0 (STEPPER_DONE_FLAG_FALSE),1 (STEPPER_DONE_FLAG_TRUE)"
    tree.end
    tree "S2_CTRL_STATUS_2"
      sgroup "S2_CTRL_STATUS_2 (at 0x11709)"
        set &access:&cmd_addr %l (0x8017090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ILS_FLAG                                 = " "0 (ILS_FLAG_FALSE),1 (ILS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ULS_FLAG                                 = " "0 (ULS_FLAG_FALSE),1 (ULS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LLS_FLAG                                 = " "0 (LLS_FLAG_FALSE),1 (LLS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   GPL_HI_FLAG                              = " "0 (GPL_HI_FLAG_FALSE),1 (GPL_HI_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPL_LO_FLAG                              = " "0 (GPL_LO_FLAG_FALSE),1 (GPL_LO_FLAG_TRUE)"
    tree.end
    tree "S2_CTRL_STATUS_3"
      sgroup "S2_CTRL_STATUS_3 (at 0x1170a)"
        set &access:&cmd_addr %l (0x80170a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x170a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REFDAC_CAL_FAULT                         = " "0 (REFDAC_CAL_FAULT_FALSE),1 (REFDAC_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDIP_CAL_FAULT                           = " "0 (VDIP_CAL_FAULT_FALSE),1 (VDIP_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IDAC_CAL_FAULT                           = " "0 (IDAC_CAL_FAULT_FALSE),1 (IDAC_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CORR_CAL_FAULT                           = " "0 (CORR_CAL_FAULT_FALSE),1 (CORR_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PWM_CAL_FAULT                            = " "0 (PWM_CAL_FAULT_FALSE),1 (PWM_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PFM_CAL_FAULT                            = " "0 (PFM_CAL_FAULT_FALSE),1 (PFM_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CAL_DONE_FLAG                            = " "0 (CTL_CAL_DONE_FLAG_FALSE),1 (CTL_CAL_DONE_FLAG_TRUE)"
    tree.end
    tree "S2_CTRL_STATUS_4"
      sgroup "S2_CTRL_STATUS_4 (at 0x1170b)"
        set &access:&cmd_addr %l (0x80170b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x170b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MODE_FSM_3                               = " "0 (MODE_FSM_3_IS_0),1 (MODE_FSM_3_IS_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MODE_FSM_2                               = " "0 (MODE_FSM_2_IS_0),1 (MODE_FSM_2_IS_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MODE_FSM_1                               = " "0 (MODE_FSM_1_IS_0),1 (MODE_FSM_1_IS_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MODE_FSM_0                               = " "0 (MODE_FSM_0_IS_0),1 (MODE_FSM_0_IS_1)"
    tree.end
    tree "S2_CTRL_STATUS_5"
      sgroup "S2_CTRL_STATUS_5 (at 0x1170c)"
        set &access:&cmd_addr %l (0x80170c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x170c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   READY_PHASE_CNT                          = "
    tree.end
    tree "S2_CTRL_INT_RT_STS"
      sgroup "S2_CTRL_INT_RT_STS (at 0x11710)"
        set &access:&cmd_addr %l (0x8017100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_FALSE),1 (VREG_FAULT_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_FALSE),1 (LIMIT_ERROR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_FALSE),1 (VREG_ERROR_INT_TRUE)"
    tree.end
    tree "S2_CTRL_INT_SET_TYPE"
      sgroup "S2_CTRL_INT_SET_TYPE (at 0x11711)"
        set &access:&cmd_addr %l (0x8017110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_LEVEL_TRIGGERED),1 (VREG_FAULT_INT_EDGE_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_LEVEL_TRIGGERED),1 (LIMIT_ERROR_INT_EDGE_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_LEVEL_TRIGGERED),1 (VREG_ERROR_INT_EDGE_TRIGGERED)"
    tree.end
    tree "S2_CTRL_INT_POLARITY_HIGH"
      sgroup "S2_CTRL_INT_POLARITY_HIGH (at 0x11712)"
        set &access:&cmd_addr %l (0x8017120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_RISING_EDGE_TRIGGER_DISABL),1 (VREG_FAULT_INT_RISING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_RISING_EDGE_TRIGGER_DISABL),1 (LIMIT_ERROR_INT_RISING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_RISING_EDGE_TRIGGER_DISABL),1 (VREG_ERROR_INT_RISING_EDGE_TRIGGER_ENABL)"
    tree.end
    tree "S2_CTRL_INT_POLARITY_LOW"
      sgroup "S2_CTRL_INT_POLARITY_LOW (at 0x11713)"
        set &access:&cmd_addr %l (0x8017130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_FALLING_EDGE_TRIGGER_DISABL),1 (VREG_FAULT_INT_FALLING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_FALLING_EDGE_TRIGGER_DISABL),1 (LIMIT_ERROR_INT_FALLING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_FALLING_EDGE_TRIGGER_DISABL),1 (VREG_ERROR_INT_FALLING_EDGE_TRIGGER_ENABL)"
    tree.end
    tree "S2_CTRL_INT_LATCHED_CLR"
      sgroup "S2_CTRL_INT_LATCHED_CLR (at 0x11714)"
        set &access:&cmd_addr %l (0x8017140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0, 1"
    tree.end
    tree "S2_CTRL_INT_EN_SET"
      sgroup "S2_CTRL_INT_EN_SET (at 0x11715)"
        set &access:&cmd_addr %l (0x8017150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_DISABL),1 (VREG_FAULT_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_DISABL),1 (LIMIT_ERROR_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_DISABL),1 (VREG_ERROR_INT_ENABL)"
    tree.end
    tree "S2_CTRL_INT_EN_CLR"
      sgroup "S2_CTRL_INT_EN_CLR (at 0x11716)"
        set &access:&cmd_addr %l (0x8017160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_DISABL),1 (VREG_FAULT_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_DISABL),1 (LIMIT_ERROR_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_DISABL),1 (VREG_ERROR_INT_ENABL)"
    tree.end
    tree "S2_CTRL_INT_LATCHED_STS"
      sgroup "S2_CTRL_INT_LATCHED_STS (at 0x11718)"
        set &access:&cmd_addr %l (0x8017180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_NOT_TRIGGERED),1 (VREG_FAULT_INT_TRIGGERED_AND_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_NOT_TRIGGERED),1 (LIMIT_ERROR_INT_TRIGGERED_AND_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_NOT_TRIGGERED),1 (VREG_ERROR_INT_TRIGGERED_AND_LATCHED)"
    tree.end
    tree "S2_CTRL_INT_PENDING_STS"
      sgroup "S2_CTRL_INT_PENDING_STS (at 0x11719)"
        set &access:&cmd_addr %l (0x8017190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_NOT_PENDING),1 (VREG_FAULT_INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_NOT_PENDING),1 (LIMIT_ERROR_INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_NOT_PENDING),1 (VREG_ERROR_INT_PENDING)"
    tree.end
    tree "S2_CTRL_INT_MID_SEL"
      sgroup "S2_CTRL_INT_MID_SEL (at 0x1171a)"
        set &access:&cmd_addr %l (0x80171a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x171a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID_0),1 (MID_1),2 (MID_2),3 (MID_3)"
    tree.end
    tree "S2_CTRL_INT_PRIORITY"
      sgroup "S2_CTRL_INT_PRIORITY (at 0x1171b)"
        set &access:&cmd_addr %l (0x80171b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x171b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_0),1 (INT_PRIORITY_1)"
    tree.end
    tree "S2_CTRL_VOLTAGE_CTL1"
      sgroup "S2_CTRL_VOLTAGE_CTL1 (at 0x11740)"
        set &access:&cmd_addr %l (0x8017400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MV_RANGE                                 = " "0 (MV_RANGE_FALSE),1 (MV_RANGE_TRUE)"
    tree.end
    tree "S2_CTRL_VOLTAGE_CTL2"
      sgroup "S2_CTRL_VOLTAGE_CTL2 (at 0x11741)"
        set &access:&cmd_addr %l (0x8017410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET                                     = "
    tree.end
    tree "S2_CTRL_VSET_VALID"
      sgroup "S2_CTRL_VSET_VALID (at 0x11742)"
        set &access:&cmd_addr %l (0x8017420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_VALID                               = "
    tree.end
    tree "S2_CTRL_MPPFM_VOFFSET"
      sgroup "S2_CTRL_MPPFM_VOFFSET (at 0x11744)"
        set &access:&cmd_addr %l (0x8017440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   MPPFM_VOFFSET                            = " "0 (VSETLO_0_LSB),1 (VSETLO_1_LSB),2 (VSETLO_2_LSB),3 (VSETLO_3_LSB),4 (VSETLO_4_LSB),5 (VSETLO_5_LSB),6 (VSETLO_6_LSB),7 (VSETLO_7_LSB)"
    tree.end
    tree "S2_CTRL_MODE_CTL"
      sgroup "S2_CTRL_MODE_CTL (at 0x11745)"
        set &access:&cmd_addr %l (0x8017450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (NPM_NOT_FORCED),1 (NPM_FORCED_IF_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_MODE_FALSE),1 (AUTO_MODE_TRUE)"
    tree.end
    tree "S2_CTRL_EN_CTL"
      sgroup "S2_CTRL_EN_CTL (at 0x11746)"
        set &access:&cmd_addr %l (0x8017460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (FTS_DISABL),1 (FTS_ENABL)"
    tree.end
    tree "S2_CTRL_PD_CTL"
      sgroup "S2_CTRL_PD_CTL (at 0x11748)"
        set &access:&cmd_addr %l (0x8017480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (STRONG_PD_ALWAYS_OFF),1 (STRONG_PD_ON_WHEN_FTS_IS_DISABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   WEAK_PD_EN                               = " "0 (WEAK_PD_DISABL_IN_PMIC_OFF_STATE),1 (SWEAK_PD_ENABL_IN_PMIC_OFF_STATE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   WEAK_PD_PFM                              = " "0 (WEAK_PD_DISABL_IN_PFM),1 (WEAK_PD_ENABL_IN_PFM)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   WEAK_PD_PWM                              = " "0 (WEAK_PD_DISABL_IN_PWM_AND_HCPFM),1 (WEAK_PD_ENABL_IN_PWM_AND_HCPFM)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LEAK_PD_EN                               = " "0 (LEAKAGE_PD_ALWAYS_OFF),1 (LEAKAGE_PD_ALWAYS_ENABL)"
    tree.end
    tree "S2_CTRL_FREQ_CTL"
      sgroup "S2_CTRL_FREQ_CTL (at 0x11750)"
        set &access:&cmd_addr %l (0x8017500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FREQ_CTL                                 = "
    tree.end
    tree "S2_CTRL_MULTIPHASE_CTL"
      sgroup "S2_CTRL_MULTIPHASE_CTL (at 0x11751)"
        set &access:&cmd_addr %l (0x8017510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MULTIPHASE_EN                            = " "0 (SINGLE_PHASE_CONFIG),1 (MULTI_PHASE_CONFIG)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LUT_EN                                   = " "0 (LUT_DISABL),1 (LUT_ENABL)"
    tree.end
    tree "S2_CTRL_PHASE_CTL"
      sgroup "S2_CTRL_PHASE_CTL (at 0x11752)"
        set &access:&cmd_addr %l (0x8017520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PHASE_CORR_EN                            = " "0 (VCORR_DISABL),1 (VCORR_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PHASE_STANDBY_MODE                       = " "0 (STANDBY_OFF),1 (WARM_STANDBY)"
    tree.end
    tree "S2_CTRL_PHASE_ID"
      sgroup "S2_CTRL_PHASE_ID (at 0x11753)"
        set &access:&cmd_addr %l (0x8017530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PHASE_ID                                 = "
    tree.end
    tree "S2_CTRL_PHASE_CNT_MAX"
      sgroup "S2_CTRL_PHASE_CNT_MAX (at 0x11754)"
        set &access:&cmd_addr %l (0x8017540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PHASE_CNT_MAX                            = "
    tree.end
    tree "S2_CTRL_PH_READY"
      sgroup "S2_CTRL_PH_READY (at 0x11755)"
        set &access:&cmd_addr %l (0x8017550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PH_READY_NPM                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PH_READY_LPM                             = "
    tree.end
    tree "S2_CTRL_SS_CTL"
      sgroup "S2_CTRL_SS_CTL (at 0x11760)"
        set &access:&cmd_addr %l (0x8017600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   SS_STEP                                  = " "0 (SOFT_START_VSTEP_1_LSB),1 (SOFT_START_VSTEP_2_LSB),2 (SOFT_START_VSTEP_4_LSB),3 (SOFT_START_VSTEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SS_DELAY                                 = " "0 (SOFT_START_TIME_STEP_417NS),1 (SOFT_START_TIME_STEP_833NS),2 (SOFT_START_TIME_STEP_1U67S),3 (SOFT_START_TIME_STEP_3U3S),4 (SOFT_START_TIME_STEP_6U7S),5 (SOFT_START_TIME_STEP_13U3S),6 (SOFT_START_TIME_STEP_26U7S),7 (SOFT_START_TIME_STEP_53U3S)"
    tree.end
    tree "S2_CTRL_VS_CTL"
      sgroup "S2_CTRL_VS_CTL (at 0x11761)"
        set &access:&cmd_addr %l (0x8017610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VS_EN                                    = " "0 (VSTEPPER_DISABL),1 (VSTEPPER_ENABL)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   VS_STEP                                  = " "0 (VSTEPPER_STEP_SIZE_1_LSB),1 (VSTEPPER_STEP_SIZE_2_LSB),2 (VSTEPPER_STEP_SIZE_4_LSB),3 (VSTEPPER_STEP_SIZE_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VS_DELAY                                 = " "0 (VSTEPPER_TIME_STEP_417NS),1 (VSTEPPER_TIME_STEP_833NS),2 (VSTEPPER_TIME_STEP_1U67S),3 (VSTEPPER_TIME_STEP_3U3S),4 (VSTEPPER_TIME_STEP_6U7S),5 (VSTEPPER_TIME_STEP_13U3S),6 (VSTEPPER_TIME_STEP_26U7S),7 (VSTEPPER_TIME_STEP_53U3S)"
    tree.end
    tree "S2_CTRL_CORR_CFG"
      sgroup "S2_CTRL_CORR_CFG (at 0x11762)"
        set &access:&cmd_addr %l (0x8017620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   CORR_MAG_CFG                             = " "0 (DC_ERROR_CORR_MAG_20MV),1 (DC_ERROR_CORR_MAG_30MV),2 (DC_ERROR_CORR_MAG_40MV),3 (DC_ERROR_CORR_MAG_50MV),4 (DC_ERROR_CORR_MAG_60MV),5 (DC_ERROR_CORR_MAG_70MV),6 (DC_ERROR_CORR_MAG_80MV),7 (DC_ERROR_CORR_MAG_90MV)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CORR_FILT_CFG                            = "
    tree.end
    tree "S2_CTRL_RAMP_CFG"
      sgroup "S2_CTRL_RAMP_CFG (at 0x11763)"
        set &access:&cmd_addr %l (0x8017630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BPLP2_EN                                 = " "0 (BPLP2_DISABL),1 (BPLP2_ENABL)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RAMP_CFG                                 = "
    tree.end
    tree "S2_CTRL_COMPENS_CFG"
      sgroup "S2_CTRL_COMPENS_CFG (at 0x11764)"
        set &access:&cmd_addr %l (0x8017640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   BPHP_CFG                                 = " "0 (BP_HPF_10KHZ),1 (BP_HPF_20KHZ),2 (BP_HPF_40KHZ),3 (BP_HPF_80KHZ)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   BPLP_CFG                                 = " "0 (BP_LPF_200KHZ),1 (BP_LPF_400KHZ),2 (BP_LPF_600KHZ),3 (BP_LPF_800KHZ),4 (BP_LPF_1000KHZ),5 (BP_LPF_1200KHZ),6 (BP_LPF_NOT_SUPPORTED_110),7 (BP_LPF_NOT_SUPPORTED_111)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   BPLP2_CFG                                = " "0 (BP_LPF2_200KHZ),1 (BP_LPF2_400KHZ),2 (BP_LPF2_600KHZ),3 (BP_LPF2_800KHZ),4 (BP_LPF2_1000KHZ),5 (BP_LPF2_1200KHZ),6 (BP_LPF2_NOT_SUPPORTED_110),7 (BP_LPF2_NOT_SUPPORTED_111)"
    tree.end
    tree "S2_CTRL_CFG_VREG_MON"
      sgroup "S2_CTRL_CFG_VREG_MON (at 0x11765)"
        set &access:&cmd_addr %l (0x8017650|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17650|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_FOLDBACK_EN                         = " "0 (VREG_FAULT_FOLDBACK_DISABL),1 (VREG_FAULT_FOLDBACK_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_MON_CFG                             = " "0 (VREG_MON_BURST_ENABL),1 (VREG_MON_ALWAYS_ENABL)"
    tree.end
    tree "S2_CTRL_CFG_VREG_OCP"
      sgroup "S2_CTRL_CFG_VREG_OCP (at 0x11766)"
        set &access:&cmd_addr %l (0x8017660|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17660|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OCP_LAT_EN                               = " "0 (OCP_LATCH_DISABL),1 (OCP_LATCH_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OCP_RETRY_EN                             = " "0 (OCP_RETRY_DISABL),1 (OCP_RETRY_ENABL)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OCP_CLR                                  = " "0, 1"
    tree.end
    tree "S2_CTRL_CFG_PFM_COMP"
      sgroup "S2_CTRL_CFG_PFM_COMP (at 0x11767)"
        set &access:&cmd_addr %l (0x8017670|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17670|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   HCPFM_HYS                                = " "0 (HCPFM_COMPARATOR_HYSTERESIS_0MV),1 (HCPFM_COMPARATOR_HYSTERESIS_5MV),2 (HCPFM_COMPARATOR_HYSTERESIS_10MV),3 (HCPFM_COMPARATOR_HYSTERESIS_20MV)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_HYS                                  = " "0 (PFM_COMPARATOR_HYSTERESIS_5MV),1 (PFM_COMPARATOR_HYSTERESIS_10MV),2 (PFM_COMPARATOR_HYSTERESIS_20MV),3 (PFM_COMPARATOR_HYSTERESIS_40MV)"
    tree.end
    tree "S2_CTRL_UL_LL_CTL"
      sgroup "S2_CTRL_UL_LL_CTL (at 0x11768)"
        set &access:&cmd_addr %l (0x8017680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UL_EN                                    = " "0 (UL_STOP_DISABL),1 (UL_STOP_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LL_EN                                    = " "0 (LL_STOP_DISABL),1 (LL_STOP_ENABL)"
    tree.end
    tree "S2_CTRL_VSET_ULS"
      sgroup "S2_CTRL_VSET_ULS (at 0x11769)"
        set &access:&cmd_addr %l (0x8017690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_ULS                                 = "
    tree.end
    tree "S2_CTRL_ULS_VALID"
      sgroup "S2_CTRL_ULS_VALID (at 0x1176a)"
        set &access:&cmd_addr %l (0x80176a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ULS_VALID                                = "
    tree.end
    tree "S2_CTRL_VSET_LLS"
      sgroup "S2_CTRL_VSET_LLS (at 0x1176b)"
        set &access:&cmd_addr %l (0x80176b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_LLS                                 = "
    tree.end
    tree "S2_CTRL_LLS_VALID"
      sgroup "S2_CTRL_LLS_VALID (at 0x1176c)"
        set &access:&cmd_addr %l (0x80176c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LLS_VALID                                = "
    tree.end
    tree "S2_CTRL_GPL_HI"
      sgroup "S2_CTRL_GPL_HI (at 0x1176d)"
        set &access:&cmd_addr %l (0x80176d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_GPL_HI                              = "
    tree.end
    tree "S2_CTRL_GPL_LO"
      sgroup "S2_CTRL_GPL_LO (at 0x1176e)"
        set &access:&cmd_addr %l (0x80176e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_GPL_LO                              = "
    tree.end
    tree "S2_CTRL_FB_FILT_CFG"
      sgroup "S2_CTRL_FB_FILT_CFG (at 0x1176f)"
        set &access:&cmd_addr %l (0x80176f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x176f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   FB_FILT_SERIES_2                         = " "0 (FBLP_CORNER_INFINITE),1 (FBLP_CORNER_100MHZ),2 (FBLP_CORNER_50MHZ),3 (FBLP_CORNER_10MHZ)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FB_FILT_SERIES                           = " "0 (SERIES_FILTER_UNCONNECTED),1 (SERIES_FILTER_CONNECTED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_ITAIL_CFG                            = " "0 (PWM_COMP_TAIL_CURRENT_2UA),1 (PWM_COMP_TAIL_CURRENT_4UA),2 (PWM_COMP_TAIL_CURRENT_10UA),3 (PWM_COMP_TAIL_CURRENT_20UA)"
    tree.end
    tree "S2_CTRL_VDIP_CFG"
      sgroup "S2_CTRL_VDIP_CFG (at 0x11771)"
        set &access:&cmd_addr %l (0x8017710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   VDIP_CFG                                 = " "0 (VDIP_DISABLED),1 (VDIP_BURST_ENABLED),2 (VDIP_ALWAYS_ENABLED),3 (VDIP_ALWAYS_ENABLED_2)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VDIP_THRESH                              = " "0 (VDIP_THRESH_10MV),1 (VDIP_THRESH_15MV),2 (VDIP_THRESH_20MV),3 (VDIP_THRESH_25MV)"
    tree.end
    tree "S2_CTRL_MPH_STROBE"
      sgroup "S2_CTRL_MPH_STROBE (at 0x11779)"
        set &access:&cmd_addr %l (0x8017790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPH_STROBE                               = " "0, 1"
    tree.end
    tree "S2_CTRL_MODE_FSM_MASK"
      sgroup "S2_CTRL_MODE_FSM_MASK (at 0x117a0)"
        set &access:&cmd_addr %l (0x8017a00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODE_FSM_MASK_EN                         = " "0 (MODE_FSM_MASK_EN_0),1 (MODE_FSM_MASK_EN_1)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MODE_FSM_MASK_VALUE                      = "
    tree.end
    tree "S2_CTRL_MODE_FSM_WAITS_1"
      sgroup "S2_CTRL_MODE_FSM_WAITS_1 (at 0x117a1)"
        set &access:&cmd_addr %l (0x8017a10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   TIMER_T3                                 = " "0 (TIMER_T3_5US),1 (TIMER_T3_10US),2 (TIMER_T3_20US),3 (TIMER_T3_30US)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   TIMER_T2                                 = " "0 (TIMER_T2_5US),1 (TIMER_T2_10US),2 (TIMER_T2_20US),3 (TIMER_T2_30US)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   TIMER_T1                                 = " "0 (TIMER_T1_5US),1 (TIMER_T1_10US),2 (TIMER_T1_20US),3 (TIMER_T1_30US)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TIMER_T0                                 = " "0 (TIMER_T0_5US),1 (TIMER_T0_10US),2 (TIMER_T0_20US),3 (TIMER_T0_30US)"
    tree.end
    tree "S2_CTRL_MODE_FSM_WAIT_2"
      sgroup "S2_CTRL_MODE_FSM_WAIT_2 (at 0x117a2)"
        set &access:&cmd_addr %l (0x8017a20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TIMER_T4                                 = " "0 (TIMER_T4_20US),1 (TIMER_T4_40US),2 (TIMER_T4_80US),3 (TIMER_T4_160US)"
    tree.end
    tree "S2_CTRL_GATE_DRV_MUX"
      sgroup "S2_CTRL_GATE_DRV_MUX (at 0x117a3)"
        set &access:&cmd_addr %l (0x8017a30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GATE_DRV_MUX1                            = " "0 (GATE_DRV_MUX1_NORMAL_MODE),1 (GATE_DRV_MUX1_DET_BY_MUX2)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GATE_DRV_MUX2                            = " "0 (GATE_DRV_MUX2_PFM_COMP),1 (GATE_DRV_MUX2_DET_BY_MUX3)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   GATE_DRV_MUX3                            = " "0 (GATE_DRV_MUX3_FORCED_TO_1),1 (GATE_DRV_MUX3_SMPS_CLK),2 (GATE_DRV_MUX3_DTEST1),3 (GATE_DRV_MUX3_FORCED_TO_0)"
    tree.end
    tree "S2_CTRL_CORR_DUTY_MUX"
      sgroup "S2_CTRL_CORR_DUTY_MUX (at 0x117a4)"
        set &access:&cmd_addr %l (0x8017a40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CORR_DUTY_MUX                            = " "0 (CORR_DUTY_MUX_NORMAL_MODE),1 (CORR_DUTY_MUX_FORCED_TO_1),2 (CORR_DUTY_MUX_FORCED_TO_0),3 (CORR_DUTY_MUX_DTEST2)"
    tree.end
    tree "S2_CTRL_EN_OPTIONS_DFT_1"
      sgroup "S2_CTRL_EN_OPTIONS_DFT_1 (at 0x117a5)"
        set &access:&cmd_addr %l (0x8017a50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SS_EN                                    = " "0 (SOFTSTART_DISABL),1 (SOFTSTART_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CORR_SHIFT_EN                            = " "0 (CORR_SHIFT_DISABL),1 (CORR_SHIFT_ENABL_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SAMPLE_CLK_EN                            = " "0 (SAMPLE_CLK_DISABL),1 (SAMPLE_CLK_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SAMPLE_AMP_TRI                           = " "0 (SAMPLE_AMP_NORMAL_MODE),1 (SAMPLE_AMP_TRI_STATE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   RAMP_EN                                  = " "0 (RAMP_EN_FALSE),1 (RAMP_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COMPENS_EN                               = " "0 (COMPENS_EN_FALSE),1 (COMPENS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SAMPLE_PREBIAS_EN                        = " "0 (SAMPLE_PREBIAS_EN_FALSE),1 (SAMPLE_PREBIAS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GDRV_EN                                  = " "0 (GDRV_EN_FALSE),1 (GDRV_EN_TRUE)"
    tree.end
    tree "S2_CTRL_EN_OPTIONS_DFT_2"
      sgroup "S2_CTRL_EN_OPTIONS_DFT_2 (at 0x117a6)"
        set &access:&cmd_addr %l (0x8017a60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_EXIT_DIP_EN                          = " "0 (PFM_EXIT_DIP_DISABL),1 (PFM_EXIT_DIP_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DIP_LAT_BYPASS                           = " "0 (DIP_LAT_BYP_DISABL),1 (DIP_LAT_BYP_ENABL)"
    tree.end
    tree "S2_CTRL_MPHASE_IDAC"
      sgroup "S2_CTRL_MPHASE_IDAC (at 0x117a7)"
        set &access:&cmd_addr %l (0x8017a70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVR_EN                                   = " "0 (MPHASE_IDAC_OVERRIDE_FALSE),1 (MPHASE_IDAC_OVERRIDE_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DATA                                     = "
    tree.end
    tree "S2_CTRL_EN_OPTIONS_DFT_1_SHADOW"
      sgroup "S2_CTRL_EN_OPTIONS_DFT_1_SHADOW (at 0x117a8)"
        set &access:&cmd_addr %l (0x8017a80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   ADAPT_ZX_TEST_EN                         = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ADAPT_ZX_EN                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLDBACK_FRC                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   CL_CFG                                   = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CFG                                   = " "0, 1, 2, 3"
    tree.end
    tree "S2_CTRL_EN_OPTIONS_DFT_2_SHADOW"
      sgroup "S2_CTRL_EN_OPTIONS_DFT_2_SHADOW (at 0x117a9)"
        set &access:&cmd_addr %l (0x8017a90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17a90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_ENTRY_ADC_EN                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFM_ENTRY_DCM_EN                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PFM_EXIT_CL_EN                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ADC_DACTOP_ISRC_CFG                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ADC_DACMID_BUF_TRI                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ADC_SAMPLE_BUF_TRI                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ADC_DAC2COMP_SW_EN                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FULL_FET_SEL                             = " "0, 1"
    tree.end
    tree "S2_CTRL_ZX_ADAPT_CTL_SHADOW"
      sgroup "S2_CTRL_ZX_ADAPT_CTL_SHADOW (at 0x117aa)"
        set &access:&cmd_addr %l (0x8017aa0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17aa0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   ZX_SAMPLE_CTL                            = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ZX_UP_CYCLES                             = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_DOWN_CYCLES                           = " "0, 1, 2, 3"
    tree.end
    tree "S2_CTRL_ANTI_ESL_CFG_1"
      sgroup "S2_CTRL_ANTI_ESL_CFG_1 (at 0x117ac)"
        set &access:&cmd_addr %l (0x8017ac0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ac0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   GATE_DRV_LAT                             = " "0 (GDRV_UNLATCHED),1 (GDRV_HALF_LATCHED),2 (GRDV_FULL_LATCHED),3 (GDRV_LATCH_CTL_INVALID_11)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ESL_PULSE_MAG                            = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "S2_CTRL_ANTI_ESL_CFG_2"
      sgroup "S2_CTRL_ANTI_ESL_CFG_2 (at 0x117ad)"
        set &access:&cmd_addr %l (0x8017ad0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ad0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ESL_PULSE_RC_SEL                         = "
    tree.end
    tree "S2_CTRL_CFG_ATEST1"
      sgroup "S2_CTRL_CFG_ATEST1 (at 0x117b0)"
        set &access:&cmd_addr %l (0x8017b00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_ATEST1                               = " "0 (ATEST1_UNCONNECTED),1 (ATEST1_REFLO),2 (ATEST1_REFMID),3 (ATEST1_REFHI),4 (ATEST1_RBUFF_TERM),5 (ATEST1_IDACREF),6 (ATEST1_DACREF),7 (ATEST1_FB)"
    tree.end
    tree "S2_CTRL_CFG_ATEST2"
      sgroup "S2_CTRL_CFG_ATEST2 (at 0x117b1)"
        set &access:&cmd_addr %l (0x8017b10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_ATEST2                               = " "0 (ATEST2_UNCONNECTED),1 (ATEST2_VREG),2 (ATEST2_RMT_GND),3 (ATEST2_REF_GND),4 (ATEST2_REFVALL),5 (ATEST2_HOLDVALL),6 (ATEST2_RVDD_CTRL),7 (ATEST2_RVDD)"
    tree.end
    tree "S2_CTRL_CFG_ATEST3"
      sgroup "S2_CTRL_CFG_ATEST3 (at 0x117b2)"
        set &access:&cmd_addr %l (0x8017b20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_ATEST3                               = " "0 (ATEST3_UNCONNECTED),1 (ATEST3_FAULTREF),2 (ATEST3_REFPK),3 (ATEST3_HOLDPK)"
    tree.end
    tree "S2_CTRL_CFG_ATEST4"
      sgroup "S2_CTRL_CFG_ATEST4 (at 0x117b3)"
        set &access:&cmd_addr %l (0x8017b30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_ATEST4                               = " "0 (ATEST4_UNCONNECTED),1 (ATEST4_AVDD),2 (ATEST4_1B1U_UNTRIM_DFT),3 (ATEST4_REFCOMM)"
    tree.end
    tree "S2_CTRL_CFG_DTEST1"
      sgroup "S2_CTRL_CFG_DTEST1 (at 0x117b4)"
        set &access:&cmd_addr %l (0x8017b40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CFG_DTEST1                               = "
    tree.end
    tree "S2_CTRL_CFG_DTEST2"
      sgroup "S2_CTRL_CFG_DTEST2 (at 0x117b5)"
        set &access:&cmd_addr %l (0x8017b50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CFG_DTEST2                               = "
    tree.end
    tree "S2_CTRL_CFG_DTEST3"
      sgroup "S2_CTRL_CFG_DTEST3 (at 0x117b6)"
        set &access:&cmd_addr %l (0x8017b60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CFG_DTEST3                               = "
    tree.end
    tree "S2_CTRL_CFG_DTEST4"
      sgroup "S2_CTRL_CFG_DTEST4 (at 0x117b7)"
        set &access:&cmd_addr %l (0x8017b70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17b70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CFG_DTEST4                               = "
    tree.end
    tree "S2_CTRL_GANG_CTL1"
      sgroup "S2_CTRL_GANG_CTL1 (at 0x117c0)"
        set &access:&cmd_addr %l (0x8017c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S2_CTRL_GANG_CTL2"
      sgroup "S2_CTRL_GANG_CTL2 (at 0x117c1)"
        set &access:&cmd_addr %l (0x8017c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANG_EN_FALSE),1 (GANG_EN_TRUE)"
    tree.end
    tree "S2_CTRL_SEC_ACCESS"
      sgroup "S2_CTRL_SEC_ACCESS (at 0x117d0)"
        set &access:&cmd_addr %l (0x8017d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S2_CTRL_PERPH_RESET_CTL1"
      sgroup "S2_CTRL_PERPH_RESET_CTL1 (at 0x117d8)"
        set &access:&cmd_addr %l (0x8017d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABL_PRESET_FALSE),1 (ENABL_PRESET_TRUE)"
    tree.end
    tree "S2_CTRL_PERPH_RESET_CTL2"
      sgroup "S2_CTRL_PERPH_RESET_CTL2 (at 0x117d9)"
        set &access:&cmd_addr %l (0x8017d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S2_CTRL_PERPH_RESET_CTL3"
      sgroup "S2_CTRL_PERPH_RESET_CTL3 (at 0x117da)"
        set &access:&cmd_addr %l (0x8017da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S2_CTRL_PERPH_RESET_CTL4"
      sgroup "S2_CTRL_PERPH_RESET_CTL4 (at 0x117db)"
        set &access:&cmd_addr %l (0x8017db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "S2_CTRL_INT_TEST1"
      sgroup "S2_CTRL_INT_TEST1 (at 0x117e0)"
        set &access:&cmd_addr %l (0x8017e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_EN_FALSE),1 (INT_TEST_MODE_EN_TRUE)"
    tree.end
    tree "S2_CTRL_INT_TEST_VAL"
      sgroup "S2_CTRL_INT_TEST_VAL (at 0x117e1)"
        set &access:&cmd_addr %l (0x8017e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT_TEST_VAL                  = " "0 (VREG_FAULT_INT_TEST_VAL_0),1 (VREG_FAULT_INT_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT_TEST_VAL                 = " "0 (LIMIT_ERROR_INT_TEST_VAL_0),1 (LIMIT_ERROR_INT_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT_TEST_VAL                  = " "0 (VREG_ERROR_INT_TEST_VAL_0),1 (VREG_ERROR_INT_TEST_VAL_1)"
    tree.end
    tree "S2_CTRL_CAL_REQUEST"
      sgroup "S2_CTRL_CAL_REQUEST (at 0x117e2)"
        set &access:&cmd_addr %l (0x8017e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_REQUEST                              = " "0 (CAL_REQUEST_FALSE),1 (CAL_REQUEST_TRUE)"
    tree.end
    tree "S2_CTRL_CAL_CTL_1"
      sgroup "S2_CTRL_CAL_CTL_1 (at 0x117e3)"
        set &access:&cmd_addr %l (0x8017e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   IDAC_BUF_CAL_EN                          = " "0 (IDAC_BUF_CAL_CENTER_CODE),1 (IDAC_BUF_CAL_MISSON_CONFIG_MANCAL),2 (IDAC_BUF_CAL_CAL_CONFIG_MANCAL),3 (IDAC_BUF_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   CORR_BUF_CAL_EN                          = " "0 (CORR_BUF_CAL_CENTER_CODE),1 (CORR_BUF_CAL_MISSON_CONFIG_MANCAL),2 (CORR_BUF_CAL_CAL_CONFIG_MANCAL),3 (CORR_BUF_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PWM_CAL_EN                               = " "0 (PWM_CAL_CENTER_CODE),1 (PWM_CAL_MISSON_CONFIG_MANCAL),2 (PWM_CAL_CAL_CONFIG_MANCAL),3 (PWM_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_CAL_EN                               = " "0 (PFM_CAL_CENTER_CODE),1 (PFM_CAL_MISSON_CONFIG_MANCAL),2 (PFM_CAL_CAL_CONFIG_MANCAL),3 (PFM_CAL_AUTOCAL_ENABL)"
    tree.end
    tree "S2_CTRL_CAL_CTL_2"
      sgroup "S2_CTRL_CAL_CTL_2 (at 0x117e4)"
        set &access:&cmd_addr %l (0x8017e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   REFDAC_CAL_EN                            = " "0 (REFDAC_CAL_USE_REFDAC_TRIM),1 (REFDAC_CAL_NOT_USED_1),2 (REFDAC_CAL_NOT_USED_2),3 (REFDAC_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VDIP_CAL_EN                              = " "0 (VDIP_CAL_CENTER_CODE),1 (VDIP_CAL_MISSON_CONFIG_MANCAL),2 (VDIP_CAL_CAL_CONFIG_MANCAL),3 (VDIP_CAL_AUTOCAL_ENABL)"
    tree.end
    tree "S2_CTRL_MAN_CAL_VAL"
      sgroup "S2_CTRL_MAN_CAL_VAL (at 0x117e5)"
        set &access:&cmd_addr %l (0x8017e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MAN_CAL_VAL                              = "
    tree.end
    tree "S2_CTRL_CAL_CTL_1_SHADOW"
      sgroup "S2_CTRL_CAL_CTL_1_SHADOW (at 0x117e7)"
        set &access:&cmd_addr %l (0x8017e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   DACMID_BUF_CAL_EN                        = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   FRONT_BUF_CAL_EN                         = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CAL_EN                                = " "0, 1, 2, 3"
    tree.end
    tree "S2_CTRL_CAL_CTL_2_SHADOW"
      sgroup "S2_CTRL_CAL_CTL_2_SHADOW (at 0x117e8)"
        set &access:&cmd_addr %l (0x8017e80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17e80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ADC_REP_CAL_EN                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CL_REP_CAL_EN                            = " "0, 1"
    tree.end
    tree "S2_CTRL_REFDAC_CAL_VAL"
      sgroup "S2_CTRL_REFDAC_CAL_VAL (at 0x117ea)"
        set &access:&cmd_addr %l (0x8017ea0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ea0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   REFDAC_CAL_VAL                           = "
    tree.end
    tree "S2_CTRL_VDIP_CAL_VAL"
      sgroup "S2_CTRL_VDIP_CAL_VAL (at 0x117eb)"
        set &access:&cmd_addr %l (0x8017eb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17eb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VDIP_CAL_VAL                             = "
    tree.end
    tree "S2_CTRL_IDAC_CAL_VAL"
      sgroup "S2_CTRL_IDAC_CAL_VAL (at 0x117ec)"
        set &access:&cmd_addr %l (0x8017ec0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ec0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IDAC_CAL_VAL                             = "
    tree.end
    tree "S2_CTRL_CORR_CAL_VAL"
      sgroup "S2_CTRL_CORR_CAL_VAL (at 0x117ed)"
        set &access:&cmd_addr %l (0x8017ed0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ed0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CORR_CAL_VAL                             = "
    tree.end
    tree "S2_CTRL_PWM_CAL_VAL"
      sgroup "S2_CTRL_PWM_CAL_VAL (at 0x117ee)"
        set &access:&cmd_addr %l (0x8017ee0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ee0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PWM_CAL_VAL                              = "
    tree.end
    tree "S2_CTRL_PFM_CAL_VAL"
      sgroup "S2_CTRL_PFM_CAL_VAL (at 0x117ef)"
        set &access:&cmd_addr %l (0x8017ef0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17ef0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PFM_CAL_VAL                              = "
    tree.end
    tree "S2_CTRL_TRIM_NUM"
      sgroup "S2_CTRL_TRIM_NUM (at 0x117f0)"
        set &access:&cmd_addr %l (0x8017f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "S2_CTRL_REFDAC_TRIM"
      sgroup "S2_CTRL_REFDAC_TRIM (at 0x117f1)"
        set &access:&cmd_addr %l (0x8017f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REFDAC_TRIM_EN                           = " "0 (REFDAC_TRIM_EN_FALSE),1 (REFDAC_TRIM_EN_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   REFDAC_TRIM                              = "
    tree.end
    tree "S2_CTRL_RAMP_TRIM"
      sgroup "S2_CTRL_RAMP_TRIM (at 0x117f2)"
        set &access:&cmd_addr %l (0x8017f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x17f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RAMP_TRIM                                = "
    tree.end
  tree.end
tree.end
tree "S2_FREQ"
  tree "S2_FREQ"
    tree "S2_FREQ_REVISION1"
      sgroup "S2_FREQ_REVISION1 (at 0x11900)"
        set &access:&cmd_addr %l (0x8019000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S2_FREQ_REVISION2"
      sgroup "S2_FREQ_REVISION2 (at 0x11901)"
        set &access:&cmd_addr %l (0x8019010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S2_FREQ_PERPH_TYPE"
      sgroup "S2_FREQ_PERPH_TYPE (at 0x11904)"
        set &access:&cmd_addr %l (0x8019040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S2_FREQ_PERPH_SUBTYPE"
      sgroup "S2_FREQ_PERPH_SUBTYPE (at 0x11905)"
        set &access:&cmd_addr %l (0x8019050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S2_FREQ_CLK_ENABLE"
      sgroup "S2_FREQ_CLK_ENABLE (at 0x11946)"
        set &access:&cmd_addr %l (0x8019460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "S2_FREQ_CLK_DIV"
      sgroup "S2_FREQ_CLK_DIV (at 0x11950)"
        set &access:&cmd_addr %l (0x8019500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "S2_FREQ_CLK_PHASE"
      sgroup "S2_FREQ_CLK_PHASE (at 0x11951)"
        set &access:&cmd_addr %l (0x8019510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "S2_FREQ_GANG_CTL1"
      sgroup "S2_FREQ_GANG_CTL1 (at 0x119c0)"
        set &access:&cmd_addr %l (0x8019c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S2_FREQ_GANG_CTL2"
      sgroup "S2_FREQ_GANG_CTL2 (at 0x119c1)"
        set &access:&cmd_addr %l (0x8019c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "S2_FREQ_SEC_ACCESS"
      sgroup "S2_FREQ_SEC_ACCESS (at 0x119d0)"
        set &access:&cmd_addr %l (0x8019d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S2_FREQ_PERPH_RESET_CTL2"
      sgroup "S2_FREQ_PERPH_RESET_CTL2 (at 0x119d9)"
        set &access:&cmd_addr %l (0x8019d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S2_FREQ_PERPH_RESET_CTL3"
      sgroup "S2_FREQ_PERPH_RESET_CTL3 (at 0x119da)"
        set &access:&cmd_addr %l (0x8019da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S2_FREQ_PERPH_RESET_CTL4"
      sgroup "S2_FREQ_PERPH_RESET_CTL4 (at 0x119db)"
        set &access:&cmd_addr %l (0x8019db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "S2_FREQ_TEST1"
      sgroup "S2_FREQ_TEST1 (at 0x119e2)"
        set &access:&cmd_addr %l (0x8019e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x19e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "S2_PS"
  tree "S2_PS"
    tree "S2_PS_REVISION1"
      sgroup "S2_PS_REVISION1 (at 0x11800)"
        set &access:&cmd_addr %l (0x8018000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S2_PS_REVISION2"
      sgroup "S2_PS_REVISION2 (at 0x11801)"
        set &access:&cmd_addr %l (0x8018010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S2_PS_REVISION3"
      sgroup "S2_PS_REVISION3 (at 0x11802)"
        set &access:&cmd_addr %l (0x8018020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S2_PS_REVISION4"
      sgroup "S2_PS_REVISION4 (at 0x11803)"
        set &access:&cmd_addr %l (0x8018030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S2_PS_PERPH_TYPE"
      sgroup "S2_PS_PERPH_TYPE (at 0x11804)"
        set &access:&cmd_addr %l (0x8018040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S2_PS_PERPH_SUBTYPE"
      sgroup "S2_PS_PERPH_SUBTYPE (at 0x11805)"
        set &access:&cmd_addr %l (0x8018050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S2_PS_STATUS_1"
      sgroup "S2_PS_STATUS_1 (at 0x11808)"
        set &access:&cmd_addr %l (0x8018080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_DONE_PS_FLAG                         = " "0 (CAL_DONE_NOT_COMPLETE),1 (CAL_DONE_COMPLETE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ADC_REP_CAL_FAULT                        = " "0 (ADC_REP_CAL_FAULT_FALSE),1 (ADC_REP_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DACMID_BUF_CAL_FAULT                     = " "0 (DACMID_BUF_CAL_FAULT_FALSE),1 (DACMID_BUF_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FRONT_BUF_CAL_FAULT                      = " "0 (FRONT_BUF_CAL_FAULT_FALSE),1 (FRONT_BUF_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CL_CAL_FAULT                             = " "0 (CL_CAL_FAULT_FALSE),1 (CL_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ZX_CAL_FAULT                             = " "0 (ZX_CAL_FAULT_FALSE),1 (ZX_CAL_FAULT_TRUE)"
    tree.end
    tree "S2_PS_STATUS_2"
      sgroup "S2_PS_STATUS_2 (at 0x11809)"
        set &access:&cmd_addr %l (0x8018090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   UNFILT_PHASE_CNT                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FILT_PHASE_CNT                           = "
    tree.end
    tree "S2_PS_VOLTAGE_CTL1"
      sgroup "S2_PS_VOLTAGE_CTL1 (at 0x11840)"
        set &access:&cmd_addr %l (0x8018400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MV_RANGE                                 = " "0 (LV_RANGE),1 (MV_RANGE)"
    tree.end
    tree "S2_PS_VOLTAGE_CTL2"
      sgroup "S2_PS_VOLTAGE_CTL2 (at 0x11841)"
        set &access:&cmd_addr %l (0x8018410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET                                     = "
    tree.end
    tree "S2_PS_MODE_CTL"
      sgroup "S2_PS_MODE_CTL (at 0x11845)"
        set &access:&cmd_addr %l (0x8018450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (NPM_NOT_FORCED),1 (NPM_FORCED_IF_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_MODE_FALSE),1 (AUTO_MODE_TRUE)"
    tree.end
    tree "S2_PS_FREQ_CTL"
      sgroup "S2_PS_FREQ_CTL (at 0x11850)"
        set &access:&cmd_addr %l (0x8018500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FREQ_CTL                                 = "
    tree.end
    tree "S2_PS_MULTIPHASE_CTL"
      sgroup "S2_PS_MULTIPHASE_CTL (at 0x11851)"
        set &access:&cmd_addr %l (0x8018510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MULTIPHASE_EN                            = " "0 (SINGLE_PHASE_CONFIG),1 (MULTI_PHASE_CONFIG)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LUT_EN                                   = " "0 (LUT_DISABL),1 (LUT_ENABL)"
    tree.end
    tree "S2_PS_PHASE_CTL"
      sgroup "S2_PS_PHASE_CTL (at 0x11852)"
        set &access:&cmd_addr %l (0x8018520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PHASE_CORR_EN                            = " "0 (VCORR_DISABL),1 (VCORR_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PHASE_STANDBY_MODE                       = " "0 (STANDBY_OFF),1 (WARM_STANDBY)"
    tree.end
    tree "S2_PS_PHASE_ID"
      sgroup "S2_PS_PHASE_ID (at 0x11853)"
        set &access:&cmd_addr %l (0x8018530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PHASE_ID                                 = "
    tree.end
    tree "S2_PS_PHASE_CNT_MAX"
      sgroup "S2_PS_PHASE_CNT_MAX (at 0x11854)"
        set &access:&cmd_addr %l (0x8018540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PHASE_CNT_MAX                            = "
    tree.end
    tree "S2_PS_PWM_CL_CTL"
      sgroup "S2_PS_PWM_CL_CTL (at 0x11860)"
        set &access:&cmd_addr %l (0x8018600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   HCPFM_CL                                 = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PWM_CL                                   = "
    tree.end
    tree "S2_PS_LPM_CL_CTL"
      sgroup "S2_PS_LPM_CL_CTL (at 0x11861)"
        set &access:&cmd_addr %l (0x8018610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LPM_CL                                   = "
    tree.end
    tree "S2_PS_AUTO_CTL_1"
      sgroup "S2_PS_AUTO_CTL_1 (at 0x11862)"
        set &access:&cmd_addr %l (0x8018620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   LPM_EXIT_CL_CNT                          = " "0 (LPM_EXIT_CL_CNT_2),1 (LPM_EXIT_CL_CNT_4),2 (LPM_EXIT_CL_CNT_6),3 (LPM_EXIT_CL_CNT_8),4 (LPM_EXIT_CL_CNT_12),5 (LPM_EXIT_CL_CNT_16),6 (LPM_EXIT_CL_CNT_24),7 (LPM_EXIT_CL_CNT_32)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   LPM_ENTRY_DCM_CNT                        = " "0 (LPM_ENTRY_CYCLES_1),1 (LPM_ENTRY_CYCLES_5),2 (LPM_ENTRY_CYCLES_9),3 (LPM_ENTRY_CYCLES_13),4 (LPM_ENTRY_CYCLES_17),5 (LPM_ENTRY_CYCLES_21),6 (LPM_ENTRY_CYCLES_25),7 (LPM_ENTRY_CYCLES_29)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LPM_ENTRY_DCM_RST                        = " "0 (LPM_ENTRY_CYCLES_RST_IN_1),1 (LPM_ENTRY_CYCLES_RST_IN_2),2 (LPM_ENTRY_CYCLES_RST_IN_4),3 (LPM_ENTRY_CYCLES_RST_IN_8)"
    tree.end
    tree "S2_PS_LPM_ADC_VAL"
      sgroup "S2_PS_LPM_ADC_VAL (at 0x11863)"
        set &access:&cmd_addr %l (0x8018630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LPM_ENTRY_ADC_VAL                        = "
    tree.end
    tree "S2_PS_LPM_ADC_CTL"
      sgroup "S2_PS_LPM_ADC_CTL (at 0x11864)"
        set &access:&cmd_addr %l (0x8018640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LPM_ENTRY_ADC_DIV                        = " "0, 1, 2, 3"
    tree.end
    tree "S2_PS_ACTIVITY_DETECT"
      sgroup "S2_PS_ACTIVITY_DETECT (at 0x11865)"
        set &access:&cmd_addr %l (0x8018650|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18650|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ACT_LOW_TIMER                            = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ACT_HIGH_TIMER                           = " "0, 1, 2, 3"
    tree.end
    tree "S2_PS_LPM_CFG"
      sgroup "S2_PS_LPM_CFG (at 0x11868)"
        set &access:&cmd_addr %l (0x8018680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PFM_BIAS_CFG                             = " "0 (PFM_BIAS_LO),1 (PFM_BIAS_HI)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LEGACY                                   = " "0 (LEGACY_PFM_DISABL),1 (LEGACY_PFM_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TOFF                                     = " "0 (TOFF_1X),1 (TOFF_1P5X),2 (TOFF_2X),3 (TOFF_3X)"
    tree.end
    tree "S2_PS_FSM_MINON_CFG"
      sgroup "S2_PS_FSM_MINON_CFG (at 0x11870)"
        set &access:&cmd_addr %l (0x8018700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CL_EXTEND_BLANK                          = " "0 (CL_EXTEND_BLANK_DISABLED),1 (CL_EXTEND_BLANK_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   N_MIN_ON_TIME                            = " "0 (NMOS_MIN_ON_TIME_10NS),1 (NMOS_MIN_ON_TIME_20NS),2 (NMOS_MIN_ON_TIME_30NS),3 (NMOS_MIN_ON_TIME_40NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   P_MIN_ON_TIME                            = " "0 (PMOS_MIN_ON_TIME_10NS),1 (PMOS_MIN_ON_TIME_20NS),2 (PMOS_MIN_ON_TIME_30NS),3 (PMOS_MIN_ON_TIME_40NS)"
    tree.end
    tree "S2_PS_ZX_CAL_CFG"
      sgroup "S2_PS_ZX_CAL_CFG (at 0x11873)"
        set &access:&cmd_addr %l (0x8018730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_VOS_NOM                               = "
    tree.end
    tree "S2_PS_NONOVLAP_CFG"
      sgroup "S2_PS_NONOVLAP_CFG (at 0x11874)"
        set &access:&cmd_addr %l (0x8018740|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18740|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRAN_CLAMP_EN                            = " "0 (SAMPLE_AVG_SEL),1 (SAMPLE_PEAK_SEL)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   NDRV_ON_DEL                              = " "0 (NDRV_ON_DEL_0NS),1 (NDRV_ON_DEL_0P5NS),2 (NDRV_ON_DEL_1NS),3 (NDRV_ON_DEL_2NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PDRV_ON_DEL                              = " "0 (PDRV_ON_DEL_0NS),1 (PDRV_ON_DEL_0P5NS),2 (PDRV_ON_DEL_1NS),3 (PDRV_ON_DEL_2NS)"
    tree.end
    tree "S2_PS_ADC_FRONT_CFG"
      sgroup "S2_PS_ADC_FRONT_CFG (at 0x11875)"
        set &access:&cmd_addr %l (0x8018750|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18750|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   REP_FILT_CFG                             = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ADC_FILT_CFG                             = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "S2_PS_P0_LUT_IN"
      sgroup "S2_PS_P0_LUT_IN (at 0x11878)"
        set &access:&cmd_addr %l (0x8018780|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18780|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   P0_LUT_IN                                = "
    tree.end
    tree "S2_PS_MPH_STROBE"
      sgroup "S2_PS_MPH_STROBE (at 0x11879)"
        set &access:&cmd_addr %l (0x8018790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPH_STROBE                               = " "0, 1"
    tree.end
    tree "S2_PS_LUT_OUT"
      sgroup "S2_PS_LUT_OUT (at 0x1187a)"
        set &access:&cmd_addr %l (0x80187a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LUT_OUT                                  = "
    tree.end
    tree "S2_PS_ADC_OUT"
      sgroup "S2_PS_ADC_OUT (at 0x1187b)"
        set &access:&cmd_addr %l (0x80187b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   ADC_OUT                                  = "
    tree.end
    tree "S2_PS_ADC_FRC"
      sgroup "S2_PS_ADC_FRC (at 0x1187c)"
        set &access:&cmd_addr %l (0x80187c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_FRC_EN                               = " "0 (DAC_FRC_DISABL),1 (DAC_FRC_ENABL)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ADC_FRC_DATA                             = "
    tree.end
    tree "S2_PS_MP_CORR_DFT"
      sgroup "S2_PS_MP_CORR_DFT (at 0x1187d)"
        set &access:&cmd_addr %l (0x80187d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CORR_FRC                                 = " "0 (CORR_FRC_NORMAL),1 (CORR_FRC_CHECKER1),2 (CORR_FRC_CHECKER2),3 (reserved)"
    tree.end
    tree "S2_PS_DAC_DATA"
      sgroup "S2_PS_DAC_DATA (at 0x1187e)"
        set &access:&cmd_addr %l (0x80187e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_DATA                                 = "
    tree.end
    tree "S2_PS_DAC_FRC"
      sgroup "S2_PS_DAC_FRC (at 0x1187f)"
        set &access:&cmd_addr %l (0x80187f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x187f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DAC_FRC_EN                               = " "0 (ADC_FRC_DISABL),1 (ADC_FRC_ENABL)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   DAC_FRC_DATA                             = "
    tree.end
    tree "S2_PS_LUT_DAC_PT_0"
      sgroup "S2_PS_LUT_DAC_PT_0 (at 0x11880)"
        set &access:&cmd_addr %l (0x8018800|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18800|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_PT_0                                 = "
    tree.end
    tree "S2_PS_LUT_DAC_PT_1"
      sgroup "S2_PS_LUT_DAC_PT_1 (at 0x11881)"
        set &access:&cmd_addr %l (0x8018810|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18810|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_PT_1                                 = "
    tree.end
    tree "S2_PS_LUT_DAC_PT_2"
      sgroup "S2_PS_LUT_DAC_PT_2 (at 0x11882)"
        set &access:&cmd_addr %l (0x8018820|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18820|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_PT_2                                 = "
    tree.end
    tree "S2_PS_LUT_DAC_PT_3"
      sgroup "S2_PS_LUT_DAC_PT_3 (at 0x11883)"
        set &access:&cmd_addr %l (0x8018830|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18830|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_PT_3                                 = "
    tree.end
    tree "S2_PS_LUT_ADC_PT_1"
      sgroup "S2_PS_LUT_ADC_PT_1 (at 0x11887)"
        set &access:&cmd_addr %l (0x8018870|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18870|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ADC_PT_1                                 = "
    tree.end
    tree "S2_PS_LUT_ADC_PT_2"
      sgroup "S2_PS_LUT_ADC_PT_2 (at 0x11888)"
        set &access:&cmd_addr %l (0x8018880|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18880|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ADC_PT_2                                 = "
    tree.end
    tree "S2_PS_LUT_ADC_PT_3"
      sgroup "S2_PS_LUT_ADC_PT_3 (at 0x11889)"
        set &access:&cmd_addr %l (0x8018890|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18890|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ADC_PT_3                                 = "
    tree.end
    tree "S2_PS_LUT_SLOPE_HI_0"
      sgroup "S2_PS_LUT_SLOPE_HI_0 (at 0x1188c)"
        set &access:&cmd_addr %l (0x80188c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x188c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SLOPE_HI_0                               = "
    tree.end
    tree "S2_PS_LUT_SLOPE_LO_0"
      sgroup "S2_PS_LUT_SLOPE_LO_0 (at 0x1188d)"
        set &access:&cmd_addr %l (0x80188d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x188d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SLOPE_LO_0                               = "
    tree.end
    tree "S2_PS_LUT_SLOPE_HI_1"
      sgroup "S2_PS_LUT_SLOPE_HI_1 (at 0x1188e)"
        set &access:&cmd_addr %l (0x80188e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x188e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SLOPE_HI_1                               = "
    tree.end
    tree "S2_PS_LUT_SLOPE_LO_1"
      sgroup "S2_PS_LUT_SLOPE_LO_1 (at 0x1188f)"
        set &access:&cmd_addr %l (0x80188f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x188f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SLOPE_LO_1                               = "
    tree.end
    tree "S2_PS_LUT_SLOPE_HI_2"
      sgroup "S2_PS_LUT_SLOPE_HI_2 (at 0x11890)"
        set &access:&cmd_addr %l (0x8018900|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18900|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SLOPE_HI_2                               = "
    tree.end
    tree "S2_PS_LUT_SLOPE_LO_2"
      sgroup "S2_PS_LUT_SLOPE_LO_2 (at 0x11891)"
        set &access:&cmd_addr %l (0x8018910|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18910|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SLOPE_LO_2                               = "
    tree.end
    tree "S2_PS_MPHASE_PI_CFG1"
      sgroup "S2_PS_MPHASE_PI_CFG1 (at 0x11896)"
        set &access:&cmd_addr %l (0x8018960|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18960|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   A_COEFFICIENT                            = "
    tree.end
    tree "S2_PS_MPHASE_PI_CFG4"
      sgroup "S2_PS_MPHASE_PI_CFG4 (at 0x11897)"
        set &access:&cmd_addr %l (0x8018970|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18970|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   B_COEFFICIENT                            = "
    tree.end
    tree "S2_PS_MPHASE_PHASE_CNT"
      sgroup "S2_PS_MPHASE_PHASE_CNT (at 0x11898)"
        set &access:&cmd_addr %l (0x8018980|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18980|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_CNT_FILT                           = " "0, 1, 2, 3"
    tree.end
    tree "S2_PS_EN_OPTIONS_DFT_1"
      sgroup "S2_PS_EN_OPTIONS_DFT_1 (at 0x118a8)"
        set &access:&cmd_addr %l (0x8018a80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18a80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   ADAPT_ZX_TEST_EN                         = " "0 (ADAPT_ZX_TEST_DISABL),1 (ADAPT_ZX_TEST_FORCE_CLK),2 (ADAPT_ZX_TEST_FORCE_CLK_MASK_LO),3 (ADAPT_ZX_TEST_FORCE_CLK_MASK_HI)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ADAPT_ZX_EN                              = " "0 (ADAPT_ZX_DISABL),1 (ADAPT_ZX_ENABL)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLDBACK_FRC                             = " "0 (FORCE_FOLDBACK_DISABL),1 (FORCE_FOLDBACK_ENABL)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   CL_CFG                                   = " "0 (CL_COMP_DISABL),1 (CL_COMP_ENABL),2 (CL_COMP_ENABL_FRC_LO),3 (CL_COMP_ENABL_FRC_HI)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CFG                                   = " "0 (ZX_COMP_ENABL_ONLY_FOR_PWM_LPM_BURSTS_WARMUP),1 (ZX_COMP_ENABL),2 (ZX_COMP_ENABL_FRC_LO),3 (ZX_COMP_ENABL_FRC_HI)"
    tree.end
    tree "S2_PS_EN_OPTIONS_DFT_2"
      sgroup "S2_PS_EN_OPTIONS_DFT_2 (at 0x118a9)"
        set &access:&cmd_addr %l (0x8018a90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18a90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_ENTRY_ADC_EN                         = " "0 (PFM_ENTRY_ADC_DISABL),1 (PFM_ENTRY_ADC_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFM_ENTRY_DCM_EN                         = " "0 (PFM_ENTRY_DCM_DISABL),1 (PFM_ENTRY_DCM_ENABL)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PFM_EXIT_CL_EN                           = " "0 (PFM_EXIT_CL_DISABL),1 (PFM_EXIT_CL_ENABL)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ADC_DACTOP_ISRC_CFG                      = " "0 (DACTOP_ISRC_DISABL),1 (DACTOP_ISRC_ENABL)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ADC_DACMID_BUF_TRI                       = " "0 (DACMID_BUF_NORM),1 (DACMID_BUF_TRI)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ADC_SAMPLE_BUF_TRI                       = " "0 (SAMPLE_BUF_NORM),1 (SAMPLE_BUF_TRI)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ADC_DAC2COMP_SW_EN                       = " "0 (DAC2COMP_SW_OPEN),1 (DAC2COMP_SW_NORM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FULL_FET_SEL                             = " "0, 1"
    tree.end
    tree "S2_PS_ZX_ADAPT_CTL"
      sgroup "S2_PS_ZX_ADAPT_CTL (at 0x118aa)"
        set &access:&cmd_addr %l (0x8018aa0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18aa0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   ZX_SAMPLE_CTL                            = " "0 (ZX_SAMPLE_DELAY_TIME_UNIT_ILLEGAL),1 (ZX_SAMPLE_DELAY_TIME_UNIT_10NS),2 (ZX_SAMPLE_DELAY_TIME_UNIT_20NS),3 (ZX_SAMPLE_DELAY_TIME_UNIT_30NS)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ZX_UP_CYCLES                             = " "0 (ZX_UP_CYCLES_4),1 (ZX_UP_CYCLES_12),2 (ZX_UP_CYCLES_20),3 (ZX_UP_CYCLES_28)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_DOWN_CYCLES                           = " "0 (ZX_DOWN_CYCLES_4),1 (ZX_DOWN_CYCLES_12),2 (ZX_DOWN_CYCLES_20),3 (ZX_DOWN_CYCLES_28)"
    tree.end
    tree "S2_PS_ZX_ADAPT_VAL"
      sgroup "S2_PS_ZX_ADAPT_VAL (at 0x118ab)"
        set &access:&cmd_addr %l (0x8018ab0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18ab0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_ADAPT_VAL                             = "
    tree.end
    tree "S2_PS_ADC_CLK_CTL"
      sgroup "S2_PS_ADC_CLK_CTL (at 0x118ac)"
        set &access:&cmd_addr %l (0x8018ac0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18ac0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_CLK_SEL                              = " "0 (ADC_SEL_19P2),1 (ADC_SEL_38P4)"
    tree.end
    tree "S2_PS_ATEST12"
      sgroup "S2_PS_ATEST12 (at 0x118b0)"
        set &access:&cmd_addr %l (0x8018b00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18b00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ATEST2                                   = " "0 (ATEST2_NORMAL_OP),1 (ATEST2_ADC_DACTOP),2 (ATEST2_NOT_USED),3 (ATEST2_NOT_USED2)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST1                                   = " "0 (ATEST1_NORMAL_OP),1 (ATEST1_ADC_DACOUT),2 (ATEST1_NOT_USED),3 (ATEST1_NOT_USED2)"
    tree.end
    tree "S2_PS_ATEST34"
      sgroup "S2_PS_ATEST34 (at 0x118b1)"
        set &access:&cmd_addr %l (0x8018b10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18b10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ATEST4                                   = " "0 (ATEST4_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST4_PGND),2 (ATEST4_VDDIN),3 (ATEST4_NOT_USED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST3                                   = " "0 (ATEST3_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST3_VSW),2 (ATEST3_ADC_COMP_PLUS),3 (ATEST3_NOT_USED_2)"
    tree.end
    tree "S2_PS_DTEST12"
      sgroup "S2_PS_DTEST12 (at 0x118b2)"
        set &access:&cmd_addr %l (0x8018b20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18b20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   DTEST2                                   = " "0 (DTEST2_UNCONNECTED),1 (DTEST2_DTEST_ADC_2),2 (DTEST2_ZX_COMP_OUTPUT),3 (DTEST2_CLK_19P2_DTEST),4 (DTEST2_MP_ACTIVE_PHASE_CNT_OUT_1),5 (DTEST2_MP_NPM_REQ_TO_CTRL),6 (DTEST2_ADC_DATA_VALID),7 (DTEST2_LUT_DATA_STREAM)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0 (DTEST1_UNCONNECTED),1 (DTEST1_DTEST_ADC_1),2 (DTEST1_CL_COMP_OUTPUT),3 (DTEST1_PFM_ENTRY_TRIG_TO_CTRL),4 (DTEST1_MP_ACTIVE_PHASE_CNT_OUT_0),5 (DTEST1_LUT_DATA_VALID),6 (DTEST1_ADC_DATA_STREAM),7 (DTEST1_ACTIVITY_FLAG)"
    tree.end
    tree "S2_PS_DTEST43"
      sgroup "S2_PS_DTEST43 (at 0x118b3)"
        set &access:&cmd_addr %l (0x8018b30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18b30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   DTEST4                                   = " "0 (DTEST4_UNCONNECTED),1 (DTEST4_ADC_DTEST_SELECT_0),2 (DTEST4_ADC_DTEST_SELECT_1),3 (DTEST4_ADC_DTEST_SELECT_2),4 (DTEST4_MP_ACTIVE_PHASE_CNT_OUT_3),5 (DTEST4_FRONT_BUF_DFT),6 (DTEST4_DAC_DATA_STREAM),7 (DTEST4_REC_AVERAGE_STREAM)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0 (DTEST3_UNCONNECTED),1 (DTEST3_DTEST_ADC_3),2 (DTEST3_DTEST_ADC_4),3 (DTEST3_PFM_EXIT_TRIG_FROM_CTRL),4 (DTEST3_MP_ACTIVE_PHASE_CNT_OUT_2),5 (DTEST3_DAC_DATA_VALID),6 (DTEST3_PHASE_ERR_STREAM),7 (DTEST3_DACMID_BUF_DFT)"
    tree.end
    tree "S2_PS_GANG_CTL1"
      sgroup "S2_PS_GANG_CTL1 (at 0x118c0)"
        set &access:&cmd_addr %l (0x8018c00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18c00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S2_PS_GANG_CTL2"
      sgroup "S2_PS_GANG_CTL2 (at 0x118c1)"
        set &access:&cmd_addr %l (0x8018c10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18c10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANG_EN_FALSE),1 (GANG_EN_TRUE)"
    tree.end
    tree "S2_PS_SEC_ACCESS"
      sgroup "S2_PS_SEC_ACCESS (at 0x118d0)"
        set &access:&cmd_addr %l (0x8018d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S2_PS_PERPH_RESET_CTL2"
      sgroup "S2_PS_PERPH_RESET_CTL2 (at 0x118d9)"
        set &access:&cmd_addr %l (0x8018d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S2_PS_PERPH_RESET_CTL3"
      sgroup "S2_PS_PERPH_RESET_CTL3 (at 0x118da)"
        set &access:&cmd_addr %l (0x8018da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S2_PS_PERPH_RESET_CTL4"
      sgroup "S2_PS_PERPH_RESET_CTL4 (at 0x118db)"
        set &access:&cmd_addr %l (0x8018db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "S2_PS_CAL_REQUEST"
      sgroup "S2_PS_CAL_REQUEST (at 0x118e2)"
        set &access:&cmd_addr %l (0x8018e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_REQUEST                              = " "0 (CAL_REQUEST_FALSE),1 (CAL_REQUEST_TRUE)"
    tree.end
    tree "S2_PS_MAN_CAL_VAL"
      sgroup "S2_PS_MAN_CAL_VAL (at 0x118e5)"
        set &access:&cmd_addr %l (0x8018e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MAN_CAL_VAL                              = "
    tree.end
    tree "S2_PS_REPLICA_CFG"
      sgroup "S2_PS_REPLICA_CFG (at 0x118e6)"
        set &access:&cmd_addr %l (0x8018e60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_REP_SEL                              = " "0 (ADC_REP_SEL_DISABL),1 (ADC_REP_SEL_ENABL)"
    tree.end
    tree "S2_PS_CAL_CTL_1"
      sgroup "S2_PS_CAL_CTL_1 (at 0x118e7)"
        set &access:&cmd_addr %l (0x8018e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   DACMID_BUF_CAL_EN                        = " "0 (DACMID_BUF_CAL_CENTER_CODE),1 (DACMID_BUF_CAL_MISSON_CONFIG_MANCAL),2 (DACMID_BUF_CAL_CAL_CONFIG_MANCAL),3 (DACMID_BUF_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   FRONT_BUF_CAL_EN                         = " "0 (FRONT_BUF_CAL_CENTER_CODE),1 (FRONT_BUF_CAL_MISSON_CONFIG_MANCAL),2 (FRONT_BUF_CAL_CAL_CONFIG_MANCAL),3 (FRONT_BUF_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CAL_EN                                = " "0 (ZX_CAL_USE_ZX_TRIM),1 (ZX_CAL_USE_ZX_TRIM_2),2 (ZX_CAL_MANUALCAL_USE_ZX_TRIM),3 (ZX_CAL_AUTOCAL_ENABL)"
    tree.end
    tree "S2_PS_CAL_CTL_2"
      sgroup "S2_PS_CAL_CTL_2 (at 0x118e8)"
        set &access:&cmd_addr %l (0x8018e80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18e80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ADC_REP_CAL_EN                           = " "0 (ADC_REP_CAL_MISSON_MODE),1 (ADC_REP_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CL_REP_CAL_EN                            = " "0 (CL_REP_CAL_MISSON_MODE),1 (CL_REP_CAL_AUTOCAL_ENABL)"
    tree.end
    tree "S2_PS_REPLICA_CAL_VAL"
      sgroup "S2_PS_REPLICA_CAL_VAL (at 0x118ea)"
        set &access:&cmd_addr %l (0x8018ea0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18ea0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   REPLICA_CAL_VAL                          = "
    tree.end
    tree "S2_PS_DACMID_BUF_CAL_VAL"
      sgroup "S2_PS_DACMID_BUF_CAL_VAL (at 0x118ec)"
        set &access:&cmd_addr %l (0x8018ec0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18ec0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   DACMID_BUF_CAL_VAL                       = "
    tree.end
    tree "S2_PS_FRONT_BUF_CAL_VAL"
      sgroup "S2_PS_FRONT_BUF_CAL_VAL (at 0x118ed)"
        set &access:&cmd_addr %l (0x8018ed0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18ed0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   FRONT_BUF_CAL_VAL                        = "
    tree.end
    tree "S2_PS_CL_CAL_VAL"
      sgroup "S2_PS_CL_CAL_VAL (at 0x118ee)"
        set &access:&cmd_addr %l (0x8018ee0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18ee0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CL_CAL_VAL                               = "
    tree.end
    tree "S2_PS_ZX_CAL_VAL"
      sgroup "S2_PS_ZX_CAL_VAL (at 0x118ef)"
        set &access:&cmd_addr %l (0x8018ef0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18ef0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_CAL_VAL                               = "
    tree.end
    tree "S2_PS_TRIM_NUM"
      sgroup "S2_PS_TRIM_NUM (at 0x118f0)"
        set &access:&cmd_addr %l (0x8018f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "S2_PS_ZX_TRIM"
      sgroup "S2_PS_ZX_TRIM (at 0x118f1)"
        set &access:&cmd_addr %l (0x8018f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_TRIM                                  = "
    tree.end
    tree "S2_PS_CL_TRIM"
      sgroup "S2_PS_CL_TRIM (at 0x118f2)"
        set &access:&cmd_addr %l (0x8018f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CL_TRIM                                  = "
    tree.end
    tree "S2_PS_REPLICA_TRIM"
      sgroup "S2_PS_REPLICA_TRIM (at 0x118f3)"
        set &access:&cmd_addr %l (0x8018f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x18f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   REPLICA_TRIM                             = "
    tree.end
  tree.end
tree.end
tree "S3_CTRL"
  tree "S3_CTRL"
    tree "S3_CTRL_REVISION1"
      sgroup "S3_CTRL_REVISION1 (at 0x11a00)"
        set &access:&cmd_addr %l (0x801a000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S3_CTRL_REVISION2"
      sgroup "S3_CTRL_REVISION2 (at 0x11a01)"
        set &access:&cmd_addr %l (0x801a010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S3_CTRL_REVISION3"
      sgroup "S3_CTRL_REVISION3 (at 0x11a02)"
        set &access:&cmd_addr %l (0x801a020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S3_CTRL_REVISION4"
      sgroup "S3_CTRL_REVISION4 (at 0x11a03)"
        set &access:&cmd_addr %l (0x801a030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S3_CTRL_PERPH_TYPE"
      sgroup "S3_CTRL_PERPH_TYPE (at 0x11a04)"
        set &access:&cmd_addr %l (0x801a040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S3_CTRL_PERPH_SUBTYPE"
      sgroup "S3_CTRL_PERPH_SUBTYPE (at 0x11a05)"
        set &access:&cmd_addr %l (0x801a050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S3_CTRL_STATUS_1"
      sgroup "S3_CTRL_STATUS_1 (at 0x11a08)"
        set &access:&cmd_addr %l (0x801a080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VREG_READY_FLAG                          = " "0 (VREG_READY_FLAG_FALSE),1 (VREG_READY_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VREG_FAULT_FLAG                          = " "0 (VREG_FAULT_FLAG_FALSE),1 (VREG_FAULT_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   NPM_FLAG                                 = " "0 (NPM_FLAG_FALSE),1 (NPM_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STEPPER_DONE_FLAG                        = " "0 (STEPPER_DONE_FLAG_FALSE),1 (STEPPER_DONE_FLAG_TRUE)"
    tree.end
    tree "S3_CTRL_STATUS_2"
      sgroup "S3_CTRL_STATUS_2 (at 0x11a09)"
        set &access:&cmd_addr %l (0x801a090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ILS_FLAG                                 = " "0 (ILS_FLAG_FALSE),1 (ILS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ULS_FLAG                                 = " "0 (ULS_FLAG_FALSE),1 (ULS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LLS_FLAG                                 = " "0 (LLS_FLAG_FALSE),1 (LLS_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   GPL_HI_FLAG                              = " "0 (GPL_HI_FLAG_FALSE),1 (GPL_HI_FLAG_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GPL_LO_FLAG                              = " "0 (GPL_LO_FLAG_FALSE),1 (GPL_LO_FLAG_TRUE)"
    tree.end
    tree "S3_CTRL_STATUS_3"
      sgroup "S3_CTRL_STATUS_3 (at 0x11a0a)"
        set &access:&cmd_addr %l (0x801a0a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a0a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REFDAC_CAL_FAULT                         = " "0 (REFDAC_CAL_FAULT_FALSE),1 (REFDAC_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   VDIP_CAL_FAULT                           = " "0 (VDIP_CAL_FAULT_FALSE),1 (VDIP_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   IDAC_CAL_FAULT                           = " "0 (IDAC_CAL_FAULT_FALSE),1 (IDAC_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CORR_CAL_FAULT                           = " "0 (CORR_CAL_FAULT_FALSE),1 (CORR_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PWM_CAL_FAULT                            = " "0 (PWM_CAL_FAULT_FALSE),1 (PWM_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PFM_CAL_FAULT                            = " "0 (PFM_CAL_FAULT_FALSE),1 (PFM_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CAL_DONE_FLAG                            = " "0 (CTL_CAL_DONE_FLAG_FALSE),1 (CTL_CAL_DONE_FLAG_TRUE)"
    tree.end
    tree "S3_CTRL_STATUS_4"
      sgroup "S3_CTRL_STATUS_4 (at 0x11a0b)"
        set &access:&cmd_addr %l (0x801a0b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a0b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   MODE_FSM_3                               = " "0 (MODE_FSM_3_IS_0),1 (MODE_FSM_3_IS_1)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MODE_FSM_2                               = " "0 (MODE_FSM_2_IS_0),1 (MODE_FSM_2_IS_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   MODE_FSM_1                               = " "0 (MODE_FSM_1_IS_0),1 (MODE_FSM_1_IS_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MODE_FSM_0                               = " "0 (MODE_FSM_0_IS_0),1 (MODE_FSM_0_IS_1)"
    tree.end
    tree "S3_CTRL_STATUS_5"
      sgroup "S3_CTRL_STATUS_5 (at 0x11a0c)"
        set &access:&cmd_addr %l (0x801a0c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a0c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   READY_PHASE_CNT                          = "
    tree.end
    tree "S3_CTRL_INT_RT_STS"
      sgroup "S3_CTRL_INT_RT_STS (at 0x11a10)"
        set &access:&cmd_addr %l (0x801a100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_FALSE),1 (VREG_FAULT_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_FALSE),1 (LIMIT_ERROR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_FALSE),1 (VREG_ERROR_INT_TRUE)"
    tree.end
    tree "S3_CTRL_INT_SET_TYPE"
      sgroup "S3_CTRL_INT_SET_TYPE (at 0x11a11)"
        set &access:&cmd_addr %l (0x801a110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_LEVEL_TRIGGERED),1 (VREG_FAULT_INT_EDGE_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_LEVEL_TRIGGERED),1 (LIMIT_ERROR_INT_EDGE_TRIGGERED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_LEVEL_TRIGGERED),1 (VREG_ERROR_INT_EDGE_TRIGGERED)"
    tree.end
    tree "S3_CTRL_INT_POLARITY_HIGH"
      sgroup "S3_CTRL_INT_POLARITY_HIGH (at 0x11a12)"
        set &access:&cmd_addr %l (0x801a120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_RISING_EDGE_TRIGGER_DISABL),1 (VREG_FAULT_INT_RISING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_RISING_EDGE_TRIGGER_DISABL),1 (LIMIT_ERROR_INT_RISING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_RISING_EDGE_TRIGGER_DISABL),1 (VREG_ERROR_INT_RISING_EDGE_TRIGGER_ENABL)"
    tree.end
    tree "S3_CTRL_INT_POLARITY_LOW"
      sgroup "S3_CTRL_INT_POLARITY_LOW (at 0x11a13)"
        set &access:&cmd_addr %l (0x801a130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_FALLING_EDGE_TRIGGER_DISABL),1 (VREG_FAULT_INT_FALLING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_FALLING_EDGE_TRIGGER_DISABL),1 (LIMIT_ERROR_INT_FALLING_EDGE_TRIGGER_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_FALLING_EDGE_TRIGGER_DISABL),1 (VREG_ERROR_INT_FALLING_EDGE_TRIGGER_ENABL)"
    tree.end
    tree "S3_CTRL_INT_LATCHED_CLR"
      sgroup "S3_CTRL_INT_LATCHED_CLR (at 0x11a14)"
        set &access:&cmd_addr %l (0x801a140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0, 1"
    tree.end
    tree "S3_CTRL_INT_EN_SET"
      sgroup "S3_CTRL_INT_EN_SET (at 0x11a15)"
        set &access:&cmd_addr %l (0x801a150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_DISABL),1 (VREG_FAULT_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_DISABL),1 (LIMIT_ERROR_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_DISABL),1 (VREG_ERROR_INT_ENABL)"
    tree.end
    tree "S3_CTRL_INT_EN_CLR"
      sgroup "S3_CTRL_INT_EN_CLR (at 0x11a16)"
        set &access:&cmd_addr %l (0x801a160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_DISABL),1 (VREG_FAULT_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_DISABL),1 (LIMIT_ERROR_INT_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_DISABL),1 (VREG_ERROR_INT_ENABL)"
    tree.end
    tree "S3_CTRL_INT_LATCHED_STS"
      sgroup "S3_CTRL_INT_LATCHED_STS (at 0x11a18)"
        set &access:&cmd_addr %l (0x801a180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_NOT_TRIGGERED),1 (VREG_FAULT_INT_TRIGGERED_AND_LATCHED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_NOT_TRIGGERED),1 (LIMIT_ERROR_INT_TRIGGERED_AND_LATCHED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_NOT_TRIGGERED),1 (VREG_ERROR_INT_TRIGGERED_AND_LATCHED)"
    tree.end
    tree "S3_CTRL_INT_PENDING_STS"
      sgroup "S3_CTRL_INT_PENDING_STS (at 0x11a19)"
        set &access:&cmd_addr %l (0x801a190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT                           = " "0 (VREG_FAULT_INT_NOT_PENDING),1 (VREG_FAULT_INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT                          = " "0 (LIMIT_ERROR_INT_NOT_PENDING),1 (LIMIT_ERROR_INT_PENDING)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT                           = " "0 (VREG_ERROR_INT_NOT_PENDING),1 (VREG_ERROR_INT_PENDING)"
    tree.end
    tree "S3_CTRL_INT_MID_SEL"
      sgroup "S3_CTRL_INT_MID_SEL (at 0x11a1a)"
        set &access:&cmd_addr %l (0x801a1a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a1a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID_0),1 (MID_1),2 (MID_2),3 (MID_3)"
    tree.end
    tree "S3_CTRL_INT_PRIORITY"
      sgroup "S3_CTRL_INT_PRIORITY (at 0x11a1b)"
        set &access:&cmd_addr %l (0x801a1b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a1b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (INT_PRIORITY_0),1 (INT_PRIORITY_1)"
    tree.end
    tree "S3_CTRL_VOLTAGE_CTL1"
      sgroup "S3_CTRL_VOLTAGE_CTL1 (at 0x11a40)"
        set &access:&cmd_addr %l (0x801a400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MV_RANGE                                 = " "0 (MV_RANGE_FALSE),1 (MV_RANGE_TRUE)"
    tree.end
    tree "S3_CTRL_VOLTAGE_CTL2"
      sgroup "S3_CTRL_VOLTAGE_CTL2 (at 0x11a41)"
        set &access:&cmd_addr %l (0x801a410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET                                     = "
    tree.end
    tree "S3_CTRL_VSET_VALID"
      sgroup "S3_CTRL_VSET_VALID (at 0x11a42)"
        set &access:&cmd_addr %l (0x801a420|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a420|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_VALID                               = "
    tree.end
    tree "S3_CTRL_MPPFM_VOFFSET"
      sgroup "S3_CTRL_MPPFM_VOFFSET (at 0x11a44)"
        set &access:&cmd_addr %l (0x801a440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   MPPFM_VOFFSET                            = " "0 (VSETLO_0_LSB),1 (VSETLO_1_LSB),2 (VSETLO_2_LSB),3 (VSETLO_3_LSB),4 (VSETLO_4_LSB),5 (VSETLO_5_LSB),6 (VSETLO_6_LSB),7 (VSETLO_7_LSB)"
    tree.end
    tree "S3_CTRL_MODE_CTL"
      sgroup "S3_CTRL_MODE_CTL (at 0x11a45)"
        set &access:&cmd_addr %l (0x801a450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (NPM_NOT_FORCED),1 (NPM_FORCED_IF_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_MODE_FALSE),1 (AUTO_MODE_TRUE)"
    tree.end
    tree "S3_CTRL_EN_CTL"
      sgroup "S3_CTRL_EN_CTL (at 0x11a46)"
        set &access:&cmd_addr %l (0x801a460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PERPH_EN                                 = " "0 (FTS_DISABL),1 (FTS_ENABL)"
    tree.end
    tree "S3_CTRL_PD_CTL"
      sgroup "S3_CTRL_PD_CTL (at 0x11a48)"
        set &access:&cmd_addr %l (0x801a480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PD_EN                                    = " "0 (STRONG_PD_ALWAYS_OFF),1 (STRONG_PD_ON_WHEN_FTS_IS_DISABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   WEAK_PD_EN                               = " "0 (WEAK_PD_DISABL_IN_PMIC_OFF_STATE),1 (SWEAK_PD_ENABL_IN_PMIC_OFF_STATE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   WEAK_PD_PFM                              = " "0 (WEAK_PD_DISABL_IN_PFM),1 (WEAK_PD_ENABL_IN_PFM)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   WEAK_PD_PWM                              = " "0 (WEAK_PD_DISABL_IN_PWM_AND_HCPFM),1 (WEAK_PD_ENABL_IN_PWM_AND_HCPFM)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   LEAK_PD_EN                               = " "0 (LEAKAGE_PD_ALWAYS_OFF),1 (LEAKAGE_PD_ALWAYS_ENABL)"
    tree.end
    tree "S3_CTRL_FREQ_CTL"
      sgroup "S3_CTRL_FREQ_CTL (at 0x11a50)"
        set &access:&cmd_addr %l (0x801a500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FREQ_CTL                                 = "
    tree.end
    tree "S3_CTRL_MULTIPHASE_CTL"
      sgroup "S3_CTRL_MULTIPHASE_CTL (at 0x11a51)"
        set &access:&cmd_addr %l (0x801a510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MULTIPHASE_EN                            = " "0 (SINGLE_PHASE_CONFIG),1 (MULTI_PHASE_CONFIG)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LUT_EN                                   = " "0 (LUT_DISABL),1 (LUT_ENABL)"
    tree.end
    tree "S3_CTRL_PHASE_CTL"
      sgroup "S3_CTRL_PHASE_CTL (at 0x11a52)"
        set &access:&cmd_addr %l (0x801a520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PHASE_CORR_EN                            = " "0 (VCORR_DISABL),1 (VCORR_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PHASE_STANDBY_MODE                       = " "0 (STANDBY_OFF),1 (WARM_STANDBY)"
    tree.end
    tree "S3_CTRL_PHASE_ID"
      sgroup "S3_CTRL_PHASE_ID (at 0x11a53)"
        set &access:&cmd_addr %l (0x801a530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PHASE_ID                                 = "
    tree.end
    tree "S3_CTRL_PHASE_CNT_MAX"
      sgroup "S3_CTRL_PHASE_CNT_MAX (at 0x11a54)"
        set &access:&cmd_addr %l (0x801a540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PHASE_CNT_MAX                            = "
    tree.end
    tree "S3_CTRL_PH_READY"
      sgroup "S3_CTRL_PH_READY (at 0x11a55)"
        set &access:&cmd_addr %l (0x801a550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   PH_READY_NPM                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PH_READY_LPM                             = "
    tree.end
    tree "S3_CTRL_SS_CTL"
      sgroup "S3_CTRL_SS_CTL (at 0x11a60)"
        set &access:&cmd_addr %l (0x801a600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   SS_STEP                                  = " "0 (SOFT_START_VSTEP_1_LSB),1 (SOFT_START_VSTEP_2_LSB),2 (SOFT_START_VSTEP_4_LSB),3 (SOFT_START_VSTEP_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SS_DELAY                                 = " "0 (SOFT_START_TIME_STEP_417NS),1 (SOFT_START_TIME_STEP_833NS),2 (SOFT_START_TIME_STEP_1U67S),3 (SOFT_START_TIME_STEP_3U3S),4 (SOFT_START_TIME_STEP_6U7S),5 (SOFT_START_TIME_STEP_13U3S),6 (SOFT_START_TIME_STEP_26U7S),7 (SOFT_START_TIME_STEP_53U3S)"
    tree.end
    tree "S3_CTRL_VS_CTL"
      sgroup "S3_CTRL_VS_CTL (at 0x11a61)"
        set &access:&cmd_addr %l (0x801a610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   VS_EN                                    = " "0 (VSTEPPER_DISABL),1 (VSTEPPER_ENABL)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   VS_STEP                                  = " "0 (VSTEPPER_STEP_SIZE_1_LSB),1 (VSTEPPER_STEP_SIZE_2_LSB),2 (VSTEPPER_STEP_SIZE_4_LSB),3 (VSTEPPER_STEP_SIZE_8_LSB)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VS_DELAY                                 = " "0 (VSTEPPER_TIME_STEP_417NS),1 (VSTEPPER_TIME_STEP_833NS),2 (VSTEPPER_TIME_STEP_1U67S),3 (VSTEPPER_TIME_STEP_3U3S),4 (VSTEPPER_TIME_STEP_6U7S),5 (VSTEPPER_TIME_STEP_13U3S),6 (VSTEPPER_TIME_STEP_26U7S),7 (VSTEPPER_TIME_STEP_53U3S)"
    tree.end
    tree "S3_CTRL_CORR_CFG"
      sgroup "S3_CTRL_CORR_CFG (at 0x11a62)"
        set &access:&cmd_addr %l (0x801a620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   CORR_MAG_CFG                             = " "0 (DC_ERROR_CORR_MAG_20MV),1 (DC_ERROR_CORR_MAG_30MV),2 (DC_ERROR_CORR_MAG_40MV),3 (DC_ERROR_CORR_MAG_50MV),4 (DC_ERROR_CORR_MAG_60MV),5 (DC_ERROR_CORR_MAG_70MV),6 (DC_ERROR_CORR_MAG_80MV),7 (DC_ERROR_CORR_MAG_90MV)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CORR_FILT_CFG                            = "
    tree.end
    tree "S3_CTRL_RAMP_CFG"
      sgroup "S3_CTRL_RAMP_CFG (at 0x11a63)"
        set &access:&cmd_addr %l (0x801a630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BPLP2_EN                                 = " "0 (BPLP2_DISABL),1 (BPLP2_ENABL)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RAMP_CFG                                 = "
    tree.end
    tree "S3_CTRL_COMPENS_CFG"
      sgroup "S3_CTRL_COMPENS_CFG (at 0x11a64)"
        set &access:&cmd_addr %l (0x801a640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   BPHP_CFG                                 = " "0 (BP_HPF_10KHZ),1 (BP_HPF_20KHZ),2 (BP_HPF_40KHZ),3 (BP_HPF_80KHZ)"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   BPLP_CFG                                 = " "0 (BP_LPF_200KHZ),1 (BP_LPF_400KHZ),2 (BP_LPF_600KHZ),3 (BP_LPF_800KHZ),4 (BP_LPF_1000KHZ),5 (BP_LPF_1200KHZ),6 (BP_LPF_NOT_SUPPORTED_110),7 (BP_LPF_NOT_SUPPORTED_111)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   BPLP2_CFG                                = " "0 (BP_LPF2_200KHZ),1 (BP_LPF2_400KHZ),2 (BP_LPF2_600KHZ),3 (BP_LPF2_800KHZ),4 (BP_LPF2_1000KHZ),5 (BP_LPF2_1200KHZ),6 (BP_LPF2_NOT_SUPPORTED_110),7 (BP_LPF2_NOT_SUPPORTED_111)"
    tree.end
    tree "S3_CTRL_CFG_VREG_MON"
      sgroup "S3_CTRL_CFG_VREG_MON (at 0x11a65)"
        set &access:&cmd_addr %l (0x801a650|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a650|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   VREG_FOLDBACK_EN                         = " "0 (VREG_FAULT_FOLDBACK_DISABL),1 (VREG_FAULT_FOLDBACK_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_MON_CFG                             = " "0 (VREG_MON_BURST_ENABL),1 (VREG_MON_ALWAYS_ENABL)"
    tree.end
    tree "S3_CTRL_CFG_VREG_OCP"
      sgroup "S3_CTRL_CFG_VREG_OCP (at 0x11a66)"
        set &access:&cmd_addr %l (0x801a660|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a660|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OCP_LAT_EN                               = " "0 (OCP_LATCH_DISABL),1 (OCP_LATCH_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OCP_RETRY_EN                             = " "0 (OCP_RETRY_DISABL),1 (OCP_RETRY_ENABL)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OCP_CLR                                  = " "0, 1"
    tree.end
    tree "S3_CTRL_CFG_PFM_COMP"
      sgroup "S3_CTRL_CFG_PFM_COMP (at 0x11a67)"
        set &access:&cmd_addr %l (0x801a670|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a670|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   HCPFM_HYS                                = " "0 (HCPFM_COMPARATOR_HYSTERESIS_0MV),1 (HCPFM_COMPARATOR_HYSTERESIS_5MV),2 (HCPFM_COMPARATOR_HYSTERESIS_10MV),3 (HCPFM_COMPARATOR_HYSTERESIS_20MV)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_HYS                                  = " "0 (PFM_COMPARATOR_HYSTERESIS_5MV),1 (PFM_COMPARATOR_HYSTERESIS_10MV),2 (PFM_COMPARATOR_HYSTERESIS_20MV),3 (PFM_COMPARATOR_HYSTERESIS_40MV)"
    tree.end
    tree "S3_CTRL_UL_LL_CTL"
      sgroup "S3_CTRL_UL_LL_CTL (at 0x11a68)"
        set &access:&cmd_addr %l (0x801a680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   UL_EN                                    = " "0 (UL_STOP_DISABL),1 (UL_STOP_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LL_EN                                    = " "0 (LL_STOP_DISABL),1 (LL_STOP_ENABL)"
    tree.end
    tree "S3_CTRL_VSET_ULS"
      sgroup "S3_CTRL_VSET_ULS (at 0x11a69)"
        set &access:&cmd_addr %l (0x801a690|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a690|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_ULS                                 = "
    tree.end
    tree "S3_CTRL_ULS_VALID"
      sgroup "S3_CTRL_ULS_VALID (at 0x11a6a)"
        set &access:&cmd_addr %l (0x801a6a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a6a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ULS_VALID                                = "
    tree.end
    tree "S3_CTRL_VSET_LLS"
      sgroup "S3_CTRL_VSET_LLS (at 0x11a6b)"
        set &access:&cmd_addr %l (0x801a6b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a6b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_LLS                                 = "
    tree.end
    tree "S3_CTRL_LLS_VALID"
      sgroup "S3_CTRL_LLS_VALID (at 0x11a6c)"
        set &access:&cmd_addr %l (0x801a6c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a6c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LLS_VALID                                = "
    tree.end
    tree "S3_CTRL_GPL_HI"
      sgroup "S3_CTRL_GPL_HI (at 0x11a6d)"
        set &access:&cmd_addr %l (0x801a6d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a6d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_GPL_HI                              = "
    tree.end
    tree "S3_CTRL_GPL_LO"
      sgroup "S3_CTRL_GPL_LO (at 0x11a6e)"
        set &access:&cmd_addr %l (0x801a6e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a6e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET_GPL_LO                              = "
    tree.end
    tree "S3_CTRL_FB_FILT_CFG"
      sgroup "S3_CTRL_FB_FILT_CFG (at 0x11a6f)"
        set &access:&cmd_addr %l (0x801a6f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a6f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   FB_FILT_SERIES_2                         = " "0 (FBLP_CORNER_INFINITE),1 (FBLP_CORNER_100MHZ),2 (FBLP_CORNER_50MHZ),3 (FBLP_CORNER_10MHZ)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FB_FILT_SERIES                           = " "0 (SERIES_FILTER_UNCONNECTED),1 (SERIES_FILTER_CONNECTED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PWM_ITAIL_CFG                            = " "0 (PWM_COMP_TAIL_CURRENT_2UA),1 (PWM_COMP_TAIL_CURRENT_4UA),2 (PWM_COMP_TAIL_CURRENT_10UA),3 (PWM_COMP_TAIL_CURRENT_20UA)"
    tree.end
    tree "S3_CTRL_VDIP_CFG"
      sgroup "S3_CTRL_VDIP_CFG (at 0x11a71)"
        set &access:&cmd_addr %l (0x801a710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   VDIP_CFG                                 = " "0 (VDIP_DISABLED),1 (VDIP_BURST_ENABLED),2 (VDIP_ALWAYS_ENABLED),3 (VDIP_ALWAYS_ENABLED_2)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VDIP_THRESH                              = " "0 (VDIP_THRESH_10MV),1 (VDIP_THRESH_15MV),2 (VDIP_THRESH_20MV),3 (VDIP_THRESH_25MV)"
    tree.end
    tree "S3_CTRL_MPH_STROBE"
      sgroup "S3_CTRL_MPH_STROBE (at 0x11a79)"
        set &access:&cmd_addr %l (0x801a790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1a790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPH_STROBE                               = " "0, 1"
    tree.end
    tree "S3_CTRL_MODE_FSM_MASK"
      sgroup "S3_CTRL_MODE_FSM_MASK (at 0x11aa0)"
        set &access:&cmd_addr %l (0x801aa00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MODE_FSM_MASK_EN                         = " "0 (MODE_FSM_MASK_EN_0),1 (MODE_FSM_MASK_EN_1)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MODE_FSM_MASK_VALUE                      = "
    tree.end
    tree "S3_CTRL_MODE_FSM_WAITS_1"
      sgroup "S3_CTRL_MODE_FSM_WAITS_1 (at 0x11aa1)"
        set &access:&cmd_addr %l (0x801aa10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   TIMER_T3                                 = " "0 (TIMER_T3_5US),1 (TIMER_T3_10US),2 (TIMER_T3_20US),3 (TIMER_T3_30US)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   TIMER_T2                                 = " "0 (TIMER_T2_5US),1 (TIMER_T2_10US),2 (TIMER_T2_20US),3 (TIMER_T2_30US)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   TIMER_T1                                 = " "0 (TIMER_T1_5US),1 (TIMER_T1_10US),2 (TIMER_T1_20US),3 (TIMER_T1_30US)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TIMER_T0                                 = " "0 (TIMER_T0_5US),1 (TIMER_T0_10US),2 (TIMER_T0_20US),3 (TIMER_T0_30US)"
    tree.end
    tree "S3_CTRL_MODE_FSM_WAIT_2"
      sgroup "S3_CTRL_MODE_FSM_WAIT_2 (at 0x11aa2)"
        set &access:&cmd_addr %l (0x801aa20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TIMER_T4                                 = " "0 (TIMER_T4_20US),1 (TIMER_T4_40US),2 (TIMER_T4_80US),3 (TIMER_T4_160US)"
    tree.end
    tree "S3_CTRL_GATE_DRV_MUX"
      sgroup "S3_CTRL_GATE_DRV_MUX (at 0x11aa3)"
        set &access:&cmd_addr %l (0x801aa30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   GATE_DRV_MUX1                            = " "0 (GATE_DRV_MUX1_NORMAL_MODE),1 (GATE_DRV_MUX1_DET_BY_MUX2)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   GATE_DRV_MUX2                            = " "0 (GATE_DRV_MUX2_PFM_COMP),1 (GATE_DRV_MUX2_DET_BY_MUX3)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   GATE_DRV_MUX3                            = " "0 (GATE_DRV_MUX3_FORCED_TO_1),1 (GATE_DRV_MUX3_SMPS_CLK),2 (GATE_DRV_MUX3_DTEST1),3 (GATE_DRV_MUX3_FORCED_TO_0)"
    tree.end
    tree "S3_CTRL_CORR_DUTY_MUX"
      sgroup "S3_CTRL_CORR_DUTY_MUX (at 0x11aa4)"
        set &access:&cmd_addr %l (0x801aa40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CORR_DUTY_MUX                            = " "0 (CORR_DUTY_MUX_NORMAL_MODE),1 (CORR_DUTY_MUX_FORCED_TO_1),2 (CORR_DUTY_MUX_FORCED_TO_0),3 (CORR_DUTY_MUX_DTEST2)"
    tree.end
    tree "S3_CTRL_EN_OPTIONS_DFT_1"
      sgroup "S3_CTRL_EN_OPTIONS_DFT_1 (at 0x11aa5)"
        set &access:&cmd_addr %l (0x801aa50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SS_EN                                    = " "0 (SOFTSTART_DISABL),1 (SOFTSTART_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CORR_SHIFT_EN                            = " "0 (CORR_SHIFT_DISABL),1 (CORR_SHIFT_ENABL_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   SAMPLE_CLK_EN                            = " "0 (SAMPLE_CLK_DISABL),1 (SAMPLE_CLK_NORMAL_MODE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SAMPLE_AMP_TRI                           = " "0 (SAMPLE_AMP_NORMAL_MODE),1 (SAMPLE_AMP_TRI_STATE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   RAMP_EN                                  = " "0 (RAMP_EN_FALSE),1 (RAMP_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COMPENS_EN                               = " "0 (COMPENS_EN_FALSE),1 (COMPENS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SAMPLE_PREBIAS_EN                        = " "0 (SAMPLE_PREBIAS_EN_FALSE),1 (SAMPLE_PREBIAS_EN_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   GDRV_EN                                  = " "0 (GDRV_EN_FALSE),1 (GDRV_EN_TRUE)"
    tree.end
    tree "S3_CTRL_EN_OPTIONS_DFT_2"
      sgroup "S3_CTRL_EN_OPTIONS_DFT_2 (at 0x11aa6)"
        set &access:&cmd_addr %l (0x801aa60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_EXIT_DIP_EN                          = " "0 (PFM_EXIT_DIP_DISABL),1 (PFM_EXIT_DIP_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DIP_LAT_BYPASS                           = " "0 (DIP_LAT_BYP_DISABL),1 (DIP_LAT_BYP_ENABL)"
    tree.end
    tree "S3_CTRL_MPHASE_IDAC"
      sgroup "S3_CTRL_MPHASE_IDAC (at 0x11aa7)"
        set &access:&cmd_addr %l (0x801aa70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVR_EN                                   = " "0 (MPHASE_IDAC_OVERRIDE_FALSE),1 (MPHASE_IDAC_OVERRIDE_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DATA                                     = "
    tree.end
    tree "S3_CTRL_EN_OPTIONS_DFT_1_SHADOW"
      sgroup "S3_CTRL_EN_OPTIONS_DFT_1_SHADOW (at 0x11aa8)"
        set &access:&cmd_addr %l (0x801aa80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   ADAPT_ZX_TEST_EN                         = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ADAPT_ZX_EN                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLDBACK_FRC                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   CL_CFG                                   = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CFG                                   = " "0, 1, 2, 3"
    tree.end
    tree "S3_CTRL_EN_OPTIONS_DFT_2_SHADOW"
      sgroup "S3_CTRL_EN_OPTIONS_DFT_2_SHADOW (at 0x11aa9)"
        set &access:&cmd_addr %l (0x801aa90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aa90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_ENTRY_ADC_EN                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFM_ENTRY_DCM_EN                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PFM_EXIT_CL_EN                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ADC_DACTOP_ISRC_CFG                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ADC_DACMID_BUF_TRI                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ADC_SAMPLE_BUF_TRI                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ADC_DAC2COMP_SW_EN                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FULL_FET_SEL                             = " "0, 1"
    tree.end
    tree "S3_CTRL_ZX_ADAPT_CTL_SHADOW"
      sgroup "S3_CTRL_ZX_ADAPT_CTL_SHADOW (at 0x11aaa)"
        set &access:&cmd_addr %l (0x801aaa0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aaa0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   ZX_SAMPLE_CTL                            = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ZX_UP_CYCLES                             = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_DOWN_CYCLES                           = " "0, 1, 2, 3"
    tree.end
    tree "S3_CTRL_ANTI_ESL_CFG_1"
      sgroup "S3_CTRL_ANTI_ESL_CFG_1 (at 0x11aac)"
        set &access:&cmd_addr %l (0x801aac0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aac0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   GATE_DRV_LAT                             = " "0 (GDRV_UNLATCHED),1 (GDRV_HALF_LATCHED),2 (GRDV_FULL_LATCHED),3 (GDRV_LATCH_CTL_INVALID_11)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ESL_PULSE_MAG                            = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "S3_CTRL_ANTI_ESL_CFG_2"
      sgroup "S3_CTRL_ANTI_ESL_CFG_2 (at 0x11aad)"
        set &access:&cmd_addr %l (0x801aad0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aad0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ESL_PULSE_RC_SEL                         = "
    tree.end
    tree "S3_CTRL_CFG_ATEST1"
      sgroup "S3_CTRL_CFG_ATEST1 (at 0x11ab0)"
        set &access:&cmd_addr %l (0x801ab00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ab00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_ATEST1                               = " "0 (ATEST1_UNCONNECTED),1 (ATEST1_REFLO),2 (ATEST1_REFMID),3 (ATEST1_REFHI),4 (ATEST1_RBUFF_TERM),5 (ATEST1_IDACREF),6 (ATEST1_DACREF),7 (ATEST1_FB)"
    tree.end
    tree "S3_CTRL_CFG_ATEST2"
      sgroup "S3_CTRL_CFG_ATEST2 (at 0x11ab1)"
        set &access:&cmd_addr %l (0x801ab10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ab10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_ATEST2                               = " "0 (ATEST2_UNCONNECTED),1 (ATEST2_VREG),2 (ATEST2_RMT_GND),3 (ATEST2_REF_GND),4 (ATEST2_REFVALL),5 (ATEST2_HOLDVALL),6 (ATEST2_RVDD_CTRL),7 (ATEST2_RVDD)"
    tree.end
    tree "S3_CTRL_CFG_ATEST3"
      sgroup "S3_CTRL_CFG_ATEST3 (at 0x11ab2)"
        set &access:&cmd_addr %l (0x801ab20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ab20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_ATEST3                               = " "0 (ATEST3_UNCONNECTED),1 (ATEST3_FAULTREF),2 (ATEST3_REFPK),3 (ATEST3_HOLDPK)"
    tree.end
    tree "S3_CTRL_CFG_ATEST4"
      sgroup "S3_CTRL_CFG_ATEST4 (at 0x11ab3)"
        set &access:&cmd_addr %l (0x801ab30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ab30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_ATEST4                               = " "0 (ATEST4_UNCONNECTED),1 (ATEST4_AVDD),2 (ATEST4_1B1U_UNTRIM_DFT),3 (ATEST4_REFCOMM)"
    tree.end
    tree "S3_CTRL_CFG_DTEST1"
      sgroup "S3_CTRL_CFG_DTEST1 (at 0x11ab4)"
        set &access:&cmd_addr %l (0x801ab40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ab40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CFG_DTEST1                               = "
    tree.end
    tree "S3_CTRL_CFG_DTEST2"
      sgroup "S3_CTRL_CFG_DTEST2 (at 0x11ab5)"
        set &access:&cmd_addr %l (0x801ab50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ab50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CFG_DTEST2                               = "
    tree.end
    tree "S3_CTRL_CFG_DTEST3"
      sgroup "S3_CTRL_CFG_DTEST3 (at 0x11ab6)"
        set &access:&cmd_addr %l (0x801ab60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ab60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CFG_DTEST3                               = "
    tree.end
    tree "S3_CTRL_CFG_DTEST4"
      sgroup "S3_CTRL_CFG_DTEST4 (at 0x11ab7)"
        set &access:&cmd_addr %l (0x801ab70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ab70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CFG_DTEST4                               = "
    tree.end
    tree "S3_CTRL_GANG_CTL1"
      sgroup "S3_CTRL_GANG_CTL1 (at 0x11ac0)"
        set &access:&cmd_addr %l (0x801ac00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ac00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S3_CTRL_GANG_CTL2"
      sgroup "S3_CTRL_GANG_CTL2 (at 0x11ac1)"
        set &access:&cmd_addr %l (0x801ac10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ac10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANG_EN_FALSE),1 (GANG_EN_TRUE)"
    tree.end
    tree "S3_CTRL_SEC_ACCESS"
      sgroup "S3_CTRL_SEC_ACCESS (at 0x11ad0)"
        set &access:&cmd_addr %l (0x801ad00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ad00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S3_CTRL_PERPH_RESET_CTL1"
      sgroup "S3_CTRL_PERPH_RESET_CTL1 (at 0x11ad8)"
        set &access:&cmd_addr %l (0x801ad80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ad80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (ENABL_PRESET_FALSE),1 (ENABL_PRESET_TRUE)"
    tree.end
    tree "S3_CTRL_PERPH_RESET_CTL2"
      sgroup "S3_CTRL_PERPH_RESET_CTL2 (at 0x11ad9)"
        set &access:&cmd_addr %l (0x801ad90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ad90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S3_CTRL_PERPH_RESET_CTL3"
      sgroup "S3_CTRL_PERPH_RESET_CTL3 (at 0x11ada)"
        set &access:&cmd_addr %l (0x801ada0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ada0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S3_CTRL_PERPH_RESET_CTL4"
      sgroup "S3_CTRL_PERPH_RESET_CTL4 (at 0x11adb)"
        set &access:&cmd_addr %l (0x801adb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1adb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "S3_CTRL_INT_TEST1"
      sgroup "S3_CTRL_INT_TEST1 (at 0x11ae0)"
        set &access:&cmd_addr %l (0x801ae00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_EN_FALSE),1 (INT_TEST_MODE_EN_TRUE)"
    tree.end
    tree "S3_CTRL_INT_TEST_VAL"
      sgroup "S3_CTRL_INT_TEST_VAL (at 0x11ae1)"
        set &access:&cmd_addr %l (0x801ae10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREG_FAULT_INT_TEST_VAL                  = " "0 (VREG_FAULT_INT_TEST_VAL_0),1 (VREG_FAULT_INT_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   LIMIT_ERROR_INT_TEST_VAL                 = " "0 (LIMIT_ERROR_INT_TEST_VAL_0),1 (LIMIT_ERROR_INT_TEST_VAL_1)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VREG_ERROR_INT_TEST_VAL                  = " "0 (VREG_ERROR_INT_TEST_VAL_0),1 (VREG_ERROR_INT_TEST_VAL_1)"
    tree.end
    tree "S3_CTRL_CAL_REQUEST"
      sgroup "S3_CTRL_CAL_REQUEST (at 0x11ae2)"
        set &access:&cmd_addr %l (0x801ae20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_REQUEST                              = " "0 (CAL_REQUEST_FALSE),1 (CAL_REQUEST_TRUE)"
    tree.end
    tree "S3_CTRL_CAL_CTL_1"
      sgroup "S3_CTRL_CAL_CTL_1 (at 0x11ae3)"
        set &access:&cmd_addr %l (0x801ae30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   IDAC_BUF_CAL_EN                          = " "0 (IDAC_BUF_CAL_CENTER_CODE),1 (IDAC_BUF_CAL_MISSON_CONFIG_MANCAL),2 (IDAC_BUF_CAL_CAL_CONFIG_MANCAL),3 (IDAC_BUF_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   CORR_BUF_CAL_EN                          = " "0 (CORR_BUF_CAL_CENTER_CODE),1 (CORR_BUF_CAL_MISSON_CONFIG_MANCAL),2 (CORR_BUF_CAL_CAL_CONFIG_MANCAL),3 (CORR_BUF_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PWM_CAL_EN                               = " "0 (PWM_CAL_CENTER_CODE),1 (PWM_CAL_MISSON_CONFIG_MANCAL),2 (PWM_CAL_CAL_CONFIG_MANCAL),3 (PWM_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_CAL_EN                               = " "0 (PFM_CAL_CENTER_CODE),1 (PFM_CAL_MISSON_CONFIG_MANCAL),2 (PFM_CAL_CAL_CONFIG_MANCAL),3 (PFM_CAL_AUTOCAL_ENABL)"
    tree.end
    tree "S3_CTRL_CAL_CTL_2"
      sgroup "S3_CTRL_CAL_CTL_2 (at 0x11ae4)"
        set &access:&cmd_addr %l (0x801ae40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   REFDAC_CAL_EN                            = " "0 (REFDAC_CAL_USE_REFDAC_TRIM),1 (REFDAC_CAL_NOT_USED_1),2 (REFDAC_CAL_NOT_USED_2),3 (REFDAC_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VDIP_CAL_EN                              = " "0 (VDIP_CAL_CENTER_CODE),1 (VDIP_CAL_MISSON_CONFIG_MANCAL),2 (VDIP_CAL_CAL_CONFIG_MANCAL),3 (VDIP_CAL_AUTOCAL_ENABL)"
    tree.end
    tree "S3_CTRL_MAN_CAL_VAL"
      sgroup "S3_CTRL_MAN_CAL_VAL (at 0x11ae5)"
        set &access:&cmd_addr %l (0x801ae50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MAN_CAL_VAL                              = "
    tree.end
    tree "S3_CTRL_CAL_CTL_1_SHADOW"
      sgroup "S3_CTRL_CAL_CTL_1_SHADOW (at 0x11ae7)"
        set &access:&cmd_addr %l (0x801ae70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   DACMID_BUF_CAL_EN                        = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   FRONT_BUF_CAL_EN                         = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CAL_EN                                = " "0, 1, 2, 3"
    tree.end
    tree "S3_CTRL_CAL_CTL_2_SHADOW"
      sgroup "S3_CTRL_CAL_CTL_2_SHADOW (at 0x11ae8)"
        set &access:&cmd_addr %l (0x801ae80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ae80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ADC_REP_CAL_EN                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CL_REP_CAL_EN                            = " "0, 1"
    tree.end
    tree "S3_CTRL_REFDAC_CAL_VAL"
      sgroup "S3_CTRL_REFDAC_CAL_VAL (at 0x11aea)"
        set &access:&cmd_addr %l (0x801aea0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aea0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   REFDAC_CAL_VAL                           = "
    tree.end
    tree "S3_CTRL_VDIP_CAL_VAL"
      sgroup "S3_CTRL_VDIP_CAL_VAL (at 0x11aeb)"
        set &access:&cmd_addr %l (0x801aeb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aeb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VDIP_CAL_VAL                             = "
    tree.end
    tree "S3_CTRL_IDAC_CAL_VAL"
      sgroup "S3_CTRL_IDAC_CAL_VAL (at 0x11aec)"
        set &access:&cmd_addr %l (0x801aec0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aec0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IDAC_CAL_VAL                             = "
    tree.end
    tree "S3_CTRL_CORR_CAL_VAL"
      sgroup "S3_CTRL_CORR_CAL_VAL (at 0x11aed)"
        set &access:&cmd_addr %l (0x801aed0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aed0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CORR_CAL_VAL                             = "
    tree.end
    tree "S3_CTRL_PWM_CAL_VAL"
      sgroup "S3_CTRL_PWM_CAL_VAL (at 0x11aee)"
        set &access:&cmd_addr %l (0x801aee0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aee0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   PWM_CAL_VAL                              = "
    tree.end
    tree "S3_CTRL_PFM_CAL_VAL"
      sgroup "S3_CTRL_PFM_CAL_VAL (at 0x11aef)"
        set &access:&cmd_addr %l (0x801aef0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1aef0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PFM_CAL_VAL                              = "
    tree.end
    tree "S3_CTRL_TRIM_NUM"
      sgroup "S3_CTRL_TRIM_NUM (at 0x11af0)"
        set &access:&cmd_addr %l (0x801af00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1af00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "S3_CTRL_REFDAC_TRIM"
      sgroup "S3_CTRL_REFDAC_TRIM (at 0x11af1)"
        set &access:&cmd_addr %l (0x801af10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1af10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REFDAC_TRIM_EN                           = " "0 (REFDAC_TRIM_EN_FALSE),1 (REFDAC_TRIM_EN_TRUE)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   REFDAC_TRIM                              = "
    tree.end
    tree "S3_CTRL_RAMP_TRIM"
      sgroup "S3_CTRL_RAMP_TRIM (at 0x11af2)"
        set &access:&cmd_addr %l (0x801af20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1af20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RAMP_TRIM                                = "
    tree.end
  tree.end
tree.end
tree "S3_FREQ"
  tree "S3_FREQ"
    tree "S3_FREQ_REVISION1"
      sgroup "S3_FREQ_REVISION1 (at 0x11c00)"
        set &access:&cmd_addr %l (0x801c000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S3_FREQ_REVISION2"
      sgroup "S3_FREQ_REVISION2 (at 0x11c01)"
        set &access:&cmd_addr %l (0x801c010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S3_FREQ_PERPH_TYPE"
      sgroup "S3_FREQ_PERPH_TYPE (at 0x11c04)"
        set &access:&cmd_addr %l (0x801c040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S3_FREQ_PERPH_SUBTYPE"
      sgroup "S3_FREQ_PERPH_SUBTYPE (at 0x11c05)"
        set &access:&cmd_addr %l (0x801c050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S3_FREQ_CLK_ENABLE"
      sgroup "S3_FREQ_CLK_ENABLE (at 0x11c46)"
        set &access:&cmd_addr %l (0x801c460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CLK_INT                               = " "0 (FORCE_EN_DISABLED),1 (FORCE_EN_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_CLK_SX_REQ                        = " "0 (FALLOW_CLK_REQ_DISABLED),1 (FALLOW_CLK_REQ_ENABLED)"
    tree.end
    tree "S3_FREQ_CLK_DIV"
      sgroup "S3_FREQ_CLK_DIV (at 0x11c50)"
        set &access:&cmd_addr %l (0x801c500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_DIV                                  = "
    tree.end
    tree "S3_FREQ_CLK_PHASE"
      sgroup "S3_FREQ_CLK_PHASE (at 0x11c51)"
        set &access:&cmd_addr %l (0x801c510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1c510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CLK_PHASE                                = "
    tree.end
    tree "S3_FREQ_GANG_CTL1"
      sgroup "S3_FREQ_GANG_CTL1 (at 0x11cc0)"
        set &access:&cmd_addr %l (0x801cc00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cc00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S3_FREQ_GANG_CTL2"
      sgroup "S3_FREQ_GANG_CTL2 (at 0x11cc1)"
        set &access:&cmd_addr %l (0x801cc10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cc10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANGING_DISABLED),1 (GANGING_ENABLED)"
    tree.end
    tree "S3_FREQ_SEC_ACCESS"
      sgroup "S3_FREQ_SEC_ACCESS (at 0x11cd0)"
        set &access:&cmd_addr %l (0x801cd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S3_FREQ_PERPH_RESET_CTL2"
      sgroup "S3_FREQ_PERPH_RESET_CTL2 (at 0x11cd9)"
        set &access:&cmd_addr %l (0x801cd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S3_FREQ_PERPH_RESET_CTL3"
      sgroup "S3_FREQ_PERPH_RESET_CTL3 (at 0x11cda)"
        set &access:&cmd_addr %l (0x801cda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "S3_FREQ_PERPH_RESET_CTL4"
      sgroup "S3_FREQ_PERPH_RESET_CTL4 (at 0x11cdb)"
        set &access:&cmd_addr %l (0x801cdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1cdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "S3_FREQ_TEST1"
      sgroup "S3_FREQ_TEST1 (at 0x11ce2)"
        set &access:&cmd_addr %l (0x801ce20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ce20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DTEST                                 = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DTEST_SEL                                = " "0 (DRIVE_DTEST1),1 (DRIVE_DTEST2),2 (DRIVE_DTEST3),3 (DRIVE_DTEST4)"
    tree.end
  tree.end
tree.end
tree "S3_PS"
  tree "S3_PS"
    tree "S3_PS_REVISION1"
      sgroup "S3_PS_REVISION1 (at 0x11b00)"
        set &access:&cmd_addr %l (0x801b000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "S3_PS_REVISION2"
      sgroup "S3_PS_REVISION2 (at 0x11b01)"
        set &access:&cmd_addr %l (0x801b010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "S3_PS_REVISION3"
      sgroup "S3_PS_REVISION3 (at 0x11b02)"
        set &access:&cmd_addr %l (0x801b020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "S3_PS_REVISION4"
      sgroup "S3_PS_REVISION4 (at 0x11b03)"
        set &access:&cmd_addr %l (0x801b030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "S3_PS_PERPH_TYPE"
      sgroup "S3_PS_PERPH_TYPE (at 0x11b04)"
        set &access:&cmd_addr %l (0x801b040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "S3_PS_PERPH_SUBTYPE"
      sgroup "S3_PS_PERPH_SUBTYPE (at 0x11b05)"
        set &access:&cmd_addr %l (0x801b050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "S3_PS_STATUS_1"
      sgroup "S3_PS_STATUS_1 (at 0x11b08)"
        set &access:&cmd_addr %l (0x801b080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_DONE_PS_FLAG                         = " "0 (CAL_DONE_NOT_COMPLETE),1 (CAL_DONE_COMPLETE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ADC_REP_CAL_FAULT                        = " "0 (ADC_REP_CAL_FAULT_FALSE),1 (ADC_REP_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DACMID_BUF_CAL_FAULT                     = " "0 (DACMID_BUF_CAL_FAULT_FALSE),1 (DACMID_BUF_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FRONT_BUF_CAL_FAULT                      = " "0 (FRONT_BUF_CAL_FAULT_FALSE),1 (FRONT_BUF_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CL_CAL_FAULT                             = " "0 (CL_CAL_FAULT_FALSE),1 (CL_CAL_FAULT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ZX_CAL_FAULT                             = " "0 (ZX_CAL_FAULT_FALSE),1 (ZX_CAL_FAULT_TRUE)"
    tree.end
    tree "S3_PS_STATUS_2"
      sgroup "S3_PS_STATUS_2 (at 0x11b09)"
        set &access:&cmd_addr %l (0x801b090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   UNFILT_PHASE_CNT                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FILT_PHASE_CNT                           = "
    tree.end
    tree "S3_PS_VOLTAGE_CTL1"
      sgroup "S3_PS_VOLTAGE_CTL1 (at 0x11b40)"
        set &access:&cmd_addr %l (0x801b400|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b400|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MV_RANGE                                 = " "0 (LV_RANGE),1 (MV_RANGE)"
    tree.end
    tree "S3_PS_VOLTAGE_CTL2"
      sgroup "S3_PS_VOLTAGE_CTL2 (at 0x11b41)"
        set &access:&cmd_addr %l (0x801b410|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b410|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   VSET                                     = "
    tree.end
    tree "S3_PS_MODE_CTL"
      sgroup "S3_PS_MODE_CTL (at 0x11b45)"
        set &access:&cmd_addr %l (0x801b450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   NPM                                      = " "0 (NPM_NOT_FORCED),1 (NPM_FORCED_IF_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_MODE                                = " "0 (AUTO_MODE_FALSE),1 (AUTO_MODE_TRUE)"
    tree.end
    tree "S3_PS_FREQ_CTL"
      sgroup "S3_PS_FREQ_CTL (at 0x11b50)"
        set &access:&cmd_addr %l (0x801b500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FREQ_CTL                                 = "
    tree.end
    tree "S3_PS_MULTIPHASE_CTL"
      sgroup "S3_PS_MULTIPHASE_CTL (at 0x11b51)"
        set &access:&cmd_addr %l (0x801b510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MULTIPHASE_EN                            = " "0 (SINGLE_PHASE_CONFIG),1 (MULTI_PHASE_CONFIG)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   LUT_EN                                   = " "0 (LUT_DISABL),1 (LUT_ENABL)"
    tree.end
    tree "S3_PS_PHASE_CTL"
      sgroup "S3_PS_PHASE_CTL (at 0x11b52)"
        set &access:&cmd_addr %l (0x801b520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PHASE_CORR_EN                            = " "0 (VCORR_DISABL),1 (VCORR_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   PHASE_STANDBY_MODE                       = " "0 (STANDBY_OFF),1 (WARM_STANDBY)"
    tree.end
    tree "S3_PS_PHASE_ID"
      sgroup "S3_PS_PHASE_ID (at 0x11b53)"
        set &access:&cmd_addr %l (0x801b530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PHASE_ID                                 = "
    tree.end
    tree "S3_PS_PHASE_CNT_MAX"
      sgroup "S3_PS_PHASE_CNT_MAX (at 0x11b54)"
        set &access:&cmd_addr %l (0x801b540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PHASE_CNT_MAX                            = "
    tree.end
    tree "S3_PS_PWM_CL_CTL"
      sgroup "S3_PS_PWM_CL_CTL (at 0x11b60)"
        set &access:&cmd_addr %l (0x801b600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   HCPFM_CL                                 = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   PWM_CL                                   = "
    tree.end
    tree "S3_PS_LPM_CL_CTL"
      sgroup "S3_PS_LPM_CL_CTL (at 0x11b61)"
        set &access:&cmd_addr %l (0x801b610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LPM_CL                                   = "
    tree.end
    tree "S3_PS_AUTO_CTL_1"
      sgroup "S3_PS_AUTO_CTL_1 (at 0x11b62)"
        set &access:&cmd_addr %l (0x801b620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   LPM_EXIT_CL_CNT                          = " "0 (LPM_EXIT_CL_CNT_2),1 (LPM_EXIT_CL_CNT_4),2 (LPM_EXIT_CL_CNT_6),3 (LPM_EXIT_CL_CNT_8),4 (LPM_EXIT_CL_CNT_12),5 (LPM_EXIT_CL_CNT_16),6 (LPM_EXIT_CL_CNT_24),7 (LPM_EXIT_CL_CNT_32)"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   LPM_ENTRY_DCM_CNT                        = " "0 (LPM_ENTRY_CYCLES_1),1 (LPM_ENTRY_CYCLES_5),2 (LPM_ENTRY_CYCLES_9),3 (LPM_ENTRY_CYCLES_13),4 (LPM_ENTRY_CYCLES_17),5 (LPM_ENTRY_CYCLES_21),6 (LPM_ENTRY_CYCLES_25),7 (LPM_ENTRY_CYCLES_29)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LPM_ENTRY_DCM_RST                        = " "0 (LPM_ENTRY_CYCLES_RST_IN_1),1 (LPM_ENTRY_CYCLES_RST_IN_2),2 (LPM_ENTRY_CYCLES_RST_IN_4),3 (LPM_ENTRY_CYCLES_RST_IN_8)"
    tree.end
    tree "S3_PS_LPM_ADC_VAL"
      sgroup "S3_PS_LPM_ADC_VAL (at 0x11b63)"
        set &access:&cmd_addr %l (0x801b630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LPM_ENTRY_ADC_VAL                        = "
    tree.end
    tree "S3_PS_LPM_ADC_CTL"
      sgroup "S3_PS_LPM_ADC_CTL (at 0x11b64)"
        set &access:&cmd_addr %l (0x801b640|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b640|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LPM_ENTRY_ADC_DIV                        = " "0, 1, 2, 3"
    tree.end
    tree "S3_PS_ACTIVITY_DETECT"
      sgroup "S3_PS_ACTIVITY_DETECT (at 0x11b65)"
        set &access:&cmd_addr %l (0x801b650|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b650|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ACT_LOW_TIMER                            = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ACT_HIGH_TIMER                           = " "0, 1, 2, 3"
    tree.end
    tree "S3_PS_LPM_CFG"
      sgroup "S3_PS_LPM_CFG (at 0x11b68)"
        set &access:&cmd_addr %l (0x801b680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PFM_BIAS_CFG                             = " "0 (PFM_BIAS_LO),1 (PFM_BIAS_HI)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   LEGACY                                   = " "0 (LEGACY_PFM_DISABL),1 (LEGACY_PFM_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TOFF                                     = " "0 (TOFF_1X),1 (TOFF_1P5X),2 (TOFF_2X),3 (TOFF_3X)"
    tree.end
    tree "S3_PS_FSM_MINON_CFG"
      sgroup "S3_PS_FSM_MINON_CFG (at 0x11b70)"
        set &access:&cmd_addr %l (0x801b700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CL_EXTEND_BLANK                          = " "0 (CL_EXTEND_BLANK_DISABLED),1 (CL_EXTEND_BLANK_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   N_MIN_ON_TIME                            = " "0 (NMOS_MIN_ON_TIME_10NS),1 (NMOS_MIN_ON_TIME_20NS),2 (NMOS_MIN_ON_TIME_30NS),3 (NMOS_MIN_ON_TIME_40NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   P_MIN_ON_TIME                            = " "0 (PMOS_MIN_ON_TIME_10NS),1 (PMOS_MIN_ON_TIME_20NS),2 (PMOS_MIN_ON_TIME_30NS),3 (PMOS_MIN_ON_TIME_40NS)"
    tree.end
    tree "S3_PS_ZX_CAL_CFG"
      sgroup "S3_PS_ZX_CAL_CFG (at 0x11b73)"
        set &access:&cmd_addr %l (0x801b730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_VOS_NOM                               = "
    tree.end
    tree "S3_PS_NONOVLAP_CFG"
      sgroup "S3_PS_NONOVLAP_CFG (at 0x11b74)"
        set &access:&cmd_addr %l (0x801b740|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b740|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRAN_CLAMP_EN                            = " "0 (SAMPLE_AVG_SEL),1 (SAMPLE_PEAK_SEL)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   NDRV_ON_DEL                              = " "0 (NDRV_ON_DEL_0NS),1 (NDRV_ON_DEL_0P5NS),2 (NDRV_ON_DEL_1NS),3 (NDRV_ON_DEL_2NS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PDRV_ON_DEL                              = " "0 (PDRV_ON_DEL_0NS),1 (PDRV_ON_DEL_0P5NS),2 (PDRV_ON_DEL_1NS),3 (PDRV_ON_DEL_2NS)"
    tree.end
    tree "S3_PS_ADC_FRONT_CFG"
      sgroup "S3_PS_ADC_FRONT_CFG (at 0x11b75)"
        set &access:&cmd_addr %l (0x801b750|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b750|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   REP_FILT_CFG                             = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ADC_FILT_CFG                             = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "S3_PS_P0_LUT_IN"
      sgroup "S3_PS_P0_LUT_IN (at 0x11b78)"
        set &access:&cmd_addr %l (0x801b780|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b780|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   P0_LUT_IN                                = "
    tree.end
    tree "S3_PS_MPH_STROBE"
      sgroup "S3_PS_MPH_STROBE (at 0x11b79)"
        set &access:&cmd_addr %l (0x801b790|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b790|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MPH_STROBE                               = " "0, 1"
    tree.end
    tree "S3_PS_LUT_OUT"
      sgroup "S3_PS_LUT_OUT (at 0x11b7a)"
        set &access:&cmd_addr %l (0x801b7a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b7a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   LUT_OUT                                  = "
    tree.end
    tree "S3_PS_ADC_OUT"
      sgroup "S3_PS_ADC_OUT (at 0x11b7b)"
        set &access:&cmd_addr %l (0x801b7b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b7b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   ADC_OUT                                  = "
    tree.end
    tree "S3_PS_ADC_FRC"
      sgroup "S3_PS_ADC_FRC (at 0x11b7c)"
        set &access:&cmd_addr %l (0x801b7c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b7c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_FRC_EN                               = " "0 (DAC_FRC_DISABL),1 (DAC_FRC_ENABL)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ADC_FRC_DATA                             = "
    tree.end
    tree "S3_PS_MP_CORR_DFT"
      sgroup "S3_PS_MP_CORR_DFT (at 0x11b7d)"
        set &access:&cmd_addr %l (0x801b7d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b7d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CORR_FRC                                 = " "0 (CORR_FRC_NORMAL),1 (CORR_FRC_CHECKER1),2 (CORR_FRC_CHECKER2),3 (reserved)"
    tree.end
    tree "S3_PS_DAC_DATA"
      sgroup "S3_PS_DAC_DATA (at 0x11b7e)"
        set &access:&cmd_addr %l (0x801b7e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b7e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_DATA                                 = "
    tree.end
    tree "S3_PS_DAC_FRC"
      sgroup "S3_PS_DAC_FRC (at 0x11b7f)"
        set &access:&cmd_addr %l (0x801b7f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b7f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DAC_FRC_EN                               = " "0 (ADC_FRC_DISABL),1 (ADC_FRC_ENABL)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   DAC_FRC_DATA                             = "
    tree.end
    tree "S3_PS_LUT_DAC_PT_0"
      sgroup "S3_PS_LUT_DAC_PT_0 (at 0x11b80)"
        set &access:&cmd_addr %l (0x801b800|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b800|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_PT_0                                 = "
    tree.end
    tree "S3_PS_LUT_DAC_PT_1"
      sgroup "S3_PS_LUT_DAC_PT_1 (at 0x11b81)"
        set &access:&cmd_addr %l (0x801b810|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b810|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_PT_1                                 = "
    tree.end
    tree "S3_PS_LUT_DAC_PT_2"
      sgroup "S3_PS_LUT_DAC_PT_2 (at 0x11b82)"
        set &access:&cmd_addr %l (0x801b820|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b820|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_PT_2                                 = "
    tree.end
    tree "S3_PS_LUT_DAC_PT_3"
      sgroup "S3_PS_LUT_DAC_PT_3 (at 0x11b83)"
        set &access:&cmd_addr %l (0x801b830|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b830|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   DAC_PT_3                                 = "
    tree.end
    tree "S3_PS_LUT_ADC_PT_1"
      sgroup "S3_PS_LUT_ADC_PT_1 (at 0x11b87)"
        set &access:&cmd_addr %l (0x801b870|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b870|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ADC_PT_1                                 = "
    tree.end
    tree "S3_PS_LUT_ADC_PT_2"
      sgroup "S3_PS_LUT_ADC_PT_2 (at 0x11b88)"
        set &access:&cmd_addr %l (0x801b880|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b880|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ADC_PT_2                                 = "
    tree.end
    tree "S3_PS_LUT_ADC_PT_3"
      sgroup "S3_PS_LUT_ADC_PT_3 (at 0x11b89)"
        set &access:&cmd_addr %l (0x801b890|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b890|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ADC_PT_3                                 = "
    tree.end
    tree "S3_PS_LUT_SLOPE_HI_0"
      sgroup "S3_PS_LUT_SLOPE_HI_0 (at 0x11b8c)"
        set &access:&cmd_addr %l (0x801b8c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b8c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SLOPE_HI_0                               = "
    tree.end
    tree "S3_PS_LUT_SLOPE_LO_0"
      sgroup "S3_PS_LUT_SLOPE_LO_0 (at 0x11b8d)"
        set &access:&cmd_addr %l (0x801b8d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b8d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SLOPE_LO_0                               = "
    tree.end
    tree "S3_PS_LUT_SLOPE_HI_1"
      sgroup "S3_PS_LUT_SLOPE_HI_1 (at 0x11b8e)"
        set &access:&cmd_addr %l (0x801b8e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b8e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SLOPE_HI_1                               = "
    tree.end
    tree "S3_PS_LUT_SLOPE_LO_1"
      sgroup "S3_PS_LUT_SLOPE_LO_1 (at 0x11b8f)"
        set &access:&cmd_addr %l (0x801b8f0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b8f0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SLOPE_LO_1                               = "
    tree.end
    tree "S3_PS_LUT_SLOPE_HI_2"
      sgroup "S3_PS_LUT_SLOPE_HI_2 (at 0x11b90)"
        set &access:&cmd_addr %l (0x801b900|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b900|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   SLOPE_HI_2                               = "
    tree.end
    tree "S3_PS_LUT_SLOPE_LO_2"
      sgroup "S3_PS_LUT_SLOPE_LO_2 (at 0x11b91)"
        set &access:&cmd_addr %l (0x801b910|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b910|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   SLOPE_LO_2                               = "
    tree.end
    tree "S3_PS_MPHASE_PI_CFG1"
      sgroup "S3_PS_MPHASE_PI_CFG1 (at 0x11b96)"
        set &access:&cmd_addr %l (0x801b960|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b960|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   A_COEFFICIENT                            = "
    tree.end
    tree "S3_PS_MPHASE_PI_CFG4"
      sgroup "S3_PS_MPHASE_PI_CFG4 (at 0x11b97)"
        set &access:&cmd_addr %l (0x801b970|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b970|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   B_COEFFICIENT                            = "
    tree.end
    tree "S3_PS_MPHASE_PHASE_CNT"
      sgroup "S3_PS_MPHASE_PHASE_CNT (at 0x11b98)"
        set &access:&cmd_addr %l (0x801b980|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1b980|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PHASE_CNT_FILT                           = " "0, 1, 2, 3"
    tree.end
    tree "S3_PS_EN_OPTIONS_DFT_1"
      sgroup "S3_PS_EN_OPTIONS_DFT_1 (at 0x11ba8)"
        set &access:&cmd_addr %l (0x801ba80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ba80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   ADAPT_ZX_TEST_EN                         = " "0 (ADAPT_ZX_TEST_DISABL),1 (ADAPT_ZX_TEST_FORCE_CLK),2 (ADAPT_ZX_TEST_FORCE_CLK_MASK_LO),3 (ADAPT_ZX_TEST_FORCE_CLK_MASK_HI)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   ADAPT_ZX_EN                              = " "0 (ADAPT_ZX_DISABL),1 (ADAPT_ZX_ENABL)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   FOLDBACK_FRC                             = " "0 (FORCE_FOLDBACK_DISABL),1 (FORCE_FOLDBACK_ENABL)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   CL_CFG                                   = " "0 (CL_COMP_DISABL),1 (CL_COMP_ENABL),2 (CL_COMP_ENABL_FRC_LO),3 (CL_COMP_ENABL_FRC_HI)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CFG                                   = " "0 (ZX_COMP_ENABL_ONLY_FOR_PWM_LPM_BURSTS_WARMUP),1 (ZX_COMP_ENABL),2 (ZX_COMP_ENABL_FRC_LO),3 (ZX_COMP_ENABL_FRC_HI)"
    tree.end
    tree "S3_PS_EN_OPTIONS_DFT_2"
      sgroup "S3_PS_EN_OPTIONS_DFT_2 (at 0x11ba9)"
        set &access:&cmd_addr %l (0x801ba90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1ba90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PFM_ENTRY_ADC_EN                         = " "0 (PFM_ENTRY_ADC_DISABL),1 (PFM_ENTRY_ADC_ENABL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   PFM_ENTRY_DCM_EN                         = " "0 (PFM_ENTRY_DCM_DISABL),1 (PFM_ENTRY_DCM_ENABL)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   PFM_EXIT_CL_EN                           = " "0 (PFM_EXIT_CL_DISABL),1 (PFM_EXIT_CL_ENABL)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   ADC_DACTOP_ISRC_CFG                      = " "0 (DACTOP_ISRC_DISABL),1 (DACTOP_ISRC_ENABL)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   ADC_DACMID_BUF_TRI                       = " "0 (DACMID_BUF_NORM),1 (DACMID_BUF_TRI)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ADC_SAMPLE_BUF_TRI                       = " "0 (SAMPLE_BUF_NORM),1 (SAMPLE_BUF_TRI)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ADC_DAC2COMP_SW_EN                       = " "0 (DAC2COMP_SW_OPEN),1 (DAC2COMP_SW_NORM)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FULL_FET_SEL                             = " "0, 1"
    tree.end
    tree "S3_PS_ZX_ADAPT_CTL"
      sgroup "S3_PS_ZX_ADAPT_CTL (at 0x11baa)"
        set &access:&cmd_addr %l (0x801baa0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1baa0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   ZX_SAMPLE_CTL                            = " "0 (ZX_SAMPLE_DELAY_TIME_UNIT_ILLEGAL),1 (ZX_SAMPLE_DELAY_TIME_UNIT_10NS),2 (ZX_SAMPLE_DELAY_TIME_UNIT_20NS),3 (ZX_SAMPLE_DELAY_TIME_UNIT_30NS)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ZX_UP_CYCLES                             = " "0 (ZX_UP_CYCLES_4),1 (ZX_UP_CYCLES_12),2 (ZX_UP_CYCLES_20),3 (ZX_UP_CYCLES_28)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_DOWN_CYCLES                           = " "0 (ZX_DOWN_CYCLES_4),1 (ZX_DOWN_CYCLES_12),2 (ZX_DOWN_CYCLES_20),3 (ZX_DOWN_CYCLES_28)"
    tree.end
    tree "S3_PS_ZX_ADAPT_VAL"
      sgroup "S3_PS_ZX_ADAPT_VAL (at 0x11bab)"
        set &access:&cmd_addr %l (0x801bab0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bab0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_ADAPT_VAL                             = "
    tree.end
    tree "S3_PS_ADC_CLK_CTL"
      sgroup "S3_PS_ADC_CLK_CTL (at 0x11bac)"
        set &access:&cmd_addr %l (0x801bac0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bac0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_CLK_SEL                              = " "0 (ADC_SEL_19P2),1 (ADC_SEL_38P4)"
    tree.end
    tree "S3_PS_ATEST12"
      sgroup "S3_PS_ATEST12 (at 0x11bb0)"
        set &access:&cmd_addr %l (0x801bb00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bb00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ATEST2                                   = " "0 (ATEST2_NORMAL_OP),1 (ATEST2_ADC_DACTOP),2 (ATEST2_NOT_USED),3 (ATEST2_NOT_USED2)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST1                                   = " "0 (ATEST1_NORMAL_OP),1 (ATEST1_ADC_DACOUT),2 (ATEST1_NOT_USED),3 (ATEST1_NOT_USED2)"
    tree.end
    tree "S3_PS_ATEST34"
      sgroup "S3_PS_ATEST34 (at 0x11bb1)"
        set &access:&cmd_addr %l (0x801bb10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bb10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   ATEST4                                   = " "0 (ATEST4_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST4_PGND),2 (ATEST4_VDDIN),3 (ATEST4_NOT_USED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ATEST3                                   = " "0 (ATEST3_NOT_CONNECTED_FOR_NORMAL_OP),1 (ATEST3_VSW),2 (ATEST3_ADC_COMP_PLUS),3 (ATEST3_NOT_USED_2)"
    tree.end
    tree "S3_PS_DTEST12"
      sgroup "S3_PS_DTEST12 (at 0x11bb2)"
        set &access:&cmd_addr %l (0x801bb20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bb20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   DTEST2                                   = " "0 (DTEST2_UNCONNECTED),1 (DTEST2_DTEST_ADC_2),2 (DTEST2_ZX_COMP_OUTPUT),3 (DTEST2_CLK_19P2_DTEST),4 (DTEST2_MP_ACTIVE_PHASE_CNT_OUT_1),5 (DTEST2_MP_NPM_REQ_TO_CTRL),6 (DTEST2_ADC_DATA_VALID),7 (DTEST2_LUT_DATA_STREAM)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST1                                   = " "0 (DTEST1_UNCONNECTED),1 (DTEST1_DTEST_ADC_1),2 (DTEST1_CL_COMP_OUTPUT),3 (DTEST1_PFM_ENTRY_TRIG_TO_CTRL),4 (DTEST1_MP_ACTIVE_PHASE_CNT_OUT_0),5 (DTEST1_LUT_DATA_VALID),6 (DTEST1_ADC_DATA_STREAM),7 (DTEST1_ACTIVITY_FLAG)"
    tree.end
    tree "S3_PS_DTEST43"
      sgroup "S3_PS_DTEST43 (at 0x11bb3)"
        set &access:&cmd_addr %l (0x801bb30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bb30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   DTEST4                                   = " "0 (DTEST4_UNCONNECTED),1 (DTEST4_ADC_DTEST_SELECT_0),2 (DTEST4_ADC_DTEST_SELECT_1),3 (DTEST4_ADC_DTEST_SELECT_2),4 (DTEST4_MP_ACTIVE_PHASE_CNT_OUT_3),5 (DTEST4_FRONT_BUF_DFT),6 (DTEST4_DAC_DATA_STREAM),7 (DTEST4_REC_AVERAGE_STREAM)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST3                                   = " "0 (DTEST3_UNCONNECTED),1 (DTEST3_DTEST_ADC_3),2 (DTEST3_DTEST_ADC_4),3 (DTEST3_PFM_EXIT_TRIG_FROM_CTRL),4 (DTEST3_MP_ACTIVE_PHASE_CNT_OUT_2),5 (DTEST3_DAC_DATA_VALID),6 (DTEST3_PHASE_ERR_STREAM),7 (DTEST3_DACMID_BUF_DFT)"
    tree.end
    tree "S3_PS_GANG_CTL1"
      sgroup "S3_PS_GANG_CTL1 (at 0x11bc0)"
        set &access:&cmd_addr %l (0x801bc00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bc00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   GANG_LEADER_PID                          = "
    tree.end
    tree "S3_PS_GANG_CTL2"
      sgroup "S3_PS_GANG_CTL2 (at 0x11bc1)"
        set &access:&cmd_addr %l (0x801bc10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bc10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GANG_EN                                  = " "0 (GANG_EN_FALSE),1 (GANG_EN_TRUE)"
    tree.end
    tree "S3_PS_SEC_ACCESS"
      sgroup "S3_PS_SEC_ACCESS (at 0x11bd0)"
        set &access:&cmd_addr %l (0x801bd00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bd00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "S3_PS_PERPH_RESET_CTL2"
      sgroup "S3_PS_PERPH_RESET_CTL2 (at 0x11bd9)"
        set &access:&cmd_addr %l (0x801bd90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bd90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "S3_PS_PERPH_RESET_CTL3"
      sgroup "S3_PS_PERPH_RESET_CTL3 (at 0x11bda)"
        set &access:&cmd_addr %l (0x801bda0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bda0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "S3_PS_PERPH_RESET_CTL4"
      sgroup "S3_PS_PERPH_RESET_CTL4 (at 0x11bdb)"
        set &access:&cmd_addr %l (0x801bdb0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bdb0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "S3_PS_CAL_REQUEST"
      sgroup "S3_PS_CAL_REQUEST (at 0x11be2)"
        set &access:&cmd_addr %l (0x801be20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CAL_REQUEST                              = " "0 (CAL_REQUEST_FALSE),1 (CAL_REQUEST_TRUE)"
    tree.end
    tree "S3_PS_MAN_CAL_VAL"
      sgroup "S3_PS_MAN_CAL_VAL (at 0x11be5)"
        set &access:&cmd_addr %l (0x801be50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MAN_CAL_VAL                              = "
    tree.end
    tree "S3_PS_REPLICA_CFG"
      sgroup "S3_PS_REPLICA_CFG (at 0x11be6)"
        set &access:&cmd_addr %l (0x801be60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_REP_SEL                              = " "0 (ADC_REP_SEL_DISABL),1 (ADC_REP_SEL_ENABL)"
    tree.end
    tree "S3_PS_CAL_CTL_1"
      sgroup "S3_PS_CAL_CTL_1 (at 0x11be7)"
        set &access:&cmd_addr %l (0x801be70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   DACMID_BUF_CAL_EN                        = " "0 (DACMID_BUF_CAL_CENTER_CODE),1 (DACMID_BUF_CAL_MISSON_CONFIG_MANCAL),2 (DACMID_BUF_CAL_CAL_CONFIG_MANCAL),3 (DACMID_BUF_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   FRONT_BUF_CAL_EN                         = " "0 (FRONT_BUF_CAL_CENTER_CODE),1 (FRONT_BUF_CAL_MISSON_CONFIG_MANCAL),2 (FRONT_BUF_CAL_CAL_CONFIG_MANCAL),3 (FRONT_BUF_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   ZX_CAL_EN                                = " "0 (ZX_CAL_USE_ZX_TRIM),1 (ZX_CAL_USE_ZX_TRIM_2),2 (ZX_CAL_MANUALCAL_USE_ZX_TRIM),3 (ZX_CAL_AUTOCAL_ENABL)"
    tree.end
    tree "S3_PS_CAL_CTL_2"
      sgroup "S3_PS_CAL_CTL_2 (at 0x11be8)"
        set &access:&cmd_addr %l (0x801be80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1be80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ADC_REP_CAL_EN                           = " "0 (ADC_REP_CAL_MISSON_MODE),1 (ADC_REP_CAL_AUTOCAL_ENABL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CL_REP_CAL_EN                            = " "0 (CL_REP_CAL_MISSON_MODE),1 (CL_REP_CAL_AUTOCAL_ENABL)"
    tree.end
    tree "S3_PS_REPLICA_CAL_VAL"
      sgroup "S3_PS_REPLICA_CAL_VAL (at 0x11bea)"
        set &access:&cmd_addr %l (0x801bea0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bea0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   REPLICA_CAL_VAL                          = "
    tree.end
    tree "S3_PS_DACMID_BUF_CAL_VAL"
      sgroup "S3_PS_DACMID_BUF_CAL_VAL (at 0x11bec)"
        set &access:&cmd_addr %l (0x801bec0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bec0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   DACMID_BUF_CAL_VAL                       = "
    tree.end
    tree "S3_PS_FRONT_BUF_CAL_VAL"
      sgroup "S3_PS_FRONT_BUF_CAL_VAL (at 0x11bed)"
        set &access:&cmd_addr %l (0x801bed0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bed0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   FRONT_BUF_CAL_VAL                        = "
    tree.end
    tree "S3_PS_CL_CAL_VAL"
      sgroup "S3_PS_CL_CAL_VAL (at 0x11bee)"
        set &access:&cmd_addr %l (0x801bee0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bee0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CL_CAL_VAL                               = "
    tree.end
    tree "S3_PS_ZX_CAL_VAL"
      sgroup "S3_PS_ZX_CAL_VAL (at 0x11bef)"
        set &access:&cmd_addr %l (0x801bef0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bef0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_CAL_VAL                               = "
    tree.end
    tree "S3_PS_TRIM_NUM"
      sgroup "S3_PS_TRIM_NUM (at 0x11bf0)"
        set &access:&cmd_addr %l (0x801bf00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bf00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "S3_PS_ZX_TRIM"
      sgroup "S3_PS_ZX_TRIM (at 0x11bf1)"
        set &access:&cmd_addr %l (0x801bf10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bf10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   ZX_TRIM                                  = "
    tree.end
    tree "S3_PS_CL_TRIM"
      sgroup "S3_PS_CL_TRIM (at 0x11bf2)"
        set &access:&cmd_addr %l (0x801bf20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bf20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CL_TRIM                                  = "
    tree.end
    tree "S3_PS_REPLICA_TRIM"
      sgroup "S3_PS_REPLICA_TRIM (at 0x11bf3)"
        set &access:&cmd_addr %l (0x801bf30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x1bf30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   REPLICA_TRIM                             = "
    tree.end
  tree.end
tree.end
tree "SMBCHG_BAT_IF"
  tree "SMBCHG_BAT_IF"
    tree "SMBCHG_BAT_IF_PERPH_TYPE"
      sgroup "SMBCHG_BAT_IF_PERPH_TYPE (at 0x1204)"
        set &access:&cmd_addr %l (0x8012040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBCHG_BAT_IF_PERPH_SUBTYPE"
      sgroup "SMBCHG_BAT_IF_PERPH_SUBTYPE (at 0x1205)"
        set &access:&cmd_addr %l (0x8012050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBCHG_BAT_IF_BAT_PRES_STATUS"
      sgroup "SMBCHG_BAT_IF_BAT_PRES_STATUS (at 0x1208)"
        set &access:&cmd_addr %l (0x8012080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_PRES                                 = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_RT_STS"
      sgroup "SMBCHG_BAT_IF_INT_RT_STS (at 0x1210)"
        set &access:&cmd_addr %l (0x8012100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_RT_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_RT_STS                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_RT_STS                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_RT_STS                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_RT_STS                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_RT_STS                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_RT_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_RT_STS                  = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_SET_TYPE"
      sgroup "SMBCHG_BAT_IF_INT_SET_TYPE (at 0x1211)"
        set &access:&cmd_addr %l (0x8012110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_TYPE                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_TYPE                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_TYPE                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_TYPE                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_TYPE                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_TYPE                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_TYPE                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_TYPE                    = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_POLARITY_HIGH"
      sgroup "SMBCHG_BAT_IF_INT_POLARITY_HIGH (at 0x1212)"
        set &access:&cmd_addr %l (0x8012120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_HIGH                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_HIGH                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_HIGH                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_HIGH                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_HIGH                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_HIGH                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_HIGH                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_HIGH                    = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_POLARITY_LOW"
      sgroup "SMBCHG_BAT_IF_INT_POLARITY_LOW (at 0x1213)"
        set &access:&cmd_addr %l (0x8012130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_LOW                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_LOW                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_LOW                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_LOW                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_LOW                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_LOW                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_LOW                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_LOW                     = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_LATCHED_CLR"
      sgroup "SMBCHG_BAT_IF_INT_LATCHED_CLR (at 0x1214)"
        set &access:&cmd_addr %l (0x8012140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_LATCHED_CLR             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_LATCHED_CLR                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_LATCHED_CLR                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_LATCHED_CLR            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_LATCHED_CLR            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_LATCHED_CLR             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_LATCHED_CLR             = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_EN_SET"
      sgroup "SMBCHG_BAT_IF_INT_EN_SET (at 0x1215)"
        set &access:&cmd_addr %l (0x8012150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_EN_SET                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_EN_SET                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_EN_SET                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_EN_SET                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_EN_SET                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_EN_SET                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_EN_SET                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_EN_SET                  = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_EN_CLR"
      sgroup "SMBCHG_BAT_IF_INT_EN_CLR (at 0x1216)"
        set &access:&cmd_addr %l (0x8012160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_EN_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_EN_CLR                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_EN_CLR                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_EN_CLR                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_EN_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_EN_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_EN_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_EN_CLR                  = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_LATCHED_STS"
      sgroup "SMBCHG_BAT_IF_INT_LATCHED_STS (at 0x1218)"
        set &access:&cmd_addr %l (0x8012180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_LATCHED_STS             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_LATCHED_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_LATCHED_STS                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_LATCHED_STS                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_LATCHED_STS            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_LATCHED_STS            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_LATCHED_STS             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_LATCHED_STS             = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_PENDING_STS"
      sgroup "SMBCHG_BAT_IF_INT_PENDING_STS (at 0x1219)"
        set &access:&cmd_addr %l (0x8012190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_PENDING_STS             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_PENDING_STS                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_PENDING_STS                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_PENDING_STS                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_PENDING_STS            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_PENDING_STS            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_PENDNG_STS              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_PENDING_STS             = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_MID_SEL"
      sgroup "SMBCHG_BAT_IF_INT_MID_SEL (at 0x121a)"
        set &access:&cmd_addr %l (0x80121a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x121a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_BAT_IF_INT_PRIORITY"
      sgroup "SMBCHG_BAT_IF_INT_PRIORITY (at 0x121b)"
        set &access:&cmd_addr %l (0x80121b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x121b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_SHIP_MODE"
      sgroup "SMBCHG_BAT_IF_SHIP_MODE (at 0x1240)"
        set &access:&cmd_addr %l (0x8012400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SHIP_MODE_ENB                            = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_CLR_DEAD_BAT_TIMER"
      sgroup "SMBCHG_BAT_IF_CLR_DEAD_BAT_TIMER (at 0x1241)"
        set &access:&cmd_addr %l (0x8012410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CLR_DEAD_BAT_TIMER                       = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_CMD_CHG"
      sgroup "SMBCHG_BAT_IF_CMD_CHG (at 0x1242)"
        set &access:&cmd_addr %l (0x8012420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   WIRELESS_CHG_DIS                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   THERM_NTC_I_OVERRIDE                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   STAT_OUTPUT                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FC_COM                                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_BAT_CHG                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   OTG_EN                                   = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_SEC_ACCESS"
      sgroup "SMBCHG_BAT_IF_SEC_ACCESS (at 0x12d0)"
        set &access:&cmd_addr %l (0x8012d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBCHG_BAT_IF_PERPH_RESET_CTL2"
      sgroup "SMBCHG_BAT_IF_PERPH_RESET_CTL2 (at 0x12d9)"
        set &access:&cmd_addr %l (0x8012d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_PERPH_RESET_CTL3"
      sgroup "SMBCHG_BAT_IF_PERPH_RESET_CTL3 (at 0x12da)"
        set &access:&cmd_addr %l (0x8012da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_PERPH_RESET_CTL4"
      sgroup "SMBCHG_BAT_IF_PERPH_RESET_CTL4 (at 0x12db)"
        set &access:&cmd_addr %l (0x8012db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_SPARE"
      sgroup "SMBCHG_BAT_IF_SPARE (at 0x12df)"
        set &access:&cmd_addr %l (0x8012df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBCHG_BAT_IF_INT_TEST1"
      sgroup "SMBCHG_BAT_IF_INT_TEST1 (at 0x12e0)"
        set &access:&cmd_addr %l (0x8012e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_INT_TEST_VAL"
      sgroup "SMBCHG_BAT_IF_INT_TEST_VAL (at 0x12e1)"
        set &access:&cmd_addr %l (0x8012e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TERM_MISSING_INT_VAL                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_MISSING_INT_VAL                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LOW_INT_VAL                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_INT_VAL                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   COLD_BAT_SOFT_LIM_INT_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_BAT_HARD_LIM_INT_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_BAT_SOFT_LIM_INT_VAL                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HOT_BAT_HARD_LIM_INT_VAL                 = " "0, 1"
    tree.end
    tree "SMBCHG_BAT_IF_TRIM_NUM"
      sgroup "SMBCHG_BAT_IF_TRIM_NUM (at 0x12f0)"
        set &access:&cmd_addr %l (0x8012f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "SMBCHG_BAT_IF_VBL_CFG"
      sgroup "SMBCHG_BAT_IF_VBL_CFG (at 0x12f1)"
        set &access:&cmd_addr %l (0x8012f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LOW_BAT_THRESHOLD                        = "
    tree.end
    tree "SMBCHG_BAT_IF_VBL_SEL_CFG"
      sgroup "SMBCHG_BAT_IF_VBL_SEL_CFG (at 0x12f2)"
        set &access:&cmd_addr %l (0x8012f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VBAT_LOW_STATE                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VBAT_LOW_SRC                             = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_BAT_IF_BM_CFG"
      sgroup "SMBCHG_BAT_IF_BM_CFG (at 0x12f3)"
        set &access:&cmd_addr %l (0x8012f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   BMD_RMV_CFG                              = " "0 (BMD_RMV_80US),1 (BMD_RMV_160US),2 (BMD_RMV_320US),3 (BMD_RMV_640US)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_FET_CFG                              = " "0 (BATT_FET_NORMAL),1 (BATT_FET_OVERRIDE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_MISSING_INPUT_PLUGIN                 = " "0 (BMA_PLUG_IN_DIS),1 (BMA_PLUG_IN_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   BAT_MISSING_2S6_POLLER                   = " "0 (BMA_POLLER_DIS),1 (BMA_POLLER_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   BAT_MISSING_ALGORITHM                    = " "0 (BMA_DIS),1 (BMA_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BAT_MISSING_PIN_SRC                      = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_BAT_IF_CFG_SYSMIN"
      sgroup "SMBCHG_BAT_IF_CFG_SYSMIN (at 0x12f4)"
        set &access:&cmd_addr %l (0x8012f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_SYSMIN                               = " "0 (SYSMIN_3P15),1 (SYSMIN_3P45),2 (SYSMIN_3P6),3 (SYSMIN_3P60)"
    tree.end
    tree "SMBCHG_BAT_IF_CFG_SYSTH"
      sgroup "SMBCHG_BAT_IF_CFG_SYSTH (at 0x12f5)"
        set &access:&cmd_addr %l (0x8012f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CFG_EN_100M                              = " "0 (VSYS_VBATT_TRACK_200MV),1 (VSYS_VBATT_TRACK_100MV)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CFG_SYSTH                                = " "0 (VSYS_VBATT),1 (VSYS_FLT)"
    tree.end
    tree "SMBCHG_BAT_IF_SS_CFG"
      sgroup "SMBCHG_BAT_IF_SS_CFG (at 0x12f6)"
        set &access:&cmd_addr %l (0x8012f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CFG_NO_SS                                = " "0 (SS_EN),1 (SS_DIS)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_SS_SEL                               = " "0 (SS_SEL_0),1 (SS_SEL_DIV2),2 (SS_SEL_DIV4),3 (SS_SEL_DIV8)"
    tree.end
    tree "SMBCHG_BAT_IF_TRIM7"
      sgroup "SMBCHG_BAT_IF_TRIM7 (at 0x12f7)"
        set &access:&cmd_addr %l (0x8012f70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   TR_STDBYOSC_TEMP_TRIM                    = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CFG_TLLS                                 = " "0 (CFG_TLLS_10),1 (CFG_TLLS_5)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CFG_CLK2MHZ                              = " "0 (CLK_3MHZ_SEL),1 (CLK_2MHZ_SEL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CFG_EN_FREQFOLD                          = " "0 (FREQ_FOLDBACK_DIS),1 (FREQ_FOLDBACK_EN)"
    tree.end
    tree "SMBCHG_BAT_IF_CFG_BB_CLMP_SEL"
      sgroup "SMBCHG_BAT_IF_CFG_BB_CLMP_SEL (at 0x12f8)"
        set &access:&cmd_addr %l (0x8012f80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x2--0x7 1 "  [ 7: 2]   TR_STDBYOSC_MAIN_TRIM                    = "
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_BB_CLMP_SEL                          = " "0 (CFG_BB_CLMP_2P0),1 (CFG_BB_CLMP_2P2),2 (CFG_BB_CLMP_2P4),3 (reserved)"
    tree.end
    tree "SMBCHG_BAT_IF_TRIM9"
      sgroup "SMBCHG_BAT_IF_TRIM9 (at 0x12f9)"
        set &access:&cmd_addr %l (0x8012f90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12f90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CFG_EN_OS_ZD                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CFG_ENB_SC                               = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CFG_HI_BW                                = "
    tree.end
    tree "SMBCHG_BAT_IF_ISENSE_CFG1"
      sgroup "SMBCHG_BAT_IF_ISENSE_CFG1 (at 0x12fa)"
        set &access:&cmd_addr %l (0x8012fa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12fa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   ISENSE_DCHG_G                            = "
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ISENSE_DCHG_TEMP                         = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "SMBCHG_BAT_IF_ISENSE_CFG2"
      sgroup "SMBCHG_BAT_IF_ISENSE_CFG2 (at 0x12fb)"
        set &access:&cmd_addr %l (0x8012fb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12fb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   ISENSE_CHG_G                             = "
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ISENSE_CHG_TEMP                          = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "SMBCHG_BAT_IF_ZIN_ICL_PT"
      sgroup "SMBCHG_BAT_IF_ZIN_ICL_PT (at 0x12fc)"
        set &access:&cmd_addr %l (0x8012fc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12fc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   ZIN_ICL_PT                               = "
    tree.end
    tree "SMBCHG_BAT_IF_ZIN_ICL_LV"
      sgroup "SMBCHG_BAT_IF_ZIN_ICL_LV (at 0x12fd)"
        set &access:&cmd_addr %l (0x8012fd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12fd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   ZIN_ICL_LV                               = "
    tree.end
    tree "SMBCHG_BAT_IF_ZIN_ICL_HV"
      sgroup "SMBCHG_BAT_IF_ZIN_ICL_HV (at 0x12fe)"
        set &access:&cmd_addr %l (0x8012fe0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12fe0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   ZIN_ICL_HV                               = "
    tree.end
    tree "SMBCHG_BAT_IF_WI_PWR_TMR"
      sgroup "SMBCHG_BAT_IF_WI_PWR_TMR (at 0x12ff)"
        set &access:&cmd_addr %l (0x8012ff0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x12ff0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   DIV2_DG_SEL                              = " "0 (DIV2_DG_0US),1 (DIV2_DG_150US),2 (DIV2_DG_250US),3 (DIV2_DG_500US)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   WIPWR_IRQ_TMR                            = " "0 (WIPWR_IRQ_TMR_1P3S),1 (WIPWR_IRQ_TMR_1P95S),2 (WIPWR_IRQ_TMR_2P6S),3 (WIPWR_IRQ_TMR_3P25S),4 (WIPWR_IRQ_TMR_3P9S),5 (WIPWR_IRQ_TMR_4P55S),6 (WIPWR_IRQ_TMR_5P2S),7 (WIPWR_IRQ_TMR_5P85S)"
    tree.end
  tree.end
tree.end
tree "SMBCHG_CHGR"
  tree "SMBCHG_CHGR"
    tree "SMBCHG_CHGR_PERPH_TYPE"
      sgroup "SMBCHG_CHGR_PERPH_TYPE (at 0x1004)"
        set &access:&cmd_addr %l (0x8010040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBCHG_CHGR_PERPH_SUBTYPE"
      sgroup "SMBCHG_CHGR_PERPH_SUBTYPE (at 0x1005)"
        set &access:&cmd_addr %l (0x8010050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBCHG_CHGR_CHG_OPTION"
      sgroup "SMBCHG_CHGR_CHG_OPTION (at 0x1008)"
        set &access:&cmd_addr %l (0x8010080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   PIN                                      = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_VBAT_STATUS"
      sgroup "SMBCHG_CHGR_VBAT_STATUS (at 0x100b)"
        set &access:&cmd_addr %l (0x80100b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x100b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ABOVE_VBAT_WEAK                          = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_FV_STS"
      sgroup "SMBCHG_CHGR_FV_STS (at 0x100c)"
        set &access:&cmd_addr %l (0x80100c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x100c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AICL_STS                                 = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   FV_STS                                   = "
    tree.end
    tree "SMBCHG_CHGR_ICHG_STS"
      sgroup "SMBCHG_CHGR_ICHG_STS (at 0x100d)"
        set &access:&cmd_addr %l (0x80100d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x100d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x7 "  [ 7: 5]   PCC_STS                                  = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   FCC_STS                                  = "
    tree.end
    tree "SMBCHG_CHGR_CHGR_STS"
      sgroup "SMBCHG_CHGR_CHGR_STS (at 0x100e)"
        set &access:&cmd_addr %l (0x80100e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x100e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_I_STS                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AUTO_FV_COMP_STS                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DONE_STS                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BATV_LT_2V                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HOLD_OFF_STS                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   CHARGING_STS                             = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHG_EN                                   = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_RT_STS"
      sgroup "SMBCHG_CHGR_INT_RT_STS (at 0x1010)"
        set &access:&cmd_addr %l (0x8010100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_RT_STS                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_RT_STS           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_RT_STS            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_RT_STS          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_RT_STS             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_RT_STS                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_RT_STS                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_RT_STS                        = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_SET_TYPE"
      sgroup "SMBCHG_CHGR_INT_SET_TYPE (at 0x1011)"
        set &access:&cmd_addr %l (0x8010110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_TYPE                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_TYPE             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_TYPE              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_TYPE            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_TYPE               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_TYPE                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_TYPE                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_TYPE                          = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_POLARITY_HIGH"
      sgroup "SMBCHG_CHGR_INT_POLARITY_HIGH (at 0x1012)"
        set &access:&cmd_addr %l (0x8010120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_HIGH                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_HIGH             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_HIGH              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_HIGH            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_HIGH               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_HIGH                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_HIGH                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_HIGH                          = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_POLARITY_LOW"
      sgroup "SMBCHG_CHGR_INT_POLARITY_LOW (at 0x1013)"
        set &access:&cmd_addr %l (0x8010130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_LOW                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_LOW              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_LOW               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_LOW             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_LOW                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_LOW                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_LOW                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_LOW                           = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_LATCHED_CLR"
      sgroup "SMBCHG_CHGR_INT_LATCHED_CLR (at 0x1014)"
        set &access:&cmd_addr %l (0x8010140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_LATCHED_CLR      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_LATCHED_CLR       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_LATCHED_CLR     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_LATCHED_CLR        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_LATCHED_CLR                   = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_EN_SET"
      sgroup "SMBCHG_CHGR_INT_EN_SET (at 0x1015)"
        set &access:&cmd_addr %l (0x8010150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_EN_SET                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_EN_SET           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_EN_SET            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_EN_SET          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_EN_SET             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_EN_SET                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_EN_SET                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_EN_SET                        = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_EN_CLR"
      sgroup "SMBCHG_CHGR_INT_EN_CLR (at 0x1016)"
        set &access:&cmd_addr %l (0x8010160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_EN_CLR                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_EN_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_EN_CLR            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_EN_CLR          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_EN_CLR             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_EN_CLR                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_EN_CLR                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_EN_CLR                        = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_LATCHED_STS"
      sgroup "SMBCHG_CHGR_INT_LATCHED_STS (at 0x1018)"
        set &access:&cmd_addr %l (0x8010180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_LATCHED_STS              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_LATCHED_STS      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_LATCHED_STS       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_LATCHED_STS     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_LATCHED_STS        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_LATCHED_STS              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_LATCHED_STS                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_LATCHED_STS                   = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_PENDING_STS"
      sgroup "SMBCHG_CHGR_INT_PENDING_STS (at 0x1019)"
        set &access:&cmd_addr %l (0x8010190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_PENDING_STS              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_PENDING_STS      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_PENDING_STS       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_PENDING_STS     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_PENDING_STS        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_PENDING_STS              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_PENDING_STS                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_PENDING_STS                   = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_MID_SEL"
      sgroup "SMBCHG_CHGR_INT_MID_SEL (at 0x101a)"
        set &access:&cmd_addr %l (0x80101a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x101a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_CHGR_INT_PRIORITY"
      sgroup "SMBCHG_CHGR_INT_PRIORITY (at 0x101b)"
        set &access:&cmd_addr %l (0x80101b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x101b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_SEC_ACCESS"
      sgroup "SMBCHG_CHGR_SEC_ACCESS (at 0x10d0)"
        set &access:&cmd_addr %l (0x8010d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBCHG_CHGR_PERPH_RESET_CTL2"
      sgroup "SMBCHG_CHGR_PERPH_RESET_CTL2 (at 0x10d9)"
        set &access:&cmd_addr %l (0x8010d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_PERPH_RESET_CTL3"
      sgroup "SMBCHG_CHGR_PERPH_RESET_CTL3 (at 0x10da)"
        set &access:&cmd_addr %l (0x8010da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_PERPH_RESET_CTL4"
      sgroup "SMBCHG_CHGR_PERPH_RESET_CTL4 (at 0x10db)"
        set &access:&cmd_addr %l (0x8010db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_SPARE"
      sgroup "SMBCHG_CHGR_SPARE (at 0x10df)"
        set &access:&cmd_addr %l (0x8010df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBCHG_CHGR_INT_TEST1"
      sgroup "SMBCHG_CHGR_INT_TEST1 (at 0x10e0)"
        set &access:&cmd_addr %l (0x8010e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_INT_TEST_VAL"
      sgroup "SMBCHG_CHGR_INT_TEST_VAL (at 0x10e1)"
        set &access:&cmd_addr %l (0x8010e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   BAT_TCC_REACHED_INT_VAL                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   BAT_TAPER_MODE_CHARGING_INT_VAL          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_LT_RECHG_THRESHOLD_INT_VAL           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_FT_P2F_CHG_THRESHOLD_INT_VAL         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHGR_COMPLETE_CHG_SFT_INT_VAL            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CHGR_PRECHG_SFT_INT_VAL                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CHGR_INHIBIT_INT_VAL                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHGR_ERROR_INT_VAL                       = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_TEST_MODE1"
      sgroup "SMBCHG_CHGR_TEST_MODE1 (at 0x10e2)"
        set &access:&cmd_addr %l (0x8010e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TM_CHG_7_0                               = "
    tree.end
    tree "SMBCHG_CHGR_TEST_MODE2"
      sgroup "SMBCHG_CHGR_TEST_MODE2 (at 0x10e3)"
        set &access:&cmd_addr %l (0x8010e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TM_CHG_12_8                              = "
    tree.end
    tree "SMBCHG_CHGR_TEST_MODE3"
      sgroup "SMBCHG_CHGR_TEST_MODE3 (at 0x10e4)"
        set &access:&cmd_addr %l (0x8010e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x4 "  [ 4: 2]   ATEST_SEL                                = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TM_TLOOP                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TM_NGATE                                 = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_TEST_MODE4"
      sgroup "SMBCHG_CHGR_TEST_MODE4 (at 0x10e5)"
        set &access:&cmd_addr %l (0x8010e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEST_START_COPY                          = " "0, 1"
    tree.end
    tree "SMBCHG_CHGR_TEST_15_8"
      sgroup "SMBCHG_CHGR_TEST_15_8 (at 0x10e6)"
        set &access:&cmd_addr %l (0x8010e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_15_8                                = "
    tree.end
    tree "SMBCHG_CHGR_TEST_7_0"
      sgroup "SMBCHG_CHGR_TEST_7_0 (at 0x10e7)"
        set &access:&cmd_addr %l (0x8010e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_7_0                                 = "
    tree.end
    tree "SMBCHG_CHGR_TRIM_NUM"
      sgroup "SMBCHG_CHGR_TRIM_NUM (at 0x10f0)"
        set &access:&cmd_addr %l (0x8010f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "SMBCHG_CHGR_PCC_CFG"
      sgroup "SMBCHG_CHGR_PCC_CFG (at 0x10f1)"
        set &access:&cmd_addr %l (0x8010f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   PCC                                      = " "0 (PCC_100MA),1 (PCC_150MA),2 (PCC_200MA),3 (PCC_250MA),4 (PCC_550MA),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "SMBCHG_CHGR_FCC_CFG"
      sgroup "SMBCHG_CHGR_FCC_CFG (at 0x10f2)"
        set &access:&cmd_addr %l (0x8010f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   FCC                                      = "
    tree.end
    tree "SMBCHG_CHGR_FCC_CMP_CFG"
      sgroup "SMBCHG_CHGR_FCC_CMP_CFG (at 0x10f3)"
        set &access:&cmd_addr %l (0x8010f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   FCC_COMP                                 = " "0 (FCC_COMP_250MA),1 (FCC_COMP_700MA),2 (FCC_COMP_900MA),3 (FCC_COMP_1200MA)"
    tree.end
    tree "SMBCHG_CHGR_FV_CFG"
      sgroup "SMBCHG_CHGR_FV_CFG (at 0x10f4)"
        set &access:&cmd_addr %l (0x8010f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   FV                                       = "
    tree.end
    tree "SMBCHG_CHGR_FV_CMP_CFG"
      sgroup "SMBCHG_CHGR_FV_CMP_CFG (at 0x10f5)"
        set &access:&cmd_addr %l (0x8010f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   FV_COMP                                  = "
    tree.end
    tree "SMBCHG_CHGR_CFG_AFVC"
      sgroup "SMBCHG_CHGR_CFG_AFVC (at 0x10f6)"
        set &access:&cmd_addr %l (0x8010f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CHGR_AUTO_FV_COMP                        = " "0 (AUTO_FV_DISABLED),1 (AUTO_FV_25MV),2 (AUTO_FV_50MV),3 (AUTO_FV_75MV),4 (AUTO_FV_100MV),5 (AUTO_FV_125MV),6 (AUTO_FV_150MV),7 (AUTO_FV_175MV)"
    tree.end
    tree "SMBCHG_CHGR_CFG_CHG_INHIB"
      sgroup "SMBCHG_CHGR_CFG_CHG_INHIB (at 0x10f7)"
        set &access:&cmd_addr %l (0x8010f70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CHGR_INHIBIT_THRESHOLD                   = " "0 (INHIBIT_50MV),1 (INHIBIT_100MV),2 (INHIBIT_200MV),3 (INHIBIT_300MV)"
    tree.end
    tree "SMBCHG_CHGR_CFG_P2F"
      sgroup "SMBCHG_CHGR_CFG_P2F (at 0x10f8)"
        set &access:&cmd_addr %l (0x8010f80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   P2F_CHG_THRESHOLD                        = " "0 (P2F_2P4),1 (P2F_2P6),2 (P2F_2P8),3 (P2F_3P0)"
    tree.end
    tree "SMBCHG_CHGR_CFG_TCC"
      sgroup "SMBCHG_CHGR_CFG_TCC (at 0x10f9)"
        set &access:&cmd_addr %l (0x8010f90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10f90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CHG_TERM_I                               = " "0 (TERM_ANA_300MA),1 (TERM_ANA_50MA),2 (TERM_ANA_100MA),3 (TERM_ANA_150MA),4 (TERM_ANA_200MA),5 (TERM_ANA_250MA),6 (TERM_ANA_500MA),7 (TERM_ANA_600MA)"
    tree.end
    tree "SMBCHG_CHGR_CCMP_CFG"
      sgroup "SMBCHG_CHGR_CCMP_CFG (at 0x10fa)"
        set &access:&cmd_addr %l (0x8010fa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10fa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TEMP_MONITOR_ENABLE                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   JEITA_TEMP_HARD_LIMIT                    = " "0 (JEITA_TEMP_HARD_LIMIT_EN),1 (JEITA_TEMP_HARD_LIMIT_DIS)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOAD_BAT                                 = " "0 (LOAD_BATT_FV_COMP_DIS),1 (LOAD_BATT_FV_COMP_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HOT_SL_FV_COMP                           = " "0 (HOT_SOFT_LIMIT_FV_COMP_DIS),1 (HOT_SOFT_LIMIT_FV_COMP_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   COLD_SL_FV_COMP                          = " "0 (COLD_SOFT_LIMIT_FV_COMP_DIS),1 (COLD_SOFT_LIMIT_FV_COMP_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOT_SL_CHG_I_COMP                        = " "0 (HOT_SOFT_LIMIT_CC_COMP_DIS),1 (HOT_SOFT_LIMIT_CC_COMP_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   COLD_SL_CHG_I_COMP                       = " "0 (COLD_SOFT_LIMIT_CC_COMP_DIS),1 (COLD_SOFT_LIMIT_CC_COMP_EN)"
    tree.end
    tree "SMBCHG_CHGR_CHGR_CFG1"
      sgroup "SMBCHG_CHGR_CHGR_CFG1 (at 0x10fb)"
        set &access:&cmd_addr %l (0x8010fb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10fb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SYSOK_INOK_POL                           = " "0 (SYSOK_TABLE),1 (SYSOK_TABLE_N)"
      textline ""
      bitfld.long 0x0 0x4--0x6 "  [ 6: 4]   SYSOK_OPTIONS                            = " "0 (INOK_OPT_1),1 (INOK_OPT_2),2 (SYSOK_OPT_A_1),3 (SYSOK_OPT_A_2),4 (SYSOK_OPT_BC_1),5 (SYSOK_OPT_BC_2),6 (CHG_DET_OPT_1),7 (CHG_DET_OPT_2)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EARLY_TERM_STATUS                        = " "0 (EARLY_CURRENT_TERM_DIS),1 (EARLY_CURRENT_TERM_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TERM_I_SRC                               = " "0 (TERM_SRC_ANA),1 (TERM_SRC_FG)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   RECHG_THRESHOLD_SRC                      = " "0 (RCHG_SRC_ANA),1 (RCHG_SRC_FG)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHARGING_HOLDOFF                         = " "0 (WAIT_FOR_FG),1 (NO_WAIT_FOR_FG)"
    tree.end
    tree "SMBCHG_CHGR_CHGR_CFG2"
      sgroup "SMBCHG_CHGR_CHGR_CFG2 (at 0x10fc)"
        set &access:&cmd_addr %l (0x8010fc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10fc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_EN_SRC                               = " "0 (CHG_EN_SRC_CMD),1 (CHG_EN_SRC_PIN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CHG_EN_COMMAND                           = " "0 (CHG_EN_POL_HIGH),1 (CHG_EN_POL_LOW)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   P2F_CHG_TRAN                             = " "0 (PRE_FAST_AUTO),1 (PRE_FAST_CMD)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   BAT_OV_ECC                               = " "0 (BATT_OV_ENDS_CYCLE_DIS),1 (BATT_OV_ENDS_CYCLE_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   I_TERM                                   = " "0 (CURRENT_TERM_EN),1 (CURRENT_TERM_DIS)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   AUTO_RECHG                               = " "0 (AUTO_RCHG_EN),1 (AUTO_RCHG_DIS)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HOLD_OFF_TIMER_CHARGING                  = " "0 (HOLDOFF_TMR_700US),1 (HOLDOFF_TMR_350MS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CHARGER_INHIBIT                          = " "0 (CHG_INHIBIT_DIS),1 (CHG_INHIBIT_EN)"
    tree.end
    tree "SMBCHG_CHGR_SFT_CFG"
      sgroup "SMBCHG_CHGR_SFT_CFG (at 0x10fd)"
        set &access:&cmd_addr %l (0x8010fd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10fd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SFT_EN                                   = " "0 (PC_EN_TC_EN),1 (PC_DIS_TC_EN),2 (PC_DIS_TC_DIS),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   SFT_TIMEOUT                              = " "0 (TC_TMOUT_192MIN),1 (TC_TMOUT_384MIN),2 (TC_TMOUT_768MIN),3 (TC_TMOUT_1536MIN)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PRE_CHG_SFT_TIMEOUT                      = " "0 (PC_TMOUT_24MIN),1 (PC_TMOUT_48MIN),2 (PC_TMOUT_96MIN),3 (PC_TMOUT_192MIN)"
    tree.end
    tree "SMBCHG_CHGR_STAT_CFG"
      sgroup "SMBCHG_CHGR_STAT_CFG (at 0x10fe)"
        set &access:&cmd_addr %l (0x8010fe0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10fe0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   STAT_PIN_CONFIG                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TEMP_CHG_ERROR_BLINKING_EN               = " "0 (STAT_BLINKING_DIS),1 (STAT_BLINKING_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   STAT_PIN_SRC                             = " "0 (STAT_CHG_STS),1 (STAT_USB_FAIL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   STAT_PIN_OUTPUT_POL                      = " "0 (STAT_ACTIVE_LOW),1 (STAT_ACTIVE_HIGH)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STAT_PIN_OUTPUT_EN                       = " "0 (STAT_OUTPUT_EN),1 (STAT_OUTPUT_DIS)"
    tree.end
    tree "SMBCHG_CHGR_CFG"
      sgroup "SMBCHG_CHGR_CFG (at 0x10ff)"
        set &access:&cmd_addr %l (0x8010ff0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x10ff0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CHG_OPTION_PIN_TRIM                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CFG_VCHG_IIN                             = " "0 (VCHG_BATTERY_CURRENT),1 (VCHG_INPUT_CURRENT)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CFG_TAPER_DIS_AFVC                       = " "0 (AFVC_ACTIVE_IN_TAPER),1 (AFVC_DISABLE_IN_TAPER)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CFG_VCHG                                 = " "0 (VCHG_DIS),1 (VCHG_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CFG_RCHG_LVL                             = " "0 (RCHG_THRESH_100MV),1 (RCHG_THRESH_200MV)"
    tree.end
  tree.end
tree.end
tree "SMBCHG_DC_CHGPTH"
  tree "SMBCHG_DC_CHGPTH"
    tree "SMBCHG_DC_CHGPTH_PERPH_TYPE"
      sgroup "SMBCHG_DC_CHGPTH_PERPH_TYPE (at 0x1404)"
        set &access:&cmd_addr %l (0x8014040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBCHG_DC_CHGPTH_PERPH_SUBTYPE"
      sgroup "SMBCHG_DC_CHGPTH_PERPH_SUBTYPE (at 0x1405)"
        set &access:&cmd_addr %l (0x8014050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_RT_STS"
      sgroup "SMBCHG_DC_CHGPTH_INT_RT_STS (at 0x1410)"
        set &access:&cmd_addr %l (0x8014100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_RT_STS                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_RT_STS                           = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_SET_TYPE"
      sgroup "SMBCHG_DC_CHGPTH_INT_SET_TYPE (at 0x1411)"
        set &access:&cmd_addr %l (0x8014110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_TYPE                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_TYPE                             = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_POLARITY_HIGH"
      sgroup "SMBCHG_DC_CHGPTH_INT_POLARITY_HIGH (at 0x1412)"
        set &access:&cmd_addr %l (0x8014120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_HIGH                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_HIGH                             = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_POLARITY_LOW"
      sgroup "SMBCHG_DC_CHGPTH_INT_POLARITY_LOW (at 0x1413)"
        set &access:&cmd_addr %l (0x8014130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_LOW                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_LOW                              = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_LATCHED_CLR"
      sgroup "SMBCHG_DC_CHGPTH_INT_LATCHED_CLR (at 0x1414)"
        set &access:&cmd_addr %l (0x8014140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_LATCHED_CLR                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_EN_SET"
      sgroup "SMBCHG_DC_CHGPTH_INT_EN_SET (at 0x1415)"
        set &access:&cmd_addr %l (0x8014150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_EN_SET                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_EN_SET                           = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_EN_CLR"
      sgroup "SMBCHG_DC_CHGPTH_INT_EN_CLR (at 0x1416)"
        set &access:&cmd_addr %l (0x8014160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_EN_CLR                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_EN_CLR                           = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_LATCHED_STS"
      sgroup "SMBCHG_DC_CHGPTH_INT_LATCHED_STS (at 0x1418)"
        set &access:&cmd_addr %l (0x8014180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_LATCHED_STS                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_LATCHED_STS                      = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_PENDING_STS"
      sgroup "SMBCHG_DC_CHGPTH_INT_PENDING_STS (at 0x1419)"
        set &access:&cmd_addr %l (0x8014190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_PENDING_STS                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_PENDING_STS                      = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_MID_SEL"
      sgroup "SMBCHG_DC_CHGPTH_INT_MID_SEL (at 0x141a)"
        set &access:&cmd_addr %l (0x80141a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x141a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_PRIORITY"
      sgroup "SMBCHG_DC_CHGPTH_INT_PRIORITY (at 0x141b)"
        set &access:&cmd_addr %l (0x80141b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x141b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_SEC_ACCESS"
      sgroup "SMBCHG_DC_CHGPTH_SEC_ACCESS (at 0x14d0)"
        set &access:&cmd_addr %l (0x8014d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBCHG_DC_CHGPTH_PERPH_RESET_CTL2"
      sgroup "SMBCHG_DC_CHGPTH_PERPH_RESET_CTL2 (at 0x14d9)"
        set &access:&cmd_addr %l (0x8014d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_PERPH_RESET_CTL3"
      sgroup "SMBCHG_DC_CHGPTH_PERPH_RESET_CTL3 (at 0x14da)"
        set &access:&cmd_addr %l (0x8014da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_PERPH_RESET_CTL4"
      sgroup "SMBCHG_DC_CHGPTH_PERPH_RESET_CTL4 (at 0x14db)"
        set &access:&cmd_addr %l (0x8014db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_SPARE"
      sgroup "SMBCHG_DC_CHGPTH_SPARE (at 0x14df)"
        set &access:&cmd_addr %l (0x8014df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_TEST1"
      sgroup "SMBCHG_DC_CHGPTH_INT_TEST1 (at 0x14e0)"
        set &access:&cmd_addr %l (0x8014e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_INT_TEST_VAL"
      sgroup "SMBCHG_DC_CHGPTH_INT_TEST_VAL (at 0x14e1)"
        set &access:&cmd_addr %l (0x8014e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DCIN_OV_INT_VAL                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_UV_INT_VAL                          = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_TM_EN_ATEST_DCIN"
      sgroup "SMBCHG_DC_CHGPTH_TM_EN_ATEST_DCIN (at 0x14e2)"
        set &access:&cmd_addr %l (0x8014e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TM_EN_ATEST_DCIN                         = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_TRIM_NUM"
      sgroup "SMBCHG_DC_CHGPTH_TRIM_NUM (at 0x14f0)"
        set &access:&cmd_addr %l (0x8014f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "SMBCHG_DC_CHGPTH_DCIN_CHGR_CFG"
      sgroup "SMBCHG_DC_CHGPTH_DCIN_CHGR_CFG (at 0x14f1)"
        set &access:&cmd_addr %l (0x8014f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ADAPTER_ALLOWANCE                        = " "0 (DCIN_ADAPTER_ALLOWANCE_5V),1 (DCIN_ADAPTER_ALLOWANCE_5V_9V),2 (DCIN_ADAPTER_ALLOWANCE_5V_TO_9V),3 (DCIN_ADAPTER_ALLOWANCE_9V),4 (DCIN_ADAPTER_ALLOWANCE_5V_UNREG),5 (DCIN_ADAPTER_ALLOWANCE_5V_9V_UNREG),6 (reserved),7 (reserved)"
    tree.end
    tree "SMBCHG_DC_CHGPTH_DCIN_IL_CFG"
      sgroup "SMBCHG_DC_CHGPTH_DCIN_IL_CFG (at 0x14f2)"
        set &access:&cmd_addr %l (0x8014f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CURRENT_LIMIT                            = "
    tree.end
    tree "SMBCHG_DC_CHGPTH_DC_AICL_CFG1"
      sgroup "SMBCHG_DC_CHGPTH_DC_AICL_CFG1 (at 0x14f3)"
        set &access:&cmd_addr %l (0x8014f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OV_OPTION                                = " "0 (DC_OV_BLOCK),1 (DC_OV_NO_BLOCK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_9V_ADAPTER_EN                        = " "0 (DC_COLLAPSE_GF_NORMAL),1 (DC_COLLAPSE_GF_6P3)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DEB_9V_ADAPTER_SEL                       = " "0 (DC_COLLAPSE_9VGF_20MS20MS),1 (DC_COLLAPSE_9VGF_15US20MS)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DEB_5V_ADAPTER_SEL                       = " "0 (DC_COLLAPSE_5VGF_20MS20MS),1 (DC_COLLAPSE_5VGF_15US20MS)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   AICL                                     = " "0 (DC_AICL_DISABLED),1 (DC_AICL_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DEB_HV_ADAPTER                           = " "0 (DC_COLLAPSE_HV_FET_ON),1 (DC_COLLAPSE_HV_FET_OFF)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DEB_LV_ADAPTER                           = " "0 (DC_COLLAPSE_LV_FET_ON),1 (DC_COLLAPSE_LV_FET_OFF)"
    tree.end
    tree "SMBCHG_DC_CHGPTH_DC_AICL_CFG2"
      sgroup "SMBCHG_DC_CHGPTH_DC_AICL_CFG2 (at 0x14f4)"
        set &access:&cmd_addr %l (0x8014f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DEB_UV                                   = " "0 (DC_UV_GF_20MS20MS),1 (DC_UV_GF_10US10MS)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   AICL_THRESHOLD_5V_TO_9V                  = " "0 (DC_AICL_6P25_OR_4P25),1 (DC_AICL_6P75_OR_4P40)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   AICL_THRESHOLD_5V                        = " "0 (DC_AICL_5V_4P25),1 (DC_AICL_5V_4P40)"
    tree.end
    tree "SMBCHG_DC_CHGPTH_AICL_WL_SEL_CFG"
      sgroup "SMBCHG_DC_CHGPTH_AICL_WL_SEL_CFG (at 0x14f5)"
        set &access:&cmd_addr %l (0x8014f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   AICL_RESTART_TIMER                       = " "0 (AICL_RESTART_TIMER_45S),1 (AICL_RESTART_TIMER_1P5MS),2 (AICL_RESTART_TIMER_3MS),3 (AICL_RESTART_TIMER_6MS)"
    tree.end
    tree "SMBCHG_DC_CHGPTH_TEMP_COMP_CFG"
      sgroup "SMBCHG_DC_CHGPTH_TEMP_COMP_CFG (at 0x14f6)"
        set &access:&cmd_addr %l (0x8014f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CFG_EN_TLOOP                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CFG_DIS_TLOOP                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CFG_DIS_DIG_TLOOP                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   INT_TEMP_COMP_EN                         = " "0 (INT_TEMP_COMP_EN_DIS),1 (INT_TEMP_COMP_EN_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   INT_TEMP_COMP_SETTING                    = " "0 (INT_TEMP_COMP_SETTING_0),1 (INT_TEMP_COMP_SETTING_15PCT)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_TEMP_COMP_CYCLE_TIME                 = " "0 (AINT_TEMP_COMP_CYCLE_TIME_350MS),1 (INT_TEMP_COMP_CYCLE_TIME_700MS),2 (INT_TEMP_COMP_CYCLE_TIME_31P4S),3 (INT_TEMP_COMP_CYCLE_TIME_2P8S)"
    tree.end
    tree "SMBCHG_DC_CHGPTH_TRIM7"
      sgroup "SMBCHG_DC_CHGPTH_TRIM7 (at 0x14f7)"
        set &access:&cmd_addr %l (0x8014f70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TR_80R32B                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TR_LORAMP                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TR_LONG_REFRESH                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TR_GAIN1X                                = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_TRIM8"
      sgroup "SMBCHG_DC_CHGPTH_TRIM8 (at 0x14f8)"
        set &access:&cmd_addr %l (0x8014f80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   TR_SCTR                                  = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   TR_OSC3M                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   TR_OSC2M                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "SMBCHG_DC_CHGPTH_TRIM9"
      sgroup "SMBCHG_DC_CHGPTH_TRIM9 (at 0x14f9)"
        set &access:&cmd_addr %l (0x8014f90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14f90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   TR_DUTY                                  = "
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   TR_ZDTR                                  = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TR_BLTR                                  = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_DC_CHGPTH_TR_TEMP"
      sgroup "SMBCHG_DC_CHGPTH_TR_TEMP (at 0x14fa)"
        set &access:&cmd_addr %l (0x8014fa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14fa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_TEMP                                  = "
    tree.end
    tree "SMBCHG_DC_CHGPTH_TRIM11"
      sgroup "SMBCHG_DC_CHGPTH_TRIM11 (at 0x14fb)"
        set &access:&cmd_addr %l (0x8014fb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14fb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TR_HICAP_VMODE                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TR_SOFT                                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TR_BT                                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TR_DIS_SSUD                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TR_NEW_TRIM                              = " "0, 1"
    tree.end
    tree "SMBCHG_DC_CHGPTH_TRIM12"
      sgroup "SMBCHG_DC_CHGPTH_TRIM12 (at 0x14fc)"
        set &access:&cmd_addr %l (0x8014fc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14fc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TR_VD                                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TR_VDTHRES                               = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_DC_CHGPTH_TR_DCIN_SNS"
      sgroup "SMBCHG_DC_CHGPTH_TR_DCIN_SNS (at 0x14fd)"
        set &access:&cmd_addr %l (0x8014fd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14fd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TR_DCIN_SNS                              = "
    tree.end
    tree "SMBCHG_DC_CHGPTH_TR_DCIN_DIVIDER"
      sgroup "SMBCHG_DC_CHGPTH_TR_DCIN_DIVIDER (at 0x14fe)"
        set &access:&cmd_addr %l (0x8014fe0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14fe0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_DCIN_DIVIDER                          = "
    tree.end
    tree "SMBCHG_DC_CHGPTH_TR_IINOS_DC"
      sgroup "SMBCHG_DC_CHGPTH_TR_IINOS_DC (at 0x14ff)"
        set &access:&cmd_addr %l (0x8014ff0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x14ff0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_IINOS_DC                              = "
    tree.end
  tree.end
tree.end
tree "SMBCHG_MISC"
  tree "SMBCHG_MISC"
    tree "SMBCHG_MISC_REVISION1"
      sgroup "SMBCHG_MISC_REVISION1 (at 0x1600)"
        set &access:&cmd_addr %l (0x8016000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "SMBCHG_MISC_REVISION2"
      sgroup "SMBCHG_MISC_REVISION2 (at 0x1601)"
        set &access:&cmd_addr %l (0x8016010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "SMBCHG_MISC_REVISION3"
      sgroup "SMBCHG_MISC_REVISION3 (at 0x1602)"
        set &access:&cmd_addr %l (0x8016020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "SMBCHG_MISC_REVISION4"
      sgroup "SMBCHG_MISC_REVISION4 (at 0x1603)"
        set &access:&cmd_addr %l (0x8016030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "SMBCHG_MISC_PERPH_TYPE"
      sgroup "SMBCHG_MISC_PERPH_TYPE (at 0x1604)"
        set &access:&cmd_addr %l (0x8016040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBCHG_MISC_PERPH_SUBTYPE"
      sgroup "SMBCHG_MISC_PERPH_SUBTYPE (at 0x1605)"
        set &access:&cmd_addr %l (0x8016050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBCHG_MISC_IDEV_STS"
      sgroup "SMBCHG_MISC_IDEV_STS (at 0x1608)"
        set &access:&cmd_addr %l (0x8016080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SRC_DETECT_STS                           = "
    tree.end
    tree "SMBCHG_MISC_INT_RT_STS"
      sgroup "SMBCHG_MISC_INT_RT_STS (at 0x1610)"
        set &access:&cmd_addr %l (0x8016100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_RT_STS                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_RT_STS                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_RT_STS                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_RT_STS                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_RT_STS                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_RT_STS                          = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_SET_TYPE"
      sgroup "SMBCHG_MISC_INT_SET_TYPE (at 0x1611)"
        set &access:&cmd_addr %l (0x8016110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_TYPE                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_TYPE                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_TYPE                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_TYPE                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_TYPE                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_TYPE                            = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_POLARITY_HIGH"
      sgroup "SMBCHG_MISC_INT_POLARITY_HIGH (at 0x1612)"
        set &access:&cmd_addr %l (0x8016120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_HIGH                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_HIGH                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_HIGH                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_HIGH                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_HIGH                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_HIGH                            = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_POLARITY_LOW"
      sgroup "SMBCHG_MISC_INT_POLARITY_LOW (at 0x1613)"
        set &access:&cmd_addr %l (0x8016130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_LOW                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_LOW                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_LOW                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_LOW                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_LOW                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_LOW                             = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_LATCHED_CLR"
      sgroup "SMBCHG_MISC_INT_LATCHED_CLR (at 0x1614)"
        set &access:&cmd_addr %l (0x8016140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_LATCHED_CLR                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_LATCHED_CLR                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_LATCHED_CLR                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_LATCHED_CLR                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_LATCHED_CLR                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_LATCHED_CLR                     = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_EN_SET"
      sgroup "SMBCHG_MISC_INT_EN_SET (at 0x1615)"
        set &access:&cmd_addr %l (0x8016150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_EN_SET                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_EN_SET                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_EN_SET                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_EN_SET                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_EN_SET                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_EN_SET                          = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_EN_CLR"
      sgroup "SMBCHG_MISC_INT_EN_CLR (at 0x1616)"
        set &access:&cmd_addr %l (0x8016160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_EN_CLR                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_EN_CLR                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_EN_CLR                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_EN_CLR                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_EN_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_EN_CLR                          = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_LATCHED_STS"
      sgroup "SMBCHG_MISC_INT_LATCHED_STS (at 0x1618)"
        set &access:&cmd_addr %l (0x8016180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_LATCHED_STS                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_LATCHED_STS                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_LATCHED_STS                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_LATCHED_STS                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_LATCHED_STS                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_LATCHED_STS                     = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_PENDING_STS"
      sgroup "SMBCHG_MISC_INT_PENDING_STS (at 0x1619)"
        set &access:&cmd_addr %l (0x8016190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_PENDING_STS                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_PENDING_STS                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_PENDING_STS                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_PENDING_STS                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_PENDING_STS                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_PENDING_STS                     = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_MID_SEL"
      sgroup "SMBCHG_MISC_INT_MID_SEL (at 0x161a)"
        set &access:&cmd_addr %l (0x80161a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x161a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_MISC_INT_PRIORITY"
      sgroup "SMBCHG_MISC_INT_PRIORITY (at 0x161b)"
        set &access:&cmd_addr %l (0x80161b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x161b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_WDOG_RST"
      sgroup "SMBCHG_MISC_WDOG_RST (at 0x1640)"
        set &access:&cmd_addr %l (0x8016400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   WDOG_RST                                 = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_AFP_MODE"
      sgroup "SMBCHG_MISC_AFP_MODE (at 0x1641)"
        set &access:&cmd_addr %l (0x8016410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   AFP_MODE_ENB                             = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_GSM_PA_ON_ADJ_EN"
      sgroup "SMBCHG_MISC_GSM_PA_ON_ADJ_EN (at 0x1642)"
        set &access:&cmd_addr %l (0x8016420|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16420|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   GSM_PA_ON_ADJ_EN                         = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_SEC_ACCESS"
      sgroup "SMBCHG_MISC_SEC_ACCESS (at 0x16d0)"
        set &access:&cmd_addr %l (0x8016d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBCHG_MISC_PERPH_RESET_CTL2"
      sgroup "SMBCHG_MISC_PERPH_RESET_CTL2 (at 0x16d9)"
        set &access:&cmd_addr %l (0x8016d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_PERPH_RESET_CTL3"
      sgroup "SMBCHG_MISC_PERPH_RESET_CTL3 (at 0x16da)"
        set &access:&cmd_addr %l (0x8016da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_PERPH_RESET_CTL4"
      sgroup "SMBCHG_MISC_PERPH_RESET_CTL4 (at 0x16db)"
        set &access:&cmd_addr %l (0x8016db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_SPARE"
      sgroup "SMBCHG_MISC_SPARE (at 0x16df)"
        set &access:&cmd_addr %l (0x8016df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBCHG_MISC_INT_TEST1"
      sgroup "SMBCHG_MISC_INT_TEST1 (at 0x16e0)"
        set &access:&cmd_addr %l (0x8016e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_INT_TEST_VAL"
      sgroup "SMBCHG_MISC_INT_TEST_VAL (at 0x16e1)"
        set &access:&cmd_addr %l (0x8016e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OTST3_INT_VAL                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTST2_INT_VAL                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FLASH_FAIL_INT_VAL                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_TIMER_INT_VAL                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEMP_SHUTDOWN_INT_VAL                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   POWER_OK_INT_VAL                         = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_TEST_MODE"
      sgroup "SMBCHG_MISC_TEST_MODE (at 0x16e2)"
        set &access:&cmd_addr %l (0x8016e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   TM_IPWR                                  = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   TM_CPATH_OS                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TM_OTG_EN_HS                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x3 "  [ 3: 1]   TM_BB_LOOPS                              = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TM_DIS_SYSOV                             = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_TEST_EN"
      sgroup "SMBCHG_MISC_TEST_EN (at 0x16e3)"
        set &access:&cmd_addr %l (0x8016e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TE_IIN_FB                                = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_79_72"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_79_72 (at 0x16e4)"
        set &access:&cmd_addr %l (0x8016e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_79_72                 = "
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_71_64"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_71_64 (at 0x16e5)"
        set &access:&cmd_addr %l (0x8016e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_71_64                 = "
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_63_56"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_63_56 (at 0x16e6)"
        set &access:&cmd_addr %l (0x8016e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_63_56                 = "
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_55_48"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_55_48 (at 0x16e7)"
        set &access:&cmd_addr %l (0x8016e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_55_48                 = "
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_47_40"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_47_40 (at 0x16e8)"
        set &access:&cmd_addr %l (0x8016e80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_47_40                 = "
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_39_32"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_39_32 (at 0x16e9)"
        set &access:&cmd_addr %l (0x8016e90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16e90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_39_32                 = "
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_31_24"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_31_24 (at 0x16ea)"
        set &access:&cmd_addr %l (0x8016ea0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16ea0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_31_24                 = "
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_23_16"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_23_16 (at 0x16eb)"
        set &access:&cmd_addr %l (0x8016eb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16eb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_23_16                 = "
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_15_8"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_15_8 (at 0x16ec)"
        set &access:&cmd_addr %l (0x8016ec0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16ec0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_15_8                  = "
    tree.end
    tree "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_7_0"
      sgroup "SMBCHG_MISC_TEST_OUTPUT_MUX_IN_7_0 (at 0x16ed)"
        set &access:&cmd_addr %l (0x8016ed0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16ed0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_OUTPUT_MUX_IN_7_0                   = "
    tree.end
    tree "SMBCHG_MISC_HVDCP_TST"
      sgroup "SMBCHG_MISC_HVDCP_TST (at 0x16ee)"
        set &access:&cmd_addr %l (0x8016ee0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16ee0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HVDCP_TST                                = "
    tree.end
    tree "SMBCHG_MISC_TEST_MODE_STDBYOSC"
      sgroup "SMBCHG_MISC_TEST_MODE_STDBYOSC (at 0x16ef)"
        set &access:&cmd_addr %l (0x8016ef0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16ef0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   TEST_MODE_STDBYOSC                       = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "SMBCHG_MISC_TRIM_NUM"
      sgroup "SMBCHG_MISC_TRIM_NUM (at 0x16f0)"
        set &access:&cmd_addr %l (0x8016f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "SMBCHG_MISC_WD_CFG"
      sgroup "SMBCHG_MISC_WD_CFG (at 0x16f1)"
        set &access:&cmd_addr %l (0x8016f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   AFP_WDOG_ENABLE                          = " "0 (AFP_WDOG_DIS),1 (AFP_WDOG_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   WDOG_TIMEOUT                             = " "0 (WDOG_TMOUT_18S),1 (WDOG_TMOUT_36S),2 (WDOG_TMOUT_72S),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   SFT_AFTER_WDOG_IRQ                       = " "0 (TIMER_AFTER_WDOG_12MIN),1 (TIMER_AFTER_WDOG_24MIN),2 (TIMER_AFTER_WDOG_48MIN),3 (TIMER_AFTER_WDOG_96MIN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   WDOG_IRQ_SFT                             = " "0 (WDOG_IRQ_TIMER_DIS),1 (WDOG_IRQ_TIMER_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   WDOG_OPTION                              = " "0 (WDOG_AFTER_ACK),1 (WDOG_ALWAYS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   WDOG_TIMER_EN                            = " "0 (WDOG_DIS),1 (WDOG_EN)"
    tree.end
    tree "SMBCHG_MISC_MISC_CFG"
      sgroup "SMBCHG_MISC_MISC_CFG (at 0x16f2)"
        set &access:&cmd_addr %l (0x8016f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   SYSOK_LDO                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   FETDRV                                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   CFG_NTCVOUT                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PHY_ON                                   = " "0 (PHY_ON_DIS),1 (PHY_ON_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CHG_OK                                   = " "0 (CHG_OK_DIS),1 (CHG_OK_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   STANDBY_VCHG                             = " "0 (VCHG_STDBY_DIS),1 (VCHG_STDBY_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   GSM_PA_ON_ADJ_SEL                        = " "0 (PA_ON_DIS),1 (PA_ON_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   VCHG_PA_ON_SEL                           = " "0, 1"
    tree.end
    tree "SMBCHG_MISC_CFG_NTC_VOUT"
      sgroup "SMBCHG_MISC_CFG_NTC_VOUT (at 0x16f3)"
        set &access:&cmd_addr %l (0x8016f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CFG_NTC_VOUT                             = "
    tree.end
    tree "SMBCHG_MISC_CHGR_TRIM_OPTIONS_16"
      sgroup "SMBCHG_MISC_CHGR_TRIM_OPTIONS_16 (at 0x16f4)"
        set &access:&cmd_addr %l (0x8016f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x1--0x6 1 "  [ 6: 1]   PMI8994_CHARGER_OPTIONS                  = "
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SOFT_STOP_TBIT                           = " "0 (SOFT_STOP_DIS),1 (SOFT_STOP_EN)"
    tree.end
    tree "SMBCHG_MISC_CHGR_TRIM_OPTIONS_15_8"
      sgroup "SMBCHG_MISC_CHGR_TRIM_OPTIONS_15_8 (at 0x16f5)"
        set &access:&cmd_addr %l (0x8016f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   AICL_INIT                                = " "0 (AICL_INITIAL_0),1 (AICL_INITIAL_ICL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AICL_ADC                                 = " "0 (AICL_ADC_DIS),1 (AICL_ADC_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   USBIN_RERUN_AICL                         = " "0 (AICL_USB_RERUN_DIS),1 (AICL_USB_RERUN_EN)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DCIN_RERUN_AICL                          = " "0 (AICL_DC_RERUN_DIS),1 (AICL_DC_RERUN_EN)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SYSOK_DCIN_SEL                           = " "0 (SYSOK_OPT_B),1 (SYSOK_OPT_C)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   PRE_BYPASS_GF_TBIT                       = " "0 (BYPASS_GF_DIS),1 (BYPASS_GF_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   STANDBY_OSC_EN                           = " "0 (STDBY_OSC_OVERRIDE_DIS),1 (STDBY_OSC_OVERRIDE_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MAIN_OSC_EN                              = " "0 (MAIN_OSC_OVERRIDE_DIS),1 (MAIN_OSC_OVERRIDE_EN)"
    tree.end
    tree "SMBCHG_MISC_CHGR_TRIM_OPTIONS_7_0"
      sgroup "SMBCHG_MISC_CHGR_TRIM_OPTIONS_7_0 (at 0x16f6)"
        set &access:&cmd_addr %l (0x8016f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   STANDBY_OSC_TRIM                         = " "0 (TAPER_ESR_EN),1 (TAPER_ESR_DIS)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   TLIM_DIS_TBIT                            = " "0 (TLIM_EN),1 (TLIM_DIS)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   OV_OPTION_TBIT                           = " "0 (OV_OPT_MID_LOAD),1 (OV_OPT_NO_MID_LOAD),2 (reserved),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TBIT_IMP_EN                              = " "0 (INPUT_MISSING_POLLER_DIS),1 (INPUT_MISSING_POLLER_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   RLD_DIS_TBIT                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DIS_ARB_FIX_TBIT                         = " "0 (RAISE_ARB_THRESHOLD),1 (ARB_THRESHOLD_SEL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DB_TMR_DIS_TBIT                          = " "0 (DEAD_BATT_TIMER_EN),1 (DEAD_BATT_TIMER_DIS)"
    tree.end
    tree "SMBCHG_MISC_TR_IPWR1"
      sgroup "SMBCHG_MISC_TR_IPWR1 (at 0x16f7)"
        set &access:&cmd_addr %l (0x8016f70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TR_IPWR1                                 = "
    tree.end
    tree "SMBCHG_MISC_TR_IPWR2"
      sgroup "SMBCHG_MISC_TR_IPWR2 (at 0x16f8)"
        set &access:&cmd_addr %l (0x8016f80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TR_IPWR2                                 = "
    tree.end
    tree "SMBCHG_MISC_TRIM9"
      sgroup "SMBCHG_MISC_TRIM9 (at 0x16f9)"
        set &access:&cmd_addr %l (0x8016f90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16f90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   TR_VCHG_IOUT                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_VCHG_IIN                              = "
    tree.end
    tree "SMBCHG_MISC_TRIM10"
      sgroup "SMBCHG_MISC_TRIM10 (at 0x16fa)"
        set &access:&cmd_addr %l (0x8016fa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16fa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   TR_TERM                                  = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_BATLOW                                = "
    tree.end
    tree "SMBCHG_MISC_TRIM11"
      sgroup "SMBCHG_MISC_TRIM11 (at 0x16fb)"
        set &access:&cmd_addr %l (0x8016fb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16fb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   TR_RT                                    = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   TR_1356                                  = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TR_IOUT_SCALE                            = "
    tree.end
    tree "SMBCHG_MISC_TRIM12"
      sgroup "SMBCHG_MISC_TRIM12 (at 0x16fc)"
        set &access:&cmd_addr %l (0x8016fc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16fc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   TR_IOUTOS                                = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_IOUTCS_CHGOS                          = "
    tree.end
    tree "SMBCHG_MISC_TRIM13"
      sgroup "SMBCHG_MISC_TRIM13 (at 0x16fd)"
        set &access:&cmd_addr %l (0x8016fd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16fd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   TR_IOUTCS_OTGOS                          = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_IOUTOS_PRECHG                         = "
    tree.end
    tree "SMBCHG_MISC_TRIM14"
      sgroup "SMBCHG_MISC_TRIM14 (at 0x16fe)"
        set &access:&cmd_addr %l (0x8016fe0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16fe0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   TR_FLT_SCALE                             = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_FLT_OFFSET                            = "
    tree.end
    tree "SMBCHG_MISC_CFG_TEMP_SEL"
      sgroup "SMBCHG_MISC_CFG_TEMP_SEL (at 0x16ff)"
        set &access:&cmd_addr %l (0x8016ff0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x16ff0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_TEMP_SEL                             = " "0 (TEMP_LOOP_100DEG),1 (TEMP_LOOP_110DEG),2 (TEMP_LOOP_120DEG),3 (TEMP_LOOP_130DEG)"
    tree.end
  tree.end
tree.end
tree "SMBCHG_OTG"
  tree "SMBCHG_OTG"
    tree "SMBCHG_OTG_PERPH_TYPE"
      sgroup "SMBCHG_OTG_PERPH_TYPE (at 0x1104)"
        set &access:&cmd_addr %l (0x8011040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBCHG_OTG_PERPH_SUBTYPE"
      sgroup "SMBCHG_OTG_PERPH_SUBTYPE (at 0x1105)"
        set &access:&cmd_addr %l (0x8011050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBCHG_OTG_SEC_ACCESS"
      sgroup "SMBCHG_OTG_SEC_ACCESS (at 0x11d0)"
        set &access:&cmd_addr %l (0x8011d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBCHG_OTG_PERPH_RESET_CTL2"
      sgroup "SMBCHG_OTG_PERPH_RESET_CTL2 (at 0x11d9)"
        set &access:&cmd_addr %l (0x8011d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBCHG_OTG_PERPH_RESET_CTL3"
      sgroup "SMBCHG_OTG_PERPH_RESET_CTL3 (at 0x11da)"
        set &access:&cmd_addr %l (0x8011da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBCHG_OTG_PERPH_RESET_CTL4"
      sgroup "SMBCHG_OTG_PERPH_RESET_CTL4 (at 0x11db)"
        set &access:&cmd_addr %l (0x8011db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "SMBCHG_OTG_SPARE"
      sgroup "SMBCHG_OTG_SPARE (at 0x11df)"
        set &access:&cmd_addr %l (0x8011df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBCHG_OTG_TEST_EN_CFG"
      sgroup "SMBCHG_OTG_TEST_EN_CFG (at 0x11e0)"
        set &access:&cmd_addr %l (0x8011e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TESTMODE                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TEST_INPUT_MUX_ENABLE                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEST_OUTPUT_MUX_ENABLE                   = " "0, 1"
    tree.end
    tree "SMBCHG_OTG_TEST_55_48"
      sgroup "SMBCHG_OTG_TEST_55_48 (at 0x11e1)"
        set &access:&cmd_addr %l (0x8011e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_55_48                               = "
    tree.end
    tree "SMBCHG_OTG_TEST_47_40"
      sgroup "SMBCHG_OTG_TEST_47_40 (at 0x11e2)"
        set &access:&cmd_addr %l (0x8011e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_47_40                               = "
    tree.end
    tree "SMBCHG_OTG_TEST_41_32"
      sgroup "SMBCHG_OTG_TEST_41_32 (at 0x11e3)"
        set &access:&cmd_addr %l (0x8011e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_41_32                               = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_95_88"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_95_88 (at 0x11e4)"
        set &access:&cmd_addr %l (0x8011e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_95_88                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_87_80"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_87_80 (at 0x11e5)"
        set &access:&cmd_addr %l (0x8011e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_87_80                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_79_72"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_79_72 (at 0x11e6)"
        set &access:&cmd_addr %l (0x8011e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_79_72                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_71_64"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_71_64 (at 0x11e7)"
        set &access:&cmd_addr %l (0x8011e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_71_64                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_63_56"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_63_56 (at 0x11e8)"
        set &access:&cmd_addr %l (0x8011e80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_63_56                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_55_48"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_55_48 (at 0x11e9)"
        set &access:&cmd_addr %l (0x8011e90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11e90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_55_48                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_47_40"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_47_40 (at 0x11ea)"
        set &access:&cmd_addr %l (0x8011ea0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ea0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_47_40                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_39_32"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_39_32 (at 0x11eb)"
        set &access:&cmd_addr %l (0x8011eb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11eb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_39_32                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_31_24"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_31_24 (at 0x11ec)"
        set &access:&cmd_addr %l (0x8011ec0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ec0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_31_24                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_23_16"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_23_16 (at 0x11ed)"
        set &access:&cmd_addr %l (0x8011ed0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ed0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_23_16                  = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_15_8"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_15_8 (at 0x11ee)"
        set &access:&cmd_addr %l (0x8011ee0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ee0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_15_8                   = "
    tree.end
    tree "SMBCHG_OTG_TEST_INPUT_MUX_IN_7_0"
      sgroup "SMBCHG_OTG_TEST_INPUT_MUX_IN_7_0 (at 0x11ef)"
        set &access:&cmd_addr %l (0x8011ef0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ef0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_INPUT_MUX_IN_7_0                    = "
    tree.end
    tree "SMBCHG_OTG_TRIM_NUM"
      sgroup "SMBCHG_OTG_TRIM_NUM (at 0x11f0)"
        set &access:&cmd_addr %l (0x8011f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "SMBCHG_OTG_OTG_CFG"
      sgroup "SMBCHG_OTG_OTG_CFG (at 0x11f1)"
        set &access:&cmd_addr %l (0x8011f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   HV_OTG_PROTECTION                        = " "0 (HV_OTG_DISABLED),1 (HV_OTG_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_PIN_POL                              = " "0 (OTG_PIN_POL_HIGH),1 (OTG_PIN_POL_LOW)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   OTG_CTRL                                 = " "0 (reserved),1 (reserved),2 (OTG_CTRL_CMD),3 (OTG_CTRL_AUTO)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OTG_UVLO_SENSOR_SRC                      = " "0 (OTG_UVLO_SENSOR_ANA),1 (reserved),2 (OTG_UVLO_SENSOR_FG),3 (OTG_UVLO_SENSOR_OR)"
    tree.end
    tree "SMBCHG_OTG_CFG_BATTUV"
      sgroup "SMBCHG_OTG_CFG_BATTUV (at 0x11f2)"
        set &access:&cmd_addr %l (0x8011f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CFG_BATTUV                               = " "0 (OTG_BATTUV_2P7),1 (OTG_BATTUV_2P9),2 (OTG_BATTUV_3P1),3 (OTG_BATTUV_3P3)"
    tree.end
    tree "SMBCHG_OTG_OTG_ICFG"
      sgroup "SMBCHG_OTG_OTG_ICFG (at 0x11f3)"
        set &access:&cmd_addr %l (0x8011f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   OTG_ILIMIT                               = " "0 (OTG_ILIMIT_250MA),1 (OTG_ILIMIT_600MA),2 (OTG_ILIMIT_750MA),3 (OTG_ILIMIT_1000MA)"
    tree.end
    tree "SMBCHG_OTG_TR_ISOTG"
      sgroup "SMBCHG_OTG_TR_ISOTG (at 0x11f4)"
        set &access:&cmd_addr %l (0x8011f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TR_ISOTG                                 = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_OTG_TR_OTG_SNS"
      sgroup "SMBCHG_OTG_TR_OTG_SNS (at 0x11f5)"
        set &access:&cmd_addr %l (0x8011f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TR_OTG_SNS                               = "
    tree.end
    tree "SMBCHG_OTG_TRIM6"
      sgroup "SMBCHG_OTG_TRIM6 (at 0x11f6)"
        set &access:&cmd_addr %l (0x8011f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TR_ENB_ZD                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TR_ENB_SKIP                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   TR_EN_FPWM_USB1                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TR_ENLS_SS                               = " "0, 1"
    tree.end
    tree "SMBCHG_OTG_TR_ISTR"
      sgroup "SMBCHG_OTG_TR_ISTR (at 0x11f7)"
        set &access:&cmd_addr %l (0x8011f70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TR_ISTR                                  = "
    tree.end
    tree "SMBCHG_OTG_CFG_TLOOP"
      sgroup "SMBCHG_OTG_CFG_TLOOP (at 0x11f8)"
        set &access:&cmd_addr %l (0x8011f80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   CFG_TLOOP                                = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "SMBCHG_OTG_CHG_PBS_TRIG_CONTROL"
      sgroup "SMBCHG_OTG_CHG_PBS_TRIG_CONTROL (at 0x11f9)"
        set &access:&cmd_addr %l (0x8011f90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11f90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   CHG_PBS_TRIG_CONTROL                     = "
    tree.end
    tree "SMBCHG_OTG_TR_PWR_TR"
      sgroup "SMBCHG_OTG_TR_PWR_TR (at 0x11fa)"
        set &access:&cmd_addr %l (0x8011fa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11fa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TR_PWR_TR                                = "
    tree.end
    tree "SMBCHG_OTG_TR_PWR_TRB_A"
      sgroup "SMBCHG_OTG_TR_PWR_TRB_A (at 0x11fb)"
        set &access:&cmd_addr %l (0x8011fb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11fb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TR_PWR_TRB_A                             = "
    tree.end
    tree "SMBCHG_OTG_TR_PWR_TRB_B"
      sgroup "SMBCHG_OTG_TR_PWR_TRB_B (at 0x11fc)"
        set &access:&cmd_addr %l (0x8011fc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11fc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TR_PWR_TRB_B                             = "
    tree.end
    tree "SMBCHG_OTG_TR_PWR_TRS"
      sgroup "SMBCHG_OTG_TR_PWR_TRS (at 0x11fd)"
        set &access:&cmd_addr %l (0x8011fd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11fd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TR_PWR_TRS                               = "
    tree.end
    tree "SMBCHG_OTG_TR_PWR_TR_BGTR"
      sgroup "SMBCHG_OTG_TR_PWR_TR_BGTR (at 0x11fe)"
        set &access:&cmd_addr %l (0x8011fe0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11fe0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TR_PWR_TR_BGTR                           = "
    tree.end
    tree "SMBCHG_OTG_LOW_PWR_OPTIONS"
      sgroup "SMBCHG_OTG_LOW_PWR_OPTIONS (at 0x11ff)"
        set &access:&cmd_addr %l (0x8011ff0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x11ff0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_PWR_OPTIONS                          = "
    tree.end
  tree.end
tree.end
tree "SMBCHG_USB_CHGPTH"
  tree "SMBCHG_USB_CHGPTH"
    tree "SMBCHG_USB_CHGPTH_PERPH_TYPE"
      sgroup "SMBCHG_USB_CHGPTH_PERPH_TYPE (at 0x1304)"
        set &access:&cmd_addr %l (0x8013040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_PERPH_SUBTYPE"
      sgroup "SMBCHG_USB_CHGPTH_PERPH_SUBTYPE (at 0x1305)"
        set &access:&cmd_addr %l (0x8013050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_ICL_STS_1"
      sgroup "SMBCHG_USB_CHGPTH_ICL_STS_1 (at 0x1307)"
        set &access:&cmd_addr %l (0x8013070|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13070|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_STS                                 = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   ICL_STS                                  = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_PWR_PTH_STS"
      sgroup "SMBCHG_USB_CHGPTH_PWR_PTH_STS (at 0x1308)"
        set &access:&cmd_addr %l (0x8013080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   POWER_PATH                               = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_USB_CHGPTH_ICL_STS_2"
      sgroup "SMBCHG_USB_CHGPTH_ICL_STS_2 (at 0x1309)"
        set &access:&cmd_addr %l (0x8013090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   AICL_STS                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   ICL_MODE                                 = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   USBIN_SUSPEND_STS                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DCIN_SUSPEND_STS                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_ACTIVE_PWR_SRC                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DCIN_ACTIVE_PWR_SRC                      = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_APSD_DG_STS"
      sgroup "SMBCHG_USB_CHGPTH_APSD_DG_STS (at 0x130a)"
        set &access:&cmd_addr %l (0x80130a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DCD_TIMEOUT                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DCD_GOOD_DG                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OCD_GOOD_DG                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RID_ABC_DG                               = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_RID_STS"
      sgroup "SMBCHG_USB_CHGPTH_RID_STS (at 0x130b)"
        set &access:&cmd_addr %l (0x80130b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   RID_STS                                  = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_HVDCP_STS"
      sgroup "SMBCHG_USB_CHGPTH_HVDCP_STS (at 0x130c)"
        set &access:&cmd_addr %l (0x80130c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   IDEV_HVDCP_SEL_A                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HVDCP_SEL_20V                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   HVDCP_SEL_12V                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HVDCP_SEL_9V                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HVDCP_SEL_5V                             = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INPUT_STS"
      sgroup "SMBCHG_USB_CHGPTH_INPUT_STS (at 0x130d)"
        set &access:&cmd_addr %l (0x80130d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x5 "  [ 5: 3]   USBIN_INPUT_STS                          = " "0, 1, 2, 3, 4, 5, 6, 7"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DCIN_INPUT_STS                           = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "SMBCHG_USB_CHGPTH_USBID_VALID_ID_11_8"
      sgroup "SMBCHG_USB_CHGPTH_USBID_VALID_ID_11_8 (at 0x130e)"
        set &access:&cmd_addr %l (0x80130e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   USBID_VALID_ID_11_8                      = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_USBID_VALID_ID_7_0"
      sgroup "SMBCHG_USB_CHGPTH_USBID_VALID_ID_7_0 (at 0x130f)"
        set &access:&cmd_addr %l (0x80130f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x130f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   USBID_VALID_ID_7_0                       = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_RT_STS"
      sgroup "SMBCHG_USB_CHGPTH_INT_RT_STS (at 0x1310)"
        set &access:&cmd_addr %l (0x8013100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_RT_STS                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_RT_STS                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_RT_STS                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_RT_STS                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_RT_STS                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_RT_STS                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_RT_STS                          = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_SET_TYPE"
      sgroup "SMBCHG_USB_CHGPTH_INT_SET_TYPE (at 0x1311)"
        set &access:&cmd_addr %l (0x8013110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_TYPE                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_TYPE                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_TYPE                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_TYPE                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_TYPE                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_TYPE                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_TYPE                            = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_POLARITY_HIGH"
      sgroup "SMBCHG_USB_CHGPTH_INT_POLARITY_HIGH (at 0x1312)"
        set &access:&cmd_addr %l (0x8013120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_HIGH                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_HIGH                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_HIGH                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_HIGH                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_HIGH                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_HIGH                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_HIGH                            = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_POLARITY_LOW"
      sgroup "SMBCHG_USB_CHGPTH_INT_POLARITY_LOW (at 0x1313)"
        set &access:&cmd_addr %l (0x8013130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_LOW                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_LOW                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_LOW                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_LOW                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_LOW                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_LOW                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_LOW                             = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_LATCHED_CLR"
      sgroup "SMBCHG_USB_CHGPTH_INT_LATCHED_CLR (at 0x1314)"
        set &access:&cmd_addr %l (0x8013140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_LATCHED_CLR            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_LATCHED_CLR            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_LATCHED_CLR                     = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_EN_SET"
      sgroup "SMBCHG_USB_CHGPTH_INT_EN_SET (at 0x1315)"
        set &access:&cmd_addr %l (0x8013150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_EN_SET                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_EN_SET                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_EN_SET                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_EN_SET                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_EN_SET                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_EN_SET                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_EN_SET                          = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_EN_CLR"
      sgroup "SMBCHG_USB_CHGPTH_INT_EN_CLR (at 0x1316)"
        set &access:&cmd_addr %l (0x8013160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_EN_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_EN_CLR                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_EN_CLR                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_EN_CLR                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_EN_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_EN_CLR                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_EN_CLR                          = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_LATCHED_STS"
      sgroup "SMBCHG_USB_CHGPTH_INT_LATCHED_STS (at 0x1318)"
        set &access:&cmd_addr %l (0x8013180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_LATCHED_STS            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_LATCHED_STS                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_LATCHED_STS              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_LATCHED_STS                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_LATCHED_STS            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_LATCHED_STS                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_LATCHED_STS                     = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_PENDING_STS"
      sgroup "SMBCHG_USB_CHGPTH_INT_PENDING_STS (at 0x1319)"
        set &access:&cmd_addr %l (0x8013190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_PENDING_STS            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_PENDING_STS                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_PENDING_STS              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_PENDING_STS                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_PENDING_STS            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_PENDING_STS                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_PENDING_STS                     = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_MID_SEL"
      sgroup "SMBCHG_USB_CHGPTH_INT_MID_SEL (at 0x131a)"
        set &access:&cmd_addr %l (0x80131a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x131a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_PRIORITY"
      sgroup "SMBCHG_USB_CHGPTH_INT_PRIORITY (at 0x131b)"
        set &access:&cmd_addr %l (0x80131b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x131b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_CMD_IL"
      sgroup "SMBCHG_USB_CHGPTH_CMD_IL (at 0x1340)"
        set &access:&cmd_addr %l (0x8013400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BAT_2_SYS_FET_DIS                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   USBIN_SUSPEND                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DCIN_SUSPEND                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ICL_OVERRIDE                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USB51_MODE                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_MODE_CHG                           = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_IUSB_MAX"
      sgroup "SMBCHG_USB_CHGPTH_IUSB_MAX (at 0x1344)"
        set &access:&cmd_addr %l (0x8013440|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13440|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   IUSB_MAX                                 = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_ENUM_TIMER_STOP"
      sgroup "SMBCHG_USB_CHGPTH_ENUM_TIMER_STOP (at 0x134e)"
        set &access:&cmd_addr %l (0x80134e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x134e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STOP                                     = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_SEC_ACCESS"
      sgroup "SMBCHG_USB_CHGPTH_SEC_ACCESS (at 0x13d0)"
        set &access:&cmd_addr %l (0x8013d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_PERPH_RESET_CTL2"
      sgroup "SMBCHG_USB_CHGPTH_PERPH_RESET_CTL2 (at 0x13d9)"
        set &access:&cmd_addr %l (0x8013d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_PERPH_RESET_CTL3"
      sgroup "SMBCHG_USB_CHGPTH_PERPH_RESET_CTL3 (at 0x13da)"
        set &access:&cmd_addr %l (0x8013da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_PERPH_RESET_CTL4"
      sgroup "SMBCHG_USB_CHGPTH_PERPH_RESET_CTL4 (at 0x13db)"
        set &access:&cmd_addr %l (0x8013db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_SPARE"
      sgroup "SMBCHG_USB_CHGPTH_SPARE (at 0x13df)"
        set &access:&cmd_addr %l (0x8013df0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13df0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_TEST1"
      sgroup "SMBCHG_USB_CHGPTH_INT_TEST1 (at 0x13e0)"
        set &access:&cmd_addr %l (0x8013e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_INT_TEST_VAL"
      sgroup "SMBCHG_USB_CHGPTH_INT_TEST_VAL (at 0x13e1)"
        set &access:&cmd_addr %l (0x8013e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBID_CHANGE_INTR_INT_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   AICL_DONE_INT_VAL                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   OTG_OVERCURRENT_INT_VAL                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OTG_FAIL_INT_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USBIN_SRC_DET_STS_INT_VAL                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USBIN_OV_INT_VAL                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USBIN_UV_INT_VAL                         = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_TM_EN_ATEST_USBIN"
      sgroup "SMBCHG_USB_CHGPTH_TM_EN_ATEST_USBIN (at 0x13e2)"
        set &access:&cmd_addr %l (0x8013e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TM_EN_ATEST_USBIN                        = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_TEST_63_56"
      sgroup "SMBCHG_USB_CHGPTH_TEST_63_56 (at 0x13e3)"
        set &access:&cmd_addr %l (0x8013e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_63_56                               = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_TEST_23_16"
      sgroup "SMBCHG_USB_CHGPTH_TEST_23_16 (at 0x13e4)"
        set &access:&cmd_addr %l (0x8013e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_23_16                               = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_TEST_31_24"
      sgroup "SMBCHG_USB_CHGPTH_TEST_31_24 (at 0x13e5)"
        set &access:&cmd_addr %l (0x8013e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TEST_31_24                               = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_TRIM_NUM"
      sgroup "SMBCHG_USB_CHGPTH_TRIM_NUM (at 0x13f0)"
        set &access:&cmd_addr %l (0x8013f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_USBIN_CHGR_CFG"
      sgroup "SMBCHG_USB_CHGPTH_USBIN_CHGR_CFG (at 0x13f1)"
        set &access:&cmd_addr %l (0x8013f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ADAPTER_ALLOWANCE                        = " "0 (USBIN_ADAPTER_ALLOWANCE_5V),1 (USBIN_ADAPTER_ALLOWANCE_5V_9V),2 (USBIN_ADAPTER_ALLOWANCE_5V_TO_9V),3 (USBIN_ADAPTER_ALLOWANCE_9V),4 (USBIN_ADAPTER_ALLOWANCE_5V_UNREG),5 (USBIN_ADAPTER_ALLOWANCE_5V_9V_UNREG),6 (reserved),7 (reserved)"
    tree.end
    tree "SMBCHG_USB_CHGPTH_USBIN_IL_CFG"
      sgroup "SMBCHG_USB_CHGPTH_USBIN_IL_CFG (at 0x13f2)"
        set &access:&cmd_addr %l (0x8013f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   CURRENT_LIMIT                            = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_USB_AICL_CFG"
      sgroup "SMBCHG_USB_CHGPTH_USB_AICL_CFG (at 0x13f3)"
        set &access:&cmd_addr %l (0x8013f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   OV_OPTION                                = " "0 (USB_OV_BLOCK),1 (USB_OV_NO_BLOCK)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DEB_9V_ADAPTER_EN                        = " "0 (USB_COLLAPSE_GF_NORMAL),1 (USB_COLLAPSE_GF_6P3)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DEB_9V_ADAPTER_SEL                       = " "0 (USB_COLLAPSE_9VGF_20MS20MS),1 (USB_COLLAPSE_9VGF_15US20MS)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DEB_5V_ADAPTER_SEL                       = " "0 (USB_COLLAPSE_5VGF_20MS20MS),1 (USB_COLLAPSE_5VGF_15US20MS)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   AICL                                     = " "0 (USB_AICL_DISABLED),1 (USB_AICL_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DEB_HV_ADAPTER                           = " "0 (USB_COLLAPSE_HV_FET_ON),1 (USB_COLLAPSE_HV_FET_OFF)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DEB_LV_ADAPTER                           = " "0 (USB_COLLAPSE_LV_FET_ON),1 (USB_COLLAPSE_LV_FET_OFF)"
    tree.end
    tree "SMBCHG_USB_CHGPTH_CFG"
      sgroup "SMBCHG_USB_CHGPTH_CFG (at 0x13f4)"
        set &access:&cmd_addr %l (0x8013f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CFG_USB3P0_SEL                           = " "0 (USB_2P0_SEL),1 (USB_3P0_SEL)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USBIN_SUSPEND_SRC                        = " "0 (BATID_UNKNOWN_CHARGE),1 (BATID_UNKNOWN_NO_CHARGE)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   HVDCP_ADAPTER_SEL                        = " "0 (HVDCP_5V),1 (HVDCP_9V),2 (reserved),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HVDCP_EN                                 = " "0 (HVDCP_DISABLE),1 (HVDCP_ENABLE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   USB51_COMMAND_POL                        = " "0 (USB51AC_COMMAND1_500),1 (USB51AC_COMMAND1_100)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USB51AC_CTRL                             = " "0 (USB51_COMMAND_CONTROL),1 (USB51_PIN_CONTROL)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   USB51AC_PIN_CTRL                         = " "0 (USB51AC_TRISTATE),1 (USB51AC_DUALSTATE)"
    tree.end
    tree "SMBCHG_USB_CHGPTH_APSD_CFG"
      sgroup "SMBCHG_USB_CHGPTH_APSD_CFG (at 0x13f5)"
        set &access:&cmd_addr %l (0x8013f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INPUT_PRIORITY                           = " "0 (DCIN_PRIORITY),1 (USBIN_PRIORITY)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   USB_FAIL_OPTION                          = " "0 (USB_FAIL_NORMAL),1 (USB_FAIL_POK_HV)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OCD_ISEL                                 = " "0 (OCD_ISEL_500),1 (OCD_ISEL_HC)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SDP_SUSPEND                              = " "0 (SDP_NORMAL),1 (SDP_SUSPEND)"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   RID_CLK_SEL                              = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   USB_RID                                  = " "0 (DCD_DG_TMOUT),1 (DCD_TMOUT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   AUTO_SRC_DETECT                          = " "0 (AUTO_SRC_DETECT_DIS),1 (AUTO_SRC_DETECT_EN)"
    tree.end
    tree "SMBCHG_USB_CHGPTH_TRIM6"
      sgroup "SMBCHG_USB_CHGPTH_TRIM6 (at 0x13f6)"
        set &access:&cmd_addr %l (0x8013f60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   TR_SYSON_ILIM                            = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   TR_SYSON_LDO                             = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "SMBCHG_USB_CHGPTH_TR_USB100_SNS"
      sgroup "SMBCHG_USB_CHGPTH_TR_USB100_SNS (at 0x13f7)"
        set &access:&cmd_addr %l (0x8013f70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TR_USB100_SNS                            = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_TR_USB500_SNS"
      sgroup "SMBCHG_USB_CHGPTH_TR_USB500_SNS (at 0x13f8)"
        set &access:&cmd_addr %l (0x8013f80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TR_USB500_SNS                            = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_TRIM9"
      sgroup "SMBCHG_USB_CHGPTH_TRIM9 (at 0x13f9)"
        set &access:&cmd_addr %l (0x8013f90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13f90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   TR_IINOS_USBL                            = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_IINOS_USB                             = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_TR_RID"
      sgroup "SMBCHG_USB_CHGPTH_TR_RID (at 0x13fa)"
        set &access:&cmd_addr %l (0x8013fa0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13fa0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   RID_SEL_CFG                              = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   TR_RID                                   = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "SMBCHG_USB_CHGPTH_TRIM11"
      sgroup "SMBCHG_USB_CHGPTH_TRIM11 (at 0x13fb)"
        set &access:&cmd_addr %l (0x8013fb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13fb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   SYSON_CFG                                = " "0 (SYSON_OTG_BATT),1 (SYSON_OTG_BATT_USBMID),2 (SYSON_OTG_USBMID),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   TR_DPDM_PUP                              = " "0, 1, 2, 3"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_DPLUS                                 = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_NEAL6"
      sgroup "SMBCHG_USB_CHGPTH_NEAL6 (at 0x13fc)"
        set &access:&cmd_addr %l (0x8013fc0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13fc0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_IIN_OPT                               = " "0 (EN_IIN_BUF_SS_DONE),1 (EN_IIN_BUF_SYSON_LDO)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OC_OPT                                   = " "0 (VSYS_SHORT_DIS),1 (VSYS_SHORT_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SYSON_OPT                                = " "0 (SYSON_LDO_DEFAULT),1 (SYSON_LDO_INPUT_FET_ON)"
    tree.end
    tree "SMBCHG_USB_CHGPTH_TR_USBIN_DIVIDER"
      sgroup "SMBCHG_USB_CHGPTH_TR_USBIN_DIVIDER (at 0x13fd)"
        set &access:&cmd_addr %l (0x8013fd0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13fd0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   TR_USBIN_DIVIDER                         = "
    tree.end
    tree "SMBCHG_USB_CHGPTH_TR_8OR32B"
      sgroup "SMBCHG_USB_CHGPTH_TR_8OR32B (at 0x13fe)"
        set &access:&cmd_addr %l (0x8013fe0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13fe0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x2--0x7 1 "  [ 7: 2]   TR_ISENSE_LOW_CURR                       = "
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TR_8OR32B                                = " "0, 1"
    tree.end
    tree "SMBCHG_USB_CHGPTH_WI_PWR_OPTIONS"
      sgroup "SMBCHG_USB_CHGPTH_WI_PWR_OPTIONS (at 0x13ff)"
        set &access:&cmd_addr %l (0x8013ff0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x13ff0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BUCK_HOLDOFF_ENABLE                      = " "0 (WIPWR_BUCK_HOLDOFF_DIS),1 (WIPWR_BUCK_HOLDOFF_EN)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   CHG_OK_HW_SW_SELECT                      = " "0 (CHG_OK_SW),1 (CHG_OK_HW)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   WIPWR_RST_ENABLE                         = " "0 (WIPWR_RST_DIS),1 (WIPWR_RST_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DCIN_WIPWR_IRQ_SELECT                    = " "0 (DCIN_IRQ_SEL),1 (WIPWR_IRQ_SEL)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   AICL_SWITCH_ENABLE                       = " "0 (WIPWR_AICL_SWITCH_DIS),1 (WIPWR_AICL_SWITCH_EN)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ZIN_ICL_ENABLE                           = " "0 (ICL_CHARGER_REGS),1 (ICL_WIPWR_REGS)"
    tree.end
  tree.end
tree.end
tree "SPMI"
  tree "SPMI"
    tree "SPMI_REVISION1"
      sgroup "SPMI_REVISION1 (at 0x600)"
        set &access:&cmd_addr %l (0x8006000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "SPMI_REVISION2"
      sgroup "SPMI_REVISION2 (at 0x601)"
        set &access:&cmd_addr %l (0x8006010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "SPMI_REVISION3"
      sgroup "SPMI_REVISION3 (at 0x602)"
        set &access:&cmd_addr %l (0x8006020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "SPMI_REVISION4"
      sgroup "SPMI_REVISION4 (at 0x603)"
        set &access:&cmd_addr %l (0x8006030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "SPMI_PERPH_TYPE"
      sgroup "SPMI_PERPH_TYPE (at 0x604)"
        set &access:&cmd_addr %l (0x8006040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "SPMI_PERPH_SUBTYPE"
      sgroup "SPMI_PERPH_SUBTYPE (at 0x605)"
        set &access:&cmd_addr %l (0x8006050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "SPMI_ERROR_SYNDROME"
      sgroup "SPMI_ERROR_SYNDROME (at 0x608)"
        set &access:&cmd_addr %l (0x8006080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERROR_SYNDROME                           = "
    tree.end
    tree "SPMI_ERROR_DATA"
      sgroup "SPMI_ERROR_DATA (at 0x60b)"
        set &access:&cmd_addr %l (0x80060b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERROR_DATA                               = "
    tree.end
    tree "SPMI_ERROR_ADDR_LO"
      sgroup "SPMI_ERROR_ADDR_LO (at 0x60c)"
        set &access:&cmd_addr %l (0x80060c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERROR_ADDR_LO                            = "
    tree.end
    tree "SPMI_ERROR_ADDR_MD"
      sgroup "SPMI_ERROR_ADDR_MD (at 0x60d)"
        set &access:&cmd_addr %l (0x80060d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ERROR_ADDR_MD                            = "
    tree.end
    tree "SPMI_ERROR_ADDR_HI"
      sgroup "SPMI_ERROR_ADDR_HI (at 0x60e)"
        set &access:&cmd_addr %l (0x80060e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x60e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ERROR_ADDR_HI                            = "
    tree.end
    tree "SPMI_INT_RT_STS"
      sgroup "SPMI_INT_RT_STS (at 0x610)"
        set &access:&cmd_addr %l (0x8006100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_RT_STS                          = " "0, 1"
    tree.end
    tree "SPMI_INT_SET_TYPE"
      sgroup "SPMI_INT_SET_TYPE (at 0x611)"
        set &access:&cmd_addr %l (0x8006110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_TYPE                            = " "0, 1"
    tree.end
    tree "SPMI_INT_POLARITY_HIGH"
      sgroup "SPMI_INT_POLARITY_HIGH (at 0x612)"
        set &access:&cmd_addr %l (0x8006120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_HIGH                            = " "0, 1"
    tree.end
    tree "SPMI_INT_POLARITY_LOW"
      sgroup "SPMI_INT_POLARITY_LOW (at 0x613)"
        set &access:&cmd_addr %l (0x8006130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_LOW                             = " "0, 1"
    tree.end
    tree "SPMI_INT_LATCHED_CLR"
      sgroup "SPMI_INT_LATCHED_CLR (at 0x614)"
        set &access:&cmd_addr %l (0x8006140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_LATCHED_CLR                     = " "0, 1"
    tree.end
    tree "SPMI_INT_EN_SET"
      sgroup "SPMI_INT_EN_SET (at 0x615)"
        set &access:&cmd_addr %l (0x8006150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_EN_SET                          = " "0, 1"
    tree.end
    tree "SPMI_INT_EN_CLR"
      sgroup "SPMI_INT_EN_CLR (at 0x616)"
        set &access:&cmd_addr %l (0x8006160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_EN_CLR                          = " "0, 1"
    tree.end
    tree "SPMI_INT_LATCHED_STS"
      sgroup "SPMI_INT_LATCHED_STS (at 0x618)"
        set &access:&cmd_addr %l (0x8006180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_LATCHED_STS                     = " "0, 1"
    tree.end
    tree "SPMI_INT_PENDING_STS"
      sgroup "SPMI_INT_PENDING_STS (at 0x619)"
        set &access:&cmd_addr %l (0x8006190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_PENDING_STS                     = " "0, 1"
    tree.end
    tree "SPMI_INT_MID_SEL"
      sgroup "SPMI_INT_MID_SEL (at 0x61a)"
        set &access:&cmd_addr %l (0x80061a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "SPMI_INT_PRIORITY"
      sgroup "SPMI_INT_PRIORITY (at 0x61b)"
        set &access:&cmd_addr %l (0x80061b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x61b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "SPMI_SPMI_BUF_CFG"
      sgroup "SPMI_SPMI_BUF_CFG (at 0x640)"
        set &access:&cmd_addr %l (0x8006400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BUFFER_STRENGTH                          = " "0 (LOW10PF),1 (MID20PF),2 (HIGH40PF),3 (VERYHIGH50PF)"
    tree.end
    tree "SPMI_SSC_DETECT_CFG"
      sgroup "SPMI_SSC_DETECT_CFG (at 0x641)"
        set &access:&cmd_addr %l (0x8006410|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6410|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SSC_DETECT_CFG                           = " "0 (WINDOW_DISABLED_Q1_DELAY_ENABLED),1 (WINDOW_DISABLED_Q1_DELAY_DISABLED),2 (WINDOW_ENABLED_Q1_DELAY_ENABLED),3 (WINDOW_ENABLED_Q1_DELAY_DISABLED),4 (reserved),5 (reserved),6 (reserved),7 (reserved)"
    tree.end
    tree "SPMI_SEC_ACCESS"
      sgroup "SPMI_SEC_ACCESS (at 0x6d0)"
        set &access:&cmd_addr %l (0x8006d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "SPMI_PERPH_RESET_CTL2"
      sgroup "SPMI_PERPH_RESET_CTL2 (at 0x6d9)"
        set &access:&cmd_addr %l (0x8006d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "SPMI_PERPH_RESET_CTL3"
      sgroup "SPMI_PERPH_RESET_CTL3 (at 0x6da)"
        set &access:&cmd_addr %l (0x8006da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "SPMI_PERPH_RESET_CTL4"
      sgroup "SPMI_PERPH_RESET_CTL4 (at 0x6db)"
        set &access:&cmd_addr %l (0x8006db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "SPMI_INT_TEST1"
      sgroup "SPMI_INT_TEST1 (at 0x6e0)"
        set &access:&cmd_addr %l (0x8006e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_DISABLED),1 (INT_TEST_MODE_ENABLED)"
    tree.end
    tree "SPMI_INT_TEST_VAL"
      sgroup "SPMI_INT_TEST_VAL (at 0x6e1)"
        set &access:&cmd_addr %l (0x8006e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_INT_TEST_VAL                        = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "SPMI_TEST1"
      sgroup "SPMI_TEST1 (at 0x6e2)"
        set &access:&cmd_addr %l (0x8006e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   DTEST_EN                                 = "
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SPMI_DTEST_BYP                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   DTEST_SEL                                = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
  tree.end
tree.end
tree "SPMI_OPTIONS"
  tree "SPMI_OPTIONS"
    tree "SPMI_OPTIONS_SPMI_ON"
      sgroup "SPMI_OPTIONS_SPMI_ON (at 0x20643)"
        set &access:&cmd_addr %l (0x8006430|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6430|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SPMI_ON                                  = " "0 (SPMI_IS_OFF),1 (SPMI_IS_ON)"
    tree.end
    tree "SPMI_OPTIONS_SPMI_SLAVE_ID0"
      sgroup "SPMI_OPTIONS_SPMI_SLAVE_ID0 (at 0x20644)"
        set &access:&cmd_addr %l (0x8006440|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6440|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SPMI_SLAVE_ID0                           = "
    tree.end
    tree "SPMI_OPTIONS_SPMI_SLAVE_ID1"
      sgroup "SPMI_OPTIONS_SPMI_SLAVE_ID1 (at 0x20645)"
        set &access:&cmd_addr %l (0x8006450|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6450|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SPMI_SLAVE_ID1                           = "
    tree.end
    tree "SPMI_OPTIONS_SPMI_GROUP_ID0"
      sgroup "SPMI_OPTIONS_SPMI_GROUP_ID0 (at 0x20646)"
        set &access:&cmd_addr %l (0x8006460|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6460|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SPMI_GROUP_ID0                           = "
    tree.end
    tree "SPMI_OPTIONS_SPMI_GROUP_ID1"
      sgroup "SPMI_OPTIONS_SPMI_GROUP_ID1 (at 0x20647)"
        set &access:&cmd_addr %l (0x8006470|((&sid+0x2)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x6470|((&sid+0x2)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SPMI_GROUP_ID1                           = "
    tree.end
  tree.end
tree.end
tree "TRIM"
  tree "TRIM"
    tree "TRIM_REVISION1"
      sgroup "TRIM_REVISION1 (at 0xfe00)"
        set &access:&cmd_addr %l (0x80fe000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "TRIM_REVISION2"
      sgroup "TRIM_REVISION2 (at 0xfe01)"
        set &access:&cmd_addr %l (0x80fe010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "TRIM_REVISION3"
      sgroup "TRIM_REVISION3 (at 0xfe02)"
        set &access:&cmd_addr %l (0x80fe020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "TRIM_REVISION4"
      sgroup "TRIM_REVISION4 (at 0xfe03)"
        set &access:&cmd_addr %l (0x80fe030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "TRIM_PERPH_TYPE"
      sgroup "TRIM_PERPH_TYPE (at 0xfe04)"
        set &access:&cmd_addr %l (0x80fe040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "TRIM_PERPH_SUBTYPE"
      sgroup "TRIM_PERPH_SUBTYPE (at 0xfe05)"
        set &access:&cmd_addr %l (0x80fe050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "TRIM_TRIM_REG_INIT_STATUS"
      sgroup "TRIM_TRIM_REG_INIT_STATUS (at 0xfe08)"
        set &access:&cmd_addr %l (0x80fe080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   TRIM_OTP_NOT_PROG                        = " "0 (OTP_PROGRAMMED),1 (OTP_NOT_PROGRAMMED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SW_TRIM_REG_INIT_EXEC                    = " "0 (TRIM_NOT_RUN),1 (TRIM_COMPLETED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SW_TRIM_REG_INIT_ON                      = " "0 (TRIM_IDLE),1 (TRIM_ACTIVE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   HW_TRIM_REG_INIT_EXEC                    = " "0 (TRIM_NOT_RUN),1 (TRIM_COMPLETED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   HW_TRIM_REG_INIT_ON                      = " "0 (TRIM_IDLE),1 (TRIM_ACTIVE)"
    tree.end
    tree "TRIM_OTP_PROG_STATUS"
      sgroup "TRIM_OTP_PROG_STATUS (at 0xfe09)"
        set &access:&cmd_addr %l (0x80fe090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TRIM_OTP_ALREADY_PROG                    = " "0 (NO_ERROR),1 (DOUBLE_PROGRAMMING_DETECTED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OTP_PROG_EXEC                            = " "0 (PROGRAMMING_NOT_RUN),1 (PROGRAMMING_COMPLETED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TRIM_OTP_PROG_ON                         = " "0 (PROGRAMMING_IDLE),1 (PROGRAMMING_ACTIVE)"
    tree.end
    tree "TRIM_OTP_NUM_TRIM_REG_LSB"
      sgroup "TRIM_OTP_NUM_TRIM_REG_LSB (at 0xfe0a)"
        set &access:&cmd_addr %l (0x80fe0a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe0a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OTP_HA_LSB_DATA                          = "
    tree.end
    tree "TRIM_OTP_NUM_TRIM_REG_MSB"
      sgroup "TRIM_OTP_NUM_TRIM_REG_MSB (at 0xfe0b)"
        set &access:&cmd_addr %l (0x80fe0b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfe0b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   OTP_HA_MSB_DATA                          = "
    tree.end
    tree "TRIM_SEC_ACCESS"
      sgroup "TRIM_SEC_ACCESS (at 0xfed0)"
        set &access:&cmd_addr %l (0x80fed00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfed00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "TRIM_PERPH_RESET_CTL2"
      sgroup "TRIM_PERPH_RESET_CTL2 (at 0xfed9)"
        set &access:&cmd_addr %l (0x80fed90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfed90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RESET                 = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "TRIM_PERPH_RESET_CTL3"
      sgroup "TRIM_PERPH_RESET_CTL3 (at 0xfeda)"
        set &access:&cmd_addr %l (0x80feda0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfeda0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (RESET_IGNORED),1 (RESET_ARMED)"
    tree.end
    tree "TRIM_PERPH_RESET_CTL4"
      sgroup "TRIM_PERPH_RESET_CTL4 (at 0xfedb)"
        set &access:&cmd_addr %l (0x80fedb0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfedb0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "TRIM_TRIM_OTP_CFG1"
      sgroup "TRIM_TRIM_OTP_CFG1 (at 0xfee0)"
        set &access:&cmd_addr %l (0x80fee00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   TRIM_VPP_SEL                             = " "0 (DVDD),1 (VPP_EXT)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   TRIM_PPROG                               = " "0 (OTP_PROGRAMMING_DISABLED),1 (OTP_PROGRAMMING_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   TRIM_PTM                                 = " "0 (REGULAR_MODES),1 (RESERVED),2 (MARGIN_1_READ_MODE),3 (MARGIN_2_READ_MODE)"
    tree.end
    tree "TRIM_TRIM_OTP_CFG2"
      sgroup "TRIM_TRIM_OTP_CFG2 (at 0xfee1)"
        set &access:&cmd_addr %l (0x80fee10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_MARGIN_RD_WS                        = "
    tree.end
    tree "TRIM_TRIM_OTP_PROG_CTL"
      sgroup "TRIM_TRIM_OTP_PROG_CTL (at 0xfee2)"
        set &access:&cmd_addr %l (0x80fee20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   START_OTP_PROG                           = " "0 (NO_EFFECT),1 (START_OTP_PROGRAMMING)"
    tree.end
    tree "TRIM_TRIM_REG_INIT_CTL"
      sgroup "TRIM_TRIM_REG_INIT_CTL (at 0xfee3)"
        set &access:&cmd_addr %l (0x80fee30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SW_TRIM_START_COPY                       = " "0 (NO_EFFECT),1 (START_COPY)"
    tree.end
    tree "TRIM_TRIM_OTP_HA_CTL"
      sgroup "TRIM_TRIM_OTP_HA_CTL (at 0xfee4)"
        set &access:&cmd_addr %l (0x80fee40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   START_GET_OTP_HA                         = " "0 (NO_EFFECT),1 (READ_OTP_UPPER_BYTES)"
    tree.end
    tree "TRIM_TEST1"
      sgroup "TRIM_TEST1 (at 0xfee5)"
        set &access:&cmd_addr %l (0x80fee50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DTEST4_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   DTEST3_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   DTEST2_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   DTEST1_EN                                = " "0 (DTEST_DISABLED),1 (DTEST_ENABLED)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
    tree "TRIM_TEST_TRIM_CLK_REQ"
      sgroup "TRIM_TEST_TRIM_CLK_REQ (at 0xfee6)"
        set &access:&cmd_addr %l (0x80fee60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xfee60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   TEST_CLK_REQ                             = " "0 (TRIM_CLK_DISABLED),1 (TRIM_CLK_ENABLED)"
    tree.end
  tree.end
tree.end
tree "TRI_LED"
  tree "TRI_LED"
    tree "TRI_LED_REVISION1"
      sgroup "TRI_LED_REVISION1 (at 0x1d000)"
        set &access:&cmd_addr %l (0x80d0000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "TRI_LED_REVISION2"
      sgroup "TRI_LED_REVISION2 (at 0x1d001)"
        set &access:&cmd_addr %l (0x80d0010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "TRI_LED_REVISION3"
      sgroup "TRI_LED_REVISION3 (at 0x1d002)"
        set &access:&cmd_addr %l (0x80d0020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "TRI_LED_REVISION4"
      sgroup "TRI_LED_REVISION4 (at 0x1d003)"
        set &access:&cmd_addr %l (0x80d0030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "TRI_LED_PERPH_TYPE"
      sgroup "TRI_LED_PERPH_TYPE (at 0x1d004)"
        set &access:&cmd_addr %l (0x80d0040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "TRI_LED_PERPH_SUBTYPE"
      sgroup "TRI_LED_PERPH_SUBTYPE (at 0x1d005)"
        set &access:&cmd_addr %l (0x80d0050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "TRI_LED_DROPOUT_DET_STATUS"
      sgroup "TRI_LED_DROPOUT_DET_STATUS (at 0x1d008)"
        set &access:&cmd_addr %l (0x80d0080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   DROPOUT_DET_R                            = " "0 (NO_DROPOUT),1 (DROPOUT_DET)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   DROPOUT_DET_G                            = " "0 (NO_DROPOUT),1 (DROPOUT_DET)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_B                            = " "0 (NO_DROPOUT),1 (DROPOUT_DET)"
    tree.end
    tree "TRI_LED_DROPOUT_DET_STATUS_CLR"
      sgroup "TRI_LED_DROPOUT_DET_STATUS_CLR (at 0x1d009)"
        set &access:&cmd_addr %l (0x80d0090|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0090|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   STATUS_CLR                               = " "0 (NO_CLR),1 (CLR_STS)"
    tree.end
    tree "TRI_LED_INT_RT_STS"
      sgroup "TRI_LED_INT_RT_STS (at 0x1d010)"
        set &access:&cmd_addr %l (0x80d0100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_RT_STS                       = " "0, 1"
    tree.end
    tree "TRI_LED_INT_SET_TYPE"
      sgroup "TRI_LED_INT_SET_TYPE (at 0x1d011)"
        set &access:&cmd_addr %l (0x80d0110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_TYPE                         = " "0 (LEVEL),1 (EDGE)"
    tree.end
    tree "TRI_LED_INT_POLARITY_HIGH"
      sgroup "TRI_LED_INT_POLARITY_HIGH (at 0x1d012)"
        set &access:&cmd_addr %l (0x80d0120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_HIGH                         = " "0 (HIGH_TRIGGER_DISABLED),1 (HIGH_TRIGGER_ENABLED)"
    tree.end
    tree "TRI_LED_INT_POLARITY_LOW"
      sgroup "TRI_LED_INT_POLARITY_LOW (at 0x1d013)"
        set &access:&cmd_addr %l (0x80d0130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_LOW                          = " "0 (LOW_TRIGGER_DISABLED),1 (LOW_TRIGGER_ENABLED)"
    tree.end
    tree "TRI_LED_INT_LATCHED_CLR"
      sgroup "TRI_LED_INT_LATCHED_CLR (at 0x1d014)"
        set &access:&cmd_addr %l (0x80d0140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_LATCHED_CLR                  = " "0, 1"
    tree.end
    tree "TRI_LED_INT_EN_SET"
      sgroup "TRI_LED_INT_EN_SET (at 0x1d015)"
        set &access:&cmd_addr %l (0x80d0150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_EN_SET                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "TRI_LED_INT_EN_CLR"
      sgroup "TRI_LED_INT_EN_CLR (at 0x1d016)"
        set &access:&cmd_addr %l (0x80d0160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_EN_CLR                       = " "0 (INT_DISABLED),1 (INT_ENABLED)"
    tree.end
    tree "TRI_LED_INT_LATCHED_STS"
      sgroup "TRI_LED_INT_LATCHED_STS (at 0x1d018)"
        set &access:&cmd_addr %l (0x80d0180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_LATCHED_STS                  = " "0 (NO_INT_LATCHED),1 (INTERRUPT_LATCHED)"
    tree.end
    tree "TRI_LED_INT_PENDING_STS"
      sgroup "TRI_LED_INT_PENDING_STS (at 0x1d019)"
        set &access:&cmd_addr %l (0x80d0190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_PENDING_STS                  = " "0 (NO_INT_PENDING),1 (INTERRUPT_PENDING)"
    tree.end
    tree "TRI_LED_INT_MID_SEL"
      sgroup "TRI_LED_INT_MID_SEL (at 0x1d01a)"
        set &access:&cmd_addr %l (0x80d01a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd01a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0 (MID0),1 (MID1),2 (MID2),3 (MID3)"
    tree.end
    tree "TRI_LED_INT_PRIORITY"
      sgroup "TRI_LED_INT_PRIORITY (at 0x1d01b)"
        set &access:&cmd_addr %l (0x80d01b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd01b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "TRI_LED_LED_SRC_SEL"
      sgroup "TRI_LED_LED_SRC_SEL (at 0x1d045)"
        set &access:&cmd_addr %l (0x80d0450|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0450|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   LED_SRC_SEL                              = " "0 (SRC_GND),1 (SRC_VINRGB_VBOOST),2 (reserved),3 (SRC_VSYS)"
    tree.end
    tree "TRI_LED_EN_CTL"
      sgroup "TRI_LED_EN_CTL (at 0x1d046)"
        set &access:&cmd_addr %l (0x80d0460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RED_EN                                   = " "0 (RED_DIS),1 (RED_EN)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   GREEN_EN                                 = " "0 (GREEN_DIS),1 (GREEN_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BLUE_EN                                  = " "0 (BLUE_DIS),1 (BLUE_EN)"
    tree.end
    tree "TRI_LED_EN_CTL_ATC"
      sgroup "TRI_LED_EN_CTL_ATC (at 0x1d047)"
        set &access:&cmd_addr %l (0x80d0470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RED_ATC_EN                               = " "0 (RED_ATC_DISABLE),1 (RED_ATC_ENABLE)"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   GREEN_ATC_EN                             = " "0 (GREEN_ATC_DISABLE),1 (GREEN_ATC_ENABLE)"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   BLUE_ATC_EN                              = " "0 (BLUE_ATC_DISABLE),1 (BLUE_ATC_ENABLE)"
    tree.end
    tree "TRI_LED_DROPOUT_DET"
      sgroup "TRI_LED_DROPOUT_DET (at 0x1d050)"
        set &access:&cmd_addr %l (0x80d0500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_DROPOUT_DET                           = " "0 (DET_DIS),1 (DET_EN)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   DET_DEBOUNCE                             = " "0 (NO_DEBOUNCE),1 (DEBOUNCE_10US),2 (reserved),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   DET_SEL                                  = " "0 (VIN_RGB),1 (RED),2 (GREEN),3 (BLUE)"
    tree.end
    tree "TRI_LED_SEC_ACCESS"
      sgroup "TRI_LED_SEC_ACCESS (at 0x1d0d0)"
        set &access:&cmd_addr %l (0x80d0d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "TRI_LED_PERPH_RESET_CTL1"
      sgroup "TRI_LED_PERPH_RESET_CTL1 (at 0x1d0d8)"
        set &access:&cmd_addr %l (0x80d0d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (PRESET_DISABLE),1 (PRESET_ENABLE)"
    tree.end
    tree "TRI_LED_PERPH_RESET_CTL2"
      sgroup "TRI_LED_PERPH_RESET_CTL2 (at 0x1d0d9)"
        set &access:&cmd_addr %l (0x80d0d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "TRI_LED_PERPH_RESET_CTL3"
      sgroup "TRI_LED_PERPH_RESET_CTL3 (at 0x1d0da)"
        set &access:&cmd_addr %l (0x80d0da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "TRI_LED_PERPH_RESET_CTL4"
      sgroup "TRI_LED_PERPH_RESET_CTL4 (at 0x1d0db)"
        set &access:&cmd_addr %l (0x80d0db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (NORMAL_OPERATION),1 (SOFT_RESET_ASSERTED)"
    tree.end
    tree "TRI_LED_INT_TEST1"
      sgroup "TRI_LED_INT_TEST1 (at 0x1d0e0)"
        set &access:&cmd_addr %l (0x80d0e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (NO_REPLACE),1 (INV_TEST_VAL)"
    tree.end
    tree "TRI_LED_INT_TEST_VAL"
      sgroup "TRI_LED_INT_TEST_VAL (at 0x1d0e1)"
        set &access:&cmd_addr %l (0x80d0e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DROPOUT_DET_TEST_VAL                     = " "0 (TEST_VAL_0),1 (TEST_VAL_1)"
    tree.end
    tree "TRI_LED_TEST1"
      sgroup "TRI_LED_TEST1 (at 0x1d0e2)"
        set &access:&cmd_addr %l (0x80d0e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   CLOSE_LOOP_TEST_EN                       = " "0 (CL_TEST_DIS),1 (BLUE),2 (GREEN),3 (RED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   OPEN_LOOP_CAL_EN                         = " "0 (OL_CAL_DTEST2_DIS),1 (OL_CAL_DTEST2_EN)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ATEST_MODE_EN                            = " "0 (ATEST_DTEST2_DIS),1 (ATEST_DTEST2_EN)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   PWM_SEL                                  = " "0 (LPG_PWM),1 (DTEST1)"
    tree.end
    tree "TRI_LED_TRIM_NUM"
      sgroup "TRI_LED_TRIM_NUM (at 0x1d0f0)"
        set &access:&cmd_addr %l (0x80d0f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TRIM_NUM                                 = "
    tree.end
    tree "TRI_LED_R_8MA_CURRENT_TRIM"
      sgroup "TRI_LED_R_8MA_CURRENT_TRIM (at 0x1d0f1)"
        set &access:&cmd_addr %l (0x80d0f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   R_8MA_CURRENT_TRIM                       = "
    tree.end
    tree "TRI_LED_G_8MA_CURRENT_TRIM"
      sgroup "TRI_LED_G_8MA_CURRENT_TRIM (at 0x1d0f2)"
        set &access:&cmd_addr %l (0x80d0f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   G_8MA_CURRENT_TRIM                       = "
    tree.end
    tree "TRI_LED_B_8MA_CURRENT_TRIM"
      sgroup "TRI_LED_B_8MA_CURRENT_TRIM (at 0x1d0f3)"
        set &access:&cmd_addr %l (0x80d0f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd0f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   B_8MA_CURRENT_TRIM                       = "
    tree.end
  tree.end
tree.end
tree "VADC1_USR"
  tree "VADC1_USR"
    tree "VADC1_USR_REVISION1"
      sgroup "VADC1_USR_REVISION1 (at 0x3100)"
        set &access:&cmd_addr %l (0x8031000|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31000|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "VADC1_USR_REVISION2"
      sgroup "VADC1_USR_REVISION2 (at 0x3101)"
        set &access:&cmd_addr %l (0x8031010|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31010|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "VADC1_USR_REVISION3"
      sgroup "VADC1_USR_REVISION3 (at 0x3102)"
        set &access:&cmd_addr %l (0x8031020|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31020|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "VADC1_USR_REVISION4"
      sgroup "VADC1_USR_REVISION4 (at 0x3103)"
        set &access:&cmd_addr %l (0x8031030|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31030|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "VADC1_USR_PERPH_TYPE"
      sgroup "VADC1_USR_PERPH_TYPE (at 0x3104)"
        set &access:&cmd_addr %l (0x8031040|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31040|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "VADC1_USR_PERPH_SUBTYPE"
      sgroup "VADC1_USR_PERPH_SUBTYPE (at 0x3105)"
        set &access:&cmd_addr %l (0x8031050|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31050|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "VADC1_USR_STATUS1"
      sgroup "VADC1_USR_STATUS1 (at 0x3108)"
        set &access:&cmd_addr %l (0x8031080|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31080|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   MEAS_INTERVAL_EN_STS                     = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   REQ_STS                                  = " "0 (REQ_NOT_IN_PROGRESS),1 (REQ_IN_PROGRESS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC                                      = " "0 (CONV_NOT_COMPLETE),1 (CONV_COMPLETE)"
    tree.end
    tree "VADC1_USR_STATUS2"
      sgroup "VADC1_USR_STATUS2 (at 0x3109)"
        set &access:&cmd_addr %l (0x8031090|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31090|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x3--0x7 1 "  [ 7: 3]   CONV_SEQ_STATE                           = "
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_FLAG                      = " "0 (FIFO_EMPTY_WHEN_REQ_MADE),1 (FIFO_NOT_EMPTY_WHEN_REQ_MADE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CONV_SEQ_TIMEOUT_STS                     = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
    tree.end
    tree "VADC1_USR_INT_RT_STS"
      sgroup "VADC1_USR_INT_RT_STS (at 0x3110)"
        set &access:&cmd_addr %l (0x8031100|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31100|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_RT_STS                   = " "0 (MIN_LOW_THR_INT_FALSE),1 (MIN_LOW_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_RT_STS                       = " "0 (LOW_THR_INT_FALSE),1 (LOW_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_RT_STS                      = " "0 (HIGH_THR_INT_FALSE),1 (HIGH_THR_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_RT_STS              = " "0 (CONV_SEQ_TIMEOUT_FALSE),1 (CONV_SEQ_TIMEOUT_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_RT_STS                = " "0 (FIFO_NOT_EMPTY_INT_FALSE),1 (FIFO_EMPTY_INT_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_RT_STS                           = " "0 (CONV_COMPLETE_INT_FALSE),1 (CONV_COMPLETE_INT_TRUE)"
    tree.end
    tree "VADC1_USR_INT_SET_TYPE"
      sgroup "VADC1_USR_INT_SET_TYPE (at 0x3111)"
        set &access:&cmd_addr %l (0x8031110|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31110|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_SET_TYPE                 = " "0 (MIN_LOW_THR_INT_LEVEL),1 (MIN_LOW_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_SET_TYPE                     = " "0 (LOW_THR_INT_LEVEL),1 (LOW_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_SET_TYPE                    = " "0 (HIGH_THR_INT_LEVEL),1 (HIGH_THR_INT_EDGE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_SET_TYPE            = " "0 (CONV_SEQ_TIMEOUT_LEVEL),1 (CONV_SEQ_TIMEOUT_EDGE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_SET_TYPE              = " "0 (FIFO_NOT_EMPTY_LEVEL),1 (FIFO_NOT_EMPTY_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_SET_INT_TYPE                         = " "0 (EOC_LEVEL),1 (EOC_EDGE)"
    tree.end
    tree "VADC1_USR_INT_POLARITY_HIGH"
      sgroup "VADC1_USR_INT_POLARITY_HIGH (at 0x3112)"
        set &access:&cmd_addr %l (0x8031120|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31120|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_HIGH                     = " "0 (MIN_LOW_THR_INT_POL_HIGH_DISABLED),1 (MIN_LOW_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_HIGH_DISABLED),1 (LOW_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_HIGH_DISABLED),1 (HIGH_THR_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_HIGH                = " "0 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_HIGH                  = " "0 (FIFO_NOT_EMPTY_INT_POL_HIGH_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_HIGH_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_HIGH                             = " "0 (EOC_INT_POL_HIGH_DISABLED),1 (EOC_INT_POL_HIGH_ENABLED)"
    tree.end
    tree "VADC1_USR_INT_POLARITY_LOW"
      sgroup "VADC1_USR_INT_POLARITY_LOW (at 0x3113)"
        set &access:&cmd_addr %l (0x8031130|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31130|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_HIGH                     = " "0 (MIN_LOW_THR_INT_POL_LOW_DISABLED),1 (MIN_LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_HIGH                         = " "0 (LOW_THR_INT_POL_LOW_DISABLED),1 (LOW_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_HIGH                        = " "0 (HIGH_THR_INT_POL_LOW_DISABLED),1 (HIGH_THR_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LOW                 = " "0 (CONV_SEQ_TIMEOUT_INT_POL_LOW_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LOW                   = " "0 (FIFO_NOT_EMPTY_INT_POL_LOW_DISABLED),1 (FIFO_NOT_EMPTY_INT_POL_LOW_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LOW                              = " "0 (EOC_INT_POL_LOW_DISABLED),1 (EOC_INT_POL_LOW_ENABLED)"
    tree.end
    tree "VADC1_USR_INT_LATCHED_CLR"
      sgroup "VADC1_USR_INT_LATCHED_CLR (at 0x3114)"
        set &access:&cmd_addr %l (0x8031140|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31140|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_LATCHED_CLR              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_CLR                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_CLR                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_CLR         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_CLR           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_CLR                      = " "0, 1"
    tree.end
    tree "VADC1_USR_INT_EN_SET"
      sgroup "VADC1_USR_INT_EN_SET (at 0x3115)"
        set &access:&cmd_addr %l (0x8031150|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31150|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_EN_SET                   = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_SET                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_SET                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_SET              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_SET                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_SET                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC1_USR_INT_EN_CLR"
      sgroup "VADC1_USR_INT_EN_CLR (at 0x3116)"
        set &access:&cmd_addr %l (0x8031160|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31160|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_EN_CLR                   = " "0 (MIN_LOW_THR_INT_DISABLED),1 (MIN_LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_EN_CLR                       = " "0 (LOW_THR_INT_DISABLED),1 (LOW_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_EN_CLR                      = " "0 (HIGH_THR_INT_DISABLED),1 (HIGH_THR_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_EN_CLR              = " "0 (CONV_SEQ_TIMEOUT_INT_DISABLED),1 (CONV_SEQ_TIMEOUT_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_EN_CLR                = " "0 (FIFO_NOT_EMPTY_INT_DISABLED),1 (FIFO_NOT_EMPTY_INT_ENBLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_EN_CLR                           = " "0 (EOC_INT_DISABLED),1 (EOC_INT_ENBLED)"
    tree.end
    tree "VADC1_USR_INT_LATCHED_STS"
      sgroup "VADC1_USR_INT_LATCHED_STS (at 0x3118)"
        set &access:&cmd_addr %l (0x8031180|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31180|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_LATCHED_STS              = " "0 (MIN_LOW_THR_INT_LATCHED_FALSE),1 (MIN_LOW_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_LATCHED_STS                  = " "0 (LOW_THR_INT_LATCHED_FALSE),1 (LOW_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_LATCHED_STS                 = " "0 (HIGH_THR_INT_LATCHED_FALSE),1 (HIGH_THR_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_LATCHED_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_LATCHED_FALSE),1 (CONV_SEQ_TIMEOUT_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_LATCHED_STS           = " "0 (FIFO_NOT_EMPTY_INT_LATCHED_FALSE),1 (FIFO_NOT_EMPTY_INT_LATCHED_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_LATCHED_STS                      = " "0 (EOC_INT_LATCHED_FALSE),1 (EOC_INT_LATCHED_TRUE)"
    tree.end
    tree "VADC1_USR_INT_PENDING_STS"
      sgroup "VADC1_USR_INT_PENDING_STS (at 0x3119)"
        set &access:&cmd_addr %l (0x8031190|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31190|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_PENDING_STS              = " "0 (MIN_LOW_THR_INT_PENDING_FALSE),1 (MIN_LOW_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_PENDING_STS                  = " "0 (LOW_THR_INT_PENDING_FALSE),1 (LOW_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_PENDING_STS                 = " "0 (HIGH_THR_INT_PENDING_FALSE),1 (HIGH_THR_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_PENDING_STS         = " "0 (CONV_SEQ_TIMEOUT_INT_PENDING_FALSE),1 (CONV_SEQ_TIMEOUT_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_PENDING_STS           = " "0 (FIFO_NOT_EMPTY_INT_PENDING_FALSE),1 (FIFO_NOT_EMPTY_INT_PENDING_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_PENDING_STS                      = " "0 (EOC_INT_PENDING_FALSE),1 (EOC_INT_PENDING_TRUE)"
    tree.end
    tree "VADC1_USR_INT_MID_SEL"
      sgroup "VADC1_USR_INT_MID_SEL (at 0x311a)"
        set &access:&cmd_addr %l (0x80311a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x311a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "VADC1_USR_INT_PRIORITY"
      sgroup "VADC1_USR_INT_PRIORITY (at 0x311b)"
        set &access:&cmd_addr %l (0x80311b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x311b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0 (SR),1 (A)"
    tree.end
    tree "VADC1_USR_MODE_CTL"
      sgroup "VADC1_USR_MODE_CTL (at 0x3140)"
        set &access:&cmd_addr %l (0x8031400|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31400|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   OP_MODE                                  = " "0 (NORM_MODE),1 (CONV_SEQ_MODE),2 (MEAS_INT_MODE),3 (reserved)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREF_XO_THM_FORCE                        = " "0 (VREF_XO_THM_FORCE_FALSE),1 (VREF_XO_THM_FORCE_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   AMUX_TRIM_EN                             = " "0 (AMUX_TRIM_DISABLED),1 (AMUX_TRIM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ADC_TRIM_EN                              = " "0 (ADC_TRIM_DISABLED),1 (ADC_TRIM_ENABLED)"
    tree.end
    tree "VADC1_USR_EN_CTL1"
      sgroup "VADC1_USR_EN_CTL1 (at 0x3146)"
        set &access:&cmd_addr %l (0x8031460|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31460|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   ADC_EN                                   = " "0 (ADC_DISABLED),1 (ADC_ENABLED)"
    tree.end
    tree "VADC1_USR_ADC_CH_SEL_CTL"
      sgroup "VADC1_USR_ADC_CH_SEL_CTL (at 0x3148)"
        set &access:&cmd_addr %l (0x8031480|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31480|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ADC_CH_SEL                               = "
    tree.end
    tree "VADC1_USR_ADC_DIG_PARAM"
      sgroup "VADC1_USR_ADC_DIG_PARAM (at 0x3150)"
        set &access:&cmd_addr %l (0x8031500|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31500|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   DEC_RATIO_SEL                            = " "0 (DECI_512),1 (DECI_1K),2 (DECI_2K),3 (DECI_4K)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CLK_SEL                                  = " "0 (CLK_SEL_2P4MHZ),1 (CLK_SEL_4P8MHZ),2 (CLK_SEL_9P6MHZ),3 (CLK_SEL_19P2MHZ)"
    tree.end
    tree "VADC1_USR_HW_SETTLE_DELAY"
      sgroup "VADC1_USR_HW_SETTLE_DELAY (at 0x3151)"
        set &access:&cmd_addr %l (0x8031510|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31510|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   HW_SETTLE_DELAY                          = "
    tree.end
    tree "VADC1_USR_CONV_REQ"
      sgroup "VADC1_USR_CONV_REQ (at 0x3152)"
        set &access:&cmd_addr %l (0x8031520|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31520|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REQ                                      = " "0 (CONV_REQ_FALSE),1 (CONV_REQ_TRUE)"
    tree.end
    tree "VADC1_USR_CONV_SEQ_CTL"
      sgroup "VADC1_USR_CONV_SEQ_CTL (at 0x3154)"
        set &access:&cmd_addr %l (0x8031540|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31540|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x4--0x7 1 "  [ 7: 4]   CONV_SEQ_HOLDOFF                         = "
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   CONV_SEQ_TIMEOUT                         = "
    tree.end
    tree "VADC1_USR_CONV_SEQ_TRIG_CTL"
      sgroup "VADC1_USR_CONV_SEQ_TRIG_CTL (at 0x3155)"
        set &access:&cmd_addr %l (0x8031550|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31550|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   CONV_SEQ_TRIG_COND                       = " "0 (FALLING_EDGE),1 (RISING_EDGE)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   CONV_SEQ_TRIG_SEL                        = " "0 (ADC_TRIG0),1 (ADC_TRIG1),2 (ADC_TRIG2),3 (ADC_TRIG3)"
    tree.end
    tree "VADC1_USR_MEAS_INTERVAL_CTL"
      sgroup "VADC1_USR_MEAS_INTERVAL_CTL (at 0x3157)"
        set &access:&cmd_addr %l (0x8031570|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31570|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   MEAS_INTERVAL_TIME                       = "
    tree.end
    tree "VADC1_USR_MEAS_INTERVAL_OP_CTL"
      sgroup "VADC1_USR_MEAS_INTERVAL_OP_CTL (at 0x3159)"
        set &access:&cmd_addr %l (0x8031590|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31590|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   MEAS_INTERVAL_OP                         = " "0 (INTERVAL_MODE_DISABLED),1 (INTERVAL_MODE_ENABLED)"
    tree.end
    tree "VADC1_USR_FAST_AVG_CTL"
      sgroup "VADC1_USR_FAST_AVG_CTL (at 0x315a)"
        set &access:&cmd_addr %l (0x80315a0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315a0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   FAST_AVG_SAMPLES                         = "
    tree.end
    tree "VADC1_USR_FAST_AVG_EN"
      sgroup "VADC1_USR_FAST_AVG_EN (at 0x315b)"
        set &access:&cmd_addr %l (0x80315b0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315b0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   FAST_AVG_EN                              = " "0 (FAST_AVG_DISABLED),1 (FAST_AVG_ENABLED)"
    tree.end
    tree "VADC1_USR_LOW_THR0"
      sgroup "VADC1_USR_LOW_THR0 (at 0x315c)"
        set &access:&cmd_addr %l (0x80315c0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315c0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_7_0                              = "
    tree.end
    tree "VADC1_USR_LOW_THR1"
      sgroup "VADC1_USR_LOW_THR1 (at 0x315d)"
        set &access:&cmd_addr %l (0x80315d0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315d0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LOW_THR_15_8                             = "
    tree.end
    tree "VADC1_USR_HIGH_THR0"
      sgroup "VADC1_USR_HIGH_THR0 (at 0x315e)"
        set &access:&cmd_addr %l (0x80315e0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315e0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_7_0                             = "
    tree.end
    tree "VADC1_USR_HIGH_THR1"
      sgroup "VADC1_USR_HIGH_THR1 (at 0x315f)"
        set &access:&cmd_addr %l (0x80315f0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x315f0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   HIGH_THR_15_8                            = "
    tree.end
    tree "VADC1_USR_DATA0"
      sgroup "VADC1_USR_DATA0 (at 0x3160)"
        set &access:&cmd_addr %l (0x8031600|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31600|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_7_0                                 = "
    tree.end
    tree "VADC1_USR_DATA1"
      sgroup "VADC1_USR_DATA1 (at 0x3161)"
        set &access:&cmd_addr %l (0x8031610|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31610|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DATA_15_8                                = "
    tree.end
    tree "VADC1_USR_MIN_LOW_THR0"
      sgroup "VADC1_USR_MIN_LOW_THR0 (at 0x3162)"
        set &access:&cmd_addr %l (0x8031620|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31620|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIN_LOW_THR_7_0                          = "
    tree.end
    tree "VADC1_USR_MIN_LOW_THR1"
      sgroup "VADC1_USR_MIN_LOW_THR1 (at 0x3163)"
        set &access:&cmd_addr %l (0x8031630|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31630|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIN_LOW_THR_15_8                         = "
    tree.end
    tree "VADC1_USR_MIN_DATA0"
      sgroup "VADC1_USR_MIN_DATA0 (at 0x3166)"
        set &access:&cmd_addr %l (0x8031660|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31660|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIN_DATA_7_0                             = "
    tree.end
    tree "VADC1_USR_MIN_DATA1"
      sgroup "VADC1_USR_MIN_DATA1 (at 0x3167)"
        set &access:&cmd_addr %l (0x8031670|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31670|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   MIN_DATA_15_8                            = "
    tree.end
    tree "VADC1_USR_SEC_ACCESS"
      sgroup "VADC1_USR_SEC_ACCESS (at 0x31d0)"
        set &access:&cmd_addr %l (0x8031d00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31d00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "VADC1_USR_PERPH_RESET_CTL1"
      sgroup "VADC1_USR_PERPH_RESET_CTL1 (at 0x31d8)"
        set &access:&cmd_addr %l (0x8031d80|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31d80|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0 (MODULE_DIS_AFTER_WARM_SOFT_RESET),1 (MODULE_EN_AFTER_WARM_SOFT_RESET)"
    tree.end
    tree "VADC1_USR_PERPH_RESET_CTL2"
      sgroup "VADC1_USR_PERPH_RESET_CTL2 (at 0x31d9)"
        set &access:&cmd_addr %l (0x8031d90|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31d90|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0 (FOLLOW_GLOBAL_SOFT_RESET_FALSE),1 (FOLLOW_GLOBAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC1_USR_PERPH_RESET_CTL3"
      sgroup "VADC1_USR_PERPH_RESET_CTL3 (at 0x31da)"
        set &access:&cmd_addr %l (0x8031da0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31da0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0 (FOLLOW_OTST2_RB_FALSE),1 (FOLLOW_OTST2_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0 (FOLLOW_WARM_RB_FALSE),1 (FOLLOW_WARM_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0 (FOLLOW_SHUTDOWN1_RB_FALSE),1 (FOLLOW_SHUTDOWN1_RB_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0 (FOLLOW_SHUTDOWN2_RB_FALSE),1 (FOLLOW_SHUTDOWN2_RB_TRUE)"
    tree.end
    tree "VADC1_USR_PERPH_RESET_CTL4"
      sgroup "VADC1_USR_PERPH_RESET_CTL4 (at 0x31db)"
        set &access:&cmd_addr %l (0x8031db0|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31db0|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0 (LOCAL_SOFT_RESET_FALSE),1 (LOCAL_SOFT_RESET_TRUE)"
    tree.end
    tree "VADC1_USR_INT_TEST1"
      sgroup "VADC1_USR_INT_TEST1 (at 0x31e0)"
        set &access:&cmd_addr %l (0x8031e00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0 (INT_TEST_MODE_FALSE),1 (INT_TEST_MODE_TRUE)"
    tree.end
    tree "VADC1_USR_INT_TEST_VAL"
      sgroup "VADC1_USR_INT_TEST_VAL (at 0x31e1)"
        set &access:&cmd_addr %l (0x8031e10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   MIN_LOW_THR_INT_TEST_VAL                 = " "0 (MIN_LOW_THR_INT_TEST_FALSE),1 (MIN_LOW_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   LOW_THR_INT_TEST_VAL                     = " "0 (LOW_THR_INT_TEST_FALSE),1 (LOW_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   HIGH_THR_INT_TEST_VAL                    = " "0 (HIGH_THR_INT_TEST_FALSE),1 (HIGH_THR_INT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CONV_SEQ_TIMEOUT_INT_TEST_VAL            = " "0 (CONV_SEQ_TIMEOUT_TEST_FALSE),1 (CONV_SEQ_TIMEOUT_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FIFO_NOT_EMPTY_INT_TEST_VAL              = " "0 (FIFO_NOT_EMPTY_TEST_FALSE),1 (FIFO_NOT_EMPTY_TEST_TRUE)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   EOC_INT_TEST_VAL                         = " "0 (EOC_TEST_FALSE),1 (EOC_TEST_TRUE)"
    tree.end
    tree "VADC1_USR_TEST1_ADC_ANA_PARAM"
      sgroup "VADC1_USR_TEST1_ADC_ANA_PARAM (at 0x31e2)"
        set &access:&cmd_addr %l (0x8031e20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   HS_MODE_EN                               = " "0 (DISABLE_HS_MODE_N),1 (ENABLE_HS_MODE_N)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   IOTA1_CTL                                = " "0 (OTA1_1UA_BIAS),1 (OTA1_2UA_BIAS),2 (OTA1_3UA_BIAS),3 (OTA1_4UA_BIAS)"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   IOTA2_CTL                                = " "0 (OTA2_1UA_BIAS),1 (OTA2_2UA_BIAS)"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   IBUF_CTL                                 = " "0 (REF_1UA_BIAS),1 (REF_2UA_BIAS)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   XOADC_EN                                 = " "0 (XOADC_MOD_DISABLED),1 (XOADC_MOD_ENABLED)"
    tree.end
    tree "VADC1_USR_TEST2_ADC_DIG_PARAM"
      sgroup "VADC1_USR_TEST2_ADC_DIG_PARAM (at 0x31e3)"
        set &access:&cmd_addr %l (0x8031e30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   DEM_EN                                   = " "0 (DEM_DISABLED),1 (DEM_ENABLED)"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CLK_GATE_EN                              = " "0 (CLK_GATE_DISABLED),1 (CLK_GATE_ENABLED)"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SEL_SHIFT                                = " "0 (DECI_SEL),1 (FILTOUT_15_0),2 (FILTOUT_25_16),3 (DECI_SEL1)"
    tree.end
    tree "VADC1_USR_TEST3_ADC_RSV"
      sgroup "VADC1_USR_TEST3_ADC_RSV (at 0x31e4)"
        set &access:&cmd_addr %l (0x8031e40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SINC_FILT_SEL                            = " "0 (SINC2_OUTPUT),1 (SINC1_OUTPUT)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RESET_SINC_FILT                          = " "0 (RESET_DIG_FILT_FALSE),1 (RESET_DIG_FILT_TRUE)"
    tree.end
    tree "VADC1_USR_TEST4_ADC_ATEST"
      sgroup "VADC1_USR_TEST4_ADC_ATEST (at 0x31e5)"
        set &access:&cmd_addr %l (0x8031e50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   REF_EN                                   = " "0 (DISABLE_XOADC_REF_VOLT),1 (ENABLE_XOADC_REF_VOLTAGE)"
      textline ""
      bitfld.long 0x0 0x5--0x6 "  [ 6: 5]   VICM_SEL                                 = " "0 (VICM_0P65),1 (VICM_0P70),2 (VICM_0P75),3 (VICM_OP80)"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   VOCM_SEL                                 = " "0 (VOCM_0P60),1 (VOCM_0P65),2 (VOCM_0P70),3 (VOCM_0P75)"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   ATEST_SEL                                = " "0 (ATEST3_DISABLED),1 (VTH_N),2 (VTH_P),3 (VICM),4 (VOCM),5 (VREFN),6 (VREFMID),7 (VREFP)"
    tree.end
    tree "VADC1_USR_TEST5_AMUX_ATEST"
      sgroup "VADC1_USR_TEST5_AMUX_ATEST (at 0x31e6)"
        set &access:&cmd_addr %l (0x8031e60|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e60|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   ATEST2_SEL                               = " "0 (NORM_OP),1 (AMUX_OUT_TO_ATEST2)"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ATEST1_SEL                               = " "0 (NORM_OP),1 (ATEST1_TO_INPUT_OF_OUTPUT_BUF)"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CAL_EN                                   = " "0 (OL_CAL_DIS),1 (OL_CAL_EN)"
    tree.end
    tree "VADC1_USR_TEST6_DTEST"
      sgroup "VADC1_USR_TEST6_DTEST (at 0x31e7)"
        set &access:&cmd_addr %l (0x8031e70|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31e70|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   SEL_FSM                                  = " "0 (REQUEST_FSM),1 (VADC_CONVERSION_FSM),2 (SAMPLE_COUNT_LSB),3 (SAMPLE_COUNT_MSB)"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   DTEST_SEL                                = "
    tree.end
    tree "VADC1_USR_TRIM_NUM"
      sgroup "VADC1_USR_TRIM_NUM (at 0x31f0)"
        set &access:&cmd_addr %l (0x8031f00|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f00|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "VADC1_USR_TRIM1_ADC"
      sgroup "VADC1_USR_TRIM1_ADC (at 0x31f1)"
        set &access:&cmd_addr %l (0x8031f10|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f10|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   DAC_REF                                  = "
    tree.end
    tree "VADC1_USR_TRIM1_AMUX"
      sgroup "VADC1_USR_TRIM1_AMUX (at 0x31f2)"
        set &access:&cmd_addr %l (0x8031f20|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f20|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   PRESCALE_167_RATIO                       = "
    tree.end
    tree "VADC1_USR_TRIM2_AMUX"
      sgroup "VADC1_USR_TRIM2_AMUX (at 0x31f3)"
        set &access:&cmd_addr %l (0x8031f30|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f30|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   PRESCALE_333_RATIO                       = "
    tree.end
    tree "VADC1_USR_TRIM4_AMUX"
      sgroup "VADC1_USR_TRIM4_AMUX (at 0x31f4)"
        set &access:&cmd_addr %l (0x8031f40|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f40|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   BUF_LOW_OFFSET                           = "
    tree.end
    tree "VADC1_USR_TRIM5_AMUX"
      sgroup "VADC1_USR_TRIM5_AMUX (at 0x31f5)"
        set &access:&cmd_addr %l (0x8031f50|((&sid+0x0)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0x31f50|((&sid+0x0)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   BUF_HIGH_OFFSET                          = "
    tree.end
  tree.end
tree.end
tree "WLED1_CTRL"
  tree "WLED1_CTRL"
    tree "WLED1_CTRL_REVISION1"
      sgroup "WLED1_CTRL_REVISION1 (at 0x1d800)"
        set &access:&cmd_addr %l (0x80d8000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "WLED1_CTRL_REVISION2"
      sgroup "WLED1_CTRL_REVISION2 (at 0x1d801)"
        set &access:&cmd_addr %l (0x80d8010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "WLED1_CTRL_REVISION3"
      sgroup "WLED1_CTRL_REVISION3 (at 0x1d802)"
        set &access:&cmd_addr %l (0x80d8020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "WLED1_CTRL_REVISION4"
      sgroup "WLED1_CTRL_REVISION4 (at 0x1d803)"
        set &access:&cmd_addr %l (0x80d8030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "WLED1_CTRL_PERPH_TYPE"
      sgroup "WLED1_CTRL_PERPH_TYPE (at 0x1d804)"
        set &access:&cmd_addr %l (0x80d8040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "WLED1_CTRL_PERPH_SUBTYPE"
      sgroup "WLED1_CTRL_PERPH_SUBTYPE (at 0x1d805)"
        set &access:&cmd_addr %l (0x80d8050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "WLED1_CTRL_FAULT_STATUS"
      sgroup "WLED1_CTRL_FAULT_STATUS (at 0x1d808)"
        set &access:&cmd_addr %l (0x80d8080|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8080|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   RFU1                                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU0                                     = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_RT_STS"
      sgroup "WLED1_CTRL_INT_RT_STS (at 0x1d810)"
        set &access:&cmd_addr %l (0x80d8100|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8100|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_RT_STS                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_RT_STS                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_SET_TYPE"
      sgroup "WLED1_CTRL_INT_SET_TYPE (at 0x1d811)"
        set &access:&cmd_addr %l (0x80d8110|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8110|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_TYPE                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_TYPE                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_POLARITY_HIGH"
      sgroup "WLED1_CTRL_INT_POLARITY_HIGH (at 0x1d812)"
        set &access:&cmd_addr %l (0x80d8120|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8120|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_HIGH                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_HIGH                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_POLARITY_LOW"
      sgroup "WLED1_CTRL_INT_POLARITY_LOW (at 0x1d813)"
        set &access:&cmd_addr %l (0x80d8130|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8130|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_LOW                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_LOW                            = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_LATCHED_CLR"
      sgroup "WLED1_CTRL_INT_LATCHED_CLR (at 0x1d814)"
        set &access:&cmd_addr %l (0x80d8140|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8140|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_LATCHED_CLR                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_LATCHED_CLR                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_EN_SET"
      sgroup "WLED1_CTRL_INT_EN_SET (at 0x1d815)"
        set &access:&cmd_addr %l (0x80d8150|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8150|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_EN_SET                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_EN_SET                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_EN_CLR"
      sgroup "WLED1_CTRL_INT_EN_CLR (at 0x1d816)"
        set &access:&cmd_addr %l (0x80d8160|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8160|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_EN_CLR                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_EN_CLR                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_LATCHED_STS"
      sgroup "WLED1_CTRL_INT_LATCHED_STS (at 0x1d818)"
        set &access:&cmd_addr %l (0x80d8180|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8180|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_LATCHED_STS                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_LATCHED_STS                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_PENDING_STS"
      sgroup "WLED1_CTRL_INT_PENDING_STS (at 0x1d819)"
        set &access:&cmd_addr %l (0x80d8190|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8190|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_PENDING_STS                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_PENDING_STS                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   RFU                                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_MID_SEL"
      sgroup "WLED1_CTRL_INT_MID_SEL (at 0x1d81a)"
        set &access:&cmd_addr %l (0x80d81a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd81a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   INT_MID_SEL                              = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_CTRL_INT_PRIORITY"
      sgroup "WLED1_CTRL_INT_PRIORITY (at 0x1d81b)"
        set &access:&cmd_addr %l (0x80d81b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd81b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   INT_PRIORITY                             = " "0, 1"
    tree.end
    tree "WLED1_CTRL_EN_AMOLED"
      sgroup "WLED1_CTRL_EN_AMOLED (at 0x1d844)"
        set &access:&cmd_addr %l (0x80d8440|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8440|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_AMOLED                                = " "0, 1"
    tree.end
    tree "WLED1_CTRL_MODULE_ENABLE"
      sgroup "WLED1_CTRL_MODULE_ENABLE (at 0x1d846)"
        set &access:&cmd_addr %l (0x80d8460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_MODULE                                = " "0, 1"
    tree.end
    tree "WLED1_CTRL_FEEDBACK_CONTROL"
      sgroup "WLED1_CTRL_FEEDBACK_CONTROL (at 0x1d848)"
        set &access:&cmd_addr %l (0x80d8480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   FEEDBACK_CONTROL                         = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_CTRL_VREF_CONTROL"
      sgroup "WLED1_CTRL_VREF_CONTROL (at 0x1d849)"
        set &access:&cmd_addr %l (0x80d8490|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8490|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVERWRITE                                = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VREF_CONTROL                             = "
    tree.end
    tree "WLED1_CTRL_BOOST_MAX_DUTY_CYCLE"
      sgroup "WLED1_CTRL_BOOST_MAX_DUTY_CYCLE (at 0x1d84b)"
        set &access:&cmd_addr %l (0x80d84b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BOOST_MAX_DUTY_CYCLE                     = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_CTRL_SWITCHING_FREQUENCY"
      sgroup "WLED1_CTRL_SWITCHING_FREQUENCY (at 0x1d84c)"
        set &access:&cmd_addr %l (0x80d84c0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84c0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVERWRITE                                = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   SWITCHING_FREQ                           = "
    tree.end
    tree "WLED1_CTRL_WLED_OVP"
      sgroup "WLED1_CTRL_WLED_OVP (at 0x1d84d)"
        set &access:&cmd_addr %l (0x80d84d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   WLED_OVP                                 = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_CTRL_WLED_ILIM"
      sgroup "WLED1_CTRL_WLED_ILIM (at 0x1d84e)"
        set &access:&cmd_addr %l (0x80d84e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd84e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVERWRITE                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   WLED_ILIM                                = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_CTRL_SLOPE_COMP_CAP"
      sgroup "WLED1_CTRL_SLOPE_COMP_CAP (at 0x1d850)"
        set &access:&cmd_addr %l (0x80d8500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SLOPE_COMP                               = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_CTRL_SLOPE_COMP_ADJ"
      sgroup "WLED1_CTRL_SLOPE_COMP_ADJ (at 0x1d851)"
        set &access:&cmd_addr %l (0x80d8510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SLOPE_COMP_ADJ                           = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_CTRL_BIAS_GEN_WARMUP_DELAY"
      sgroup "WLED1_CTRL_BIAS_GEN_WARMUP_DELAY (at 0x1d852)"
        set &access:&cmd_addr %l (0x80d8520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   BIAS_GEN_WARMUP_DELAY                    = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_CTRL_SOFTSTART_RAMP_DELAY"
      sgroup "WLED1_CTRL_SOFTSTART_RAMP_DELAY (at 0x1d853)"
        set &access:&cmd_addr %l (0x80d8530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   SOFTSTART_RAMP_DELAY                     = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_CTRL_SW_SLEW_RATE_CONTROL"
      sgroup "WLED1_CTRL_SW_SLEW_RATE_CONTROL (at 0x1d854)"
        set &access:&cmd_addr %l (0x80d8540|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8540|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   SW_SLEW_RATE_CONTROL                     = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_CTRL_VLOOP_COMP_RES"
      sgroup "WLED1_CTRL_VLOOP_COMP_RES (at 0x1d855)"
        set &access:&cmd_addr %l (0x80d8550|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8550|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVERWRITE                                = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LOOP_COMP_RES                            = "
    tree.end
    tree "WLED1_CTRL_VLOOP_COMP_GM"
      sgroup "WLED1_CTRL_VLOOP_COMP_GM (at 0x1d856)"
        set &access:&cmd_addr %l (0x80d8560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVERWRITE                                = " "0, 1"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LOOP_EA_GM                               = "
    tree.end
    tree "WLED1_CTRL_VLOOP_COMP_CAP"
      sgroup "WLED1_CTRL_VLOOP_COMP_CAP (at 0x1d857)"
        set &access:&cmd_addr %l (0x80d8570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVERWRITE                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VLOOP_COMP_CAP                           = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_CTRL_VLOOP_COMP_HCAP"
      sgroup "WLED1_CTRL_VLOOP_COMP_HCAP (at 0x1d858)"
        set &access:&cmd_addr %l (0x80d8580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   VLOOP_COMP_HCAP                          = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_CTRL_EN_HW_BL_REDN"
      sgroup "WLED1_CTRL_EN_HW_BL_REDN (at 0x1d859)"
        set &access:&cmd_addr %l (0x80d8590|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8590|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_HW_BL_REDN                            = " "0, 1"
    tree.end
    tree "WLED1_CTRL_EN_PSM"
      sgroup "WLED1_CTRL_EN_PSM (at 0x1d85a)"
        set &access:&cmd_addr %l (0x80d85a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd85a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PSM                                   = " "0, 1"
    tree.end
    tree "WLED1_CTRL_PSM_CTRL"
      sgroup "WLED1_CTRL_PSM_CTRL (at 0x1d85b)"
        set &access:&cmd_addr %l (0x80d85b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd85b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   OVERWRITE                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   PSM_HYS_CTRL                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   VREF_PSM                                 = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_CTRL_WLED_PFM"
      sgroup "WLED1_CTRL_WLED_PFM (at 0x1d85d)"
        set &access:&cmd_addr %l (0x80d85d0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd85d0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_PFM                                   = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   PFM_HYS_CTRL                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x3 "  [ 3: 2]   PFM_ILIM                                 = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   PFM_TOFF                                 = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_CTRL_WLED_SHORT_PROTECT"
      sgroup "WLED1_CTRL_WLED_SHORT_PROTECT (at 0x1d85e)"
        set &access:&cmd_addr %l (0x80d85e0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd85e0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_SC                                    = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   EN_DSCHGR                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x2 "  [ 2: 1]   DBNC_SHORT                               = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SC_CTL                                   = " "0, 1"
    tree.end
    tree "WLED1_CTRL_SEC_ACCESS"
      sgroup "WLED1_CTRL_SEC_ACCESS (at 0x1d8d0)"
        set &access:&cmd_addr %l (0x80d8d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "WLED1_CTRL_PERPH_RESET_CTL1"
      sgroup "WLED1_CTRL_PERPH_RESET_CTL1 (at 0x1d8d8)"
        set &access:&cmd_addr %l (0x80d8d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0, 1"
    tree.end
    tree "WLED1_CTRL_PERPH_RESET_CTL2"
      sgroup "WLED1_CTRL_PERPH_RESET_CTL2 (at 0x1d8d9)"
        set &access:&cmd_addr %l (0x80d8d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "WLED1_CTRL_PERPH_RESET_CTL3"
      sgroup "WLED1_CTRL_PERPH_RESET_CTL3 (at 0x1d8da)"
        set &access:&cmd_addr %l (0x80d8da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_PERPH_RESET_CTL4"
      sgroup "WLED1_CTRL_PERPH_RESET_CTL4 (at 0x1d8db)"
        set &access:&cmd_addr %l (0x80d8db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "WLED1_CTRL_SPARE"
      sgroup "WLED1_CTRL_SPARE (at 0x1d8df)"
        set &access:&cmd_addr %l (0x80d8df0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8df0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "WLED1_CTRL_INT_TEST1"
      sgroup "WLED1_CTRL_INT_TEST1 (at 0x1d8e0)"
        set &access:&cmd_addr %l (0x80d8e00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   INT_TEST_MODE_EN                         = " "0, 1"
    tree.end
    tree "WLED1_CTRL_INT_TEST_VAL"
      sgroup "WLED1_CTRL_INT_TEST_VAL (at 0x1d8e1)"
        set &access:&cmd_addr %l (0x80d8e10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SC_FAULT_TEST_VAL                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   OVP_FAULT_TEST_VAL                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ILIM_FAULT_TEST_VAL                      = " "0, 1"
    tree.end
    tree "WLED1_CTRL_TEST1"
      sgroup "WLED1_CTRL_TEST1 (at 0x1d8e2)"
        set &access:&cmd_addr %l (0x80d8e20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   DTEST                                    = "
    tree.end
    tree "WLED1_CTRL_TEST2"
      sgroup "WLED1_CTRL_TEST2 (at 0x1d8e3)"
        set &access:&cmd_addr %l (0x80d8e30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   ATEST                                    = "
    tree.end
    tree "WLED1_CTRL_TEST3"
      sgroup "WLED1_CTRL_TEST3 (at 0x1d8e4)"
        set &access:&cmd_addr %l (0x80d8e40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   RDSON_TM                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   T_ERRAMP_OUT                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   OVP_EN_MASK                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   SLOPE_COMP_EN_MASK                       = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CS_REF_EN_MASK                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   VREF_EN_MASK                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   ILIM_EN_MASK                             = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ERRAMP_EN_MASK                           = " "0, 1"
    tree.end
    tree "WLED1_CTRL_TEST4"
      sgroup "WLED1_CTRL_TEST4 (at 0x1d8e5)"
        set &access:&cmd_addr %l (0x80d8e50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8e50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_VREF_UP                               = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   EN_CLAMP                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   DEBOUNCE_BYPASS                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   EN_SLEEP_CLK_REQUEST                     = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   EN_SOFT_START                            = " "0, 1"
    tree.end
    tree "WLED1_CTRL_TRIM_NUM"
      sgroup "WLED1_CTRL_TRIM_NUM (at 0x1d8f0)"
        set &access:&cmd_addr %l (0x80d8f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "WLED1_CTRL_TRIM_ILIM"
      sgroup "WLED1_CTRL_TRIM_ILIM (at 0x1d8f1)"
        set &access:&cmd_addr %l (0x80d8f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x4 1 "  [ 4: 0]   TRIM_ILIM                                = "
    tree.end
    tree "WLED1_CTRL_REF_7P7_TRIM"
      sgroup "WLED1_CTRL_REF_7P7_TRIM (at 0x1d8f2)"
        set &access:&cmd_addr %l (0x80d8f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   REF_7P7_TRIM                             = "
    tree.end
    tree "WLED1_CTRL_WLED_OVP_TRIM"
      sgroup "WLED1_CTRL_WLED_OVP_TRIM (at 0x1d8f3)"
        set &access:&cmd_addr %l (0x80d8f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   OVP_REF_TRIM                             = "
    tree.end
    tree "WLED1_CTRL_WLED_REF_TRIM"
      sgroup "WLED1_CTRL_WLED_REF_TRIM (at 0x1d8f4)"
        set &access:&cmd_addr %l (0x80d8f40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd8f40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   VREF_WLED_TRIM                           = "
    tree.end
  tree.end
tree.end
tree "WLED1_SINK"
  tree "WLED1_SINK"
    tree "WLED1_SINK_REVISION1"
      sgroup "WLED1_SINK_REVISION1 (at 0x1d900)"
        set &access:&cmd_addr %l (0x80d9000|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9000|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MINOR                                = "
    tree.end
    tree "WLED1_SINK_REVISION2"
      sgroup "WLED1_SINK_REVISION2 (at 0x1d901)"
        set &access:&cmd_addr %l (0x80d9010|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9010|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   DIG_MAJOR                                = "
    tree.end
    tree "WLED1_SINK_REVISION3"
      sgroup "WLED1_SINK_REVISION3 (at 0x1d902)"
        set &access:&cmd_addr %l (0x80d9020|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9020|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MINOR                                = "
    tree.end
    tree "WLED1_SINK_REVISION4"
      sgroup "WLED1_SINK_REVISION4 (at 0x1d903)"
        set &access:&cmd_addr %l (0x80d9030|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9030|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   ANA_MAJOR                                = "
    tree.end
    tree "WLED1_SINK_PERPH_TYPE"
      sgroup "WLED1_SINK_PERPH_TYPE (at 0x1d904)"
        set &access:&cmd_addr %l (0x80d9040|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9040|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   TYPE                                     = "
    tree.end
    tree "WLED1_SINK_PERPH_SUBTYPE"
      sgroup "WLED1_SINK_PERPH_SUBTYPE (at 0x1d905)"
        set &access:&cmd_addr %l (0x80d9050|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9050|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SUBTYPE                                  = "
    tree.end
    tree "WLED1_SINK_CURRENT_SINK_EN"
      sgroup "WLED1_SINK_CURRENT_SINK_EN (at 0x1d946)"
        set &access:&cmd_addr %l (0x80d9460|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9460|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   EN_CURRENT_SINK4                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   EN_CURRENT_SINK3                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_CURRENT_SINK2                         = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x4 "  [    4]   EN_CURRENT_SINK1                         = " "0, 1"
    tree.end
    tree "WLED1_SINK_ILED_SYNC_BIT"
      sgroup "WLED1_SINK_ILED_SYNC_BIT (at 0x1d947)"
        set &access:&cmd_addr %l (0x80d9470|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9470|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   SYNC_LED4                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   SYNC_LED3                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   SYNC_LED2                                = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   SYNC_LED1                                = " "0, 1"
    tree.end
    tree "WLED1_SINK_DIG_DIM_CLK_SEL"
      sgroup "WLED1_SINK_DIG_DIM_CLK_SEL (at 0x1d948)"
        set &access:&cmd_addr %l (0x80d9480|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9480|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x1 "  [ 1: 0]   DIG_DIM_CLK_SEL                          = " "0, 1, 2, 3"
    tree.end
    tree "WLED1_SINK_MODULATION_SCHEME"
      sgroup "WLED1_SINK_MODULATION_SCHEME (at 0x1d94a)"
        set &access:&cmd_addr %l (0x80d94a0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd94a0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x7 "  [ 7: 6]   MODULATOR_CLOCK_SEL                      = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x5--0x5 "  [    5]   EN_PHASE_STAGGERING                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x3--0x4 "  [ 4: 3]   ACCUMULATOR_CLOCK_SEL                    = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   HYBRID_DIMMING                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   INTERNAL_MOD_RESOLUTION                  = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   DIMMING_METHOD                           = " "0, 1"
    tree.end
    tree "WLED1_SINK_HYBRID_DIMMING_TRESH"
      sgroup "WLED1_SINK_HYBRID_DIMMING_TRESH (at 0x1d94b)"
        set &access:&cmd_addr %l (0x80d94b0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd94b0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   HYBRID_DIM_THRESH                        = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_SINK_LED1_MODULATOR_EN"
      sgroup "WLED1_SINK_LED1_MODULATOR_EN (at 0x1d950)"
        set &access:&cmd_addr %l (0x80d9500|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9500|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED1_EN_MODULATOR                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CS_GATEDRV                               = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED1_IDAC_SYNC_DELAY"
      sgroup "WLED1_SINK_LED1_IDAC_SYNC_DELAY (at 0x1d951)"
        set &access:&cmd_addr %l (0x80d9510|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9510|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LED1_IDAC_SYNC_DELAY                     = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_SINK_LED1_FULL_SCALE_CURRENT"
      sgroup "WLED1_SINK_LED1_FULL_SCALE_CURRENT (at 0x1d952)"
        set &access:&cmd_addr %l (0x80d9520|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9520|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED1_FULL_SCALE_CURRENT                  = "
    tree.end
    tree "WLED1_SINK_LED1_MODULATOR_SRC_SEL"
      sgroup "WLED1_SINK_LED1_MODULATOR_SRC_SEL (at 0x1d953)"
        set &access:&cmd_addr %l (0x80d9530|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9530|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED1_MODULATOR_SRC_SEL                   = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED1_CABC_EN"
      sgroup "WLED1_SINK_LED1_CABC_EN (at 0x1d956)"
        set &access:&cmd_addr %l (0x80d9560|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9560|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED1_CABC_EN                             = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED1_BRIGHTNESS_SETTING_LSB"
      sgroup "WLED1_SINK_LED1_BRIGHTNESS_SETTING_LSB (at 0x1d957)"
        set &access:&cmd_addr %l (0x80d9570|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9570|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED1_BRIGHTNESS_SETTING_LSB              = "
    tree.end
    tree "WLED1_SINK_LED1_BRIGHTNESS_SETTING_MSB"
      sgroup "WLED1_SINK_LED1_BRIGHTNESS_SETTING_MSB (at 0x1d958)"
        set &access:&cmd_addr %l (0x80d9580|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9580|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED1_BRIGHTNESS_SETTING_MSB              = "
    tree.end
    tree "WLED1_SINK_LED2_MODULATOR_EN"
      sgroup "WLED1_SINK_LED2_MODULATOR_EN (at 0x1d960)"
        set &access:&cmd_addr %l (0x80d9600|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9600|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED2_EN_MODULATOR                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CS_GATEDRV                               = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED2_IDAC_SYNC_DELAY"
      sgroup "WLED1_SINK_LED2_IDAC_SYNC_DELAY (at 0x1d961)"
        set &access:&cmd_addr %l (0x80d9610|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9610|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LED2_IDAC_SYNC_DELAY                     = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_SINK_LED2_FULL_SCALE_CURRENT"
      sgroup "WLED1_SINK_LED2_FULL_SCALE_CURRENT (at 0x1d962)"
        set &access:&cmd_addr %l (0x80d9620|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9620|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED2_FULL_SCALE_CURRENT                  = "
    tree.end
    tree "WLED1_SINK_LED2_MODULATOR_SRC_SEL"
      sgroup "WLED1_SINK_LED2_MODULATOR_SRC_SEL (at 0x1d963)"
        set &access:&cmd_addr %l (0x80d9630|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9630|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED2_MODULATOR_SRC_SEL                   = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED2_CABC_EN"
      sgroup "WLED1_SINK_LED2_CABC_EN (at 0x1d966)"
        set &access:&cmd_addr %l (0x80d9660|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9660|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED2_CABC_EN                             = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED2_BRIGHTNESS_SETTING_LSB"
      sgroup "WLED1_SINK_LED2_BRIGHTNESS_SETTING_LSB (at 0x1d967)"
        set &access:&cmd_addr %l (0x80d9670|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9670|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED2_BRIGHTNESS_SETTING_LSB              = "
    tree.end
    tree "WLED1_SINK_LED2_BRIGHTNESS_SETTING_MSB"
      sgroup "WLED1_SINK_LED2_BRIGHTNESS_SETTING_MSB (at 0x1d968)"
        set &access:&cmd_addr %l (0x80d9680|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9680|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED2_BRIGHTNESS_SETTING_MSB              = "
    tree.end
    tree "WLED1_SINK_LED3_MODULATOR_EN"
      sgroup "WLED1_SINK_LED3_MODULATOR_EN (at 0x1d970)"
        set &access:&cmd_addr %l (0x80d9700|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9700|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED3_EN_MODULATOR                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CS_GATEDRV                               = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED3_IDAC_SYNC_DELAY"
      sgroup "WLED1_SINK_LED3_IDAC_SYNC_DELAY (at 0x1d971)"
        set &access:&cmd_addr %l (0x80d9710|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9710|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LED3_IDAC_SYNC_DELAY                     = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_SINK_LED3_FULL_SCALE_CURRENT"
      sgroup "WLED1_SINK_LED3_FULL_SCALE_CURRENT (at 0x1d972)"
        set &access:&cmd_addr %l (0x80d9720|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9720|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED3_FULL_SCALE_CURRENT                  = "
    tree.end
    tree "WLED1_SINK_LED3_MODULATOR_SRC_SEL"
      sgroup "WLED1_SINK_LED3_MODULATOR_SRC_SEL (at 0x1d973)"
        set &access:&cmd_addr %l (0x80d9730|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9730|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED3_MODULATOR_SRC_SEL                   = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED3_CABC_EN"
      sgroup "WLED1_SINK_LED3_CABC_EN (at 0x1d976)"
        set &access:&cmd_addr %l (0x80d9760|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9760|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED3_CABC_EN                             = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED3_BRIGHTNESS_SETTING_LSB"
      sgroup "WLED1_SINK_LED3_BRIGHTNESS_SETTING_LSB (at 0x1d977)"
        set &access:&cmd_addr %l (0x80d9770|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9770|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED3_BRIGHTNESS_SETTING_LSB              = "
    tree.end
    tree "WLED1_SINK_LED3_BRIGHTNESS_SETTING_MSB"
      sgroup "WLED1_SINK_LED3_BRIGHTNESS_SETTING_MSB (at 0x1d978)"
        set &access:&cmd_addr %l (0x80d9780|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9780|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED3_BRIGHTNESS_SETTING_MSB              = "
    tree.end
    tree "WLED1_SINK_LED4_MODULATOR_EN"
      sgroup "WLED1_SINK_LED4_MODULATOR_EN (at 0x1d980)"
        set &access:&cmd_addr %l (0x80d9800|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9800|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED4_EN_MODULATOR                        = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CS_GATEDRV                               = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED4_IDAC_SYNC_DELAY"
      sgroup "WLED1_SINK_LED4_IDAC_SYNC_DELAY (at 0x1d981)"
        set &access:&cmd_addr %l (0x80d9810|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9810|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x2 "  [ 2: 0]   LED4_IDAC_SYNC_DELAY                     = " "0, 1, 2, 3, 4, 5, 6, 7"
    tree.end
    tree "WLED1_SINK_LED4_FULL_SCALE_CURRENT"
      sgroup "WLED1_SINK_LED4_FULL_SCALE_CURRENT (at 0x1d982)"
        set &access:&cmd_addr %l (0x80d9820|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9820|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED4_FULL_SCALE_CURRENT                  = "
    tree.end
    tree "WLED1_SINK_LED4_MODULATOR_SRC_SEL"
      sgroup "WLED1_SINK_LED4_MODULATOR_SRC_SEL (at 0x1d983)"
        set &access:&cmd_addr %l (0x80d9830|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9830|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LED4_MODULATOR_SRC_SEL                   = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED4_CABC_EN"
      sgroup "WLED1_SINK_LED4_CABC_EN (at 0x1d986)"
        set &access:&cmd_addr %l (0x80d9860|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9860|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x7--0x7 "  [    7]   LED4_CABC_EN                             = " "0, 1"
    tree.end
    tree "WLED1_SINK_LED4_BRIGHTNESS_SETTING_LSB"
      sgroup "WLED1_SINK_LED4_BRIGHTNESS_SETTING_LSB (at 0x1d987)"
        set &access:&cmd_addr %l (0x80d9870|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9870|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   LED4_BRIGHTNESS_SETTING_LSB              = "
    tree.end
    tree "WLED1_SINK_LED4_BRIGHTNESS_SETTING_MSB"
      sgroup "WLED1_SINK_LED4_BRIGHTNESS_SETTING_MSB (at 0x1d988)"
        set &access:&cmd_addr %l (0x80d9880|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9880|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x3 1 "  [ 3: 0]   LED4_BRIGHTNESS_SETTING_MSB              = "
    tree.end
    tree "WLED1_SINK_SEC_ACCESS"
      sgroup "WLED1_SINK_SEC_ACCESS (at 0x1d9d0)"
        set &access:&cmd_addr %l (0x80d9d00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9d00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   SEC_UNLOCK                               = "
    tree.end
    tree "WLED1_SINK_PERPH_RESET_CTL1"
      sgroup "WLED1_SINK_PERPH_RESET_CTL1 (at 0x1d9d8)"
        set &access:&cmd_addr %l (0x80d9d80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9d80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   ENABLE_PRESET                            = " "0, 1"
    tree.end
    tree "WLED1_SINK_PERPH_RESET_CTL2"
      sgroup "WLED1_SINK_PERPH_RESET_CTL2 (at 0x1d9d9)"
        set &access:&cmd_addr %l (0x80d9d90|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9d90|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_GLOBAL_SOFT_RB                    = " "0, 1"
    tree.end
    tree "WLED1_SINK_PERPH_RESET_CTL3"
      sgroup "WLED1_SINK_PERPH_RESET_CTL3 (at 0x1d9da)"
        set &access:&cmd_addr %l (0x80d9da0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9da0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   FOLLOW_OTST2_RB                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   FOLLOW_WARM_RB                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   FOLLOW_SHUTDOWN1_RB                      = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   FOLLOW_SHUTDOWN2_RB                      = " "0, 1"
    tree.end
    tree "WLED1_SINK_PERPH_RESET_CTL4"
      sgroup "WLED1_SINK_PERPH_RESET_CTL4 (at 0x1d9db)"
        set &access:&cmd_addr %l (0x80d9db0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9db0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   LOCAL_SOFT_RESET                         = " "0, 1"
    tree.end
    tree "WLED1_SINK_SPARE"
      sgroup "WLED1_SINK_SPARE (at 0x1d9df)"
        set &access:&cmd_addr %l (0x80d9df0|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9df0|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   RFU                                      = "
    tree.end
    tree "WLED1_SINK_TEST5"
      sgroup "WLED1_SINK_TEST5 (at 0x1d9e6)"
        set &access:&cmd_addr %l (0x80d9e60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9e60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x6--0x6 "  [    6]   CS_TGATE_ATEST                           = " "0, 1"
      textline ""
      bitfld.long 0x0 0x4--0x5 "  [ 5: 4]   CS_GATE_DRV_THRESH                       = " "0, 1, 2, 3"
      textline ""
      bitfld.long 0x0 0x3--0x3 "  [    3]   CS_HVG_PULL_STR                          = " "0, 1"
      textline ""
      bitfld.long 0x0 0x2--0x2 "  [    2]   CS_OTA_COMP                              = " "0, 1"
      textline ""
      bitfld.long 0x0 0x1--0x1 "  [    1]   CS_FSTON                                 = " "0, 1"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   CS_FASTOTA                               = " "0, 1"
    tree.end
    tree "WLED1_SINK_MAN_CAL_CTL"
      sgroup "WLED1_SINK_MAN_CAL_CTL (at 0x1d9e7)"
        set &access:&cmd_addr %l (0x80d9e70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9e70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      bitfld.long 0x0 0x0--0x0 "  [    0]   MAN_CS_OTA_CAL_EN                        = " "0, 1"
    tree.end
    tree "WLED1_SINK_TRIM_NUM"
      sgroup "WLED1_SINK_TRIM_NUM (at 0x1d9f0)"
        set &access:&cmd_addr %l (0x80d9f00|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9f00|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x7 1 "  [ 7: 0]   NUM_TRIM                                 = "
    tree.end
    tree "WLED1_SINK_TRIM_VREF_ILED1"
      sgroup "WLED1_SINK_TRIM_VREF_ILED1 (at 0x1d9f1)"
        set &access:&cmd_addr %l (0x80d9f10|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9f10|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   TRIM_VREF_ILED1                          = "
    tree.end
    tree "WLED1_SINK_TRIM_VREF_ILED2"
      sgroup "WLED1_SINK_TRIM_VREF_ILED2 (at 0x1d9f2)"
        set &access:&cmd_addr %l (0x80d9f20|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9f20|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   TRIM_VREF_ILED2                          = "
    tree.end
    tree "WLED1_SINK_TRIM_VREF_ILED3"
      sgroup "WLED1_SINK_TRIM_VREF_ILED3 (at 0x1d9f3)"
        set &access:&cmd_addr %l (0x80d9f30|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9f30|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   TRIM_VREF_ILED3                          = "
    tree.end
    tree "WLED1_SINK_TRIM_VREF_ILED4"
      sgroup "WLED1_SINK_TRIM_VREF_ILED4 (at 0x1d9f4)"
        set &access:&cmd_addr %l (0x80d9f40|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9f40|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x6 1 "  [ 6: 0]   TRIM_VREF_ILED4                          = "
    tree.end
    tree "WLED1_SINK_TRIM_OFFSET_ILED1"
      sgroup "WLED1_SINK_TRIM_OFFSET_ILED1 (at 0x1d9f5)"
        set &access:&cmd_addr %l (0x80d9f50|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9f50|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_OFFSET_ILED1                        = "
    tree.end
    tree "WLED1_SINK_TRIM_OFFSET_ILED2"
      sgroup "WLED1_SINK_TRIM_OFFSET_ILED2 (at 0x1d9f6)"
        set &access:&cmd_addr %l (0x80d9f60|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9f60|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_OFFSET_ILED2                        = "
    tree.end
    tree "WLED1_SINK_TRIM_OFFSET_ILED3"
      sgroup "WLED1_SINK_TRIM_OFFSET_ILED3 (at 0x1d9f7)"
        set &access:&cmd_addr %l (0x80d9f70|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9f70|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_OFFSET_ILED3                        = "
    tree.end
    tree "WLED1_SINK_TRIM_OFFSET_ILED4"
      sgroup "WLED1_SINK_TRIM_OFFSET_ILED4 (at 0x1d9f8)"
        set &access:&cmd_addr %l (0x80d9f80|((&sid+0x1)<<20.))
        getx &access:&read_addr %l 0
        writeback
        setx &access:&write_addr %l 0
        set &access:&cmd_addr %l (0xd9f80|((&sid+0x1)<<20.))
      line.byte 0x0 "VALUE"
      textline "BITS"
      textline ""
      hexmask.long.byte 0x0 0x0--0x5 1 "  [ 5: 0]   TRIM_OFFSET_ILED4                        = "
    tree.end
  tree.end
tree.end

