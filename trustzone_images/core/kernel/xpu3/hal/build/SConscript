#===============================================================================
#
#                             Edit History
#
# $ Header: $
# when         who     what, where, why
# ----------   ---     ---------------------------------------------------------
# 2013/09/26   sc      Reverted previous temporarily changes
# 2013/09/25   sc      Updated with USES_8916_CONFIG temporarily
# 2013/06/24   sc      Updated to handle Aragorn Pro vs v2
# 2013/02/25   sc      Separated the non-pageable codes
# 2012/12/17   sc      2nd attempt to migrate to use DevCfg
# 2012/12/10   sc      Reverted DevCfg changes
# 2012/12/04   sc      Fixed packout issue
# 2012/11/27   sc      Migrated to use DevConfig
# 2012/11/12   sc      Updated for Luxor
# 2012/11/08   sc      Updated for Frodo
# 2012/05/17   sc      Removed HAL_XPU2_MAX_VMID and updated with 9x25
# 2011/10/26   sc      Initial Creation
#
#===============================================================================
# Copyright (c) 2011-2013
# Qualcomm Incorporated.
# All Rights Reserved.
# Qualcomm Confidential and Proprietary
#===============================================================================
#-------------------------------------------------------------------------------
# HAL XPU2 Libs
#-------------------------------------------------------------------------------
Import('env')
env = env.Clone()

if env['CHIPSET'] in ['msm8998', 'sdm660', 'sdm845']:
#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
  SRCPATH = "../"

  env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0) 

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
  CBSP_APIS = [
   'BUSES',
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'KERNEL_XPU3',
   'SERVICES',
   'SECUREMSM',
   'MINK',
   'SYSTEMDRIVERS',
   'KERNEL',
   'TZCHIPSET',
  ]

  if env['TARGET_FAMILY'] in ['badger']:
     CBSP_APIS.extend(['TZLIBARMV7'])
  else:
     CBSP_APIS.extend(['TZLIBARMV8'])

  env.RequirePublicApi(CBSP_APIS)
  env.RequireRestrictedApi(CBSP_APIS)

#-------------------------------------------------------------------------------
# Internal depends within subunit
#-------------------------------------------------------------------------------
  env.PublishPrivateApi('KERNEL_XPU3_HAL', [
   '${INC_ROOT}/core/kernel/xpu3/hal/src',
   '${INC_ROOT}/core/kernel/xpu3/hal/config/${CHIPSET}',
  ])

#-------------------------------------------------------------------------------
# Compiler options
#-------------------------------------------------------------------------------
#env.Append(CCFLAGS = "--gnu")

#-------------------------------------------------------------------------------
# HWIO
#-------------------------------------------------------------------------------
  if env.has_key('HWIO_IMAGE'):
     env.AddHWIOFile('HWIO', [
      {
         'filename': '${INC_ROOT}/core/kernel/xpu3/hal/config/${CHIPSET}/HALxpu3HWIOTarget.h',
         'modules': ['.*XPU.*', '.*RPU.*', '.*APU.*', '.*MPU.*', 'BIMC_S_DDR0', 'BIMC_S_DDR1'],
         'filter-include': ['.*XPU.*', '.*RPU.*', '.*APU.*', '.*MPU.*'],
         'output-offsets': True,
         'header': '#include "msmhwiobase.h"'
      }
     ])
     env.AddHWIOFile('HWIO', [
      {
         'filename': '${INC_ROOT}/core/kernel/xpu3/hal/config//${CHIPSET}/HALSOCHWIOTarget.h',
         'modules': ['TCSR_TCSR_REGS'],
         'filter-include': ['.*SOC_HW.*'],
         'output-offsets': True,
         'header': '#include "msmhwiobase.h"'
      }      
   ])

  if env.has_key('XBL_SEC_IMAGE'):
        env.Append(CPPDEFINES = 'XPU3_USES_STATELESS_IMPL')
        
#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

  HAL_XPU3_COMMON_SOURCES = [
   '${BUILDPATH}/src/HALxpu3.c',
   '${BUILDPATH}/src/HALxpu3GenImpl.c',
   '${BUILDPATH}/src/HALxpu3InfoImpl.c',
   '${BUILDPATH}/src/HALxpu3Impl_unpaged.c',
   '${BUILDPATH}/config/${CHIPSET}/HALxpu3Data.c',
  ]

  HAL_XPU3_PACKOUT_HEADER_FILES = [
   '${BUILDPATH}/src/HALhwioXpu3Generic.h',
   '${BUILDPATH}/src/HALxpu3GenImpl.h',
   '${BUILDPATH}/src/HALxpu3Hwio.h',
   '${BUILDPATH}/src/HALxpu3Internal.h',
  ]

  HAL_XPU3_PACKOUT_HEADER_FILES += env.FindFiles(
   'HALSOCHWIOTarget.h',
   '${INC_ROOT}/core/kernel/xpu3/hal/config/')
   
  HAL_XPU3_PACKOUT_SOURCE_FILES = env.FindFiles(
   '*.c',
   '${INC_ROOT}/core/kernel/xpu3/hal/')

  env.CleanPack(['TZOS_IMAGE'],
              HAL_XPU3_PACKOUT_HEADER_FILES)

  env.CleanPack(['TZOS_IMAGE'],
              HAL_XPU3_PACKOUT_SOURCE_FILES)

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------

  env.AddBinaryLibrary(['TZOS_IMAGE', 'XBL_SEC_IMAGE'],
                     '${BUILDPATH}/HALxpu3TZOS',
                     [HAL_XPU3_COMMON_SOURCES])


