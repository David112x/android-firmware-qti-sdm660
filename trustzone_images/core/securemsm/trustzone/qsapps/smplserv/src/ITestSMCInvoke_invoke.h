#ifndef __ITESTSMCINVOKE_INVOKE_H
#define __ITESTSMCINVOKE_INVOKE_H

// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

#include "ITestSMCInvoke.h"

#define ITestSMCInvoke_DEFINE_INVOKE(func, prefix, type) \
  int32_t func(ObjectCxt h, ObjectOp op, ObjectArg *a, ObjectCounts k) \
  { \
    type me = (type) h; \
    switch (ObjectOp_methodID(op)) { \
      case Object_OP_release: { \
        return prefix##release(me); \
      } \
      case Object_OP_retain: { \
        return prefix##retain(me); \
      } \
      case ITestSMCInvoke_OP_test: { \
        if (k != ObjectCounts_pack(1, 1, 0, 0)) { \
          break; \
        } \
        const void *cmd_ptr = (const void*) a[0].b.ptr; \
        size_t cmd_len = a[0].b.size / 1; \
        void *result_ptr = (void*) a[1].b.ptr; \
        size_t result_len = a[1].b.size / 1; \
        int32_t r = prefix##test(me, cmd_ptr, cmd_len, result_ptr, result_len, &result_len); \
        a[1].b.size = result_len * 1; \
        return r; \
      } \
    } \
    return Object_ERROR_INVALID; \
  }

#endif /* __ITESTSMCINVOKE_INVOKE_H */
