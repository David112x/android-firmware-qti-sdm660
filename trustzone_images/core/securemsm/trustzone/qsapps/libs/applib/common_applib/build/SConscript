#===============================================================================
#
# common_applib
#
# GENERAL DESCRIPTION
#    build script
#
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.tz/1.0.7.1/securemsm/trustzone/qsapps/libs/applib/common_applib/build/SConscript#1 $
#  $DateTime: 2020/01/14 12:35:09 $
#  $Author: pwbldsvc $
#  $Change: 22186835 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains schedulerents describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
# when         who     what, where, why
# --------     ---     ---------------------------------------------------------
# 08/10/15     dc      Added QPAY app
# 01/27/2015   sg      initial versio
#===============================================================================
Import('env')
import copy
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/securemsm/trustzone/qsapps/libs/applib/common_applib"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------

CBSP_API = [
   'SECUREMSM',
   'SERVICES',
   'DAL',
   'MINK',
   'MINK_LK',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

INC_PATH = ["${INC_ROOT}/core/api/securemsm/trustzone/qsee",
            "${INC_ROOT}/core/api/securemsm/trustzone/gp",
            "${INC_ROOT}/core/securemsm/trustzone/qsapps/libs/applib/qsee/src",
            "${INC_ROOT}/core/api/services",
            "${INC_ROOT}/core/securemsm/trustzone/qsee/include",
            "${INC_ROOT}/core/securemsm/trustzone/qsapps/libs/applib/common/src",
            "${INC_ROOT}/core/securemsm/trustzone/qsapps/libs/services/src",
            "${INC_ROOT}/core/api/kernel/libstd/stringl",
            "${INC_ROOT}/core/api/kernel/libstd",
            "${INC_ROOT}/core/securemsm/trustzone/qsapps/libs/applib/common_applib/inc/",
            "${INC_ROOT}/core/securemsm/trustzone/qsapps/libs/applib/gp/src/",
            "${INC_ROOT}/core/securemsm/trustzone/qsapps/libs/applib/gp/inc/"]
env.Append(CPPPATH = INC_PATH)

#----------------------------------------------------------------------------
# TZ Exec Shared Objects
#----------------------------------------------------------------------------
LIB_ENTRY_SOURCES = [
    '${BUILDPATH}/src/common_applib.c',
    '${BUILDPATH}/src/gpFileService.c',
    '${BUILDPATH}/src/gpPersistObjCommon.c',
    '${BUILDPATH}/src/gpPersistObjCrypto.c',
    '${BUILDPATH}/src/gpPersistObjFileIO.c',
    '${BUILDPATH}/src/gpPersistentObjects.c',
    '${BUILDPATH}/src/gpPersistObjData.c',
    '${BUILDPATH}/src/gpPersistObjHandler.c',
    '${BUILDPATH}/src/gpPersistObjIndex.c',
    '${BUILDPATH}/src/gpPersistObjVersion.c',
    '${BUILDPATH}/src/gpList.c',
]

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
# Add sources as binary objects to applib images
env.AddBinaryObject('APPLIB32_IMAGE', LIB_ENTRY_SOURCES)
env.AddBinaryObject('APPLIB64_IMAGE', LIB_ENTRY_SOURCES)

#-------------------------------------------------------------------------------
# Load sub scripts
#-------------------------------------------------------------------------------
env.LoadSoftwareUnits()
env.Deploy([
  '../inc/gpFileService.h',
  '../inc/gpPersistObjCommon.h',
  '../inc/gpPersistObjData.h',
  '../inc/gpPersistObjHandler.h',
  '../inc/gpPersistObjVersion.h',
  '../inc/gpObject.h',
  '../inc/gpPersistObjCrypto.h',
  '../inc/gpPersistObjFileIO.h',
  '../inc/gpPersistObjIndex.h',
])
