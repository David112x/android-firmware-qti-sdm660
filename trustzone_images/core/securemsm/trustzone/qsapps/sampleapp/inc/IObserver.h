#ifndef __IOBSERVER_H
#define __IOBSERVER_H

// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

// Copyright (c) 2016 Qualcomm Technologies, Inc.  All Rights Reserved.

// Qualcomm Technologies Proprietary and Confidential.

/**
 * Spy into the context of an observed object.
 * Used for TESTING purposes ONLY.
 */

#define IObserver_OP_observe 0
#define IObserver_OP_dump 1

static inline int32_t
IObserver_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IObserver_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IObserver_observe(Object self, Object o_val, uint32_t contextSize_val)
{
  ObjectArg a[2];
  a[1].o = o_val;
  a[0].b = (ObjectBuf) { &contextSize_val, sizeof(uint32_t) };

  return Object_invoke(self, IObserver_OP_observe, a, ObjectCounts_pack(1, 0, 1, 0));
}

static inline int32_t
IObserver_dump(Object self, void *context_ptr, size_t context_len, size_t *context_lenout)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { context_ptr, context_len * 1 };

  int32_t result = Object_invoke(self, IObserver_OP_dump, a, ObjectCounts_pack(0, 1, 0, 0));

  *context_lenout = a[0].b.size / 1;

  return result;
}


#endif /* __IOBSERVER_H */
