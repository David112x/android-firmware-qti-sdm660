#ifndef __ITESTPARAMS_H
#define __ITESTPARAMS_H

// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "ITestGetSet.h"

// Copyright (c) 2016 Qualcomm Technologies, Inc.  All Rights Reserved.

// Qualcomm Technologies Proprietary and Confidential.

// Test interface

#define TestParams_OP_ioAll 2

static inline int32_t
TestParams_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
TestParams_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
TestParams_get(Object self, void *bo_ptr, size_t bo_len, size_t *bo_lenout, Object *oo_ptr)
{
  ObjectArg a[2];
  a[0].b = (ObjectBuf) { bo_ptr, bo_len * 1 };

  int32_t result = Object_invoke(self, TestGetSet_OP_get, a, ObjectCounts_pack(0, 1, 0, 1));

  *bo_lenout = a[0].b.size / 1;
  *oo_ptr = a[1].o;

  return result;
}

static inline int32_t
TestParams_set(Object self, const void *bi_ptr, size_t bi_len, Object oi_val)
{
  ObjectArg a[2];
  a[0].bi = (ObjectBufIn) { bi_ptr, bi_len * 1 };
  a[1].o = oi_val;

  return Object_invoke(self, TestGetSet_OP_set, a, ObjectCounts_pack(1, 0, 1, 0));
}

static inline int32_t
TestParams_ioAll(Object self, const void *bi01_ptr, size_t bi01_len, const void *bi02_ptr, size_t bi02_len, const void *bi03_ptr, size_t bi03_len, const void *bi04_ptr, size_t bi04_len, const void *bi05_ptr, size_t bi05_len, const void *bi06_ptr, size_t bi06_len, const void *bi07_ptr, size_t bi07_len, const void *bi08_ptr, size_t bi08_len, const void *bi09_ptr, size_t bi09_len, const void *bi10_ptr, size_t bi10_len, const void *bi11_ptr, size_t bi11_len, const void *bi12_ptr, size_t bi12_len, const void *bi13_ptr, size_t bi13_len, const void *bi14_ptr, size_t bi14_len, const void *bi15_ptr, size_t bi15_len, Object oi01_val, Object oi02_val, Object oi03_val, Object oi04_val, Object oi05_val, Object oi06_val, Object oi07_val, Object oi08_val, Object oi09_val, Object oi10_val, Object oi11_val, Object oi12_val, Object oi13_val, Object oi14_val, Object oi15_val, void *bo01_ptr, size_t bo01_len, size_t *bo01_lenout, void *bo02_ptr, size_t bo02_len, size_t *bo02_lenout, void *bo03_ptr, size_t bo03_len, size_t *bo03_lenout, void *bo04_ptr, size_t bo04_len, size_t *bo04_lenout, void *bo05_ptr, size_t bo05_len, size_t *bo05_lenout, void *bo06_ptr, size_t bo06_len, size_t *bo06_lenout, void *bo07_ptr, size_t bo07_len, size_t *bo07_lenout, void *bo08_ptr, size_t bo08_len, size_t *bo08_lenout, void *bo09_ptr, size_t bo09_len, size_t *bo09_lenout, void *bo10_ptr, size_t bo10_len, size_t *bo10_lenout, void *bo11_ptr, size_t bo11_len, size_t *bo11_lenout, void *bo12_ptr, size_t bo12_len, size_t *bo12_lenout, void *bo13_ptr, size_t bo13_len, size_t *bo13_lenout, void *bo14_ptr, size_t bo14_len, size_t *bo14_lenout, void *bo15_ptr, size_t bo15_len, size_t *bo15_lenout, Object *oo01_ptr, Object *oo02_ptr, Object *oo03_ptr, Object *oo04_ptr, Object *oo05_ptr, Object *oo06_ptr, Object *oo07_ptr, Object *oo08_ptr, Object *oo09_ptr, Object *oo10_ptr, Object *oo11_ptr, Object *oo12_ptr, Object *oo13_ptr, Object *oo14_ptr, Object *oo15_ptr)
{
  ObjectArg a[60];
  a[0].bi = (ObjectBufIn) { bi01_ptr, bi01_len * 1 };
  a[1].bi = (ObjectBufIn) { bi02_ptr, bi02_len * 1 };
  a[2].bi = (ObjectBufIn) { bi03_ptr, bi03_len * 1 };
  a[3].bi = (ObjectBufIn) { bi04_ptr, bi04_len * 1 };
  a[4].bi = (ObjectBufIn) { bi05_ptr, bi05_len * 1 };
  a[5].bi = (ObjectBufIn) { bi06_ptr, bi06_len * 1 };
  a[6].bi = (ObjectBufIn) { bi07_ptr, bi07_len * 1 };
  a[7].bi = (ObjectBufIn) { bi08_ptr, bi08_len * 1 };
  a[8].bi = (ObjectBufIn) { bi09_ptr, bi09_len * 1 };
  a[9].bi = (ObjectBufIn) { bi10_ptr, bi10_len * 1 };
  a[10].bi = (ObjectBufIn) { bi11_ptr, bi11_len * 1 };
  a[11].bi = (ObjectBufIn) { bi12_ptr, bi12_len * 1 };
  a[12].bi = (ObjectBufIn) { bi13_ptr, bi13_len * 1 };
  a[13].bi = (ObjectBufIn) { bi14_ptr, bi14_len * 1 };
  a[14].bi = (ObjectBufIn) { bi15_ptr, bi15_len * 1 };
  a[30].o = oi01_val;
  a[31].o = oi02_val;
  a[32].o = oi03_val;
  a[33].o = oi04_val;
  a[34].o = oi05_val;
  a[35].o = oi06_val;
  a[36].o = oi07_val;
  a[37].o = oi08_val;
  a[38].o = oi09_val;
  a[39].o = oi10_val;
  a[40].o = oi11_val;
  a[41].o = oi12_val;
  a[42].o = oi13_val;
  a[43].o = oi14_val;
  a[44].o = oi15_val;
  a[15].b = (ObjectBuf) { bo01_ptr, bo01_len * 1 };
  a[16].b = (ObjectBuf) { bo02_ptr, bo02_len * 1 };
  a[17].b = (ObjectBuf) { bo03_ptr, bo03_len * 1 };
  a[18].b = (ObjectBuf) { bo04_ptr, bo04_len * 1 };
  a[19].b = (ObjectBuf) { bo05_ptr, bo05_len * 1 };
  a[20].b = (ObjectBuf) { bo06_ptr, bo06_len * 1 };
  a[21].b = (ObjectBuf) { bo07_ptr, bo07_len * 1 };
  a[22].b = (ObjectBuf) { bo08_ptr, bo08_len * 1 };
  a[23].b = (ObjectBuf) { bo09_ptr, bo09_len * 1 };
  a[24].b = (ObjectBuf) { bo10_ptr, bo10_len * 1 };
  a[25].b = (ObjectBuf) { bo11_ptr, bo11_len * 1 };
  a[26].b = (ObjectBuf) { bo12_ptr, bo12_len * 1 };
  a[27].b = (ObjectBuf) { bo13_ptr, bo13_len * 1 };
  a[28].b = (ObjectBuf) { bo14_ptr, bo14_len * 1 };
  a[29].b = (ObjectBuf) { bo15_ptr, bo15_len * 1 };

  int32_t result = Object_invoke(self, TestParams_OP_ioAll, a, ObjectCounts_pack(15, 15, 15, 15));

  *bo01_lenout = a[15].b.size / 1;
  *bo02_lenout = a[16].b.size / 1;
  *bo03_lenout = a[17].b.size / 1;
  *bo04_lenout = a[18].b.size / 1;
  *bo05_lenout = a[19].b.size / 1;
  *bo06_lenout = a[20].b.size / 1;
  *bo07_lenout = a[21].b.size / 1;
  *bo08_lenout = a[22].b.size / 1;
  *bo09_lenout = a[23].b.size / 1;
  *bo10_lenout = a[24].b.size / 1;
  *bo11_lenout = a[25].b.size / 1;
  *bo12_lenout = a[26].b.size / 1;
  *bo13_lenout = a[27].b.size / 1;
  *bo14_lenout = a[28].b.size / 1;
  *bo15_lenout = a[29].b.size / 1;
  *oo01_ptr = a[45].o;
  *oo02_ptr = a[46].o;
  *oo03_ptr = a[47].o;
  *oo04_ptr = a[48].o;
  *oo05_ptr = a[49].o;
  *oo06_ptr = a[50].o;
  *oo07_ptr = a[51].o;
  *oo08_ptr = a[52].o;
  *oo09_ptr = a[53].o;
  *oo10_ptr = a[54].o;
  *oo11_ptr = a[55].o;
  *oo12_ptr = a[56].o;
  *oo13_ptr = a[57].o;
  *oo14_ptr = a[58].o;
  *oo15_ptr = a[59].o;

  return result;
}


#endif /* __ITESTPARAMS_H */
