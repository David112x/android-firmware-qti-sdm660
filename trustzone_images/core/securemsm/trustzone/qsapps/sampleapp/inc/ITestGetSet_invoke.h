#ifndef __ITESTGETSET_INVOKE_H
#define __ITESTGETSET_INVOKE_H

// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

#include "ITestGetSet.h"

#define TestGetSet_DEFINE_INVOKE(func, prefix, type) \
  int32_t func(ObjectCxt h, ObjectOp op, ObjectArg *a, ObjectCounts k) \
  { \
    type me = (type) h; \
    switch (ObjectOp_methodID(op)) { \
      case Object_OP_release: { \
        return prefix##release(me); \
      } \
      case Object_OP_retain: { \
        return prefix##retain(me); \
      } \
      case TestGetSet_OP_get: { \
        if (k != ObjectCounts_pack(0, 1, 0, 1)) { \
          break; \
        } \
        void *bo_ptr = (void*) a[0].b.ptr; \
        size_t bo_len = a[0].b.size / 1; \
        int32_t r = prefix##get(me, bo_ptr, bo_len, &bo_len, &a[1].o); \
        a[0].b.size = bo_len * 1; \
        return r; \
      } \
      case TestGetSet_OP_set: { \
        if (k != ObjectCounts_pack(1, 0, 1, 0)) { \
          break; \
        } \
        const void *bi_ptr = (const void*) a[0].b.ptr; \
        size_t bi_len = a[0].b.size / 1; \
        return prefix##set(me, bi_ptr, bi_len, a[1].o); \
      } \
    } \
    return Object_ERROR_INVALID; \
  }

#endif /* __ITESTGETSET_INVOKE_H */
