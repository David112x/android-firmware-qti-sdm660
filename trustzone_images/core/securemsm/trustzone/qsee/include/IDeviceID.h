#ifndef __IDEVICEID_H
#define __IDEVICEID_H

// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

/** @file  IDeviceID.idl */

/* Copyright (c) 2015-2016 Qualcomm Technologies, Inc.  All Rights Reserved.
   Qualcomm Technologies Proprietary and Confidential. */

/**
 * @addtogroup core
 * @{
 */

#define IDeviceID_BOOT_ROM_VERSION UINT32_C(1)
#define IDeviceID_SBL_VERSION UINT32_C(2)
#define IDeviceID_QSEE_VERSION UINT32_C(3)
#define IDeviceID_HYP_VERSION UINT32_C(4)

#define IDeviceID_OP_readJtagID 0
#define IDeviceID_OP_readSerialNum 1
#define IDeviceID_OP_getDeviceUUID 2
#define IDeviceID_OP_getComponentVersion 3
#define IDeviceID_OP_getOEMID 4
#define IDeviceID_OP_getHWVersion 5
#define IDeviceID_OP_getPKHash 6

static inline int32_t
IDeviceID_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IDeviceID_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IDeviceID_readJtagID(Object self, uint32_t *jtagId_ptr)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { jtagId_ptr, sizeof(uint32_t) };

  return Object_invoke(self, IDeviceID_OP_readJtagID, a, ObjectCounts_pack(0, 1, 0, 0));
}

static inline int32_t
IDeviceID_readSerialNum(Object self, uint64_t *serialNum_ptr)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { serialNum_ptr, sizeof(uint64_t) };

  return Object_invoke(self, IDeviceID_OP_readSerialNum, a, ObjectCounts_pack(0, 1, 0, 0));
}

static inline int32_t
IDeviceID_getDeviceUUID(Object self, void *uuid_ptr, size_t uuid_len, size_t *uuid_lenout)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { uuid_ptr, uuid_len * 1 };

  int32_t result = Object_invoke(self, IDeviceID_OP_getDeviceUUID, a, ObjectCounts_pack(0, 1, 0, 0));

  *uuid_lenout = a[0].b.size / 1;

  return result;
}

static inline int32_t
IDeviceID_getComponentVersion(Object self, uint32_t componentId_val, void *versionBuffer_ptr, size_t versionBuffer_len, size_t *versionBuffer_lenout)
{
  ObjectArg a[2];
  a[0].b = (ObjectBuf) { &componentId_val, sizeof(uint32_t) };
  a[1].b = (ObjectBuf) { versionBuffer_ptr, versionBuffer_len * 1 };

  int32_t result = Object_invoke(self, IDeviceID_OP_getComponentVersion, a, ObjectCounts_pack(1, 1, 0, 0));

  *versionBuffer_lenout = a[1].b.size / 1;

  return result;
}

static inline int32_t
IDeviceID_getOEMID(Object self, uint32_t *oemId_ptr)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { oemId_ptr, sizeof(uint32_t) };

  return Object_invoke(self, IDeviceID_OP_getOEMID, a, ObjectCounts_pack(0, 1, 0, 0));
}

static inline int32_t
IDeviceID_getHWVersion(Object self, uint32_t *hwVersion_ptr)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { hwVersion_ptr, sizeof(uint32_t) };

  return Object_invoke(self, IDeviceID_OP_getHWVersion, a, ObjectCounts_pack(0, 1, 0, 0));
}

static inline int32_t
IDeviceID_getPKHash(Object self, void *pkHash_ptr, size_t pkHash_len, size_t *pkHash_lenout)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { pkHash_ptr, pkHash_len * 1 };

  int32_t result = Object_invoke(self, IDeviceID_OP_getPKHash, a, ObjectCounts_pack(0, 1, 0, 0));

  *pkHash_lenout = a[0].b.size / 1;

  return result;
}

/** @} */ /* end_addtogroup core */
#endif /* __IDEVICEID_H */
