#===============================================================================
#
# App Core
#
# GENERAL DESCRIPTION
#    build script
#
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/apps.tz/1.0.7.1/securemsm/trustzone/qsapps/qpay/src/SConscript#1 $
#  $DateTime: 2020/01/14 12:33:12 $
#  $Author: pwbldsvc $
#  $Change: 22186812 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains schedulerents describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#===============================================================================

Import('env')

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------

# Enable QSEE logging
env.Append(CPPDEFINES = ["QPAY_QSEE_LOG_SUPPORTED"])

# QPAY Sample TA uses GP TEE SE APIs. However, this TA is not a GP TA. The
# implementation of the GP TEE Library needs link to some GP Core functionality
# which is required by some GP TA using the TEE SE API. This flag helps the GP
# TEE SE API library implementation to not link the GP Core functionality if
# linked with this TA
env.Append(CPPDEFINES = ["QPAY_NON_GP_TA"])

includes = [
  "${BUILD_ROOT}/core/api/services",
  "${BUILD_ROOT}/core/api/kernel/libstd/stringl",
  "${BUILD_ROOT}/core/api/securemsm/trustzone/gp",
  "${BUILD_ROOT}/core/api/securemsm/trustzone/qsee",
  "${BUILD_ROOT}/core/securemsm/trustzone/qsapps/libs/tee_se_utils/inc",
  "${BUILD_ROOT}/core/securemsm/trustzone/qsapps/libs/tee_se_api/inc",
]

#----------------------------------------------------------------------------
# App core Objects
#----------------------------------------------------------------------------
sources = [
  'app_main.c',
]

if env['PROC'] == 'scorpion':
  app_name = 'qpay'
else:
  app_name = 'qpay64'

#-------------------------------------------------------------------------------
# Add metadata to image
#-------------------------------------------------------------------------------
md = {
   'appName':    app_name,
   'UUID':       'a4c2bd5a-7757-4695-899f-0dcb585e53ec',
   'privileges': [ 'default', 'ESEService' ],
   'acceptBufSize': 139264,  # CAPDU(64K) and RAPDU(64K) plus some overhead
}

app_units = env.SecureAppBuilder(
  sources = sources,
  includes = includes,
  metadata = md,
  image = app_name,
  heap_size='0x21000',  # At least For accepted CAPDU and RAPDU  
)

op = env.Alias(app_name, app_units)
Return('app_units')
#===============================================================================
