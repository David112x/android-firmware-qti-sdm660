/************************************************
 * File: QCA_Debug_PFALLog.dh
 * QCA Bluetooth Firmware Logging Parser.
 *
 * Copyright (c) 2015-2017 Qualcomm Atheros, Inc.
 * All Rights Reserved.
 * Qualcomm Atheros Confidential and Proprietary.
************************************************/
	

TABLE tQca_LLMLogID APPENDS_ONLY tQca_EnhLogID
    {0x0700 "LOG_ID_PFAL_BUILD_INFO"        "LOG_ID_PFAL_BUILD_INFO"        0   gQca_PFAL_BuildInfo}
    {0x0701 "LOG_ID_PFAL_ASSERT_INFO"       "LOG_ID_PFAL_ASSERT_INFO"       0   }
    {0x0702 "LOG_ID_PFAL_COREDUMP_INFO"     "LOG_ID_PFAL_COREDUMP_INFO"     0   gQca_PFAL_CoreDumpInfo}
    {0x0703 "LOG_ID_PFAL_TRC_TRIG"          "LOG_ID_PFAL_TRC_TRIG"          0   gQca_PFAL_Trc_Trig}
    {0x0704 "LOG_ID_PFAL_TRC_DATA"          "LOG_ID_PFAL_TRC_DATA"          0   gQca_PFAL_Trc_Data}
    {0x0705 "LOG_ID_PFAL_TRC_STOP"          "LOG_ID_PFAL_TRC_STOP"          0   gQca_PFAL_Trc_Stop}
    {0x0706 "LOG_ID_PFAL_SLEEP_ENTER"       "LOG_ID_PFAL_SLEEP_ENTER"       0   gQca_PFAL_SleepEnter}
    {0x0707 "LOG_ID_PFAL_SLEEP_DS_EXIT"     "LOG_ID_PFAL_SLEEP_DS_EXIT"     0   gQca_PFAL_SleepDSExit}
    {0x0708 "LOG_ID_PFAL_SLEEP_DEBUG"       "LOG_ID_PFAL_SLEEP_DEBUG"       0   gQca_PFAL_SleepDebug}
    {0x0709 "LOG_ID_PFAL_UART_DEBUG"        "LOG_ID_PFAL_UART_DEBUG"        0   }
    {0x070A "LOG_ID_PFAL_CPU_BANDWIDTH"     "LOG_ID_PFAL_CPU_BANDWIDTH"     0   gQca_PFAL_CPUBandwidth}
    {0x070B "LOG_ID_PFAL_LOWER_HEAP_STATS"  "LOG_ID_PFAL_LOWER_HEAP_STATS"  0   gQca_PFAL_LowerHeapStats}
    {0x070C "LOG_ID_PFAL_UPPER_HEAP_STATS"  "LOG_ID_PFAL_UPPER_HEAP_STATS"  0   gQca_PFAL_UpperHeapStats}
    {0x070D "LOG_ID_PFAL_STACK_WARN"        "LOG_ID_PFAL_STACK_WARN"        0   gQca_PFAL_StackWarn}
    {0x070E "LOG_ID_PFAL_SLEEP_FAIL_RATE"   "LOG_ID_PFAL_SLEEP_FAIL_RATE"   0   gQca_PFAL_SleepFailRate}
    {0x070F "LOG_ID_PFAL_UART_CTS_ON"       "LOG_ID_PFAL_UART_CTS_ON"       0   }
    {0x0710 "LOG_ID_PFAL_SLEEP_PM_VOTERS"   "LOG_ID_PFAL_SLEEP_PM_VOTERS"   0   gQca_PFAL_SleepPMVoters}
    {0x0711 "LOG_ID_PFAL_SLEEP_DS_WAKE_IRQ_REG"   "LOG_ID_PFAL_SLEEP_DS_WAKE_IRQ_REG"   0   gQca_PFAL_SleepWakeIrqReg}
    {0x0712 "LOG_ID_PFAL_RM_HW_CAL_STATUS"  "LOG_ID_PFAL_RM_HW_CAL_STATUS"  0   gQca_PFAL_CalStatus}
    {0x0713 "LOG_ID_PFAL_ACI_REG_DUMP"      "LOG_ID_PFAL_ACI_REG_DUMP"      0   gQca_PFAL_AciRegDump}
    {0x0714 "LOG_ID_PFAL_ERROR_TXP_RX_INVALID_PKT"      "LOG_ID_PFAL_ERROR_TXP_RX_INVALID_PKT"      0 gQca_PFAL_RXinvalid}
    {0x0715 "LOG_ID_PFAL_RM_TXDC_CAL_RES"   "LOG_ID_PFAL_RM_TXDC_CAL_RES"   0   gQca_PFAL_DCCal_Result}
    {0x0717 "LOG_ID_PFAL_ACI_STOP_REG"      "LOG_ID_PFAL_ACI_STOP_REG"      0   gQca_PFAL_ACI_Regs}
    {0x0718 "LOG_ID_PFAL_ACI_START_REG"     "LOG_ID_PFAL_ACI_START_REG"     0   gQca_PFAL_ACI_Regs}
    {0x0719 "LOG_ID_PFAL_ACI_MONO_START_FAIL"     "LOG_ID_PFAL_ACI_MONO_START_FAIL"     0   gQca_PFAL_ACI_MonoStartFail}
    {0x0720 "LOG_ID_PFAL_ANT_DATA_MEM_ALLOC_FAIL"  "LOG_ID_PFAL_ANT_DATA_MEM_ALLOC_FAIL"        0   gQca_PFAL_AntDataMemAllocFail}
    {0x0721 "LOG_ID_PFAL_ANT_EVENT_MEM_ALLOC_FAIL" "LOG_ID_PFAL_ANT_EVENT_MEM_ALLOC_FAIL"       0   gQca_PFAL_AntEventMemAllocFail}
    {0x0722 "LOG_ID_PFAL_SENSUART_TX_SIG_RETRY_ERR" "LOG_ID_PFAL_SENSUART_TX_SIG_RETRY_ERR"     0   gQca_PFAL_SensUartTxSigRetryErr}
    {0x0723 "LOG_ID_PFAL_SENSUART_RX_SIG_REV_ERR"   "LOG_ID_PFAL_SENSUART_RX_SIG_REV_ERR"       0   gQca_PFAL_SensUartRxSigRevErr}
    {0x0724 "LOG_ID_PFAL_SENSUART_TX_BUF_EXHAUST_ERR" "LOG_ID_PFAL_SENSUART_TX_BUF_EXHAUST_ERR" 0   gQca_PFAL_SensUartTxBufExhanustErr}
    {0x0725 "LOG_ID_PFAL_SENSUART_REPORT_ADVEVT"    "LOG_ID_PFAL_SENSUART_REPORT_ADVEVT"        0   gQca_PFAL_SensUartReportAdvevt}

    {0x07FF "PFAL End"}
ENDTABLE

GROUP gQca_PFAL_BuildInfo   "Build Info"
{
    FIELD fQca_BuildInfo         (FromField Bytes fQca_Pkt_Len)     (StringOfAscii)      "Build Label"
}

GROUP gQca_PFAL_RXinvalid "UART Rx invalid ID count"
{
    FIELD fQca_UARTRxInvalidID   (Fixed 1 Byte)                 (Decimal)                 "Count"
}

GROUP gQca_PFAL_CoreDumpInfo    "Core Dump Info"
{
    FIELD fQca_CoreDumpFileName     (Fixed 4 Bytes)             (Hex)  SUPPRESS_DETAIL
    FIELD fQca_CoreDumpLineNo       (Fixed 4 Bytes)             (Decimal)                "Line #"
    FIELD fQca_CoreDumpPCAddr       (Fixed 4 Bytes)             (Hex)                    "PC Addr"
    FIELD fQca_CoreDumpReason       (Fixed 4 Bytes)             (Hex)                    "Reset Reason"
    FIELD fQca_CoreDumpBuildVer     (Fixed 4 Bytes)             (Hex)                    "Build Version"
    FIELD fQca_CoreDumpBuildLbl     (Fixed 4 Bytes)             (Hex)  SUPPRESS_DETAIL
    RESERVED                        (Fixed 4 Bytes)
    FIELD fQca_CoreDumpAssertCnt    (Fixed 2 Bytes)             (Decimal)                "Assert Count"
    RESERVED                        (Fixed 2 Bytes)
}


GROUP gQca_PFAL_SleepEnter "Sleep Mode Info"
{
    FIELD fQca_SleepModeEnter     (Fixed 1 Byte)             (Table tQCA_SleepModes)     "Sleep mode"
}

TABLE tQCA_SleepModes

    {0x00 "PFAL_SLEEP_EXIT_SLEEP"       "PFAL_SLEEP_EXIT_SLEEP"         0   }
    {0x01 "PFAL_SLEEP_ENTER_NAP"        "PFAL_SLEEP_ENTER_NAP"          0   }
    {0x02 "PFAL_SLEEP_ENTER_DEEPSLEEP"  "PFAL_SLEEP_ENTER_DEEPSLEEP"    0   }
ENDTABLE

GROUP gQca_PFAL_SleepWakeIrqReg "Deep Sleep Wake IRQ info"
{
    FIELD fQca_SleepIRQPend     (Fixed 4 Bytes)             (Hex)   "NVIC_IRQ_PEND"
    FIELD fQca_SleepIRQBcstCnt  (Fixed 4 Bytes)             (Hex)   "BCST Count"
    FIELD fQca_SleepIRQWake     (Fixed 2 Bytes)             (Hex)   "WAKE IRQ"
    FIELD fQca_SleepIRQCoex     (Fixed 2 Bytes)             (Hex)   "COEX IRQ"
    FIELD fQca_SleepIRQBcst     (Fixed 1 Byte)              (Hex)   "BCST IRQ"
    FIELD fQca_SleepIRQCmpr     (Fixed 1 Byte)              (Hex)   "CMPR IRQ"
    RESERVED                    (Fixed 2 Bytes)
}
GROUP gQca_PFAL_SleepFailRate "Deep Sleep Fail Rate"
{
    FIELD fQca_SleepStateFlags  (Fixed 4 Bytes)             (Hex)   "DS State Flags"
    FIELD fQca_SleepEnterTs     (Fixed 4 Bytes)             (Hex)   "DS Enter Timestamp"
    FIELD fQca_SleepSuccess     (Fixed 4 Bytes)             (Hex)   "DS Success Count"
    FIELD fQca_SleepFailure     (Fixed 4 Bytes)             (Hex)   "DS Failure Count"
}
GROUP gQca_PFAL_SleepDSExit "Deep Sleep Exit Info"
{
    GROUP gQca_PFAL_SleepWakeIrqReg;
    GROUP gQca_PFAL_SleepFailRate;
}

GROUP gQca_PFAL_SleepDebug "Sleep Debug Info"
{
    FIELD fQca_SleepDebug       (Fixed 4 Bytes)             (Hex)   "Debug info"
}

TABLE tQCA_PMVoteValue

    {0x00   "DISABLE"          "DISABLE"               0   }
    {0x01   "LPPS_INACTIVE"    "LPPS_INACTIVE"         0   }
    {0x02   "INACTIVE"         "INACTIVE"              0   }
    {0x03   "LPPS_ACTIVE"      "LPPS_ACTIVE"           0   }
    {0x04   "ACTIVE"           "ACTIVE"                0   }
    {Default "Unknown"          "Unknown"              0   }
ENDTABLE
GROUP gQca_PFAL_SleepPMVoters "Pending Power Manager Voters"
{
    FIELD fQca_PMVoter_0  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "SLEEP_WAKEUP"
    FIELD fQca_PMVoter_1  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "HIF_ACL"
    FIELD fQca_PMVoter_2  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "TEST_MODE"
    FIELD fQca_PMVoter_3  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "CLOCK_CAPTURE"
    FIELD fQca_PMVoter_4  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "LINKLESS_BC"
    FIELD fQca_PMVoter_5  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "TXP"
    FIELD fQca_PMVoter_6  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "SYS_READY"
    FIELD fQca_PMVoter_7  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "ACI"
    FIELD fQca_PMVoter_8  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "LPO_CALIBRATION"
    FIELD fQca_PMVoter_9  (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "FM"
    FIELD fQca_PMVoter_10 (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "WIPOWER"
    FIELD fQca_PMVoter_11 (Fixed 1 Byte)             (TABLE tQCA_PMVoteValue)   "SENUART"
}


GROUP gQca_PFAL_CPUBandwidth "CPU profiling Info"
{
    FIELD fQca_LCInt0MaxDuty                  (Fixed 4 Bytes)             (Decimal)   "LC Int0 Max Duty Cycle(units of 62.5 ns)"
    FIELD fQca_CPUBandwidth                   (Fixed 1 Byte)              (Decimal)   "CPU Bandwidth Available(Percentage)"
    FIELD fQca_LCInt0Usage                    (Fixed 1 Byte)              (Decimal)   "LC INT0 usage(Percentage)"
    FIELD fQca_DispatchElementOpcodeAtEntryMaxDutyLCInt0    (Fixed 1 Byte)  (TABLE tQca_DispatchOpCode)   "Dispatch Element at Entry of Max Duty LC Int0"
    FIELD fQca_DispatchElementOpcodeAtExitMaxDutyLCInt0     (Fixed 1 Byte)  (TABLE tQca_DispatchOpCode)   "Dispatch Element at Exit of Max Duty LC Int0"
}

GROUP gQca_PFAL_LowerHeapStats "Lower Heap Stats"
{
    FIELD fQca_LowerHeapTop                 (Fixed 4 Bytes)                 (Hex)   "Lower Heap Top"
    FIELD fQca_LowerHeapBottom              (Fixed 4 Bytes)                 (Hex)   "Lower Heap Bottom"
    FIELD fQca_LowerHeapSize                (Fixed 4 Bytes)                 (Hex)   "Lower Heap Size Left"
}

GROUP gQca_PFAL_UpperHeapStats "Upper Heap Stats"
{
    FIELD fQca_UpperHeapSize                (Fixed 4 Bytes)                 (Hex)   "Upper Heap Size Left"
    FIELD fQca_UpperHeapMaxSize             (Fixed 4 Bytes)                 (Hex)   "Upper Heap Max Alloc Size"
    FIELD fQca_UpperHeapPeak                (Fixed 4 Bytes)                 (Hex)   "Upper Heap Peak Usage"
    FIELD fQca_UpperHeapBlocks              (Fixed 4 Bytes)                 (Hex)   "Upper Heap Block Count "

}

GROUP gQca_PFAL_StackWarn "Stack Warn Mask"
{
    FIELD fQca_StackWarnMask                (Fixed 4 Bytes)                 (Hex)   "Stack Warn Mask"
}

GROUP gQca_PFAL_ACI_MonoStartFail "ACI MONO Start Fail"
{
    FIELD fQca_MonoStartFail                (Fixed 2 Bytes)                 (Decimal)  "Curr Lower Heapsize"
}

TABLE tQca_PFAL_CalStatus
    {0 "CAL_SUCCESS"}
    {1 "CAL_FAILURE"}
ENDTABLE

TABLE tQca_PFAL_CalStateFlag
    {0 "FAILURE"}
    {1 "SUCCESS"}
ENDTABLE

GROUP gQca_PFAL_CalStatus "Calibration Status"
{
    FIELD fQca_CalStatus                    (Fixed 1 Byte)      (TABLE tQca_PFAL_CalStatus)   "Calibration Status"

    /* Cal State Flags from MSB to LSB */
    RESERVED                                (Fixed 1 Bit)
    FIELD fQca_Cal_RxRSBCal                 (Fixed 1 Bit)       (TABLE tQca_PFAL_CalStateFlag)  "Rx RSB Cal"
    FIELD fQca_Cal_TxRSBCal                 (Fixed 1 Bit)       (TABLE tQca_PFAL_CalStateFlag)  "Tx RSB Cal"
    FIELD fQca_Cal_ModemTxDcCal             (Fixed 1 Bit)       (TABLE tQca_PFAL_CalStateFlag)  "Modem Tx DC Cal"
    FIELD fQca_Cal_RxRadioCal               (Fixed 1 Bit)       (TABLE tQca_PFAL_CalStateFlag)  "Rx Radio Cal"
    FIELD fQca_Cal_TxRadioCal               (Fixed 1 Bit)       (TABLE tQca_PFAL_CalStateFlag)  "Tx Radio Cal"
    RESERVED                                (Fixed 1 Bit)
    FIELD fQca_Cal_ProcessCorner            (Fixed 1 Bit)       (TABLE tQca_PFAL_CalStateFlag)  "Process Corner Cal"
    FIELD fQca_CalForceCount                (Fixed 1 Byte)      (Decimal)                       "CAL Force Count"
}

TABLE tQca_PFAL_Trc_DataType
    {0 "Tracer"}
    {1 "Event"}
ENDTABLE

GROUP gQca_PFAL_Trc_Sample "Tracer Sample"
{
    FIELD fQca_Trc_SampleType         (Fixed 1 Bits)          (TABLE tQca_PFAL_Trc_DataType)         "Sample Type"
    RESERVED                          (Fixed 5 Bits)
    FIELD fQca_Trc_SampleData         (Fixed 34 Bits)         (Hex)      "Sample Data"
}

TABLE tQca_PFAL_Trc_TrigEvent
    {0 "State Idle"}
    {1 "State WFT"}
    {2 "State TS1"}
    {3 "State TS2"}
    {4 "State TS3"}
    {5 "State TS4"}
    {6 "State TS5"}
    {7 "State Wrap Up"}
    {Default "Invalid"}
ENDTABLE

GROUP gQca_PFAL_Trc_Trig   "Tracer Trigger Event"
{
    FIELD fQca_Trc_TrigAddr0         (Fixed 4 Bytes)     (Hex)     "Trigger Sample[0] Address"
    FIELD fQca_Trc_TrigAddr1         (Fixed 4 Bytes)     (Hex)     "Trigger Sample[1] Address"
    FIELD fQca_Trc_TrigAddr2         (Fixed 4 Bytes)     (Hex)     "Trigger Sample[2] Address"
    FIELD fQca_Trc_TrigAddr3         (Fixed 4 Bytes)     (Hex)     "Trigger Sample[3] Address"
    GROUP gQca_PFAL_TrigSamples    REPEAT SIZE(Fixed 20 Bytes)   "Tracer Trigger Samples 0~3"
    {
        GROUP gQca_PFAL_Trc_Sample;
    }
    FIELD fQca_Trc_TrigState         (Fixed 4 Bits)     (TABLE tQca_PFAL_Trc_TrigEvent)     "Trigger State"
    RESERVED                         (Fixed 4 Bits)
}

GROUP gQca_PFAL_Trc_Data   "Tracer Data Event"
{
    FIELD fQca_Trc_PktCntr  (Fixed 0)   RETRIEVE (StoreInteger 0)   (Hex)   SUPPRESS_DETAIL STORE PktCntr
    /* Loop through the end of the frame to capture all the Log Packets in the Frame */
    GROUP gQca_TrcLogPktLoop  REPEAT SIZE (ToEndOfLayer)  "Tracer Samples"
    {
        /* Parse the Packet Header and Data */
        GROUP gQca_PFAL_SampleIndex LABEL(LabelCount "Sample #" PktCntr)
        {
            GROUP gQca_PFAL_Trc_Sample;
        }
        /* Increment the Counter */
        FIELD fQca_TrcPktCntrIncr (Fixed 0) RETRIEVE (StoreField PktCntr) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE PktCntr
    }
}

TABLE tQca_PFAL_Trc_StopReason
    {0 "Wrap Up"}
    {1 "Buffer Full"}
    {2 "Hci Stop Command"}
    {Default "Invalid"}
ENDTABLE

GROUP gQca_PFAL_Trc_Stop   "Tracer Stop Event"
{
    FIELD fQca_Trc_StopReason         (Fixed 1 Bytes)     (TABLE tQca_PFAL_Trc_StopReason)     "Trigger Stop Reason"
}

GROUP gQca_PFAL_AciRegDump  "ACI Register Dump"
{
    FIELD fQca_PFAL_AciRegDumpNvicISER          (Fixed 4 Bytes)  (Hex)   "NvicISER"
    FIELD fQca_PFAL_AciRegDumpNvicICER          (Fixed 4 Bytes)  (Hex)   "NvicICER"
    FIELD fQca_PFAL_AciRegDumpNvicISPR          (Fixed 4 Bytes)  (Hex)   "NvicISPR"
    FIELD fQca_PFAL_AciRegDumpNvicICPR          (Fixed 4 Bytes)  (Hex)   "NvicICPR"

    FIELD fQca_PFAL_AciIntrtimeStamp            (Fixed 4 Bytes)  (Hex)   "AciIntrTimeStamp"
    FIELD fQca_PFAL_AciRegDumpPC                (Fixed 4 Bytes)  (Hex)   "AciIopPC"
    FIELD fQca_PFAL_AciRegDumpBase              (Fixed 4 Bytes)  (Hex)   "AciIopBase"
    FIELD fQca_PFAL_AciRegDumpStatusRead        (Fixed 4 Bytes)  (Hex)   "AciIopStatusRead"
    FIELD fQca_PFAL_AciRegDumpSensitivityRead   (Fixed 4 Bytes)  (Hex)   "AciIopSensitivityRead"
    FIELD fQca_PFAL_AciRegDumpConfig            (Fixed 4 Bytes)  (Hex)   "AciIopConfig"
    FIELD fQca_PFAL_AciIopStatusBitSet          (Fixed 4 Bytes)  (Hex)   "AciIopStatusBitSet "
    FIELD fQca_PFAL_AciIopStatusBitClear        (Fixed 4 Bytes)  (Hex)   "AciIopStatusBitClear"
    FIELD fQca_PFAL_AciIopSensivityBitSet       (Fixed 4 Bytes)  (Hex)   "AciIopSensivityBitSet"
    FIELD fQca_PFAL_AciIopSensivityBitClear     (Fixed 4 Bytes)  (Hex)   "AciIopSensivityBitClear"
}

GROUP gQca_PFAL_DCCal_PLType
{
	FIELD fQca_TXDCCAL_Status    	(Fixed 1 Bytes)  (TABLE tQCA_TXDC_CAL_STATUS)   "calStatus"
	RESERVED                       	(Fixed 1 Bytes) /*dummy*/
	FIELD fQca_TXDCCAL_i      		(Fixed 1 Bytes)  (Hex)   "i"
	FIELD fQca_TXDCCAL_q      		(Fixed 1 Bytes)  (Hex)   "q"
	
	GROUP gBadStatus IF (FieldIs NotEqualTo 1 fQca_TXDCCAL_Status) 
	{
		FIELD fQca_badCntrInc (Fixed 0) RETRIEVE (StoreField badCntr) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE badCntr
	}
}

GROUP gQca_PFAL_DCCal_Result  "PFAL TXDC Cal Result"
{
    FIELD fQca_GainCntr (Fixed 0) RETRIEVE (StoreInteger 0) (hex) SUPPRESS_DETAIL STORE GainCntr
    GROUP gQca_PFAL_DCCal_DALow REPEAT COUNT (Fixed 2 Times) 
    {
		FIELD fQca_IdxCntr (Fixed 0) RETRIEVE (StoreInteger 0) (hex) SUPPRESS_DETAIL STORE IdxCntr
					
		GROUP gQca_TXDCCalType LABEL(LabelCount "DAGain #" GainCntr )
		{
			FIELD fQca_badCntrInit (Fixed 0) RETRIEVE (StoreInteger 0) (hex) SUPPRESS_DETAIL STORE badCntr
			GROUP gQca_PFAL_DCCal_PL REPEAT COUNT(Fixed 8 times) 
			{
				GROUP gQca_PFAL_DCCal_PLType1 LABEL(LabelCount "PL #" IdxCntr )
				{
					GROUP gQca_PFAL_DCCal_PLType;
				}
				FIELD fQca_IdxCntrIncr (Fixed 0) RETRIEVE (StoreField IdxCntr) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE IdxCntr
			}
			
			GROUP gdummy  IF (FieldIs EqualTo 0 GainCntr) "PL8~10 Not applicable for Low Gain"
			{
				RESERVED (Fixed 12 Bytes)
			}
			
			GROUP gQca_PFAL_DCCal_PLhigh  IF (FieldIs NotEqualTo 0 GainCntr)
			{
				GROUP gQca_PFAL_DCCal_PLhigh1  REPEAT COUNT(Fixed 3 times)
				{
				GROUP gQca_PFAL_DCCal_PLType11 LABEL(LabelCount "PL #" IdxCntr )
				{
					GROUP gQca_PFAL_DCCal_PLType;
				}
				FIELD fQca_IdxCntrIncr11 (Fixed 0) RETRIEVE (StoreField IdxCntr) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE IdxCntr
				}
			}
			FIELD fQca_GainCtrIncr (Fixed 0) RETRIEVE (StoreField GainCntr) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE GainCntr
		}

    }
	
	GROUP g_BadSummary IF (FieldIs NotEqualTo 0 badCntr)
	{
		FIELD fQca_showBadCnt   (Fixed 0) RETRIEVE (StoreField badCntr) (Decimal) "TXDC CAL SUMMARY: BAD. Count"		
	}
	
	GROUP _GoodSummary IF (FieldIs EqualTo 0 badCntr) "TXDC CAL SUMMARY: ALL GOOD."
	{	
	}
}

TABLE tQCA_TXDC_CAL_STATUS
	{0 "BAD-TXDC_NOT_TESTED"}
	{1 "GOOD-TXDC_VALID"}
	{2 "BAD-TXDC_INVALID"}
	{3 "BAD-TXDC_VALID_2ND"}
	{4 "BAD-TXDC_INVALID_2ND"}
	{5 "BAD-TXDC_WRONG_INDEX"}
ENDTABLE

GROUP gQca_PFAL_AntDataMemAllocFail  "ANT Data Memory Alloc Fail"
{
    FIELD gQca_PFAL_AntDataMemAllocFail_Count   (Fixed 4 Bytes)  (Decimal)   "MemAllocFailCount"
}

GROUP gQca_PFAL_AntEventMemAllocFail  "ANT Event Memory Alloc Fail"
{
    FIELD gQca_PFAL_AntEventMemAllocFail_Count  (Fixed 4 Bytes)  (Decimal)   "MemAllocFailCount"
}
GROUP gQca_PFAL_ACI_Regs   "ACI Registers Backup"
{
    FIELD gQca_PFAL_VOICE_COPROC_IOP_PC_REG                    (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_COPROC_IOP_PC_REG"
    FIELD gQca_PFAL_VOICE_COPROC_IOP_BASE_REG                  (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_COPROC_IOP_BASE_REG"
    FIELD gQca_PFAL_VOICE_COPROC_IOP_STATUS_CLR_REG            (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_COPROC_IOP_STATUS_CLR_REG"
    FIELD gQca_PFAL_VOICE_COPROC_IOP_SENSITIVITY_CLR_REG       (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_COPROC_IOP_SENSITIVITY_CLR_REG"
    FIELD gQca_PFAL_VOICE_COPROC_IOP_CONFIG_REG                (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_COPROC_IOP_CONFIG_REG"

    FIELD gQca_PFAL_HWIO_BT_ACI_IOP_TX_PROGRAM_COUNTER_ADDR    (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_BT_ACI_IOP_PC_REG"
    FIELD gQca_PFAL_HWIO_BT_ACI_IOP_TX_BASE_ADDR_ADDR          (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_BT_ACI_IOP_BASE_REG"
    FIELD gQca_PFAL_HWIO_BT_ACI_IOP_TX_STATUS_CLR_ADDR         (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_BT_ACI_IOP_STATUS_CLR_REG"
    FIELD gQca_PFAL_HWIO_BT_ACI_IOP_TX_SENSITIVITY_CLR_ADDR    (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_BT_ACI_IOP_SENSITIVITY_CLR_REG"
    FIELD gQca_PFAL_HWIO_BT_ACI_IOP_TX_CONFIG_AB_ADDR          (Fixed 2 Byte)    (Hex)   "PFAL_VOICE_BT_ACI_IOP_CONFIG_REG"

}

GROUP  gQca_PFAL_SensUartTxSigRetryErr "SensUARTTxState"
{
    FIELD gQca_PFAL_SensUartTxState                            (Fixed 1 Byte)   (Hex)   "SensUARTTxState"
}

GROUP  gQca_PFAL_SensUartRxSigRevErr "SensUARTRxErr"
{
    FIELD gQca_PFAL_SensUartRxErrData                          (Fixed 1 Byte)   (Hex)   "SensUARTRxErrData"
}

GROUP  gQca_PFAL_SensUartTxBufExhanustErr "SensUARTRxErr"
{
    FIELD gQca_PFAL_SensUartRxState                           (Fixed 1 Byte)   (Hex)   "SensUARTRxState"
}

GROUP  gQca_PFAL_SensUartReportAdvevt "SensUARTReportAdv"
{
    FIELD gQca_PFAL_SensUartReportAdv                         (ToEndofLayer)    IF(MoreBytes)(StringofHex) "AdvRawData"
}