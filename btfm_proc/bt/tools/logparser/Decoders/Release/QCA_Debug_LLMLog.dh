/************************************************
 * File: QCA_Debug_LLMLog.dh
 * QCA Bluetooth Firmware Logging Parser.
 *
 * Copyright (c) 2015-2017 Qualcomm Atheros, Inc.
 * All Rights Reserved.
 * Qualcomm Atheros Confidential and Proprietary.
************************************************/


TABLE tQca_LLMLogID APPENDS_ONLY tQca_EnhLogID
    {0x0200 "LOG_ID_LLM_LM_SM"          "LOG_ID_LLM_LM_SM"      0   gQca_LLM_LMStateInfo}
    {0x0201 "LOG_ID_LLM_CM_SM"          "LOG_ID_LLM_CM_SM"      0   gQca_LLM_CMStateInfo}
    {0x0202 "LOG_ID_LLM_SEQ_SM"         "LOG_ID_LLM_SEQ_SM"     0   gQca_LLM_SeqStateInfo}
    {0x0203 "LOG_ID_LLM_LE_LL_SM"       "LOG_ID_LLM_LE_LL_SM"   0   gQca_LLM_LELLStateInfo}
    {0x0204 "LOG_ID_LLM_LE_CM_SM"       "LOG_ID_LLM_LE_CM_SM"   0   gQca_LLM_LECMStateInfo}
    {0x0205 "LOG_ID_LLM_LE_ENC_SM"      "LOG_ID_LLM_LE_ENC_SM"  0   gQca_LLM_LEEncrStateInfo}
    {0x0206 "LOG_ID_LLM_AFH_ASSESSMENT" "LOG_ID_LLM_AFH_ASSESSMENT"  0   gQca_LLM_AFHEvalInfo}
    {0x0207 "LOG_ID_LLM_LMP_TIMEOUT"    "LOG_ID_LLM_LMP_TIMEOUT"  0  gQca_DefaultPrint}
    {0x0208 "LOG_ID_LLM_LNKMNGR"        "LOG_ID_LLM_LNKMNGR"  0   gQca_DefaultPrint}
    {0x0209 "LOG_ID_LLM_ALLOC_EVENT_NOBUFF"  "LOG_ID_LLM_ALLOC_EVENT_NOBUFF"  0   gQca_LLM_AllocEventNoBuff}
    {0x020A "LOG_ID_LLM_LP_MODE_STATUS" "LOG_ID_LLM_LP_MODE_STATUS"  0   gQca_DefaultPrint}
    {0x020B "LOG_ID_LLM_RMCDCMD"        "llm_rmcdCommand.c"          0   gQca_DefaultPrint}
    {0x020C "LOG_ID_LLM_POWER_LEVEL"    "LOG_ID_LLM_POWER_LEVEL"   0   gQca_LLM_LMPowerLevelInfo}
    {0x020E "LOG_ID_LLM_POWER_LEVEL_EXT"    "LOG_ID_LLM_POWER_LEVEL_EXT"   0   gQca_LLM_LMPowerLevelExtInfo}

    {0x0210 "LOG_ID_LLM_AFH_RSSIDATA"   "LOG_ID_LLM_AFH_RSSIDATA"    0   gQca_LLM_AFHRssiData}
    {0x0211 "LOG_ID_LLM_AFH_HANGOVER"   "LOG_ID_LLM_AFH_HANGOVER"    0   gQca_LLM_AFHHangOverData}
    {0x0212 "LOG_ID_LLM_LE_CHANNEL_MAP" "LOG_ID_LLM_LE_CHANNEL_MAP"    0   gQca_DefaultPrint}
    {0x0213 "LOG_ID_LLM_FORCE_2PAGE"    "LOG_ID_LLM_FORCE_2PAGE"    0   gQca_LLM_Force_2PageInfo}
    {0x0214 "LOG_ID_LLM_CSB_CELT"   "LOG_ID_LLM_CSB_CELT"    0   gQca_CSB_CELT}
    {0x0215 "LOG_ID_LLM_CSB_Audio_Frame"   "LOG_ID_LLM_CSB_Audio_Frame"    0   gQca_CSB_STATE}
    {0x0216 "LOG_ID_LLM_CSB_EC_DONE"   "LOG_ID_LLM_CSB_EC_DONE"    0   gQca_CSB_EC}
    {0x0217 "LOG_ID_LLM_CSB Packet State"   "LOG_ID_LLM_CSB_PACKET_STATE"    0   gQca_CSB_PacketState}
    {0x0218 "LOG_ID_LLM_CSB_Audio_STATS"   "LOG_ID_LLM_CSB_AUDIO_STATS"    0   gQca_CSB_AudioStats}
    {0x0219 "LOG_ID_LLM_CSB_SCHED_MISS"   "LOG_ID_LLM_CSB_SCHED_MISS"    0   gQca_CSB_SchedMiss}
    {0x021a "LOG_ID_LLM_CSB_AUDIO_CONFIG"   "LOG_ID_LLM_CSB_AUDIO_CONFIG"    0   gQca_CSB_AUDIO}
    {0x021b "LOG_ID_LLM_BLACKLIST_LE2M"   "LOG_ID_LLM_BLACKLIST_LE2M"    0   gQca_LE_TX_RX_PHY}
    {0x021c "LOG_ID_LLM_LTADDR_DB"      "LOG_ID_LLM_LTADDR_DB"      0   gQca_LLM_LTADDR_DB}
    {0x0220 "LOG_ID_LLM_TRUNC_PAGE_STATS"   "LOG_ID_LLM_TRUNC_PAGE_OFFLOAD"    0   gQca_TruncPageStats}
    {0x0221 "LOG_ID_LLM_AFH_SLOT_REM"      "LOG_ID_LLM_AFH_SLOT_REM"      0   gQca_LLM_AFH_SlotRem}
    {0x0222 "LOG_ID_LLM_AFH_RSSIDATA_RAW"   "LOG_ID_LLM_AFH_RSSIDATA_RAW"    0   gQca_LLM_AFHRssiData}
    {0x0223 "LOG_ID_LLM_AFH_BAND_FindBand"   "LOG_ID_LLM_AFH_BAND_FindBand"    0   gQca_LLM_AFHBand}
    {0x0224 "LOG_ID_LLM_AFH_BAND_TrimBand"   "LOG_ID_LLM_AFH_BAND_TrimBand"    0   gQca_LLM_AFHBand}
    {0x0225 "LOG_ID_LLM_AFH_BAND_AdjBand"   "LOG_ID_LLM_AFH_BAND_AdjBand"    0   gQca_LLM_AFHBand}
    {0x02E0 "LOG_ID_LLM_LE_ACAD"   "LOG_ID_LLM_LE_ACAD"    0   gQca_DefaultPrint}
    {0x02E1 "LOG_ID_LLM_LE_PERIODIC_ADV_CMU"   "LOG_ID_LLM_LE_PERIODIC_ADV_CMU"    0   gQca_PeriodicAdvCMU}
    {0x02F5 "LOG_ID_LLM_RS_PMGR_DQ"     "LOG_ID_LLM_RS_PMGR_DQ"      0 gQca_LLM_RS_Pmgr_Dq}

    {0x02FB "LOG_ID_LLM_CANCEL_PCA"     "LOG_ID_LLM_CANCEL_PCA"      0   gQca_LLM_PCAStateInfo}
    {0x02FC "LOG_ID_LLM_PAGE_COMPLETE"  "LOG_ID_LLM_PAGE_COMPLETE"   0   gQca_LLM_LMPageCompleteInfo}
    {0x02FD "LOG_ID_LLM_PAGE_LOOP"      "LOG_ID_LLM_PAGE_LOOP"  0   gQca_LLM_LMPageLoopInfo}
    {0x02FE "LOG_ID_LLM_PAGE_HDL"       "LOG_ID_LLM_PAGE_HDL"   0   gQca_LLM_LMPageInfo}
    {0x02FF "LLM End"}
ENDTABLE

GROUP gQca_LLM_RS_Pmgr_Dq "Poll mgr element"
{
    FIELD fQca_PmgrElem                 (Fixed 1 Byte)        (Hex)          "Freed Pico Elem"
}

GROUP gQca_LLM_PscanInfo "Page Scan Info"
{
    FIELD fQca_PScanReturnAddr  (Fixed 4 Bytes)      (Hex)         "Addr"
    FIELD fQca_PScanEnable      (Fixed 4 Bytes)      (Hex)         "SDB_ScanEnable"
    FIELD fQca_PScanOpcode      (Fixed 4 Bytes)      (Hex)         "PageScan Opcode"
}

GROUP gQca_LLM_PscanPkt "Page Scan Struct"
{
    FIELD fQca_PScanIDType                  (Fixed 20 Bytes)        (Hex)         "Scan ID TYPE"
    FIELD fQca_PScan_pDispatchElem          (Fixed 4 Bytes)         (Hex)         "pDispatchElem"
    FIELD fQca_PScan_pDequeuedDispatchElem  (Fixed 4 Bytes)         (Hex)         "pDequeuedDispatchElem"

    FIELD fQca_PScan_pConnDispatchElem      (Fixed 4 Bytes)         (Hex)         "pConnDispatchElem"
    FIELD fQca_PScan_EventClock             (Fixed 4 Bytes)         (Hex)         "EventClock"
    FIELD fQca_PScan_pPiconet               (Fixed 4 Bytes)         (Hex)         "pPiconet"
    FIELD fQca_PScan_pBT_Conn               (Fixed 4 Bytes)         (Hex)         "pBT_Conn"

    FIELD fQca_PScan_State                  (Fixed 1 Byte)          (Hex)         "State"
    FIELD fQca_PScan_RepetitionMode         (Fixed 1 Byte)          (Hex)         "RepetitionMode"
    FIELD fQca_PScan_PeriodMode             (Fixed 1 Byte)          (Hex)         "PeriodMode"
    FIELD fQca_PScan_ScanType               (Fixed 1 Byte)          (Hex)         "ScanType"
    FIELD fQca_PScan_ScanState              (Fixed 1 Byte)          (Hex)         "ScanState"

}

GROUP gQca_LLM_RSFreePico "Role Switch Freed Piconet"
{
    FIELD fQca_RSFree_pPiconet   (Fixed 4 Bytes)      (Hex)         "pPiconet"
}

/* LLM Link Manager Debug Info */
GROUP gQca_LLM_LMStateInfo "Link Manager SM"
{
    FIELD fQca_LMCurrState      (Fixed 1 Byte)      (TABLE tQca_LLM_LinkMngrStates)         "CurrState"
    FIELD fQca_LMEvent          (Fixed 1 Byte)      (TABLE tQca_LLM_LinkMngrEvents)         "Event"
    FIELD fQca_LLMHandle        (Fixed 1 Byte)      (Decimal)                               "Handle"
    FIELD fQca_LMNewState       (Fixed 1 Byte)      (TABLE tQca_LLM_LinkMngrStates)         "NewState"
    FIELD fQca_LMExtState       (Fixed 1 Byte)  IF NOT (FieldIs EqualTo 5 fQca_sMainVer) (Hex)   SUPPRESS_DETAIL
}

/* LLM Connection Manager Debug Info */
GROUP gQca_LLM_CMStateInfo "Conn Manager SM"
{
    FIELD fQca_CMCurrState      (Fixed 1 Byte)      (TABLE tQca_LLM_ConnMngrStates)         "CurrState"
    FIELD fQca_CMEvent          (Fixed 1 Byte)      (TABLE tQca_LLM_ConnMngrEvents)         "Event"
    FIELD fQca_LLMHandle;
    FIELD fQca_CMNewState       (Fixed 1 Byte)      (TABLE tQca_LLM_ConnMngrStates)         "NewState"
    FIELD fQca_CMExtState       (Fixed 1 Byte)  IF NOT (FieldIs EqualTo 5 fQca_sMainVer) (Hex)   SUPPRESS_DETAIL
}

GROUP gQca_LLM_SeqStateInfo "Seq SM"
{
    FIELD fQca_SeqCurrState     (Fixed 1 Byte)      (TABLE tQca_LLM_SeqStates)             "CurrState"
    FIELD fQca_SeqEvent         (Fixed 1 Byte)      (TABLE tQca_LLM_SeqEvents)             "Event"
    FIELD fQca_LLMHandle;
    FIELD fQca_SeqNewState      (Fixed 1 Byte)      (TABLE tQca_LLM_SeqStates)             "NewState"
    FIELD fQca_SeqExtState      (Fixed 1 Byte)  IF NOT (FieldIs EqualTo 5 fQca_sMainVer) (Hex)   SUPPRESS_DETAIL
}

GROUP gQca_LLM_LELLStateInfo "LE LinkLayer SM"
{
    FIELD fQca_LLCurrState      (Fixed 1 Byte)      (TABLE tQca_LE_LLCPStates)             "CurrState"
    FIELD fQca_LLEvent          (Fixed 1 Byte)      (TABLE tQca_LLM_ConnMngrEvents)        "Event"
    FIELD fQca_LLMHandle;
    FIELD fQca_LLNewState       (Fixed 1 Byte)      (TABLE tQca_LE_LLCPStates)             "NewState"
    FIELD fQca_LLExtState       (Fixed 1 Byte)  IF NOT (FieldIs EqualTo 5 fQca_sMainVer) (TABLE tQca_LE_LLCPStates)   "RemoteCurrState"
}

GROUP gQca_LLM_LECMStateInfo "LE ConnMngr SM"
{
    FIELD fQca_LECMCurrState    (Fixed 1 Byte)      (TABLE tQca_LE_ConnMngrStates)         "CurrState"
    FIELD fQca_LECMEvent        (Fixed 1 Byte)      (TABLE tQca_LLM_ConnMngrEvents)        "Event"
    FIELD fQca_LLMHandle;
    FIELD fQca_LECMNewState     (Fixed 1 Byte)      (TABLE tQca_LE_ConnMngrStates)         "NewState"
    FIELD fQca_LECMExtState     (Fixed 1 Byte)  IF NOT (FieldIs EqualTo 5 fQca_sMainVer) (Hex)   SUPPRESS_DETAIL
}

GROUP gQca_LLM_LEEncrStateInfo "LE Encr SM"
{
    FIELD fQca_LEEncCurrState   (Fixed 1 Byte)      (TABLE tQca_LE_EncrSeqStates)          "CurrState"
    FIELD fQca_LEEncEvent       (Fixed 1 Byte)      (TABLE tQca_LLM_ConnMngrEvents)        "Event"
    FIELD fQca_LLMHandle;
    FIELD fQca_LEEncNewState    (Fixed 1 Byte)      (TABLE tQca_LE_EncrSeqStates)          "NewState"
    FIELD fQca_LEEncExtState    (Fixed 1 Byte)  IF NOT (FieldIs EqualTo 5 fQca_sMainVer) (TABLE tQca_LE_EncrEnableStates)       "EncrEnable"
}

GROUP gQca_LLM_AFHRssiData "AFH Rssi Data"
{
    FIELD fQca_ChannelCntr (Fixed 0) RETRIEVE (StoreInteger 0) (hex) SUPPRESS_DETAIL STORE ChannelCntr

    GROUP gQca_AFHRssi REPEAT COUNT (Fixed 79 Times) "Raw RSSI Data"
    {
        GROUP gQca_AFHRssiType
        {
        FIELD fQca_AFHRssiByte          (Fixed 1 Bytes)   RETRIEVE (SignExtension 8)   (DecimalWithFieldLabel ChannelCntr)      "Channel"
        }
        FIELD fQca_ChannelIncr (Fixed 0) RETRIEVE (StoreField ChannelCntr) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE ChannelCntr
    }
    
    /* Init the Counter to 1 */
    FIELD fQca_AFHCntr (Fixed 0) RETRIEVE (StoreInteger 1) (hex) SUPPRESS_DETAIL STORE AFHCntr
    GROUP gQca_Interferes REPEAT COUNT (Fixed 3 Times)
    {
        GROUP gQCA_InterfereType LABEL(LabelCount "AFH Interference Band #" AFHCntr )
        {
        FIELD fQca_AFHBadChanCnt               (Fixed 1 Bytes)       (Decimal)      "BadChanCnt"
        FIELD fQca_AFHPeakLoChan               (Fixed 1 Bytes)       (Decimal)      "PeakLoChan"
        FIELD fQca_AFHPeakHiChan               (Fixed 1 Bytes)       (Decimal)      "PeakHiChan"
        FIELD fQca_AFHInBandAvgRssi            (Fixed 1 Bytes)      RETRIEVE (SignExtension 8) (Decimal) ALSO (Constant "dbm")      "InBandAvgRssi"
        }
        /* Increment the Counter */
        FIELD fQca_AFHCntrIncr (Fixed 0) RETRIEVE (StoreField AFHCntr) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE AFHCntr
    }
    FIELD fQca_AFHNewMap              (Fixed 10 Bytes)      (Hex)          "AFH New Map"
}

GROUP gQca_LLM_AFHHangOverData "AFH Hang Over Data"
{
    /* Init the Counter to 1 */
    FIELD fQca_AFHCntr1 (Fixed 0) RETRIEVE (StoreInteger 1) (hex) SUPPRESS_DETAIL STORE AFHCntr
    GROUP gQca_Interferes1 REPEAT COUNT (Fixed 3 Times)
    {
        GROUP gQCA_InterfereType1 LABEL(LabelCount "AFH Interference Band #" AFHCntr )
        {
        FIELD fQca_AFHBadChanCnt1               (Fixed 1 Bytes)       (Decimal)      "BadChanCnt"
        FIELD fQca_AFHPeakLoChan1               (Fixed 1 Bytes)       (Decimal)      "PeakLoChan"
        FIELD fQca_AFHPeakHiChan1               (Fixed 1 Bytes)       (Decimal)      "PeakHiChan"
        FIELD fQca_AFHInBandAvgRssi1            (Fixed 1 Bytes)       RETRIEVE (SignExtension 8) (Decimal) ALSO (Constant "dbm")    "InBandAvgRssi"
        }
        /* Increment the Counter */
        FIELD fQca_AFHCntrIncr1 (Fixed 0) RETRIEVE (StoreField AFHCntr) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE AFHCntr
    }

    /* Init the Counter to 1 */
    FIELD fQca_AFHCntr2 (Fixed 0) RETRIEVE (StoreInteger 1) (hex) SUPPRESS_DETAIL STORE AFHCntr
    GROUP gQca_Interferes2 REPEAT COUNT (Fixed 3 Times)
    {
        GROUP gQCA_InterfereType2 LABEL(LabelCount "AFH HangOver Band #" AFHCntr )
        {
        FIELD fQca_AFHPeakLoChan2               (Fixed 1 Bytes)       (Decimal)      "PeakLoChan"
        FIELD fQca_AFHPeakHiChan2               (Fixed 1 Bytes)       (Decimal)      "PeakHiChan"
        FIELD fQca_AFHInBandAvgRssi2            (Fixed 1 Bytes)       RETRIEVE (SignExtension 8) (Decimal)      "InBandAvgRssi"
        RESERVED                                (Fixed 1 Bytes)       
        FIELD fQca_AFHHangOver2                 (Fixed 2 Bytes)       (Decimal)      "hangOver"
        }
        /* Increment the Counter */
        FIELD fQca_AFHCntrIncr2 (Fixed 0) RETRIEVE (StoreField AFHCntr) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE AFHCntr
    }
}

GROUP gQca_LLM_AFHEvalInfo "AFH Eval Info"
{
    FIELD fQca_HCIChanneltMap           (Fixed 10 Bytes)      (Hex)          "HCI Channel Map"
    FIELD fQca_WLANChannelMap           (Fixed 10 Bytes)      (Hex)          "WLAN Channel Map"
    FIELD fQca_LTEChannelMap            (Fixed 10 Bytes)      (Hex)          "LTE Channel Map"
    FIELD fQca_LocalChannelMap          (Fixed 10 Bytes)      (Hex)          "Local Channel Map"
    FIELD fQca_FinalAFHMap              (Fixed 10 Bytes)      (Hex)          "Final AFH Map"
    FIELD fQca_HCIConnHandle            (Fixed 2 Bytes)       (Hex)          "HCI Connection Handle"
    FIELD fQca_RemoteChannClass         (Fixed 12 Bytes)      (Hex)         "Remote Channel Classisficaion"
}

GROUP gQca_LLM_AllocEventNoBuff "Alloc Event Buffer Info"
{
    FIELD fQca_EventID                  (Fixed 1 Byte)        (Hex)          "HCI Event ID"
    FIELD fQca_EventLen                 (Fixed 1 Byte)        (Hex)          "Event Payload length"
    RESERVED                            (Fixed 2 Bytes)
}

GROUP gQca_LLM_PCAStateInfo "PCA State Info"
{
    FIELD fQca_PCAState                 (Fixed 1 Byte)        (Hex)          "PCA State"
}

GROUP gQca_LLM_LMPowerLevelInfo "Power Level Info"
{
    FIELD fQca_ConnectionHandle         (Fixed 2 Bytes)        (Decimal)             "Connection Handle"
    FIELD fQca_AdvertisingIndex         (Fixed 1 Bytes)        (Decimal)             "LE Advt Index"
    RESERVED                            (Fixed 1 Bytes)
    FIELD fQca_TxPowerLevel             (Fixed 4 Bytes)        (Decimal)             "Tx Power Level"
    FIELD fQca_AvgRSSI                  (ToEndOfLayer)        RETRIEVE (SignExtension 8) (Decimal)            "Avg rssi"
}

GROUP gQca_LLM_LMPowerLevelExtInfo "Power Level Info"
{
    FIELD fQca_ExtConnectionHandle         (Fixed 2 Bytes)        (Decimal)             "Connection Handle"
    FIELD fQca_ExtAdvertisingIndex         (Fixed 1 Bytes)        (Decimal)             "LE Advt Index"
    RESERVED                               (Fixed 1 Bytes)
    FIELD fQca_ExtTxPowerLevel             (Fixed 4 Bytes)        (Decimal)             "Tx Power Level"
    FIELD fQca_ExtAvgRSSI                  (Fixed 4 Bytes)        RETRIEVE (SignExtension 8)  (Decimal)             "Avg rssi"
    FIELD fQca_ExtNackRate                 (Fixed 4 Bytes)        (Decimal)             "Nack Rate"
}

GROUP gQca_LLM_LMPageCompleteInfo "Page Complete Info"
{
    FIELD fQca_PageCompleteHandle       (Fixed 1 Byte)        (Decimal)             "Page Complete Handle"
}

GROUP gQca_LLM_LMPageLoopInfo "Page Loop Info"
{
    FIELD fQca_LoopHandle               (Fixed 1 Byte)        (Decimal)             "Active q loop Handle"
}

GROUP gQca_LLM_LMPageInfo "Page Task Info"
{
    FIELD fQca_TaskAdd                  (Fixed 1 Byte)        (TABLE tQca_PageTask) "Page Task"
    FIELD fQca_Handle                   (Fixed 1 Byte)        (Decimal)             "Handle"
}

GROUP gQca_LLM_Force_2PageInfo "InForce2PageList"
{
    FIELD fQca_MatchIndex               (Fixed 1 Byte)        (Decimal)             "MatchListIndex"
}

/* TTP of Audio Frame */
GROUP gQca_CSB_SchedMiss "CSB Scheduling Missed"
{
    FIELD fQca_CSBSchedMiss      (Fixed 4 Bytes)      (Decimal)          "Clocks since last Transmission"
}
/* CSB audio stats */
GROUP gQca_CSB_AudioStats "CSB Audio Stats"
{
    FIELD fQca_ECSegmentsQueued     (Fixed 2 Bytes)      (Decimal)          "EC Queued"
    FIELD fQca_ECSegmentsTx         (Fixed 2 Bytes)      (Decimal)          "EC Tx"
    FIELD fQca_ECSegmentsDrop       (Fixed 2 Bytes)      (Decimal)          "EC Dropped"
    FIELD fQca_AudioFrameOverflow   (Fixed 2 Bytes)      (Decimal)          "Frame Dropped"
    FIELD fQca_FMBUnavailable       (Fixed 2 Bytes)      (Decimal)          "FMB unavailable"
    FIELD fQca_SmallerBAPakcet      (Fixed 2 Bytes)      (Decimal)          "Small BA Pakcets"
    FIELD fQca_AudioFrameTimeout    (Fixed 2 Bytes)      (Decimal)          "Audio Frame Timout"
    FIELD fQca_FullBAPacket         (Fixed 2 Bytes)      (Decimal)          "Full BA Packet"
    FIELD fQca_AudioFramesReceived  (Fixed 2 Bytes)      (Decimal)          "NumAudioFramesRx"
    FIELD fQca_CxMDenials           (Fixed 2 Bytes)      (Decimal)          "CxM Denials"
    FIELD fQca_LCLateCommands       (Fixed 2 Bytes)      (Decimal)          "LC Late commands"
}

GROUP gQca_LE_TX_RX_PHY "LE_TX_RX_PHY"
{
    FIELD fQca_TX_PHY               (Fixed 1 Byte)        (TABLE tQca_PHY)             "TX_PHY"
    FIELD fQca_RX_PHY               (Fixed 1 Byte)        (TABLE tQca_PHY)             "RX_PHY"
}

GROUP gQca_LLM_LTADDR_DB "LTADDR database"
{
    FIELD fQca_DBStatus                 (Fixed 4 Bytes)        (Hex)                "DBStatus"
    FIELD fQca_DBStartIndex             (Fixed 1 Byte)         (Hex)                "DBStartIndex"
    FIELD fQca_DBMaxIndex               (Fixed 1 Byte)         (Hex)                "DBMaxIndex"
    FIELD fQca_DBNextIndex              (Fixed 1 Byte)         (Hex)                "DBNextIndex"
}

GROUP gQca_CSB_STATE "CSB Audio Frame"
{
    FIELD fQca_AudioFrameLength      (Fixed 4 Bytes)     (Decimal)         "FrameLength"
    FIELD fQca_BAPacketState         (Fixed 4 Bytes)     (Decimal)         "BA Packet State"
    FIELD fQca_AudioFrameCollected   (Fixed 4 Bytes)     (Decimal)         "Audio Frames Accumulated"
    FIELD fQca_BufferIndex           (Fixed 4 Bytes)     (Decimal)         "Buffer Index"
}

GROUP gQca_CSB_AUDIO "CSB Audio Config"
{ 
    FIELD fQca_Key          (Fixed 16 Bytes)     (stringofhex)            "private key"
    FIELD fQca_fiv          (Fixed 8 Bytes)      (stringofhex)            "Init. Vectors"
    FIELD fQca_AudioState   (Fixed 4 Bytes)      (Decimal)                "state"
    FIELD fQca_TTPOffset    (Fixed 4 Bytes)      (Decimal)                "TTPOffset"
    FIELD fQca_PacketSize   (Fixed 2 Bytes)      (Decimal)                "Max Audio Packet Size"
    FIELD fQca_SampleSize   (Fixed 2 Bytes)      (Decimal)                "PCM samples per frame"
    FIELD fQca_StreamId     (Fixed 1 Bytes)      (TABLE tBCAUDStreamID)   "Stream ID"
    FIELD fQca_LTAddr       (Fixed 1 Bytes)      (Decimal)                "LtAddr"
    FIELD fQca_Codec        (Fixed 1 Bytes)      (TABLE tBCAUDCodec)      "Codec"
    FIELD fQca_Power        (Fixed 1 Bytes)      (Decimal)                "Power"
    FIELD fQca_FrameLimit   (Fixed 1 Bytes)      (Decimal)                "FrameLimit"
    FIELD fQca_SampleRate   (Fixed 1 Bytes)      (TABLE tBCAUDSampleRate) "Sample Rate"
    FIELD fQca_ECConfig     (Fixed 1 Bytes)      (TABLE tBCAUDEncoding)   "Encoding Scheme"
    FIELD fQca_Volume       (Fixed 1 Bytes)      (Decimal)                "Volume"
}

GROUP gQca_PeriodicAdvCMU "Periodic Advertising Channel Map Update"
{
    FIELD fQca_ChannelMap   (Fixed 5 Bytes)      (Hex)                    "Channel Map"
    FIELD fQca_EventCounter (Fixed 2 Bytes)      (Hex)                    "Event Counter"
}

GROUP gQca_CSB_CELT "CSB Audio CELT"
{
    FIELD fQca_BAPacketSize            (Fixed 4 Bytes)      (Decimal)          "PacketSize"
    FIELD fQca_AudioFrameSize          (Fixed 4 Bytes)      (Decimal)          "FrameSize"
    FIELD fQca_AudioFramePeriodicity   (Fixed 4 Bytes)      (Decimal)          "FramePeriodicity"
    FIELD fQca_AccumulationLimit       (Fixed 4 Bytes)      (Decimal)          "NumAccumulate"
}

GROUP gQca_CSB_EC "CSB Audio EC Done"
{
    FIELD fQca_Index            (Fixed 4 Bytes)      (Decimal)          "Index"
    FIELD fQca_EcState          (Fixed 4 Bytes)      (Decimal)          "EcState"
    FIELD fQca_PacketLength     (Fixed 4 Bytes)      (Decimal)          "PacketLength"
    FIELD fQca_Seq              (Fixed 4 Bytes)      (Decimal)          "SequenceNumber"
}

GROUP gQca_CSB_PacketState "CSB Audio Packet state"
{
    FIELD fQca_PrevState         (Fixed 4 Bytes)      (Decimal)          "PrevState"
    FIELD fQca_NewState          (Fixed 4 Bytes)      (Decimal)          "NewState"
}


GROUP gQca_TruncPageStats "Trunc Page Offload Stats"
{
    FIELD fQca_TruncRxSlotsD1                (Fixed 4 Bytes)        (Decimal)          "Rx Slots for Device 1"
    FIELD fQca_TruncRxSlotsD2                (Fixed 4 Bytes)        (Decimal)          "Rx Slots for Device 2"
    FIELD fQca_TruncRxSlotsD3                (Fixed 4 Bytes)        (Decimal)          "Rx Slots for Device 3"
    FIELD fQca_TruncStartClk                 (Fixed 4 Bytes)        (hex)              "start Clock"
    FIELD fQca_TruncSwitchD1                 (Fixed 2 Bytes)        (Decimal)          "Switching to device 1"
    FIELD fQca_TruncSwitchD2                 (Fixed 2 Bytes)        (Decimal)          "Switching to device 2"
    FIELD fQca_TruncSwitchD3                 (Fixed 2 Bytes)        (Decimal)          "Switching to device 3"
    FIELD fQca_TruncTrainSwitch              (Fixed 2 Bytes)        (Decimal)          "Page Train Switch count"
    FIELD fQca_TruncOldState                 (Fixed 1 Bytes)       (TABLE tTruncPageState)   "Old state"
    FIELD fQca_TruncNewState                 (Fixed 1 Bytes)       (TABLE tTruncPageState)   "New State"
    FIELD fQca_TruncCyclesSkipped            (Fixed 2 Bytes)       (Decimal)                "Cycles Skipped"
    FIELD fQca_TruncCyclesPassed             (Fixed 2 Bytes)       (Decimal)                "Cycles Passed"
    FIELD fQca_TruncErrReason                (Fixed 1 Bytes)       (Decimal)                "ErrorReason"
    RESERVED                                 (Fixed 1 Bytes)
}

GROUP gQca_LLM_AFHBand "AFH Rssi Data"
{
    FIELD fQca_AFHCntrband (Fixed 0) RETRIEVE (StoreInteger 1) (hex) SUPPRESS_DETAIL STORE AFHCntrband
    GROUP gQca_Interferenceband REPEAT COUNT (Fixed 3 Times)
    {
        GROUP gQCA_InterferenceTypeband LABEL(LabelCount "AFH Interference Band #" AFHCntrband )
        {
        FIELD fQca_AFHBadChanCntband               (Fixed 1 Bytes)       (Decimal)      "BadChanCnt"
        FIELD fQca_AFHPeakLoChanband               (Fixed 1 Bytes)       (Decimal)      "PeakLoChan"
        FIELD fQca_AFHPeakHiChanband               (Fixed 1 Bytes)       (Decimal)      "PeakHiChan"
        FIELD fQca_AFHInBandAvgRssiband            (Fixed 1 Bytes)      RETRIEVE (SignExtension 8) (Decimal) ALSO (Constant "dbm")      "InBandAvgRssi"
        }
        /* Increment the Counter */
        FIELD fQca_AFHCntrIncrband (Fixed 0) RETRIEVE (StoreField AFHCntrband) ALSO (AddInteger 1) (Decimal) SUPPRESS_DETAIL STORE AFHCntrband
    }
}

GROUP gQca_LLM_AFH_SlotRem "Slots: "
{
    FIELD fgQca_LLM_AFH_SlotRem                 (Fixed 2 Bytes)        (Decimal)  "Slots"
}

TABLE tTruncPageState
    { 0 "Disabled"}
    { 1 "Paused"}
    { 2 "Started (but element not in SLC)"}
    { 3 "Running"}
    { 4 "Terminating"}
    {default "Invalid"}
ENDTABLE

TABLE tQca_PageTask
    { 0x00 "Stopping Page"}
    { 0x01 "Starting Page"}
    {Default "Invalid" }
ENDTABLE

/* LLM Link Manager State Machine States */
TABLE tQca_LLM_LinkMngrStates
    { 0x00 "LMsRESET_PND"}
    { 0x01 "LMsREADY"}
    { 0x02 "LMsLC_PAGE"}
    { 0x03 "LMsLC_PAGE_CANCEL"}
    { 0x04 "LMsLC_ROLE_SWITCH"}
    { 0x05 "LMsACL_CONNECTION_SETUP"}
    { 0x06 "LMsREMOTE_ACL_SETUP_W4_HOST"}
    { 0x07 "LMsMASTER_LINK_KEY_W4_KEY_SIZE_MASK_REQ"}
    { 0x08 "LMMAXSTATES"}
    {Default "Invalid" }
ENDTABLE

/* LLM Link Manager State Machine Events */
TABLE tQca_LLM_LinkMngrEvents
    { 0x00 "LMeHCI_INQUIRY"}
    { 0x01 "LMeHCI_INQUIRY_CANCEL"}
    { 0x02 "LMeHCI_CREATE_CONNECTION"}
    { 0x03 "LMeHCI_CREATE_CONNECTION_CANCEL"}
    { 0x04 "LMeHCI_ACCEPT_CONNECTION_REQUEST"}
    { 0x05 "LMeHCI_REJECT_CONNECTION_REQUEST"}
    { 0x06 "LMeCONNECTION_REQUEST"}
    { 0x07 "LMeCONNECTION_COMPLETE"}
    { 0x08 "LMeCONNECTION_TERMINATED"}
    { 0x09 "LMePERIODIC_INQUIRY"}
    { 0x0a "LMeHOST_TO"}
    { 0x0b "LMeRMC_INQUIRY_RESULT"}
    { 0x0c "LMeRMC_INQUIRY_COMPLETE"}
    { 0x0d "LMeRMC_PAGE_COMPLETE"}
    { 0x0e "LMeRMC_TOKEN_LMs_RETURN"}
    { 0x0f "LMeRMC_ROLE_SWITCH_COMPLETE"}
    { 0x10 "LMeROLE_SWITCH_ORIGINATE"}
    { 0x11 "LMeROLE_SWITCH_REQUESTED"}
    { 0x12 "LMeROLE_SWITCH_COMPLETE"}
    { 0x13 "LMeHCI_MASTER_LINK_KEY"}
    { 0x14 "LMeKEY_SIZE_MASK_RES"}
    { 0x15 "LMeNOT_ACCEPTED_KEY_SIZE_MASK_REQ"}
    { 0x16 "LMeKEY_SIZE_MASK_RES_TO"}
    { 0x17 "LMeLM_TIMEOUT_PAGE"}
    { 0x18 "LMeHCI_INQUIRY_TIMEOUT"}
    { 0x19 "LMePAGESCAN_CONNECTION_COLLISION"}
    { 0x1a  "LMePOWER_MEASURE"}
    { 0x1b "LMePAGE_CONNECTION_COLLISION"}
    { 0x1c "LMeNULL"}
    { 0x1d "LMMAXEVENTS"}
    {Default "Invalid" }
ENDTABLE

/* LLM Connection Manager State Machine States */
TABLE tQca_LLM_ConnMngrStates
    { 0x00 "CMsIDLE"}
    { 0x01 "CMsW4_LMS_DISCONNECT"}
    { 0x02 "CMsCONNTERM"}
    { 0x03 "CMsM_LM_SETUP"}
    { 0x04 "CMsM_CONNSETUP"}
    { 0x05 "CMsS_LM_SETUP"}
    { 0x06 "CMsS_CONNSETUP"}
    { 0x07 "CMsCONN_ACTIVE"}
    { 0x08 "CMsCONN_HOLD"}
    { 0x09 "CMsCONN_HOLD_EXIT_DISCONNECT_PEND"}
    { 0x0A "CMsCONN_SNIFF"}
    { 0x0B "CMsCONN_SNIFF_EXIT_DISCONNECT_PEND"}
    { 0x0C "CMsCONN_PARK"}
    { 0x0D "CMsCONN_UNPARK_PERIODIC"}
    { 0x0E "CMsCONN_UNPARK_PEND"}
    { 0x0F "CMsCONN_UNPARK_DISCONNECT_PEND"}
    { 0x10 "CMsCONN_VS_TEST_ACTIVE"}
    { 0x11 "CMMAXSTATES"}
    {Default "Invalid" }
ENDTABLE

/* LLM Connection Manager State Machine Events */
TABLE tQca_LLM_ConnMngrEvents
    { 0x00 "CMePAGE_SUCESS"}
    { 0x01 "CMePAGESCAN_SUCESS"}
    { 0x02 "CMeHOST_CONN_ACCEPT"}
    { 0x03 "CMeHOST_CONN_REJECT"}
    { 0x04 "CMeHOST_DISCONNECT"}
    { 0x05 "CMeAUTHENTICATION_COMPLETE"}
    { 0x06 "CMePAIRING_COMPLETE"}
    { 0x07 "CMeAUTHENTION_FAILURE"}
    { 0x08 "CMeENCRYPTION_COMPLETE"}
    { 0x09 "CMeENCRYPTION_SETUP_FAILURE"}
    { 0x0a "CMeKEY_CHANGE_FAILURE"}
    { 0x0b "CMeLMS_LMP_ACK"}
    { 0x0c "CMeLMS_DISCONNECT_COMPLETE"}
    { 0x0d "CMeROLE_CHANGE_COMPLETE"}
    { 0x0e "CMeHOST_INITIATE_HOLD"}
    { 0x0f "CMeENTER_HOLD"}
    { 0x10 "CMeEXIT_HOLD"}
    { 0x11 "CMeHOST_INITIATE_SNIFF"}
    { 0x12 "CMeENTER_SNIFF"}
    { 0x13 "CMeEXIT_SNIFF"}
    //CMeEXIT_SNIFF_DISCONNECT
    { 0x14 "CMeEXIT_SNIFF_TO"}
    { 0x15 "CMeHOST_INITIATE_PARK"}
    { 0x16 "CMeENTER_PARK_DONE"}
    { 0x17 "CMeBB_UNPARK_DONE"}
    { 0x18 "CMeBB_ACCESS_REQUEST_FAILURE"}
    { 0x19 "CMeUNPARK_TO"}
    { 0x1a "CMeEXIT_PARK_DONE"}
    { 0x1b "CMeUNPARK_HOST"}
    { 0x1c "CMeUNPARK_PERIODIC"}
    { 0x1d "CMeUNPARK_DISCONNECT"}
    { 0x1e "CMeUNPARK_ACCESS_REQUEST"}
    { 0x1f "CMeLMP_UNPARK_REQ"}
    { 0x20 "CMeUNPARK_PERIODIC_FAIL"}
    { 0x21 "CMeHOST_CHANGE_PACKET_TYPE"}
    { 0x22 "CMeHOST_SET_CONN_ENCRYPTION"}
    { 0x23 "CMeHOST_CHANGE_CONN_LINK_KEY"}
    { 0x24 "CMeLMP_NAME_REQ"}
    { 0x25 "CMeLMP_NAME_REQ_NOT_ACCEPTED"}
    { 0x26 "CMeLMP_NAME_RES"}
    { 0x27 "CMeLMP_ACCEPTED"}
    { 0x28 "CMeLMP_NOT_ACCEPTED"}
    { 0x29 "CMeLMP_CLKOFFSET_REQ"}
    { 0x2a "CMeLMP_CLKOFFSET_RES"}
    { 0x2b "CMeLMP_DETACH"}
    { 0x2c "CMeLMP_IN_RAND"}
    { 0x2d "CMeLMP_COMB_KEY"}
    { 0x2e "CMeLMP_UNIT_KEY"}
    { 0x2f "CMeLMP_AU_RAND"}
    { 0x30 "CMeLMP_SRES"}
    { 0x31 "CMeLMP_TEMP_RAND"}
    { 0x32 "CMeLMP_TEMP_KEY"}
    { 0x33 "CMeLMP_ENCRYPTION_MODE_REQ "}
    { 0x34 "CMeLMP_ENCRYPTION_KEY_SIZE_REQ"}
    { 0x35 "CMeLMP_SWITCH_REQ "}
    { 0x36 "CMeLMP_SNIFF_REQ"}
    { 0x37 "CMeLMP_PARK_REQ"}

    //CMeLMP_SET_BROADCAST_SCAN_WINDOW"}
    //CMeLMP_MODIFY_BEACON  removed
    { 0x38 "CMeLMP_AUTO_RATE "}
    { 0x39 "CMeLMP_PREFERRED_RATE"}
    { 0x3a "CMeLMP_VERSION_REQ"}
    { 0x3b "CMeLMP_VERSION_RES"}
    { 0x3c "CMeLMP_FEATURES_REQ"}
    { 0x3d "CMeLMP_FEATURES_RES"}
    { 0x3e "CMeLMP_QUALITY_OF_SERVICE "}
    { 0x3f "CMeLMP_QUALITY_OF_SERVICE_REQ"}
    { 0x40 "CMeLMP_MAX_SLOT"}
    { 0x41 "CMeLMP_MAX_SLOT_REQ"}
    { 0x42 "CMeLMP_SETUP_COMPLETE"}
    { 0x43 "CMeLMP_USE_SEMI_PERMANENT_KEY"}
    { 0x44 "CMeLMP_HOST_CONNECTION_REQ "}
    { 0x45 "CMeLMP_SLOT_OFFSET"}
    { 0x46 "CMeLMP_PAGE_SCAN_MODE_REQ"}
    { 0x47 "CMeLMP_SUPERVISION_TIMEOUT "}
    { 0x48 "CMeLMP_PAGE_SCAN_MODE_REQ_ACCEPTED"}
    { 0x49 "CMeLMP_PAGE_MODE_REQ_ACCEPTED"}
    { 0x4a "CMeLMP_PAGE_SCAN_MODE_REQ_NOT_ACCEPTED"}
    { 0x4b "CMeHCI_WRITE_PAGE_SCAN_MODE"}
    { 0x4c "CMeABORT_CONNECTION"}
    { 0x4d "CMeLMP_QUALITY_OF_SERVICE_REQ_ACCEPTED"}					
    { 0x4e "CMeLMP_QUALITY_OF_SERVICE_REQ_NOT_ACCEPTED"}				
    { 0x4f "CMeLMP_ACCEPTED_TEST_ACTIVATE"}						
    { 0x50 "CMeLMP_ACCEPTED_TEST_CONTROL"}						
    { 0x51 "CMeVS_TEST_COMPLETE"}							
    { 0x52 "CMeLMP_NOT_ACCEPTED_TEST_ACTIVATE"}						
    { 0x53 "CMeLMP_NOT_ACCEPTED_TEST_CONTROL"}						
    { 0x54 "CMeLMP_FEATURES_EXT_PAGE_1"}						
    { 0x55 "CMeLMP_FEATURES_EXT_PAGE_2"}						
    /* LE events */
    { 0x56 "CMeLE_CONNECT_REQ"}	
    { 0x57 "CMeLE_CONNECTION_ESTABLISHED"}
    { 0x58 "CMeLE_TERMINATE_CONNECTION_LOCAL"}						
    { 0x59 "CMeLE_TERMINATE_CONNECTION_REMOTE"}						
    { 0x5a "CMeLE_TERMINATE_CONNECTION_ACK"}						
    { 0x5b "CMeLE_CHANNEL_MAP_UPDATE_LOCAL"}						
    { 0x5c "CMeLE_CHANNEL_MAP_UPDATE_REMOTE"}						
    { 0x5d "CMeLE_UPDATE_COMPLETE_EVENT"}						
    { 0x5e "CMeLE_CONN_UPDATE_LOCAL"}							
    { 0x5f "CMeLE_CONN_UPDATE_REMOTE"}							
    { 0x60 "CMeLE_CONN_UPDATE_INSTANT_EVENT"}						
    { 0x61 "CMeLE_CTRL_SEQ_TX_INDICATION"}						
    { 0x62 "CMeLE_CTRL_SEQ_TIMEOUT"}    						
    { 0x63 "CMeLE_ENCR_EVENT_START_ENCRYPTION"}						
    { 0x64 "CMeLE_ENCR_EVENT_RX_ENC_REQ"}						
    { 0x65 "CMeLE_ENCR_EVENT_RX_ENC_RSP"}						
    { 0x66 "CMeLE_ENCR_EVENT_RX_START_ENC_REQ"}						
    { 0x67 "CMeLE_ENCR_EVENT_RX_START_ENC_RSP"}	
    { 0x68 "CMeLE_ENCR_EVENT_RX_START_ENC_RSP_ACK"}
    { 0x69 "CMeLE_ENCR_EVENT_RX_LTK"}							
    { 0x6a "CMeLE_ENCR_EVENT_TIMEOUT"}							
    { 0x6b "CMeLE_ENCR_EVENT_RX_PAUSE_ENC_RSP"}						
    { 0x6c "CMeLE_ENCR_EVENT_RX_PAUSE_ENC_RSP_TX_ACK"}					
    { 0x6d "CMeLE_ENCR_EVENT_RX_PAUSE_ENC_REQ"}						
    { 0x6e "CMeLE_UNKNOWN_RSP_RCVD"}							
    { 0x6f "CMeLE_FEATURE_REQ_LOCAL"}							
    { 0x70 "CMeLE_FEATURE_REQ_REMOTE"}							
    { 0x71 "CMeLE_FEATURE_RSP"}								
    { 0x72 "CMeLE_VERSION_REQ"}								
    { 0x73 "CMeLE_VERSION_IND_RCVD"}							
    { 0x74 "CMeLE_REJECT_IND_RCVD"}							
    { 0x75 "CMeLE_ENCR_EVENT_NO_LTK"}							
    { 0x76 "CMeLE_ENCR_EVENT_RX_REJECT_IND_ACK"}					
    { 0x77 "CMeLE_TERMINATE_LAST_ACK_RCVD"}						
    { 0x78 "CMeLE_TERMINATE_ACK_TX"}							
    { 0x79 "CMeLE_PING_REQ_LOCAL"}							
    { 0x7a "CMeLE_PING_REQ_REMOTE"}							
    { 0x7b "CMeLE_PING_RSP"}								
    { 0x7c "CMeLE_DATA_LENGTH_REQ_LOCAL"}						
    { 0x7d "CMeLE_DATA_LENGTH_REQ_REMOTE"}						
    { 0x7e "CMeLE_DATA_LENGTH_RSP"}							
    { 0x7f "CMeLE_CONN_PARAMS_REQ_LOCAL"}						
    { 0x80 "CMeLE_CONN_PARAMS_REQ_REMOTE"}						
    { 0x81 "CMeLE_CONN_PARAMS_RSP_REMOTE"}						
    { 0x82 "CMeLE_CONN_PARAMS_HCI_REPLY"}						
    { 0x83 "CMeLE_CONN_PARAMS_HCI_NEG_REPLY"}
    { 0x84 "CMeLE_CONN_PARAMS_EVAL"}
    { 0x85 "CMeLE_REJECT_EXT_RCVD"}							
    { 0x86 "CMeLE_PHY_REQ_LOCAL"}							
    { 0x87 "CMeLE_PHY_REQ_REMOTE"}							
    { 0x88 "CMeLE_PHY_RSP"}								
    { 0x89 "CMeLE_PHY_UPDATE_REQ"}							
    { 0x8A "CMeLE_AOA_REQ_LOCAL"}							
    { 0x8B "CMeLE_AOA_REQ_REMOTE"}							
    { 0x8C "CMeLE_AOA_RSP"}								
    { 0x8D "CMeLE_ENCR_EVENT_TX_START_ENC_REQ"}
    { 0x8E "CMeLE_ENCR_EVENT_TX_PAUSE_ENC_RSP"}
    { 0x8F "CMMAXEVENTS"}
    { Default "Invalid" }
ENDTABLE

TABLE tQca_LLM_SeqEvents
    { 0x00      "LMP_PROCeNONE"}
    { 0x01      "LMP_PROCeSTART_AUTH_NEW_CONN"}
    { 0x02      "LMP_PROCeSTART_AUTHENTICATION"}
    { 0x03      "LMP_PROCeSTART_KEY_CHANGE"}
    { 0x04      "LMP_PROCeLMP_IN_RAND"}
    { 0x05      "LMP_PROCeLMP_ACCEPT_IN_RAND"}
    { 0x06      "LMP_PROCeLMP_NOT_ACCEPT_IN_RAND"}
    { 0x07      "LMP_PROCeLMP_AU_RAND"}
    { 0x08      "LMP_PROCeLMP_ACCEPT_AU_RAND"}
    { 0x09      "LMP_PROCeLMP_NOT_ACCEPT_AU_RAND"}
    { 0x0A      "LMP_PROCeLMP_SRES"}
    { 0x0B      "LMP_PROCeLMP_UNIT_KEY"}
    { 0x0C      "LMP_PROCeLMP_COMB_KEY"}
    { 0x0D      "LMP_PROCeSECURITY_SEQ_TIMER"}
    { 0x0E      "LMP_PROCeLMP_DETACH"}
    { 0x0F      "LMP_PROCeDETACH_TI_EXPIRE"}
    { 0x10      "LMP_PROCeINITIATE_LMP_DETACH"}
    { 0x11      "LMP_PROCeLMS_LMP_DETACH_ACK"}

    { 0x12      "LMP_PROCeHCI_PIN_RESPONSE"}
    { 0x13      "LMP_PROCeHCI_NO_PIN"}
    { 0x14      "LMP_PROCeHCI_HOST_RESPONSE_TO"}
    { 0x15      "LMP_PROCeHCI_NO_LINK_KEY"}
    { 0x16      "LMP_PROCeHCI_VALID_LINK_KEY"}

    { 0x17      "LMP_PROCeHCI_ADD_SCO_CONNECTION"}
    { 0x18      "LMP_PROCeHCI_ACCEPT_CONNECTION_REQUEST"}
    { 0x19      "LMP_PROCeHCI_REJECT_CONNECTION_REQUEST"}
    { 0x1A      "LMP_PROCeHCI_CHANGE_SCO_PACKET_TYPE"}

    { 0x1B      "LMP_PROCeHCI_ENHANCED_SETUP_SYNCHRONOUS_CONNECTION"}
    { 0x1C      "LMP_PROCeHCI_ENHANCED_SETUP_SYNCHRONOUS_CONNECTION_CHANGE"}
    { 0x1D      "LMP_PROCeHCI_ENHANCED_ACCEPT_SYNCHRONOUS_CONNECTION_REQ"}

    { 0x1E      "LMP_PROCeHCI_SETUP_SYNCHRONOUS_CONNECTION"}
    { 0x1F      "LMP_PROCeHCI_SETUP_SYNCHRONOUS_CONNECTION_CHANGE"}

    { 0x20      "LMP_PROCeHCI_ACCEPT_SYNCHRONOUS_CONNECTION_REQ"}
    { 0x21      "LMP_PROCeHCI_REJECT_SYNCHRONOUS_CONNECTION_REQ"}

    { 0x22      "LMP_PROCeLMP_eSCO_LINK_REQ"}
    { 0x23      "LMP_PROCeLMP_ACCEPT_eSCO_LINK_REQ"}
    { 0x24      "LMP_PROCeLMP_NOT_ACCEPT_eSCO_LINK_REQ"}

    { 0x25      "LMP_PROCeSTART_ENCRYPTION"}
    { 0x26      "LMP_PROCeRESTART_ENCRYPTION"}
    { 0x27      "LMP_PROCeLMP_ENCRYPTION_MODE_REQ"}
    { 0x28      "LMP_PROCeLMP_ACCEPT_ENCRYPTION_MODE"}
    { 0x29      "LMP_PROCeLMP_NOT_ACCEPT_ENCRYPTION_MODE"}
    { 0x2A      "LMP_PROCeLMP_ENCRYPTION_KEY_SIZE_REQ"}
    { 0x2B      "LMP_PROCeLMP_ACCEPT_ENCRYPTION_KEY_SIZE"}
    { 0x2C      "LMP_PROCeLMP_NOT_ACCEPT_ENCRYPTION_KEY_SIZE"}
    { 0x2D      "LMP_PROCeLMP_START_ENCRYPTION_REQ"}
    { 0x2E      "LMP_PROCeLMP_ACCEPT_START_ENCRYPTION"}
    { 0x2F      "LMP_PROCeLMP_NOT_ACCEPT_START_ENCRYPTION"}
    { 0x30      "LMP_PROCeLMP_STOP_ENCRYPTION_REQ"}
    { 0x31      "LMP_PROCeSTOP_ENCRYPTION"}
    { 0x32      "LMP_PROCeLMP_ACCEPT_STOP_ENCRYPTION"}
    { 0x33      "LMP_PROCeLMP_NOT_ACCEPT_STOP_ENCRYPTION"}

    { 0x34      "LMP_PROCeLMP_ENCRYPTION_KEY_SIZE_MASK_RES"}
    { 0x35      "LMP_PROCeLMP_NOT_ACCEPT_ENCRYPTION_KEY_SIZE_MASK_REQ"}

    { 0x36      "LMP_PROCeLMP_NOT_ACCEPT_UNIT_KEY"}
    { 0x37      "LMP_PROCeLMP_NOT_ACCEPT_COMB_KEY"}

    { 0x38      "LMP_PROCeO_ROLE_SWITCH"}
    { 0x39      "LMP_PROCeR_NC_ROLE_SWITCH"}
    { 0x3A      "LMP_PROCeLMP_NOT_ACCEPT_SLOT_OFFSET"}
    { 0x3B      "LMP_PROCeLMP_SWITCH_REQ"}
    { 0x3C      "LMP_PROCeLMP_ACCEPT_SWITCH_REQ"}
    { 0x3D      "LMP_PROCeLMP_NOT_ACCEPT_SWITCH_REQ"}
    { 0x3E      "LMP_PROCeLMS_LMP_ACK"}
    { 0x3F      "LMP_PROCeLMS_RX_FAILURE_DETECT"}
    { 0x40      "LMP_PROCe_LC_ROLE_SWITCH_READY"}

    { 0x41      "LMP_PROCeLMS_PICONET_SWITCH_COMPLETE"}

    { 0x42      "LMP_PROCeINITIATE_HOLD"}
    { 0x43      "LMP_PROCeLMP_HOLD"}
    { 0x44      "LMP_PROCeLMP_HOLD_REQ"}
    { 0x45      "LMP_PROCeLMP_ACCEPT_HOLD_REQ"}
    { 0x46      "LMP_PROCeLMP_NOT_ACCEPT_HOLD"}

    { 0x47      "LMP_PROCeINITIATE_SNIFF"}
    { 0x48      "LMP_PROCeLMP_SNIFF_REQ"}
    { 0x49      "LMP_PROCeLMP_ACCEPT_SNIFF_REQ"}
    { 0x4A      "LMP_PROCeLMP_NOT_ACCEPT_SNIFF"}

    { 0x4B      "LMP_PROCeHOST_TERMINATE_SNIFF"}
    { 0x4C      "LMP_PROCeLMP_UNSNIFF_REQ"}
    { 0x4D      "LMP_PROCeLMP_ACCEPT_UNSNIFF_REQ"}
    { 0x4E      "LMP_PROCeLMP_UNSNIFF_REQ_ACK"}
    { 0x4F      "LMP_PROCeLMP_ACCEPT_UNSNIFF_REQ_ACK"}
    { 0x50      "LMP_PROCeEXIT_SNIFF_TO"}

    { 0x51      "LMP_PROCeINITIATE_PARK"}
    { 0x52      "LMP_PROCeLMP_ACCEPT_PARK_REQ"}
    { 0x53      "LMP_PROCeLMP_NOT_ACCEPT_PARK_REQ"}
    { 0x54      "LMP_PROCePARK_REQ"}
    { 0x55      "LMP_PROCePARK_TIMER"}
    { 0x56      "LMP_PROCePARK_LMS_ACK"}
    { 0x57      "LMP_PROCeTERMINATE_PARK"}
    { 0x58      "LMP_PROCeTERMINATE_PARK_ACCESS_REQ"}
    { 0x59      "LMP_PROCeUNPARK_REQ"}
    { 0x5A      "LMP_PROCeLMP_ACCEPT_UNPARK_PMADDR_REQ"}
    { 0x5B      "LMP_PROCeLMP_ACCEPT_UNPARK_BDADDR_REQ"}
    { 0x5C      "LMP_PROCeBB_EXIT_PARK"}

    { 0x5D      "LMP_PROCeHOST_NEWCONNECTION"}
    { 0x5E      "LMP_PROCeHOST_CHANGE_PACKET_TYPE"}
    { 0x5F      "LMP_PROCeLMP_EVAL_MAX_SLOTS"}
    { 0x60      "LMP_PROCeLMP_MAX_SLOT"}
    { 0x61      "LMP_PROCeLMP_ACCEPT_SLOT_REQ"}
    { 0x62      "LMP_PROCeLMP_NOT_ACCEPT_SLOT_REQ"}
    { 0x63      "LMP_PROCeEVAL_MULTISLOT_CTRL_REQ"}


    { 0x64      "LMP_PROCeLMP_TESTCONTROL_SETUP"}

    { 0x65      "LMP_PROCeLMP_ACCEPT_SCO_LINK_REQ"}
    { 0x66      "LMP_PROCeLMP_NOT_ACCEPT_SCO_LINK_REQ"}

    { 0x67      "LMP_PROCeLMP_SCO_LINK_REQ"}

    { 0x68      "LMP_PROCeLMP_USE_SEMI_PERMANENT_KEY_ACCEPTED"}
    { 0x69      "LMP_PROCeLMP_USE_SEMI_PERMANENT_KEY_NOT_ACCEPTED"}

    { 0x6A      "LMP_PROCeSEMI_PERMANENT_KEY"}
    { 0x6B      "LMP_PROCeR_SEMI_PERMANENT_KEY"}
    { 0x6C      "LMP_PROCeMASTER_LINK_KEY"}
    { 0x6D      "LMP_PROCeR_MASTER_LINK_KEY"}
    { 0x6E      "LMP_PROCeINITIATE_QUALITY_OF_SERVICE_REQ"}
    { 0x6F      "LMP_PROCeLMP_ACCEPT_QUALITY_OF_SERVICE_REQ"}
    { 0x70      "LMP_PROCeLMP_NOT_ACCEPT_QUALITY_OF_SERVICE_REQ"}
    { 0x71      "LMP_PROCeLMP_NOT_ACCEPT_CREATE_CONNECTION_REQ"}

    { 0x72      "LMP_PROCe_EDR_CNTRL_ENABLE_1_M"}
    { 0x73      "LMP_PROCe_EDR_CNTRL_ENABLE_2_3_M"}
    { 0x74      "LMP_PROCeLMP_PACKET_TABLE_REQ"}
    { 0x75      "LMP_PROCeLMP_ACCEPT_LMP_PACKET_TABLE_REQ"}
    { 0x76      "LMP_PROCeLMP_ACCEPT_LMP_PACKET_TABLE_REQ_ACK"}
    { 0x77      "LMP_PROCeLMP_NOT_ACCEPT_LMP_PACKET_TABLE_REQ"}

    { 0x78      "LMP_PROCePAUSE_ENCRYPTION_STOP_ACL_U"}
    { 0x79      "LMP_PROCeLMP_PAUSE_ENCRYPTION_REQ"}
    { 0x7A      "LMP_PROCeLMP_RESUME_ENCRYPTION_REQ"}
    { 0x7B      "LMP_PROCeLMP_NOT_ACCEPT_PAUSE_ENCRYPTION_REQ"}

    { 0x7C      "LMP_PROCeRESUME_ENCRYPTION_START_ACL_U"}

    { 0x7D      "LMP_PROCeLMP_SNIFF_SUB_RATE_REQ"}
    { 0x7E      "LMP_PROCeLMP_SNIFF_SUB_RATE_RES"}
    { 0x7F      "LMP_PROCeLMP_NOT_ACCEPT_SNIFF_SUBRATE_REQ"}
    { 0x80      "LMP_PROCeHOST_SNIFF_SUBRATE_PARAMS"}

    { 0x81      "LMP_PROCeLMP_SRES_TX_NOTIFY"}
    { 0x82      "LMP_PROCeEDR_ESCO_CQDDR_CHANGE"}

    { 0x83      "LMP_PROCeLMP_ENCAP_PDU_TX_COMPLETE"}
    { 0x84      "LMP_PROCeLMP_ENCAP_PDU_TX_FAILURE"}

    { 0x85      "LMP_PROCeINITIATE_LMP_ENCAP_PDU"}
    { 0x86      "LMP_PROCeLMP_ACCEPTED_ENCAP_HEADER"}
    { 0x87      "LMP_PROCeLMP_NOT_ACCEPTED_ENCAP_HEADER"}
    { 0x88      "LMP_PROCeLMP_ENCAPSULATED_HEADER"}
    { 0x89      "LMP_PROCeLMP_ACCEPTED_ENCAP_PAYLOAD"}
    { 0x8A      "LMP_PROCeLMP_NOT_ACCEPTED_ENCAP_PAYLOAD"}
    { 0x8B      "LMP_PROCeLMP_ENCAPSULATED_PAYLOAD"}
    { 0x8C      "LMP_PROCeLMP_RX_ENCAP_SEQ_TIMEOUT"}

    { 0x8D      "LMP_PROCeHCI_IO_CAPABILITY_RESPONSE"}
    { 0x8E      "LMP_PROCeLMP_IO_CAPABILITY_REQ"}
    { 0x8F      "LMP_PROCeLMP_NOT_ACCEPT_IO_CAPABILITY_REQ"}
    { 0x90      "LMP_PROCeLMP_IO_CAPABILITY_RES"}
    { 0x91      "LMP_PROCeLMP_ENCAP_PUBLIC_KEY"}

    { 0x92      "LMP_PROCeSPAIRING_AUTHEN_S1_INIT"}

    { 0x93      "LMP_PROCeLMP_SIMPLE_PAIRING_CONFIRM"}
    { 0x94      "LMP_PROCeLMP_SIMPLE_PAIRING_NUMBER"}
    { 0x95      "LMP_PROCeLMP_ACCEPTED_SIMPLE_PAIRING_NUMBER"}
    { 0x96      "LMP_PROCeLMP_NOT_ACCEPTED_SIMPLE_PAIRING_NUMBER"}

    { 0x97      "LMP_PROCeHCI_CONFIRM_REQUEST_REPLY"}
    { 0x98      "LMP_PROCeHCI_CONFIRM_REQUEST_NEGATIVE_REPLY"}

    { 0x99      "LMP_PROCeLMP_DHKEY_CHECK"}
    { 0x9A      "LMP_PROCeLMP_ACCEPTED_DHKEY_CHECK"}
    { 0x9B      "LMP_PROCeLMP_NOT_ACCEPTED_DHKEY_CHECK"}

    { 0x9C      "LMP_PROCeLMP_NUMERIC_COMPARISON_FAILED"}

    { 0x9D      "LMP_PROCeHCI_USER_PASSKEY_REQUEST_REPLY"}
    { 0x9E      "LMP_PROCeHCI_USER_PASSKEY_REQUEST_NEGATIVE_REPLY"}

    { 0x9F      "LMP_PROCeLMP_PASSKEY_ENTRY_FAILED"}

    { 0xA0      "LMP_PROCeHCI_REMOTE_OOB_DATA_REQUEST_REPLY"}

    { 0xA1      "LMP_PROCeLMP_OOB_FAILED"}
    { 0xA2      "LMP_PROCeHCI_REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY"}

    { 0xA3      "LMP_PROCeHCI_SEND_KEYPRESS_NOTIFICATION"}
    { 0xA4      "LMP_PROCeLMP_KEYPRESS_NOTIFICATION"}

    { 0xA5      "LMP_PROCeENCRYPTION_KEY_REFRESH"}

    { 0xA6      "LMP_PROCeHCI_IO_CAPABILITY_REQUEST_NEGATIVE_REPLY"}

    { 0xA7      "LMP_PROCeHCI_WRITE_LINK_SUPERVISION_TIMEOUT"}
    { 0xA8      "LMP_PROCeEVAL_SSR_STATUS"}

    { 0xA9      "LMP_PROCeENCRYPTION_RESUME_TIMEOUT"}
    { 0xAA      "LMP_PROCeLMP_PAUSE_ENCRYPTION_AES_REQ"}
    { 0xAB      "LMP_PROCeHCI_REMOTE_OOB_EXTENDED_DATA_REQUEST_REPLY"}

    { 0xAC      "LMP_PROCeAFH_ACTION_MASTER"}

    { 0xAD      "LMP_PROCeINVALID_EVENT"}
ENDTABLE

TABLE   tQca_LLM_SeqStates
    { 0x00    "LMP_PROCsIDLE"}
    { 0x01    "LMP_PROCsAUTHEN_W4_HOST_LINK_KEY"}
    { 0x02    "LMP_PROCsAUTHEN_W4_SRES"}

    { 0x03    "LMP_PROCsPAIRING_W4_PIN"}
    { 0x04    "LMP_PROCsPAIRING_W4_INIT_KEY_RESP"}
    { 0x05    "LMP_PROCsPAIRING_W4_NEW_KEY"}
    { 0x06    "LMP_PROCsPAIRING_W4_MUTUAL_AUTH_REQ"}

    { 0x07    "LMP_PROCsENCRYPTION_W4_MODE"}
    { 0x08    "LMP_PROCsENCRYPTION_W4_MASK_REQ"}
    { 0x09    "LMP_PROCsENCRYPTION_KEY_SIZE_NEGOTIATION"}
    { 0x0A    "LMP_PROCsENCRYPTION_W4_START_ENCRYPTION"}
    { 0x0B    "LMP_PROCsENCRYPTION_STOP_W4_STOP"}
    { 0x0C    "LMP_PROCsENCRYPTION_STOP_W4_MODE"}

    { 0x0D    "LMP_PROCsKEY_CHANGE_W4_KEY_TYPE"}
    { 0x0E    "LMP_PROCsKEY_CHANGE_W4_C_NEW_KEY_AUTH_REQ"}

    { 0x0F    "LMP_PROCsROLE_SWITCH_W4_LC_ROLE_SWITCH"}

    { 0x10    "LMP_PROCsHOLD_W4_NEGOTIATION_OR_SYNC"}

    { 0x11    "LMP_PROCsSNIFF_W4_NEGOTIATION"}
    { 0x12    "LMP_PROCsSNIFF_W4_LMS_ACK"}

    { 0x13    "LMP_PROCsUNSNIFF_INITIATE_W4_ACCEPT_ACK"}
    { 0x14    "LMP_PROCsUNSNIFF_REQ_W4_ACK"}

    { 0x15    "LMP_PROCsMULTISLOT_W4_RESP"}

    { 0x16    "LMP_PROCsTESTCONTROL_SETUP"}

    { 0x17    "LMP_PROCsSCO_PARAM_CHANGE_W4_RESP"}
    { 0x18    "LMP_PROCsADD_SCO"}

    { 0x19    "LMP_PROCs_eSCO_PARAM_CHANGE_W4_RESP"} //NEW
    { 0x1A    "LMP_PROCsADD_eSCO"}

    { 0x1B    "LMP_PROCsLINK_KEY_TYPE_CHANGE"}
    { 0x1C    "LMP_PROCs_rxDETACH_W4_TIMER"}
    { 0x1D    "LMP_PROCs_txDETACH"}

    { 0x1E    "LMP_PROCsQOS_W4_RES"}

    { 0x1F    "LMP_PROCsPARK_W4_RESP"}
    { 0x20    "LMP_PROCsENTER_PARK"}
    { 0x21    "LMP_PROCsUNPARK_W4_RESP"}
    //"LMP_PROCsENTER_UNPARK
    //"LMP_PROCsSLAVE_UPARK_W4_ACCESS_WIN

    { 0x22    "LMP_PROCsEDR_W4_CNTRL"}

    { 0x23    "LMP_PROCsENCRYPTION_W4_PAUSE_REQ_I"}
    { 0x24    "LMP_PROCsENCRYPTION_W4_PAUSE_REQ_RI"}

    { 0x25    "LMP_PROCsSNIFF_W4_SUB_RATE_NEGOTIATION"}
    { 0x26    "LMP_PROCsSNIFF_W4_SUB_RATE_RES_TX_CONFIRMATION"}

    { 0x27    "LMP_PROCs_eSCO_CQDDR_PARAM_CHANGE_W4_RESP"}

    { 0x28    "LMP_PROCsTxENCAP_LMP_HDR_PEND"}
    { 0x29    "LMP_PROCsTxENCAP_LMP_PYLD_PEND"}
    { 0x2A    "LMP_PROCsRxENCAP_LMP_PEND"}

    { 0x2B    "LMP_PROCsSPAIRING_INIT_W4_HCI_IO_CAPABILITIES"}
    { 0x2C    "LMP_PROCsSPAIRING_W4_HCI_IO_CAPABILITIES"}

    { 0x2D    "LMP_PROCsSPAIRING_W4_LMP_IO_CAPABILITIES"}

    { 0x2E    "LMP_PROCsSPAIRING_INITIATE_PUBLIC_KEY"}
    { 0x2F    "LMP_PROCsSPAIRING_W4_PUBLIC_KEY"}

    { 0x30    "LMP_PROCsSPAIRING_AUTHEN_STAGE1"}
    { 0x31    "LMP_PROCsSPAIRING_W4_CONFIRM"}
    { 0x32    "LMP_PROCsSPAIRING_W4_NONCE"}
    { 0x33    "LMP_PROCsSPAIRING_W4_HCI_CONFIRM"}

    { 0x34    "LMP_PROCsSPAIRING_DHKEY_W4_STATUS"}
    { 0x35    "LMP_PROCsSPAIRING_DHKEY_W4_DHKEY_CHECK"}

    { 0x36    "LMP_PROCsSPAIRING_W4_HCI_PASSKEY"} //stage 1
    { 0x37    "LMP_PROCsSPAIRING_W4_HCI_REMOTE_OOB_DATA"} //stage 1
    { 0x38    "LMP_PROCsSPAIRING_W4_NONCE_ERROR"}

    { 0x39    "LMP_PROCsEDR_W4_TX_ACK"}

    { 0x3A    "LMP_PROCsLSTO_CHANGE_PND"}
    { 0x3B    "LMP_PROCsAUTHEN_SECURE_W4_AU_RAND"}
    { 0x3C    "LMP_PROCsAUTHEN_SECURE_W4_SRES"}

    { 0x3D    "LMP_PROCsROLE_SWITCH_W4_ENCR_RESTART"}

ENDTABLE

TABLE tQca_LE_LLSeqStates
    { 0x00  "CMs_LE_CTRL_PROCsIDLE"}
    { 0x01  "CMs_LE_CTRL_PROCsW4_ACK"}
    { 0x02  "CMs_LE_CTRL_PROCsW4_CONN_EVENT"}

    { 0x03  "CMs_LE_CTRL_PROCsW4_FEATURE_RSP"}
    { 0x04  "CMs_LE_CTRL_PROCsW4_VERSION_IND"}
    { 0x05  "CMs_LE_CTRL_PROCsW4_PING_RSP"}
    { 0x06  "CMs_LE_CTRL_PROCsW4_PARAM_RSP"}
    { 0x07  "CMs_LE_CTRL_PROCsW4_HOST_REPLY"}

    { 0x08  "CMs_LE_CTRL_MAXSTATES"}
ENDTABLE

TABLE tQca_LE_LLCPStates
    { 0x00 "LLCP_NONE" }
    { 0x81 "LLCP_CONNECTION_UPDATE" }
    { 0x82 "LLCP_CHANNEL_MAP_UPDATE" }
    { 0x03 "LLCP_ENCRYPTION" }
    { 0x04 "LLCP_FEATURE_EXCHANGE" }
    { 0x05 "LLCP_VERSION_EXCHANGE" }
    { 0x06 "LLCP_TERMINATION" }
    { 0x87 "LLCP_CONNECTION_PARMS" }
    { 0x08 "LLCP_PING" }
    { 0x09 "LLCP_DATA_LENGTH" }
    { 0x8A "LLCP_PHY_UPDATE" }
    { 0x0B "LLCP_AoA_REQ" }
ENDTABLE

TABLE tQca_LE_ConnMngrStates
    { 0x00  "LLM_LE_CMs_IDLE"}
    { 0x01  "LLM_LE_CMs_W4_LMS_DISCONNECT"}
    { 0x02  "LLM_LE_CMs_CONNTERM"}
    { 0x03  "LLM_LE_CMs_CONN_ACTIVE"}
    { 0x04  "LLM_LE_CMs_MAXSTATES"}
ENDTABLE

TABLE tQca_LE_EncrSeqStates
    { 0x00  "CMs_LE_ENCR_IDLE"}
    { 0x01  "CMs_LE_ENCR_W4_ENC_RSP"}
    { 0x82  "CMs_LE_ENCR_W4_START_ENC_REQ"}
    { 0x83  "CMs_LE_ENCR_W4_START_ENC_RSP_I"}  //Encryption Initiator
    { 0x84  "CMs_LE_ENCR_W4_START_ENC_RSP_NI"} // Encryption Non-Initiator
    { 0x05  "CMs_LE_ENCR_W4_LTK"}
    { 0x06  "CMs_LE_ENCR_PAUSE"}
    { 0x07  "CMs_LE_ENCR_W4_PAUSE_ENC_RSP_I"}
    { 0x08  "CMs_LE_ENCR_W4_TX_PAUSE_ENC_RSP_ACK"}
    { 0x89  "CMs_LE_ENCR_W4_PAUSE_ENC_RSP_NI"}
    { 0x0a  "CMs_LE_ENCR_W4_REJECT_IND_ACK"}
    { 0x0b  "CMs_LE_ENCR_W4_ENC_RSP_RESUME"}
    { 0x8c  "CMs_LE_ENCR_W4_START_ENC_REQ_RESUME"}
    { 0x8d  "CMs_LE_ENCR_W4_START_ENC_RSP_I_RESUME"}
    { 0x8e  "CMs_LE_ENCR_W4_START_ENC_RSP_NI_RESUME"}
    { 0x0f  "CMs_LE_ENCR_W4_LTK_RESUME"}
ENDTABLE

TABLE tQca_LE_EncrEnableStates
    { 0x00  "Encr RxOff_TxOff"}
    { 0x01  "Encr RxOff_TxOn"}
    { 0x02  "Encr RxOn_TxOff"}
    { 0x03  "Encr RxOn_TxOn"}
ENDTABLE

TABLE tBCAUDStreamID
    {0x01,  "Valid"}
    {0xff,  "Invalid"}
    {Default  "Unknown"}
ENDTABLE

TABLE tBCAUDSampleRate
    {0x00,  "44100Hz"}
    {0x01,  "48000Hz"}
    {Default  "Invalid"}
ENDTABLE

TABLE tBCAUDEncoding
    {0x00,  "2:5 EC Encoding"}
    {Default  "Invalid"}
ENDTABLE

TABLE tBCAUDCodec
    {0x00,  "CELT Codec"}
    {Default  "Invalid"}
ENDTABLE

TABLE tQca_PHY
    {0x00,  "Invalid"}
    {0x01,  "1M Only"}
    {0x02,  "2M Only"}
    {0x03,  "1M or 2M"}
	{0x05,  "1M Coded"}	
    {0x06,  "2M Coded"}
    {0x07,  "1M or 2M Coded"}
    {Default,  "Invalid"}
ENDTABLE