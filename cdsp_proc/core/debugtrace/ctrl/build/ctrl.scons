#===============================================================================
#
# GENERAL DESCRIPTION
#    Build script for QDSS ctrl library
#
# Copyright (c) 2016 Qualcomm Technologies Incorporated.
# All rights reserved.
# Qualcomm Technologies Confidential and Proprietary
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.qdsp6/1.0.c2/debugtrace/ctrl/build/ctrl.scons#1 $
#

Import('env')
import qdss

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "../src"
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

env.RequirePublicApi([
   'DEBUGTRACE',
   'DAL',
   'SERVICES',
   'KERNEL',
   'POWER',
   'SYSTEMDRIVERS',
   'KERNEL'
])
env.RequireRestrictedApi(['DEBUGTRACE'])
env.RequireProtectedApi(['DEBUGTRACE'])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

qdss_image='cdsp'

if (env['IMAGE'] in ['adsp_slpi','adsp']):
	qdss_image='adsp'

QDSS_CTRL_SRC = [
   '${BUILDPATH}/qdss_ctrl_diag.c',
   '${BUILDPATH}/qdss_ctrl.c',
   '${BUILDPATH}/qdss_ctrl_'+ qdss_image +'.c',
   '${BUILDPATH}/qdss_ctrl_test.c',
   '${BUILDPATH}/qdss_parse_util.c',
]

if env.IsTargetEnable(qdss.BuildTags(['modem'])):
   env.Append(CCFLAGS = " -DQDSS_CTRL_DIAG_PROC_ID=0x0200")
   QDSS_CTRL_SRC += ['${BUILDPATH}/qdss_ctrl_etm_qurt.c']
elif env.IsTargetEnable(qdss.BuildTags(['adsp'])):
   env.Append(CCFLAGS = " -DQDSS_CTRL_DIAG_PROC_ID=0x0500")
   QDSS_CTRL_SRC += ['${BUILDPATH}/qdss_ctrl_etm_qurt.c']
elif env.IsTargetEnable(qdss.BuildTags(['wcn'])):
   env.Append(CCFLAGS = " -DQDSS_CTRL_DIAG_PROC_ID=0x0300")
   QDSS_CTRL_SRC += ['${BUILDPATH}/qdss_ctrl_etm_arm.c']
elif env.IsTargetEnable(qdss.BuildTags(['sensor'])):
   env.Append(CCFLAGS = " -DQDSS_CTRL_DIAG_PROC_ID=0x0800")
   QDSS_CTRL_SRC += ['${BUILDPATH}/qdss_ctrl_etm_qurt.c']
elif env.IsTargetEnable(qdss.BuildTags(['sensor2'])):
   env.Append(CCFLAGS = " -DQDSS_CTRL_DIAG_PROC_ID=0x0C00")
   QDSS_CTRL_SRC += ['${BUILDPATH}/qdss_ctrl_etm_stub.c']
elif env.IsTargetEnable(qdss.BuildTags(['cdsp'])):
   env.Append(CCFLAGS = " -DQDSS_CTRL_DIAG_PROC_ID=0x0D00")
   QDSS_CTRL_SRC += ['${BUILDPATH}/qdss_ctrl_etm_qurt.c']
else:
   env.Append(CCFLAGS = " -DQDSS_CTRL_DIAG_PROC_ID=0xFF00")
   QDSS_CTRL_SRC += ['${BUILDPATH}/qdss_ctrl_etm_stub.c']


env.AddLibrary(qdss.BuildTags(['modem', 'cdsp', 'adsp', 'audio','wcn', 'sensor',
   'sensor2']),
   '${BUILDPATH}/qdss_ctrl',QDSS_CTRL_SRC)

if 'USES_RCINIT' in env:
   env.AddRCInitFunc(
      qdss.BuildTags(['modem', 'adsp', 'cdsp', 'wcn', 'audio','sensor','sensor2']),
      {
         'sequence_group'          : 'RCINIT_GROUP_1',
         'init_name'               : 'qdss_ctrl',
         'init_function'           : 'qdss_ctrl_init',
         'dependencies'            : ['dalsys','diag','npa']
      })

