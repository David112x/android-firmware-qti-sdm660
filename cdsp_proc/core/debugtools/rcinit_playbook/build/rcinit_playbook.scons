# vi: tw=128 ts=3 sw=3 et :
# @file rcinit_playbook.scons
# @brief This file contains the API for the Run Control Framework, API 2.1
#===============================================================================
# NOTE: The @brief description above does not appear in the PDF.
# The tms_mainpage.dox file contains the group/module descriptions that
# are displayed in the output PDF generated using Doxygen and LaTeX. To
# edit or update any of the group/module text in the PDF, edit the
# tms_mainpage.dox file or contact Tech Pubs.
#===============================================================================
#===============================================================================
# Copyright (c) 2015-2016 Qualcomm Technologies, Inc.
# All Rights Reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#===============================================================================
#===============================================================================
# Edit History
# $Header: //components/rel/core.qdsp6/1.0.c2/debugtools/rcinit_playbook/build/rcinit_playbook.scons#1 $
# $DateTime: 2020/02/10 01:57:30 $
# $Change: 22511909 $
# $Author: pwbldsvc $
#===============================================================================

# Module Version, Python Standard PEP8, 2001, https://www.python.org/dev/peps/pep-0008/
__version__ = "$Header: //components/rel/core.qdsp6/1.0.c2/debugtools/rcinit_playbook/build/rcinit_playbook.scons#1 $"

# Shared Library Version, Semantic Versioning 2.0.0, http://semver.org/
__version_info__ = "2.1.0"

Import('env')

# BUILD_TAGS For Deliverable (Supported Build_Objects)

BUILD_TAGS = [

   'CORE_APPS',                  # Domain(REX + TN)
   'CORE_EOS',                   # Domain(REX + EOS)
   'CORE_GSS',                   # Domain(REX + GSS)
   'CORE_MODEM',                 # Domain(Root + Modem)
   'CORE_RPM',                   # Domain(REX + RPM)
   'CORE_VPU',                   # Domain(REX + VPU)
   'CORE_WCN',                   # Domain(REX + WCN)

   'CORE_ROOT_PD',               # Domain(Root)
   'CORE_USER_PD',               # Domain(User)

   'CORE_QDSP6_SW',              # Domain(Root + Audio)
   'MODEM_MODEM',                # Domain(Root + Modem)
   'CORE_QDSP6_AUDIO_SW',        # Domain(User Audio)
   'CORE_QDSP6_MODEM_SW',        # Domain(User Modem)
   'CORE_QDSP6_SENSOR_SW',       # Domain(User Sensors)
   'CNSS_IMAGE',                 # Domain(REX + EOS)

]

# Required Namespaces
import os

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------

env.VariantDir('${BUILDPATH}', "${BUILD_ROOT}/core/debugtools/rcinit/src/", duplicate=0)

#-------------------------------------------------------------------------------
# External Dependency
#-------------------------------------------------------------------------------

#env.RequireExternalApi([
#   'XYZ',
#])

#-------------------------------------------------------------------------------
# Internal Dependency
#-------------------------------------------------------------------------------

env.RequirePublicApi([
   'DAL',
   'TMS',
   'DEBUGTOOLS',
   'DEBUGTRACE',
   'SERVICES',
   'SYSTEMDRIVERS',
   'KERNEL',   # needs to be last also contains wrong comdef.h
])

env.RequireRestrictedApi([
   'TMS_RESTRICTED',
   'DEBUGTOOLS',
])

#-------------------------------------------------------------------------------
# Sources
#-------------------------------------------------------------------------------

# NONE

#-------------------------------------------------------------------------------
# Libraries
#-------------------------------------------------------------------------------

if 'USES_RCINIT_OPTION_PLAYBOOK' in env or 'USES_RCINIT_PLAYBOOK' in env:

   # Image Supplies a Playbook; We Do Nothing (Forever, By Design)
   pass

else:

   if 'USES_RCINIT' in env:

      env.PrintWarning('(IMAGE OWNER) RCINIT_PLAYBOOK SUPPLIES PLAYBOOK, Check Configuration')

      # SCONS EMITTER/SCANNER PHASE REQUIRES OUTPUT FOLDER

      if not os.path.exists(env.RealPath('${BUILDPATH}')):
         if Execute(Mkdir(env.RealPath('${BUILDPATH}'))):
            raise Exception('HOST BUILD ENVIRONMENT, Fails Directory Creation')

      # PLAYBOOK OUTPUT, LOCAL BUILD DIRECTORY

      rcinit_out = env.RealPath('${BUILDPATH}/rcinit_autogen.c')
      env.AddRCInitPlaybook(BUILD_TAGS, rcinit_out, None) # FROM CONSTRUCTION ENVIRONMENT
      env.AddObject(BUILD_TAGS, rcinit_out)

      # PLAYBOOK OUTPUT, RCINIT_OUTPUT_LOG.TXT (PRIOR BEHAVIOR)

      rcinit_out = env.RealPath('${IMAGE_ROOT}/${TARGET_NAME}_rcinit_output_log.txt')
      env.AddRCInitPlaybook(BUILD_TAGS, rcinit_out, None)
      env.AddArtifact(BUILD_TAGS, rcinit_out)

#-------------------------------------------------------------------------------
# Task Provisioning Information
#-------------------------------------------------------------------------------

# NONE

#-------------------------------------------------------------------------------
# Tracer Software Events
#-------------------------------------------------------------------------------

# NONE

#-------------------------------------------------------------------------------
# DALCFG Image "Static" Configuration Items
#-------------------------------------------------------------------------------

# NONE

#-------------------------------------------------------------------------------
# PACKOUT Configuration
#-------------------------------------------------------------------------------

# NONE
