# @file rcevt.scons
# @brief This file contains the API for the Run Control Framework, API 2.1
#===============================================================================
# NOTE: The @brief description above does not appear in the PDF.
# The tms_mainpage.dox file contains the group/module descriptions that
# are displayed in the output PDF generated using Doxygen and LaTeX. To
# edit or update any of the group/module text in the PDF, edit the
# tms_mainpage.dox file or contact Tech Pubs.
#===============================================================================
#===============================================================================
# Copyright (c) 2015-2016 Qualcomm Technologies, Inc.
# All Rights Reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#===============================================================================
#===============================================================================
# Edit History
# $Header: //components/rel/core.qdsp6/1.0.c2/debugtools/rcevt/build/rcevt.scons#1 $
# $DateTime: 2020/02/10 01:57:30 $
# $Change: 22511909 $
# $Author: pwbldsvc $
#===============================================================================

# Module Version, Python Standard PEP8, 2001, https://www.python.org/dev/peps/pep-0008/
__version__ = "$Header: //components/rel/core.qdsp6/1.0.c2/debugtools/rcevt/build/rcevt.scons#1 $"

# Shared Library Version, Semantic Versioning 2.0.0, http://semver.org/
__version_info__ = "2.1.0"

Import('env')

BUILD_TAGS = [

   'CORE_APPS',                  # Domain(REX + MN/TN)
   'CORE_EOS',                   # Domain(REX + EOS)
   'CORE_GSS',                   # Domain(REX + GSS)
   'CORE_IMC',                   # Domain(QURT_ARM + IMC)
   'CORE_MODEM',                 # Domain(QURT Root + Modem)
   'CORE_RPM',                   # Domain(REX + RPM)
   'CORE_VPU',                   # Domain(REX + VPU)
   'CORE_WCN',                   # Domain(REX + WCN)

   'CORE_ROOT_PD',               # Domain(QURT Root, Generic)
   'CORE_USER_PD',               # Domain(QURT User, Generic)

   'CORE_ARMV7_ROOT_PD',         # Domain(QURT Root, ARMV7)
   'CORE_ARMV7_USER_PD',         # Domain(QURT User, ARMV7)

   'CORE_ARMV8_ROOT_PD',         # Domain(QURT Root, ARMV8)
   'CORE_ARMV8_USER_PD',         # Domain(QURT User, ARMV8)

   'CORE_QDSP6_ROOT_PD',         # Domain(QURT Root, Generic, QDSP6)
   'CORE_QDSP6_USER_PD',         # Domain(QURT User, Generic, QDSP6)

   'CORE_QDSP6_SW',              # Domain(QURT Root + Audio)
   'MODEM_MODEM',                # Domain(QURT Root + Modem)
   'CORE_ARMV8_IMC_SW',          # Domain(QURT User, IMC)
   'CORE_QDSP6_AUDIO_SW',        # Domain(QURT User, Audio)
   'CORE_QDSP6_MODEM_SW',        # Domain(QURT User, Modem)
   'CORE_QDSP6_SENSOR_SW',       # Domain(QURT User, Sensors)
   'CORE_QDSP6_WCN_SW',          # Domain(QURT User, Wireless)
   'CNSS_IMAGE',                 # Domain(REX + EOS)

]

if env.IsTargetEnable([ 'CORE_EOS', 'CNSS_IMAGE', ]):
   env.Append(CPPDEFINES = ["RCINIT_EXCLUDE_TRACER_SWEVT"])      # EXCLUDE USE QDSS TRACER
   env.Append(CPPDEFINES = ["RCINIT_EXCLUDE_MSG_SWEVT"])         # EXCLUDE USE MSG MACRO
   env.Append(CPPDEFINES = ["RCINIT_EXCLUDE_ULOG_SWEVT"])        # EXCLUDE USE ULOG

#env.Append(CPPDEFINES = ["RCEVT_EXCLUDE_NAME_API"]) # Handle Use Only

# NHLOS API DETECTION

if not 'USES_DAL' in env:
   env.Append(CPPDEFINES = ["RCINIT_EXCLUDE_KERNEL_DAL"])
if not 'USES_POSIX' in env:
   env.Append(CPPDEFINES = ["RCINIT_EXCLUDE_KERNEL_POSIX"])
if not 'USES_QURT' in env:
   env.Append(CPPDEFINES = ["RCINIT_EXCLUDE_KERNEL_QURT"])
if not 'USES_REX' in env:
   env.Append(CPPDEFINES = ["RCINIT_EXCLUDE_KERNEL_REX"])

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------

env.VariantDir('${BUILDPATH}', '../src', duplicate=0)

#-------------------------------------------------------------------------------
# External Dependency
#-------------------------------------------------------------------------------

#env.RequireExternalApi([
#   'XYZ',
#])

#-------------------------------------------------------------------------------
# Internal Dependency
#-------------------------------------------------------------------------------

env.RequirePublicApi([
   'DAL',
   'TMS',
   'DEBUGTOOLS',
   'DEBUGTRACE',
   'SERVICES',
   'SYSTEMDRIVERS',
   'KERNEL',   # needs to be last also contains wrong comdef.h
])

env.RequireRestrictedApi([
   'TMS_RESTRICTED',
   'DEBUGTOOLS',
])

#-------------------------------------------------------------------------------
# Sources
#-------------------------------------------------------------------------------

BUILD_SOURCES = [
   '${BUILDPATH}/rcecb.c',              # API
   '${BUILDPATH}/rcesn.c',              # API
   '${BUILDPATH}/rcevt.c',              # API
   '${BUILDPATH}/rcevt_dal.c',          # API/Internal
   '${BUILDPATH}/rcevt_common.c',       # Internal
   '${BUILDPATH}/rcevt_internal.c',     # Internal
   '${BUILDPATH}/rcevt_posix.c',        # API/Internal
   '${BUILDPATH}/rcevt_qurt.c',         # API/Internal
   '${BUILDPATH}/rcevt_rex.c',          # API/Internal
]

#-------------------------------------------------------------------------------
# Libraries
#-------------------------------------------------------------------------------

env.AddLibrary(BUILD_TAGS, '${BUILDPATH}/rcevt', BUILD_SOURCES)

env.AddLibrary([ 'CORE_ROOT_PD', 'CORE_MODEM', 'MODEM_MODEM', ],
   '${BUILDPATH}/rcevt_root', [ '${BUILDPATH}/rcevt_pd_root.c', ])

#-------------------------------------------------------------------------------
# Task Provisioning Information
#-------------------------------------------------------------------------------

# NONE

#-------------------------------------------------------------------------------
# Tracer Software Events
#-------------------------------------------------------------------------------

TRACER_SWE_EVENTS = [

   ['RCECB_SWE_CREATE',        'RCECB Create         %x %x', 'F'], # Event Created
   ['RCECB_SWE_REGISTER',      'RCECB Register       %x %x', 'F'], # Event Notification Registration
   ['RCECB_SWE_SIGNAL',        'RCECB Signal         %x %x', 'F'], # Event Posted
   ['RCECB_SWE_UNREGISTER',    'RCECB Unregister     %x %x', 'F'], # Event Notification Unregistration

   ['RCESN_SWE_CREATE',        'RCESN Create         %x %x', 'F'], # Event Created
   ['RCESN_SWE_REGISTER',      'RCESN Register       %x %x', 'F'], # Event Notification Registration
   ['RCESN_SWE_SIGNAL',        'RCESN Signal         %x %x', 'F'], # Event Posted
   ['RCESN_SWE_UNREGISTER',    'RCESN Unregister     %x %x', 'F'], # Event Notification Unregistration

   ['RCEVT_SWE_CREATE',        'RCECB Create         %x %x', 'F'], # Event Created
   ['RCEVT_SWE_REGISTER',      'RCECB Register       %x %x', 'F'], # Event Notification Registration
   ['RCEVT_SWE_SIGNAL',        'RCECB Signal         %x %x', 'F'], # Event Posted
   ['RCEVT_SWE_UNREGISTER',    'RCECB Unregister     %x %x', 'F'], # Event Notification Unregistration

]

if 'USES_QDSS_SWE' in env and 0 != len(TRACER_SWE_EVENTS):
   BUILDPATH = env.RealPath('${BUILDPATH}')
   env.Append(CPPPATH = [ BUILDPATH ])
   env.SWEBuilder([ ''.join([ BUILDPATH, '/', 'rcinit_tracer_swe.h' ]) ], None)
   env.AddSWEInfo(BUILD_TAGS, TRACER_SWE_EVENTS)
else:
   env.Append(CPPDEFINES = ["RCINIT_EXCLUDE_TRACER_SWEVT"])

#-------------------------------------------------------------------------------
# DALCFG Image "Static" Configuration Items
#-------------------------------------------------------------------------------

# NONE

#-------------------------------------------------------------------------------
# PACKOUT Configuration
#-------------------------------------------------------------------------------

# NONE
