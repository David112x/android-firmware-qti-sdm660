/*=============================================================================

                                    private_ukernel.lcs

GENERAL DESCRIPTION

EXTERNAL FUNCTIONS
        None.

INITIALIZATION AND SEQUENCING REQUIREMENTS
        None.

             Copyright (c) 2013  by Qualcomm Technologies, Inc.  All Rights Reserved.
=============================================================================*/
/*
    This is the linker script file used to build cust_config.o
     when running with CONFIG_PRIVATE_UKERNEL.
    It remaps the sections from their conventional names to the
     special names which start with .qskernel.
*/

SECTIONS {
  .text.user.config : {
    *(.text.qurtos_process_reaper_generic_init)
    *(.text.user.config)
  }
  .rodata.user.config : {
    *(.rodata.qurtos*)
    *(.rodata.user.config)
  }
  .data.user.config : {
    *(.data.g_spaces)
    *(.data.pool_configs)
    *(.data.qurt*)
    *(.data.user.config)
  }
  .bss.user.config : {
    *(.bss.g_spaces)
    *(.bss.user.config)
    *(.bss.qurt*)
  }
  .qskernel_exports : {
    *(.qskernel_exports_vstart)
    *(*.QURTK_pagetablestruct_v2)
    *(*.QURTK_root_prog_no)
    *(*.QDSP6_QURT_TIMER_BASE)
    *(*.QURT_timer_intno)
    *(*.QURT_timerIST_tcb_partition)
    *(*.QURT_timerIST_priority)
    *(*.QURTK_phys_island)
    *(*.QURTK_max_pi_prio)
    *(*.QURTK_fastint_contexts)
    *(*.QURTK_l2cache_partition_cfg)
    *(*.QURTK_bus_prio_cfg)
    *(*.QURTK_max_programs)
    *(*.QURTK_program_names)
    *(*.QURTK_stack_framekey_enabled)
    *(*.QURTK_thread_contexts)
    *(*.QURTK_thread_contexts_array)
    *(*.QURTK_thread_contexts_tcm)
    *(.rodata.export.main)
    *(.rodata.export.island)
    *(.qskernel_exports)
    *(.qskernel_exports_vend)
	*(.data.export.main)
	*(.bss.export.main)
  }
  .qskernel_eip : {
    *(.qskernel_eip_vstart)
    *(.qskernel_eip)
    *(.rodata.export.eip)
    *(.qskernel_eip_vend)
  }
  .qskernel_eip_build : {
    *(.qskernel_eip_build)
    *(.rodata.eip_build_*)
  }
  .qskernel_island : {
    *(.qskernel_island_vstart)
    *(.qskernel_island)
    *(.ukernel.island .ukernel.*.island)
    *(.text.island .text.*.island)
    *(.rodata.island .rodata.*.island)
    *(.data.island .data.*.island)
    *(.sdata.island .sdata.*.island)
    *(.qskernel_island_vend)
  }
  .qskernel_zi_island : {
    *(.qskernel_zi_island_vstart)
    *(.qskernel_zi_island)
    *(.sbss.island .sbss.island.*)
    *(.scommon.island .scommon.island.*)
    *(.bss.island .bss.island.*)
    *(.qskernel_zi_island_vend)
  }
  .qskernel_main : {
    *(.qskernel_main_vstart)
    *(.qskernel_main)
    *(.start)
    *(.text .text.*)
    *(.ukernel.island)
    *(.rodata .rodata.*)
    *(.data .data.*)
    *(.sdata .sdata.*)
    *(.qskernel_main_vend)
  }
  .qskernel_zi_main : {
    *(.qskernel_zi_main_vstart)
    *(.qskernel_zi_main)
    *(.sbss .sbss.*)
    *(.scommon .scommon.*)
    *(.bss .bss.*)
    *(COMMON)
    *(.qskernel_zi_main_vend)
  }
  .qskernel_coldboot : {
    *(.qskernel_coldboot_vstart)
    *(.qskernel_coldboot)
    *(.qskernel_coldboot_vend)
  }
  .qskernel_zi_coldboot : {
    *(.qskernel_zi_coldboot_vstart)
    *(.qskernel_zi_coldboot)
    *(.qskernel_zi_coldboot_vend)
  }
  .qskernel_tcm : {
    *(.qskernel_tcm_vstart)
    *(.qskernel_tcm)
    *(.qskernel_tcm_vend)
  }
  .qskernel_zi_tcm : {
    *(.qskernel_zi_tcm_vstart)
    *(.qskernel_zi_tcm)
    *(.qskernel_zi_tcm_vend)
  }
  .qskernel_zipages_main : {
    *(.qskernel_zipages_main_vstart)
    *(.qskernel_zipages_main)
    *(.qskernel_zipages_main_vend)
  }
  .qskernel_zipages_island : {
    *(.qskernel_zipages_island_vstart)
    *(.qskernel_zipages_island)
    *(.qskernel_zipages_island_vend)
  }
  .qskernel_zipages_tcm : {
    *(.qskernel_zipages_tcm_vstart)
    *(.qskernel_zipages_tcm)
    *(.qskernel_zipages_tcm_vend)
  }
  .qskernel_zipages_coldboot : {
    *(.qskernel_zipages_coldboot_vstart)
    *(.qskernel_zipages_coldboot)
    *(.qskernel_zipages_coldboot_vend)
  }
  .qskernel_ranges : {
    *(.qskernel_ranges_vstart)
    *(.qskernel_ranges)
    *(.qskernel_ranges_vend)
  }
  .qskernel_vstart_vend : {
    *(.qskernel_*_vstart)
    *(.qskernel_*_vend)
  }
}
