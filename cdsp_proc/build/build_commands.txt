Root directory for ADSP build : adsp_proc
Root directory for CDSP build : cdsp_proc

1. cd <Root>
2. cd build
3. To compile:
    BUILD COMMAND:   
        python build.py -c <CHIPSET> -o all
4. To clean:
    CLEAN COMMAND:   
        python build.py -c <CHIPSET> -o clean

Other options:
Note: Chipset is a mandatory argument for all the below commands
    please append the same even if the below examples have it ommited
    
---------------------------------------------------
To compile individual module:
-----------------------------
Syntax: python build.py -m <module to build>
Eg: python build.py -m avs\aud\services\static_svcs\audio_dev_mgr

---------------------------------------------------
Passing build flags:
----------------------------------------------------
Syntax: python build.py -f <uses flags seperated by comman ‘,’>       
Eg: python build.py -f CUSTOM_FLAG1,CUSTOM_FLAG2

---------------------------------------------------
To compile/link using alias:
----------------------------
Syntax: python build.py -a <aliases separated by comma ‘,’>  -f  <add if any uses flags, seperated by comma ‘,’>           
Eg: python build.py -a avs_libs        (compiles only avs libraries, link step is not run)
Eg: python build.py -a sensor_img      (creates only sensor_img)

---------------------------------------------------
verbose level: (If not specified verbose is set to 1) 
-------------------------------------------------------------------------
[0: 0ff, 1: limited, 2: detailed, 3: raw, no formatting]
Syntax: python build.py -v <verbose level>
Eg: python build.py -v 2

---------------------------------------------------
To compile based on various scons supported options:
---------------------------------------------------
Syntax:  python build.py -s <options supported by scons separated by comma ‘,’>
Eg: python build.py -s implicit-deps-unchanged,ignore-errors 
Note: For these scons options, '--' is appended internally and supplied to SCons.

For more scons options use 
python build.py -s help

---------------------------------------------------
To compile based on customized user options:
---------------------------------------------------
Syntax:  python build.py -u <customized user options separated by comma ‘,’>
Eg: python build.py -u major_version=3,minor_version=5,is_qurt_enabled=yes
Note: For these custom user options, raw options (i.e., as specified) is supplied to SCons.
      You can use these raw arguments using 'ARGUMENTS.get(<argument>)'. Eg: ARGUMENTS.get("major_version")

